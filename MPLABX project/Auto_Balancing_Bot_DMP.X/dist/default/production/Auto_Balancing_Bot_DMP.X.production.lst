

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Jun 22 13:39:43 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   107                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   113                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   114  0000                     
   115                           ; Version 2.20
   116                           ; Generated 12/02/2020 GMT
   117                           ; 
   118                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC18F4550 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     
   150                           	psect	idataBANK0
   151  00688C                     __pidataBANK0:
   152                           	callstack 0
   153                           
   154                           ;initializer for _mInv
   155  00688C  01                 	db	1
   156                           
   157                           	psect	idataBANK1
   158  006868                     __pidataBANK1:
   159                           	callstack 0
   160                           
   161                           ;initializer for _kD
   162                           ;main.c: 32: double kP = 100.0, kI = 9.0, kD = 530.0;
   163  006868  8000               	dw	32768
   164  00686A  4404               	dw	17412
   165                           
   166                           ;initializer for _kI
   167                           ;main.c: 32: double kP = 100.0, kI = 9.0, kD = 530.0;
   168  00686C  0000               	dw	0
   169  00686E  4110               	dw	16656
   170                           
   171                           ;initializer for _kP
   172                           ;main.c: 32: double kP = 100.0, kI = 9.0, kD = 530.0;
   173  006870  0000               	dw	0
   174  006872  42C8               	dw	17096
   175                           
   176                           ;initializer for _turning_speed
   177  006874  012C               	dw	300
   178                           
   179                           ;initializer for _mOutLimite
   180  006876  03FF               	dw	1023
   181                           
   182                           	psect	idataBANK2
   183  0065EA                     __pidataBANK2:
   184                           	callstack 0
   185                           
   186                           ;initializer for _teapotPacket
   187  0065EA  24                 	db	36
   188  0065EB  02                 	db	2
   189  0065EC  00                 	db	0
   190  0065ED  00                 	db	0
   191  0065EE  00                 	db	0
   192  0065EF  00                 	db	0
   193  0065F0  00                 	db	0
   194  0065F1  00                 	db	0
   195  0065F2  00                 	db	0
   196  0065F3  00                 	db	0
   197  0065F4  00                 	db	0
   198  0065F5  00                 	db	0
   199  0065F6  00                 	db	0
   200  0065F7  00                 	db	0
   201  0065F8  00                 	db	0
   202  0065F9  00                 	db	0
   203  0065FA  00                 	db	0
   204  0065FB  00                 	db	0
   205  0065FC  0D                 	db	13
   206  0065FD  0A                 	db	10
   207                           
   208                           ;initializer for quaternion@F4036
   209  0065FE  0000               	dw	0
   210  006600  3F80               	dw	16256
   211  006602  0000               	dw	0
   212  006604  0000               	dw	0
   213  006606  0000               	dw	0
   214  006608  0000               	dw	0
   215  00660A  0000               	dw	0
   216  00660C  0000               	dw	0
   217                           
   218                           	psect	mediumconst
   219  0072AC                     __pmediumconst:
   220                           	callstack 0
   221  0072AC  00                 	db	0
   222  0072AD                     _aT:
   223                           	callstack 0
   224  0072AD  AAA9               	dw	43689
   225  0072AF  3EAA               	dw	16042
   226  0072B1  CA98               	dw	51864
   227  0072B3  BE4C               	dw	48716
   228  0072B5  F50D               	dw	62733
   229  0072B7  3E11               	dw	15889
   230  0072B9  1247               	dw	4679
   231  0072BB  BDDA               	dw	48602
   232  0072BD  AC25               	dw	44069
   233  0072BF  3D7C               	dw	15740
   234  0072C1                     __end_of_aT:
   235                           	callstack 0
   236  0072C1                     _atanlo:
   237                           	callstack 0
   238  0072C1  3769               	dw	14185
   239  0072C3  31AC               	dw	12716
   240  0072C5  2168               	dw	8552
   241  0072C7  3322               	dw	13090
   242  0072C9  0FB4               	dw	4020
   243  0072CB  3314               	dw	13076
   244  0072CD  2168               	dw	8552
   245  0072CF  33A2               	dw	13218
   246  0072D1                     __end_of_atanlo:
   247                           	callstack 0
   248  0072D1                     _atanhi:
   249                           	callstack 0
   250  0072D1  6338               	dw	25400
   251  0072D3  3EED               	dw	16109
   252  0072D5  0FDA               	dw	4058
   253  0072D7  3F49               	dw	16201
   254  0072D9  985E               	dw	39006
   255  0072DB  3F7B               	dw	16251
   256  0072DD  0FDA               	dw	4058
   257  0072DF  3FC9               	dw	16329
   258  0072E1                     __end_of_atanhi:
   259                           	callstack 0
   260  0072E1  4260               	dw	16992
   261  0072E3  0DA2               	dw	3490
   262  0072E5                     __end_of_tiny:
   263                           	callstack 0
   264  0072E5  0000               	dw	0
   265  0072E7  4B00               	dw	19200
   266  0072E9                     __end_of_toint:
   267                           	callstack 0
   268  0072E9  BD2E               	dw	48430
   269  0072EB  B3BB               	dw	46011
   270  0072ED                     __end_of_pi_lo:
   271                           	callstack 0
   272  0072ED  0FDB               	dw	4059
   273  0072EF  4049               	dw	16457
   274  0072F1                     __end_of_pi:
   275                           	callstack 0
   276  0072F1  E5AE               	dw	58798
   277  0072F3  BF34               	dw	48948
   278  0072F5                     __end_of_qS1:
   279                           	callstack 0
   280  0072F5  D36B               	dw	54123
   281  0072F7  BC0D               	dw	48141
   282  0072F9                     __end_of_pS2:
   283                           	callstack 0
   284  0072F9  13BA               	dw	5050
   285  0072FB  BD2F               	dw	48431
   286  0072FD                     __end_of_pS1:
   287                           	callstack 0
   288  0072FD  AA75               	dw	43637
   289  0072FF  3E2A               	dw	15914
   290  007301                     __end_of_pS0:
   291                           	callstack 0
   292  007301  0FDB               	dw	4059
   293  007303  3FC9               	dw	16329
   294  007305                     __end_of_pio2:
   295                           	callstack 0
   296  007305  CCCD               	dw	52429
   297  007307  3F0C               	dw	16140
   298  007309                     __end_of_rem_bias:
   299                           	callstack 0
   300  007309  2EE1               	dw	12001
   301  00730B  4265               	dw	16997
   302  00730D                     __end_of_RAD_TO_DEG:
   303                           	callstack 0
   304  00730D                     _dmpMemory:
   305                           	callstack 0
   306  00730D  00                 	db	0
   307  00730E  F8                 	db	248
   308  00730F  F6                 	db	246
   309  007310  2A                 	db	42
   310  007311  3F                 	db	63
   311  007312  68                 	db	104
   312  007313  F5                 	db	245
   313  007314  7A                 	db	122
   314  007315  00                 	db	0
   315  007316  06                 	db	6
   316  007317  FF                 	db	255
   317  007318  FE                 	db	254
   318  007319  00                 	db	0
   319  00731A  03                 	db	3
   320  00731B  00                 	db	0
   321  00731C  00                 	db	0
   322  00731D  00                 	db	0
   323  00731E  65                 	db	101
   324  00731F  00                 	db	0
   325  007320  54                 	db	84
   326  007321  FF                 	db	255
   327  007322  EF                 	db	239
   328  007323  00                 	db	0
   329  007324  00                 	db	0
   330  007325  FA                 	db	250
   331  007326  80                 	db	128
   332  007327  00                 	db	0
   333  007328  0B                 	db	11
   334  007329  12                 	db	18
   335  00732A  82                 	db	130
   336  00732B  00                 	db	0
   337  00732C  01                 	db	1
   338  00732D  03                 	db	3
   339  00732E  0C                 	db	12
   340  00732F  30                 	db	48
   341  007330  C3                 	db	195
   342  007331  0A                 	db	10
   343  007332  74                 	db	116
   344  007333  56                 	db	86
   345  007334  2D                 	db	45
   346  007335  0D                 	db	13
   347  007336  62                 	db	98
   348  007337  DB                 	db	219
   349  007338  C7                 	db	199
   350  007339  16                 	db	22
   351  00733A  F4                 	db	244
   352  00733B  BA                 	db	186
   353  00733C  02                 	db	2
   354  00733D  38                 	db	56
   355  00733E  83                 	db	131
   356  00733F  F8                 	db	248
   357  007340  83                 	db	131
   358  007341  30                 	db	48
   359  007342  00                 	db	0
   360  007343  F8                 	db	248
   361  007344  83                 	db	131
   362  007345  25                 	db	37
   363  007346  8E                 	db	142
   364  007347  F8                 	db	248
   365  007348  83                 	db	131
   366  007349  30                 	db	48
   367  00734A  00                 	db	0
   368  00734B  F8                 	db	248
   369  00734C  83                 	db	131
   370  00734D  FF                 	db	255
   371  00734E  FF                 	db	255
   372  00734F  FF                 	db	255
   373  007350  FF                 	db	255
   374  007351  0C                 	db	12
   375  007352  BD                 	db	189
   376  007353  D8                 	db	216
   377  007354  11                 	db	17
   378  007355  24                 	db	36
   379  007356  00                 	db	0
   380  007357  04                 	db	4
   381  007358  00                 	db	0
   382  007359  1A                 	db	26
   383  00735A  82                 	db	130
   384  00735B  79                 	db	121
   385  00735C  A1                 	db	161
   386  00735D  00                 	db	0
   387  00735E  36                 	db	54
   388  00735F  00                 	db	0
   389  007360  3C                 	db	60
   390  007361  00                 	db	0
   391  007362  00                 	db	0
   392  007363  00                 	db	0
   393  007364  00                 	db	0
   394  007365  00                 	db	0
   395  007366  10                 	db	16
   396  007367  00                 	db	0
   397  007368  00                 	db	0
   398  007369  38                 	db	56
   399  00736A  83                 	db	131
   400  00736B  6F                 	db	111
   401  00736C  A2                 	db	162
   402  00736D  00                 	db	0
   403  00736E  3E                 	db	62
   404  00736F  03                 	db	3
   405  007370  30                 	db	48
   406  007371  40                 	db	64
   407  007372  00                 	db	0
   408  007373  00                 	db	0
   409  007374  00                 	db	0
   410  007375  02                 	db	2
   411  007376  CA                 	db	202
   412  007377  E3                 	db	227
   413  007378  09                 	db	9
   414  007379  3E                 	db	62
   415  00737A  80                 	db	128
   416  00737B  00                 	db	0
   417  00737C  00                 	db	0
   418  00737D  20                 	db	32
   419  00737E  00                 	db	0
   420  00737F  00                 	db	0
   421  007380  00                 	db	0
   422  007381  00                 	db	0
   423  007382  00                 	db	0
   424  007383  00                 	db	0
   425  007384  00                 	db	0
   426  007385  40                 	db	64
   427  007386  00                 	db	0
   428  007387  00                 	db	0
   429  007388  00                 	db	0
   430  007389  60                 	db	96
   431  00738A  00                 	db	0
   432  00738B  00                 	db	0
   433  00738C  00                 	db	0
   434  00738D  1F                 	db	31
   435  00738E  A4                 	db	164
   436  00738F  E8                 	db	232
   437  007390  E4                 	db	228
   438  007391  FF                 	db	255
   439  007392  F5                 	db	245
   440  007393  DC                 	db	220
   441  007394  B9                 	db	185
   442  007395  00                 	db	0
   443  007396  5B                 	db	91
   444  007397  79                 	db	121
   445  007398  CF                 	db	207
   446  007399  1F                 	db	31
   447  00739A  3F                 	db	63
   448  00739B  78                 	db	120
   449  00739C  76                 	db	118
   450  00739D  00                 	db	0
   451  00739E  86                 	db	134
   452  00739F  7C                 	db	124
   453  0073A0  5A                 	db	90
   454  0073A1  00                 	db	0
   455  0073A2  86                 	db	134
   456  0073A3  23                 	db	35
   457  0073A4  47                 	db	71
   458  0073A5  FA                 	db	250
   459  0073A6  B9                 	db	185
   460  0073A7  86                 	db	134
   461  0073A8  31                 	db	49
   462  0073A9  00                 	db	0
   463  0073AA  74                 	db	116
   464  0073AB  87                 	db	135
   465  0073AC  8A                 	db	138
   466  0073AD  00                 	db	0
   467  0073AE  00                 	db	0
   468  0073AF  00                 	db	0
   469  0073B0  00                 	db	0
   470  0073B1  00                 	db	0
   471  0073B2  00                 	db	0
   472  0073B3  43                 	db	67
   473  0073B4  05                 	db	5
   474  0073B5  FF                 	db	255
   475  0073B6  FF                 	db	255
   476  0073B7  E9                 	db	233
   477  0073B8  A8                 	db	168
   478  0073B9  00                 	db	0
   479  0073BA  00                 	db	0
   480  0073BB  21                 	db	33
   481  0073BC  82                 	db	130
   482  0073BD  FA                 	db	250
   483  0073BE  B8                 	db	184
   484  0073BF  4D                 	db	77
   485  0073C0  46                 	db	70
   486  0073C1  FF                 	db	255
   487  0073C2  FA                 	db	250
   488  0073C3  DF                 	db	223
   489  0073C4  3D                 	db	61
   490  0073C5  FF                 	db	255
   491  0073C6  FF                 	db	255
   492  0073C7  B2                 	db	178
   493  0073C8  B3                 	db	179
   494  0073C9  00                 	db	0
   495  0073CA  00                 	db	0
   496  0073CB  00                 	db	0
   497  0073CC  00                 	db	0
   498  0073CD  3F                 	db	63
   499  0073CE  FF                 	db	255
   500  0073CF  BA                 	db	186
   501  0073D0  98                 	db	152
   502  0073D1  00                 	db	0
   503  0073D2  5D                 	db	93
   504  0073D3  AC                 	db	172
   505  0073D4  08                 	db	8
   506  0073D5  00                 	db	0
   507  0073D6  0A                 	db	10
   508  0073D7  63                 	db	99
   509  0073D8  78                 	db	120
   510  0073D9  00                 	db	0
   511  0073DA  01                 	db	1
   512  0073DB  46                 	db	70
   513  0073DC  21                 	db	33
   514  0073DD  FF                 	db	255
   515  0073DE  FF                 	db	255
   516  0073DF  00                 	db	0
   517  0073E0  00                 	db	0
   518  0073E1  00                 	db	0
   519  0073E2  00                 	db	0
   520  0073E3  42                 	db	66
   521  0073E4  B5                 	db	181
   522  0073E5  00                 	db	0
   523  0073E6  06                 	db	6
   524  0073E7  00                 	db	0
   525  0073E8  64                 	db	100
   526  0073E9  00                 	db	0
   527  0073EA  64                 	db	100
   528  0073EB  00                 	db	0
   529  0073EC  06                 	db	6
   530  0073ED  14                 	db	20
   531  0073EE  06                 	db	6
   532  0073EF  02                 	db	2
   533  0073F0  9F                 	db	159
   534  0073F1  0F                 	db	15
   535  0073F2  47                 	db	71
   536  0073F3  91                 	db	145
   537  0073F4  32                 	db	50
   538  0073F5  D9                 	db	217
   539  0073F6  0E                 	db	14
   540  0073F7  9F                 	db	159
   541  0073F8  C9                 	db	201
   542  0073F9  1D                 	db	29
   543  0073FA  CF                 	db	207
   544  0073FB  4C                 	db	76
   545  0073FC  34                 	db	52
   546  0073FD  3B                 	db	59
   547  0073FE  B6                 	db	182
   548  0073FF  7A                 	db	122
   549  007400  E8                 	db	232
   550  007401  00                 	db	0
   551  007402  64                 	db	100
   552  007403  00                 	db	0
   553  007404  06                 	db	6
   554  007405  00                 	db	0
   555  007406  C8                 	db	200
   556  007407  00                 	db	0
   557  007408  00                 	db	0
   558  007409  00                 	db	0
   559  00740A  00                 	db	0
   560  00740B  FF                 	db	255
   561  00740C  FE                 	db	254
   562  00740D  10                 	db	16
   563  00740E  00                 	db	0
   564  00740F  00                 	db	0
   565  007410  00                 	db	0
   566  007411  00                 	db	0
   567  007412  00                 	db	0
   568  007413  00                 	db	0
   569  007414  00                 	db	0
   570  007415  00                 	db	0
   571  007416  00                 	db	0
   572  007417  00                 	db	0
   573  007418  00                 	db	0
   574  007419  00                 	db	0
   575  00741A  00                 	db	0
   576  00741B  00                 	db	0
   577  00741C  00                 	db	0
   578  00741D  00                 	db	0
   579  00741E  07                 	db	7
   580  00741F  00                 	db	0
   581  007420  00                 	db	0
   582  007421  FF                 	db	255
   583  007422  F1                 	db	241
   584  007423  00                 	db	0
   585  007424  00                 	db	0
   586  007425  FA                 	db	250
   587  007426  46                 	db	70
   588  007427  00                 	db	0
   589  007428  00                 	db	0
   590  007429  A2                 	db	162
   591  00742A  B8                 	db	184
   592  00742B  00                 	db	0
   593  00742C  00                 	db	0
   594  00742D  10                 	db	16
   595  00742E  00                 	db	0
   596  00742F  00                 	db	0
   597  007430  00                 	db	0
   598  007431  04                 	db	4
   599  007432  D6                 	db	214
   600  007433  00                 	db	0
   601  007434  00                 	db	0
   602  007435  04                 	db	4
   603  007436  CC                 	db	204
   604  007437  00                 	db	0
   605  007438  00                 	db	0
   606  007439  04                 	db	4
   607  00743A  CC                 	db	204
   608  00743B  00                 	db	0
   609  00743C  00                 	db	0
   610  00743D  00                 	db	0
   611  00743E  00                 	db	0
   612  00743F  00                 	db	0
   613  007440  00                 	db	0
   614  007441  00                 	db	0
   615  007442  00                 	db	0
   616  007443  00                 	db	0
   617  007444  00                 	db	0
   618  007445  00                 	db	0
   619  007446  00                 	db	0
   620  007447  00                 	db	0
   621  007448  00                 	db	0
   622  007449  00                 	db	0
   623  00744A  00                 	db	0
   624  00744B  00                 	db	0
   625  00744C  00                 	db	0
   626  00744D  00                 	db	0
   627  00744E  06                 	db	6
   628  00744F  00                 	db	0
   629  007450  02                 	db	2
   630  007451  00                 	db	0
   631  007452  05                 	db	5
   632  007453  00                 	db	0
   633  007454  07                 	db	7
   634  007455  00                 	db	0
   635  007456  00                 	db	0
   636  007457  00                 	db	0
   637  007458  00                 	db	0
   638  007459  00                 	db	0
   639  00745A  64                 	db	100
   640  00745B  00                 	db	0
   641  00745C  00                 	db	0
   642  00745D  00                 	db	0
   643  00745E  00                 	db	0
   644  00745F  00                 	db	0
   645  007460  00                 	db	0
   646  007461  00                 	db	0
   647  007462  00                 	db	0
   648  007463  00                 	db	0
   649  007464  0C                 	db	12
   650  007465  00                 	db	0
   651  007466  05                 	db	5
   652  007467  00                 	db	0
   653  007468  64                 	db	100
   654  007469  00                 	db	0
   655  00746A  20                 	db	32
   656  00746B  00                 	db	0
   657  00746C  00                 	db	0
   658  00746D  00                 	db	0
   659  00746E  00                 	db	0
   660  00746F  00                 	db	0
   661  007470  00                 	db	0
   662  007471  00                 	db	0
   663  007472  00                 	db	0
   664  007473  00                 	db	0
   665  007474  00                 	db	0
   666  007475  00                 	db	0
   667  007476  00                 	db	0
   668  007477  40                 	db	64
   669  007478  00                 	db	0
   670  007479  00                 	db	0
   671  00747A  00                 	db	0
   672  00747B  03                 	db	3
   673  00747C  00                 	db	0
   674  00747D  00                 	db	0
   675  00747E  00                 	db	0
   676  00747F  00                 	db	0
   677  007480  32                 	db	50
   678  007481  F8                 	db	248
   679  007482  98                 	db	152
   680  007483  00                 	db	0
   681  007484  00                 	db	0
   682  007485  FF                 	db	255
   683  007486  65                 	db	101
   684  007487  00                 	db	0
   685  007488  00                 	db	0
   686  007489  83                 	db	131
   687  00748A  0F                 	db	15
   688  00748B  00                 	db	0
   689  00748C  00                 	db	0
   690  00748D  00                 	db	0
   691  00748E  06                 	db	6
   692  00748F  00                 	db	0
   693  007490  00                 	db	0
   694  007491  FF                 	db	255
   695  007492  F1                 	db	241
   696  007493  00                 	db	0
   697  007494  00                 	db	0
   698  007495  FA                 	db	250
   699  007496  46                 	db	70
   700  007497  00                 	db	0
   701  007498  00                 	db	0
   702  007499  A2                 	db	162
   703  00749A  B8                 	db	184
   704  00749B  00                 	db	0
   705  00749C  00                 	db	0
   706  00749D  00                 	db	0
   707  00749E  00                 	db	0
   708  00749F  00                 	db	0
   709  0074A0  00                 	db	0
   710  0074A1  00                 	db	0
   711  0074A2  00                 	db	0
   712  0074A3  00                 	db	0
   713  0074A4  00                 	db	0
   714  0074A5  00                 	db	0
   715  0074A6  00                 	db	0
   716  0074A7  00                 	db	0
   717  0074A8  00                 	db	0
   718  0074A9  00                 	db	0
   719  0074AA  00                 	db	0
   720  0074AB  00                 	db	0
   721  0074AC  00                 	db	0
   722  0074AD  00                 	db	0
   723  0074AE  00                 	db	0
   724  0074AF  00                 	db	0
   725  0074B0  32                 	db	50
   726  0074B1  00                 	db	0
   727  0074B2  00                 	db	0
   728  0074B3  00                 	db	0
   729  0074B4  00                 	db	0
   730  0074B5  00                 	db	0
   731  0074B6  00                 	db	0
   732  0074B7  00                 	db	0
   733  0074B8  00                 	db	0
   734  0074B9  00                 	db	0
   735  0074BA  00                 	db	0
   736  0074BB  10                 	db	16
   737  0074BC  00                 	db	0
   738  0074BD  00                 	db	0
   739  0074BE  00                 	db	0
   740  0074BF  00                 	db	0
   741  0074C0  01                 	db	1
   742  0074C1  00                 	db	0
   743  0074C2  00                 	db	0
   744  0074C3  00                 	db	0
   745  0074C4  0D                 	db	13
   746  0074C5  00                 	db	0
   747  0074C6  00                 	db	0
   748  0074C7  B2                 	db	178
   749  0074C8  6A                 	db	106
   750  0074C9  00                 	db	0
   751  0074CA  02                 	db	2
   752  0074CB  00                 	db	0
   753  0074CC  00                 	db	0
   754  0074CD  00                 	db	0
   755  0074CE  01                 	db	1
   756  0074CF  FB                 	db	251
   757  0074D0  83                 	db	131
   758  0074D1  00                 	db	0
   759  0074D2  7C                 	db	124
   760  0074D3  00                 	db	0
   761  0074D4  00                 	db	0
   762  0074D5  FB                 	db	251
   763  0074D6  15                 	db	21
   764  0074D7  FC                 	db	252
   765  0074D8  00                 	db	0
   766  0074D9  1F                 	db	31
   767  0074DA  B4                 	db	180
   768  0074DB  FF                 	db	255
   769  0074DC  83                 	db	131
   770  0074DD  00                 	db	0
   771  0074DE  00                 	db	0
   772  0074DF  00                 	db	0
   773  0074E0  01                 	db	1
   774  0074E1  00                 	db	0
   775  0074E2  65                 	db	101
   776  0074E3  00                 	db	0
   777  0074E4  07                 	db	7
   778  0074E5  00                 	db	0
   779  0074E6  64                 	db	100
   780  0074E7  03                 	db	3
   781  0074E8  E8                 	db	232
   782  0074E9  00                 	db	0
   783  0074EA  64                 	db	100
   784  0074EB  00                 	db	0
   785  0074EC  28                 	db	40
   786  0074ED  00                 	db	0
   787  0074EE  00                 	db	0
   788  0074EF  FF                 	db	255
   789  0074F0  FD                 	db	253
   790  0074F1  00                 	db	0
   791  0074F2  00                 	db	0
   792  0074F3  00                 	db	0
   793  0074F4  00                 	db	0
   794  0074F5  16                 	db	22
   795  0074F6  A0                 	db	160
   796  0074F7  00                 	db	0
   797  0074F8  00                 	db	0
   798  0074F9  00                 	db	0
   799  0074FA  00                 	db	0
   800  0074FB  00                 	db	0
   801  0074FC  00                 	db	0
   802  0074FD  00                 	db	0
   803  0074FE  00                 	db	0
   804  0074FF  10                 	db	16
   805  007500  00                 	db	0
   806  007501  00                 	db	0
   807  007502  2F                 	db	47
   808  007503  00                 	db	0
   809  007504  00                 	db	0
   810  007505  00                 	db	0
   811  007506  00                 	db	0
   812  007507  01                 	db	1
   813  007508  F4                 	db	244
   814  007509  00                 	db	0
   815  00750A  00                 	db	0
   816  00750B  10                 	db	16
   817  00750C  00                 	db	0
   818  00750D  00                 	db	0
   819  00750E  28                 	db	40
   820  00750F  00                 	db	0
   821  007510  00                 	db	0
   822  007511  FF                 	db	255
   823  007512  FF                 	db	255
   824  007513  45                 	db	69
   825  007514  81                 	db	129
   826  007515  FF                 	db	255
   827  007516  FF                 	db	255
   828  007517  FA                 	db	250
   829  007518  72                 	db	114
   830  007519  00                 	db	0
   831  00751A  00                 	db	0
   832  00751B  00                 	db	0
   833  00751C  00                 	db	0
   834  00751D  00                 	db	0
   835  00751E  00                 	db	0
   836  00751F  00                 	db	0
   837  007520  00                 	db	0
   838  007521  00                 	db	0
   839  007522  44                 	db	68
   840  007523  00                 	db	0
   841  007524  01                 	db	1
   842  007525  00                 	db	0
   843  007526  05                 	db	5
   844  007527  BA                 	db	186
   845  007528  C6                 	db	198
   846  007529  00                 	db	0
   847  00752A  47                 	db	71
   848  00752B  78                 	db	120
   849  00752C  A2                 	db	162
   850  00752D  00                 	db	0
   851  00752E  00                 	db	0
   852  00752F  00                 	db	0
   853  007530  00                 	db	0
   854  007531  00                 	db	0
   855  007532  00                 	db	0
   856  007533  00                 	db	0
   857  007534  00                 	db	0
   858  007535  00                 	db	0
   859  007536  00                 	db	0
   860  007537  06                 	db	6
   861  007538  00                 	db	0
   862  007539  00                 	db	0
   863  00753A  00                 	db	0
   864  00753B  00                 	db	0
   865  00753C  14                 	db	20
   866  00753D  00                 	db	0
   867  00753E  00                 	db	0
   868  00753F  23                 	db	35
   869  007540  BB                 	db	187
   870  007541  00                 	db	0
   871  007542  2E                 	db	46
   872  007543  A2                 	db	162
   873  007544  5B                 	db	91
   874  007545  00                 	db	0
   875  007546  00                 	db	0
   876  007547  05                 	db	5
   877  007548  68                 	db	104
   878  007549  00                 	db	0
   879  00754A  0B                 	db	11
   880  00754B  CF                 	db	207
   881  00754C  49                 	db	73
   882  00754D  00                 	db	0
   883  00754E  04                 	db	4
   884  00754F  FF                 	db	255
   885  007550  FD                 	db	253
   886  007551  00                 	db	0
   887  007552  02                 	db	2
   888  007553  00                 	db	0
   889  007554  00                 	db	0
   890  007555  00                 	db	0
   891  007556  00                 	db	0
   892  007557  00                 	db	0
   893  007558  02                 	db	2
   894  007559  00                 	db	0
   895  00755A  00                 	db	0
   896  00755B  00                 	db	0
   897  00755C  00                 	db	0
   898  00755D  00                 	db	0
   899  00755E  1B                 	db	27
   900  00755F  00                 	db	0
   901  007560  00                 	db	0
   902  007561  00                 	db	0
   903  007562  00                 	db	0
   904  007563  00                 	db	0
   905  007564  00                 	db	0
   906  007565  00                 	db	0
   907  007566  00                 	db	0
   908  007567  00                 	db	0
   909  007568  00                 	db	0
   910  007569  00                 	db	0
   911  00756A  00                 	db	0
   912  00756B  00                 	db	0
   913  00756C  00                 	db	0
   914  00756D  00                 	db	0
   915  00756E  64                 	db	100
   916  00756F  00                 	db	0
   917  007570  07                 	db	7
   918  007571  00                 	db	0
   919  007572  08                 	db	8
   920  007573  00                 	db	0
   921  007574  06                 	db	6
   922  007575  00                 	db	0
   923  007576  06                 	db	6
   924  007577  FF                 	db	255
   925  007578  FE                 	db	254
   926  007579  00                 	db	0
   927  00757A  00                 	db	0
   928  00757B  00                 	db	0
   929  00757C  00                 	db	0
   930  00757D  00                 	db	0
   931  00757E  00                 	db	0
   932  00757F  00                 	db	0
   933  007580  00                 	db	0
   934  007581  00                 	db	0
   935  007582  00                 	db	0
   936  007583  00                 	db	0
   937  007584  00                 	db	0
   938  007585  00                 	db	0
   939  007586  00                 	db	0
   940  007587  00                 	db	0
   941  007588  00                 	db	0
   942  007589  00                 	db	0
   943  00758A  00                 	db	0
   944  00758B  00                 	db	0
   945  00758C  00                 	db	0
   946  00758D  00                 	db	0
   947  00758E  00                 	db	0
   948  00758F  00                 	db	0
   949  007590  00                 	db	0
   950  007591  00                 	db	0
   951  007592  00                 	db	0
   952  007593  00                 	db	0
   953  007594  00                 	db	0
   954  007595  00                 	db	0
   955  007596  00                 	db	0
   956  007597  00                 	db	0
   957  007598  00                 	db	0
   958  007599  00                 	db	0
   959  00759A  00                 	db	0
   960  00759B  00                 	db	0
   961  00759C  00                 	db	0
   962  00759D  00                 	db	0
   963  00759E  00                 	db	0
   964  00759F  00                 	db	0
   965  0075A0  00                 	db	0
   966  0075A1  00                 	db	0
   967  0075A2  00                 	db	0
   968  0075A3  00                 	db	0
   969  0075A4  00                 	db	0
   970  0075A5  00                 	db	0
   971  0075A6  00                 	db	0
   972  0075A7  00                 	db	0
   973  0075A8  00                 	db	0
   974  0075A9  00                 	db	0
   975  0075AA  00                 	db	0
   976  0075AB  00                 	db	0
   977  0075AC  00                 	db	0
   978  0075AD  00                 	db	0
   979  0075AE  2E                 	db	46
   980  0075AF  A2                 	db	162
   981  0075B0  5B                 	db	91
   982  0075B1  00                 	db	0
   983  0075B2  00                 	db	0
   984  0075B3  05                 	db	5
   985  0075B4  68                 	db	104
   986  0075B5  00                 	db	0
   987  0075B6  0B                 	db	11
   988  0075B7  CF                 	db	207
   989  0075B8  49                 	db	73
   990  0075B9  00                 	db	0
   991  0075BA  00                 	db	0
   992  0075BB  00                 	db	0
   993  0075BC  00                 	db	0
   994  0075BD  00                 	db	0
   995  0075BE  F8                 	db	248
   996  0075BF  F6                 	db	246
   997  0075C0  2A                 	db	42
   998  0075C1  3F                 	db	63
   999  0075C2  68                 	db	104
  1000  0075C3  F5                 	db	245
  1001  0075C4  7A                 	db	122
  1002  0075C5  00                 	db	0
  1003  0075C6  04                 	db	4
  1004  0075C7  FF                 	db	255
  1005  0075C8  FD                 	db	253
  1006  0075C9  00                 	db	0
  1007  0075CA  02                 	db	2
  1008  0075CB  00                 	db	0
  1009  0075CC  00                 	db	0
  1010  0075CD  00                 	db	0
  1011  0075CE  1B                 	db	27
  1012  0075CF  00                 	db	0
  1013  0075D0  00                 	db	0
  1014  0075D1  00                 	db	0
  1015  0075D2  00                 	db	0
  1016  0075D3  00                 	db	0
  1017  0075D4  00                 	db	0
  1018  0075D5  00                 	db	0
  1019  0075D6  00                 	db	0
  1020  0075D7  00                 	db	0
  1021  0075D8  00                 	db	0
  1022  0075D9  00                 	db	0
  1023  0075DA  0E                 	db	14
  1024  0075DB  00                 	db	0
  1025  0075DC  0E                 	db	14
  1026  0075DD  FF                 	db	255
  1027  0075DE  FF                 	db	255
  1028  0075DF  FF                 	db	255
  1029  0075E0  CF                 	db	207
  1030  0075E1  00                 	db	0
  1031  0075E2  04                 	db	4
  1032  0075E3  00                 	db	0
  1033  0075E4  00                 	db	0
  1034  0075E5  00                 	db	0
  1035  0075E6  00                 	db	0
  1036  0075E7  00                 	db	0
  1037  0075E8  32                 	db	50
  1038  0075E9  FF                 	db	255
  1039  0075EA  FF                 	db	255
  1040  0075EB  FF                 	db	255
  1041  0075EC  9C                 	db	156
  1042  0075ED  00                 	db	0
  1043  0075EE  00                 	db	0
  1044  0075EF  43                 	db	67
  1045  0075F0  05                 	db	5
  1046  0075F1  00                 	db	0
  1047  0075F2  00                 	db	0
  1048  0075F3  00                 	db	0
  1049  0075F4  00                 	db	0
  1050  0075F5  00                 	db	0
  1051  0075F6  00                 	db	0
  1052  0075F7  00                 	db	0
  1053  0075F8  01                 	db	1
  1054  0075F9  00                 	db	0
  1055  0075FA  00                 	db	0
  1056  0075FB  00                 	db	0
  1057  0075FC  64                 	db	100
  1058  0075FD  FF                 	db	255
  1059  0075FE  E5                 	db	229
  1060  0075FF  00                 	db	0
  1061  007600  00                 	db	0
  1062  007601  00                 	db	0
  1063  007602  00                 	db	0
  1064  007603  00                 	db	0
  1065  007604  00                 	db	0
  1066  007605  00                 	db	0
  1067  007606  00                 	db	0
  1068  007607  00                 	db	0
  1069  007608  00                 	db	0
  1070  007609  00                 	db	0
  1071  00760A  00                 	db	0
  1072  00760B  00                 	db	0
  1073  00760C  00                 	db	0
  1074  00760D  00                 	db	0
  1075  00760E  00                 	db	0
  1076  00760F  00                 	db	0
  1077  007610  01                 	db	1
  1078  007611  00                 	db	0
  1079  007612  00                 	db	0
  1080  007613  00                 	db	0
  1081  007614  00                 	db	0
  1082  007615  00                 	db	0
  1083  007616  01                 	db	1
  1084  007617  00                 	db	0
  1085  007618  00                 	db	0
  1086  007619  00                 	db	0
  1087  00761A  00                 	db	0
  1088  00761B  00                 	db	0
  1089  00761C  00                 	db	0
  1090  00761D  00                 	db	0
  1091  00761E  01                 	db	1
  1092  00761F  80                 	db	128
  1093  007620  00                 	db	0
  1094  007621  00                 	db	0
  1095  007622  01                 	db	1
  1096  007623  80                 	db	128
  1097  007624  00                 	db	0
  1098  007625  00                 	db	0
  1099  007626  01                 	db	1
  1100  007627  80                 	db	128
  1101  007628  00                 	db	0
  1102  007629  00                 	db	0
  1103  00762A  24                 	db	36
  1104  00762B  26                 	db	38
  1105  00762C  D3                 	db	211
  1106  00762D  00                 	db	0
  1107  00762E  01                 	db	1
  1108  00762F  00                 	db	0
  1109  007630  01                 	db	1
  1110  007631  00                 	db	0
  1111  007632  00                 	db	0
  1112  007633  00                 	db	0
  1113  007634  00                 	db	0
  1114  007635  00                 	db	0
  1115  007636  06                 	db	6
  1116  007637  00                 	db	0
  1117  007638  10                 	db	16
  1118  007639  00                 	db	0
  1119  00763A  96                 	db	150
  1120  00763B  00                 	db	0
  1121  00763C  3C                 	db	60
  1122  00763D  00                 	db	0
  1123  00763E  00                 	db	0
  1124  00763F  00                 	db	0
  1125  007640  00                 	db	0
  1126  007641  00                 	db	0
  1127  007642  00                 	db	0
  1128  007643  00                 	db	0
  1129  007644  00                 	db	0
  1130  007645  00                 	db	0
  1131  007646  00                 	db	0
  1132  007647  00                 	db	0
  1133  007648  00                 	db	0
  1134  007649  1F                 	db	31
  1135  00764A  9E                 	db	158
  1136  00764B  65                 	db	101
  1137  00764C  5D                 	db	93
  1138  00764D  0C                 	db	12
  1139  00764E  0A                 	db	10
  1140  00764F  4E                 	db	78
  1141  007650  68                 	db	104
  1142  007651  CD                 	db	205
  1143  007652  CF                 	db	207
  1144  007653  77                 	db	119
  1145  007654  09                 	db	9
  1146  007655  50                 	db	80
  1147  007656  16                 	db	22
  1148  007657  67                 	db	103
  1149  007658  59                 	db	89
  1150  007659  C6                 	db	198
  1151  00765A  19                 	db	25
  1152  00765B  CE                 	db	206
  1153  00765C  82                 	db	130
  1154  00765D  00                 	db	0
  1155  00765E  00                 	db	0
  1156  00765F  00                 	db	0
  1157  007660  00                 	db	0
  1158  007661  00                 	db	0
  1159  007662  00                 	db	0
  1160  007663  00                 	db	0
  1161  007664  00                 	db	0
  1162  007665  00                 	db	0
  1163  007666  00                 	db	0
  1164  007667  00                 	db	0
  1165  007668  00                 	db	0
  1166  007669  00                 	db	0
  1167  00766A  47                 	db	71
  1168  00766B  71                 	db	113
  1169  00766C  1C                 	db	28
  1170  00766D  00                 	db	0
  1171  00766E  00                 	db	0
  1172  00766F  00                 	db	0
  1173  007670  00                 	db	0
  1174  007671  00                 	db	0
  1175  007672  00                 	db	0
  1176  007673  00                 	db	0
  1177  007674  00                 	db	0
  1178  007675  17                 	db	23
  1179  007676  D7                 	db	215
  1180  007677  84                 	db	132
  1181  007678  00                 	db	0
  1182  007679  03                 	db	3
  1183  00767A  00                 	db	0
  1184  00767B  00                 	db	0
  1185  00767C  00                 	db	0
  1186  00767D  00                 	db	0
  1187  00767E  11                 	db	17
  1188  00767F  DC                 	db	220
  1189  007680  47                 	db	71
  1190  007681  03                 	db	3
  1191  007682  00                 	db	0
  1192  007683  00                 	db	0
  1193  007684  00                 	db	0
  1194  007685  C7                 	db	199
  1195  007686  93                 	db	147
  1196  007687  8F                 	db	143
  1197  007688  9D                 	db	157
  1198  007689  1E                 	db	30
  1199  00768A  1B                 	db	27
  1200  00768B  1C                 	db	28
  1201  00768C  19                 	db	25
  1202  00768D  FF                 	db	255
  1203  00768E  FF                 	db	255
  1204  00768F  FF                 	db	255
  1205  007690  FF                 	db	255
  1206  007691  00                 	db	0
  1207  007692  00                 	db	0
  1208  007693  00                 	db	0
  1209  007694  00                 	db	0
  1210  007695  0E                 	db	14
  1211  007696  DF                 	db	223
  1212  007697  A4                 	db	164
  1213  007698  38                 	db	56
  1214  007699  1F                 	db	31
  1215  00769A  9E                 	db	158
  1216  00769B  65                 	db	101
  1217  00769C  5D                 	db	93
  1218  00769D  00                 	db	0
  1219  00769E  00                 	db	0
  1220  00769F  00                 	db	0
  1221  0076A0  00                 	db	0
  1222  0076A1  00                 	db	0
  1223  0076A2  47                 	db	71
  1224  0076A3  71                 	db	113
  1225  0076A4  1C                 	db	28
  1226  0076A5  02                 	db	2
  1227  0076A6  03                 	db	3
  1228  0076A7  18                 	db	24
  1229  0076A8  85                 	db	133
  1230  0076A9  00                 	db	0
  1231  0076AA  00                 	db	0
  1232  0076AB  40                 	db	64
  1233  0076AC  00                 	db	0
  1234  0076AD  00                 	db	0
  1235  0076AE  00                 	db	0
  1236  0076AF  00                 	db	0
  1237  0076B0  00                 	db	0
  1238  0076B1  00                 	db	0
  1239  0076B2  00                 	db	0
  1240  0076B3  00                 	db	0
  1241  0076B4  03                 	db	3
  1242  0076B5  00                 	db	0
  1243  0076B6  00                 	db	0
  1244  0076B7  00                 	db	0
  1245  0076B8  00                 	db	0
  1246  0076B9  00                 	db	0
  1247  0076BA  00                 	db	0
  1248  0076BB  00                 	db	0
  1249  0076BC  00                 	db	0
  1250  0076BD  3F                 	db	63
  1251  0076BE  FF                 	db	255
  1252  0076BF  FF                 	db	255
  1253  0076C0  FD                 	db	253
  1254  0076C1  FF                 	db	255
  1255  0076C2  FF                 	db	255
  1256  0076C3  F4                 	db	244
  1257  0076C4  C9                 	db	201
  1258  0076C5  FF                 	db	255
  1259  0076C6  FF                 	db	255
  1260  0076C7  BC                 	db	188
  1261  0076C8  F0                 	db	240
  1262  0076C9  00                 	db	0
  1263  0076CA  01                 	db	1
  1264  0076CB  0C                 	db	12
  1265  0076CC  0F                 	db	15
  1266  0076CD  00                 	db	0
  1267  0076CE  00                 	db	0
  1268  0076CF  00                 	db	0
  1269  0076D0  00                 	db	0
  1270  0076D1  00                 	db	0
  1271  0076D2  00                 	db	0
  1272  0076D3  00                 	db	0
  1273  0076D4  00                 	db	0
  1274  0076D5  00                 	db	0
  1275  0076D6  00                 	db	0
  1276  0076D7  00                 	db	0
  1277  0076D8  00                 	db	0
  1278  0076D9  00                 	db	0
  1279  0076DA  00                 	db	0
  1280  0076DB  00                 	db	0
  1281  0076DC  00                 	db	0
  1282  0076DD  00                 	db	0
  1283  0076DE  00                 	db	0
  1284  0076DF  00                 	db	0
  1285  0076E0  00                 	db	0
  1286  0076E1  00                 	db	0
  1287  0076E2  00                 	db	0
  1288  0076E3  00                 	db	0
  1289  0076E4  00                 	db	0
  1290  0076E5  00                 	db	0
  1291  0076E6  00                 	db	0
  1292  0076E7  00                 	db	0
  1293  0076E8  00                 	db	0
  1294  0076E9  00                 	db	0
  1295  0076EA  00                 	db	0
  1296  0076EB  00                 	db	0
  1297  0076EC  00                 	db	0
  1298  0076ED  F5                 	db	245
  1299  0076EE  B7                 	db	183
  1300  0076EF  BA                 	db	186
  1301  0076F0  B3                 	db	179
  1302  0076F1  67                 	db	103
  1303  0076F2  7D                 	db	125
  1304  0076F3  DF                 	db	223
  1305  0076F4  7E                 	db	126
  1306  0076F5  72                 	db	114
  1307  0076F6  90                 	db	144
  1308  0076F7  2E                 	db	46
  1309  0076F8  55                 	db	85
  1310  0076F9  4C                 	db	76
  1311  0076FA  F6                 	db	246
  1312  0076FB  E6                 	db	230
  1313  0076FC  88                 	db	136
  1314  0076FD  00                 	db	0
  1315  0076FE  00                 	db	0
  1316  0076FF  00                 	db	0
  1317  007700  00                 	db	0
  1318  007701  00                 	db	0
  1319  007702  00                 	db	0
  1320  007703  00                 	db	0
  1321  007704  00                 	db	0
  1322  007705  00                 	db	0
  1323  007706  00                 	db	0
  1324  007707  00                 	db	0
  1325  007708  00                 	db	0
  1326  007709  00                 	db	0
  1327  00770A  00                 	db	0
  1328  00770B  00                 	db	0
  1329  00770C  00                 	db	0
  1330  00770D  D8                 	db	216
  1331  00770E  DC                 	db	220
  1332  00770F  B4                 	db	180
  1333  007710  B8                 	db	184
  1334  007711  B0                 	db	176
  1335  007712  D8                 	db	216
  1336  007713  B9                 	db	185
  1337  007714  AB                 	db	171
  1338  007715  F3                 	db	243
  1339  007716  F8                 	db	248
  1340  007717  FA                 	db	250
  1341  007718  B3                 	db	179
  1342  007719  B7                 	db	183
  1343  00771A  BB                 	db	187
  1344  00771B  8E                 	db	142
  1345  00771C  9E                 	db	158
  1346  00771D  AE                 	db	174
  1347  00771E  F1                 	db	241
  1348  00771F  32                 	db	50
  1349  007720  F5                 	db	245
  1350  007721  1B                 	db	27
  1351  007722  F1                 	db	241
  1352  007723  B4                 	db	180
  1353  007724  B8                 	db	184
  1354  007725  B0                 	db	176
  1355  007726  80                 	db	128
  1356  007727  97                 	db	151
  1357  007728  F1                 	db	241
  1358  007729  A9                 	db	169
  1359  00772A  DF                 	db	223
  1360  00772B  DF                 	db	223
  1361  00772C  DF                 	db	223
  1362  00772D  AA                 	db	170
  1363  00772E  DF                 	db	223
  1364  00772F  DF                 	db	223
  1365  007730  DF                 	db	223
  1366  007731  F2                 	db	242
  1367  007732  AA                 	db	170
  1368  007733  4C                 	db	76
  1369  007734  CD                 	db	205
  1370  007735  6C                 	db	108
  1371  007736  A9                 	db	169
  1372  007737  0C                 	db	12
  1373  007738  C9                 	db	201
  1374  007739  2C                 	db	44
  1375  00773A  97                 	db	151
  1376  00773B  F1                 	db	241
  1377  00773C  A9                 	db	169
  1378  00773D  89                 	db	137
  1379  00773E  26                 	db	38
  1380  00773F  46                 	db	70
  1381  007740  66                 	db	102
  1382  007741  B2                 	db	178
  1383  007742  89                 	db	137
  1384  007743  99                 	db	153
  1385  007744  A9                 	db	169
  1386  007745  2D                 	db	45
  1387  007746  55                 	db	85
  1388  007747  7D                 	db	125
  1389  007748  B0                 	db	176
  1390  007749  B0                 	db	176
  1391  00774A  8A                 	db	138
  1392  00774B  A8                 	db	168
  1393  00774C  96                 	db	150
  1394  00774D  36                 	db	54
  1395  00774E  56                 	db	86
  1396  00774F  76                 	db	118
  1397  007750  F1                 	db	241
  1398  007751  BA                 	db	186
  1399  007752  A3                 	db	163
  1400  007753  B4                 	db	180
  1401  007754  B2                 	db	178
  1402  007755  80                 	db	128
  1403  007756  C0                 	db	192
  1404  007757  B8                 	db	184
  1405  007758  A8                 	db	168
  1406  007759  97                 	db	151
  1407  00775A  11                 	db	17
  1408  00775B  B2                 	db	178
  1409  00775C  83                 	db	131
  1410  00775D  98                 	db	152
  1411  00775E  BA                 	db	186
  1412  00775F  A3                 	db	163
  1413  007760  F0                 	db	240
  1414  007761  24                 	db	36
  1415  007762  08                 	db	8
  1416  007763  44                 	db	68
  1417  007764  10                 	db	16
  1418  007765  64                 	db	100
  1419  007766  18                 	db	24
  1420  007767  B2                 	db	178
  1421  007768  B9                 	db	185
  1422  007769  B4                 	db	180
  1423  00776A  98                 	db	152
  1424  00776B  83                 	db	131
  1425  00776C  F1                 	db	241
  1426  00776D  A3                 	db	163
  1427  00776E  29                 	db	41
  1428  00776F  55                 	db	85
  1429  007770  7D                 	db	125
  1430  007771  BA                 	db	186
  1431  007772  B5                 	db	181
  1432  007773  B1                 	db	177
  1433  007774  A3                 	db	163
  1434  007775  83                 	db	131
  1435  007776  93                 	db	147
  1436  007777  F0                 	db	240
  1437  007778  00                 	db	0
  1438  007779  28                 	db	40
  1439  00777A  50                 	db	80
  1440  00777B  F5                 	db	245
  1441  00777C  B2                 	db	178
  1442  00777D  B6                 	db	182
  1443  00777E  AA                 	db	170
  1444  00777F  83                 	db	131
  1445  007780  93                 	db	147
  1446  007781  28                 	db	40
  1447  007782  54                 	db	84
  1448  007783  7C                 	db	124
  1449  007784  F1                 	db	241
  1450  007785  B9                 	db	185
  1451  007786  A3                 	db	163
  1452  007787  82                 	db	130
  1453  007788  93                 	db	147
  1454  007789  61                 	db	97
  1455  00778A  BA                 	db	186
  1456  00778B  A2                 	db	162
  1457  00778C  DA                 	db	218
  1458  00778D  DE                 	db	222
  1459  00778E  DF                 	db	223
  1460  00778F  DB                 	db	219
  1461  007790  81                 	db	129
  1462  007791  9A                 	db	154
  1463  007792  B9                 	db	185
  1464  007793  AE                 	db	174
  1465  007794  F5                 	db	245
  1466  007795  60                 	db	96
  1467  007796  68                 	db	104
  1468  007797  70                 	db	112
  1469  007798  F1                 	db	241
  1470  007799  DA                 	db	218
  1471  00779A  BA                 	db	186
  1472  00779B  A2                 	db	162
  1473  00779C  DF                 	db	223
  1474  00779D  D9                 	db	217
  1475  00779E  BA                 	db	186
  1476  00779F  A2                 	db	162
  1477  0077A0  FA                 	db	250
  1478  0077A1  B9                 	db	185
  1479  0077A2  A3                 	db	163
  1480  0077A3  82                 	db	130
  1481  0077A4  92                 	db	146
  1482  0077A5  DB                 	db	219
  1483  0077A6  31                 	db	49
  1484  0077A7  BA                 	db	186
  1485  0077A8  A2                 	db	162
  1486  0077A9  D9                 	db	217
  1487  0077AA  BA                 	db	186
  1488  0077AB  A2                 	db	162
  1489  0077AC  F8                 	db	248
  1490  0077AD  DF                 	db	223
  1491  0077AE  85                 	db	133
  1492  0077AF  A4                 	db	164
  1493  0077B0  D0                 	db	208
  1494  0077B1  C1                 	db	193
  1495  0077B2  BB                 	db	187
  1496  0077B3  AD                 	db	173
  1497  0077B4  83                 	db	131
  1498  0077B5  C2                 	db	194
  1499  0077B6  C5                 	db	197
  1500  0077B7  C7                 	db	199
  1501  0077B8  B8                 	db	184
  1502  0077B9  A2                 	db	162
  1503  0077BA  DF                 	db	223
  1504  0077BB  DF                 	db	223
  1505  0077BC  DF                 	db	223
  1506  0077BD  BA                 	db	186
  1507  0077BE  A0                 	db	160
  1508  0077BF  DF                 	db	223
  1509  0077C0  DF                 	db	223
  1510  0077C1  DF                 	db	223
  1511  0077C2  D8                 	db	216
  1512  0077C3  D8                 	db	216
  1513  0077C4  F1                 	db	241
  1514  0077C5  B8                 	db	184
  1515  0077C6  AA                 	db	170
  1516  0077C7  B3                 	db	179
  1517  0077C8  8D                 	db	141
  1518  0077C9  B4                 	db	180
  1519  0077CA  98                 	db	152
  1520  0077CB  0D                 	db	13
  1521  0077CC  35                 	db	53
  1522  0077CD  5D                 	db	93
  1523  0077CE  B2                 	db	178
  1524  0077CF  B6                 	db	182
  1525  0077D0  BA                 	db	186
  1526  0077D1  AF                 	db	175
  1527  0077D2  8C                 	db	140
  1528  0077D3  96                 	db	150
  1529  0077D4  19                 	db	25
  1530  0077D5  8F                 	db	143
  1531  0077D6  9F                 	db	159
  1532  0077D7  A7                 	db	167
  1533  0077D8  0E                 	db	14
  1534  0077D9  16                 	db	22
  1535  0077DA  1E                 	db	30
  1536  0077DB  B4                 	db	180
  1537  0077DC  9A                 	db	154
  1538  0077DD  B8                 	db	184
  1539  0077DE  AA                 	db	170
  1540  0077DF  87                 	db	135
  1541  0077E0  2C                 	db	44
  1542  0077E1  54                 	db	84
  1543  0077E2  7C                 	db	124
  1544  0077E3  BA                 	db	186
  1545  0077E4  A4                 	db	164
  1546  0077E5  B0                 	db	176
  1547  0077E6  8A                 	db	138
  1548  0077E7  B6                 	db	182
  1549  0077E8  91                 	db	145
  1550  0077E9  32                 	db	50
  1551  0077EA  56                 	db	86
  1552  0077EB  76                 	db	118
  1553  0077EC  B2                 	db	178
  1554  0077ED  84                 	db	132
  1555  0077EE  94                 	db	148
  1556  0077EF  A4                 	db	164
  1557  0077F0  C8                 	db	200
  1558  0077F1  08                 	db	8
  1559  0077F2  CD                 	db	205
  1560  0077F3  D8                 	db	216
  1561  0077F4  B8                 	db	184
  1562  0077F5  B4                 	db	180
  1563  0077F6  B0                 	db	176
  1564  0077F7  F1                 	db	241
  1565  0077F8  99                 	db	153
  1566  0077F9  82                 	db	130
  1567  0077FA  A8                 	db	168
  1568  0077FB  2D                 	db	45
  1569  0077FC  55                 	db	85
  1570  0077FD  7D                 	db	125
  1571  0077FE  98                 	db	152
  1572  0077FF  A8                 	db	168
  1573  007800  0E                 	db	14
  1574  007801  16                 	db	22
  1575  007802  1E                 	db	30
  1576  007803  A2                 	db	162
  1577  007804  2C                 	db	44
  1578  007805  54                 	db	84
  1579  007806  7C                 	db	124
  1580  007807  92                 	db	146
  1581  007808  A4                 	db	164
  1582  007809  F0                 	db	240
  1583  00780A  2C                 	db	44
  1584  00780B  50                 	db	80
  1585  00780C  78                 	db	120
  1586  00780D  F1                 	db	241
  1587  00780E  84                 	db	132
  1588  00780F  A8                 	db	168
  1589  007810  98                 	db	152
  1590  007811  C4                 	db	196
  1591  007812  CD                 	db	205
  1592  007813  FC                 	db	252
  1593  007814  D8                 	db	216
  1594  007815  0D                 	db	13
  1595  007816  DB                 	db	219
  1596  007817  A8                 	db	168
  1597  007818  FC                 	db	252
  1598  007819  2D                 	db	45
  1599  00781A  F3                 	db	243
  1600  00781B  D9                 	db	217
  1601  00781C  BA                 	db	186
  1602  00781D  A6                 	db	166
  1603  00781E  F8                 	db	248
  1604  00781F  DA                 	db	218
  1605  007820  BA                 	db	186
  1606  007821  A6                 	db	166
  1607  007822  DE                 	db	222
  1608  007823  D8                 	db	216
  1609  007824  BA                 	db	186
  1610  007825  B2                 	db	178
  1611  007826  B6                 	db	182
  1612  007827  86                 	db	134
  1613  007828  96                 	db	150
  1614  007829  A6                 	db	166
  1615  00782A  D0                 	db	208
  1616  00782B  F3                 	db	243
  1617  00782C  C8                 	db	200
  1618  00782D  41                 	db	65
  1619  00782E  DA                 	db	218
  1620  00782F  A6                 	db	166
  1621  007830  C8                 	db	200
  1622  007831  F8                 	db	248
  1623  007832  D8                 	db	216
  1624  007833  B0                 	db	176
  1625  007834  B4                 	db	180
  1626  007835  B8                 	db	184
  1627  007836  82                 	db	130
  1628  007837  A8                 	db	168
  1629  007838  92                 	db	146
  1630  007839  F5                 	db	245
  1631  00783A  2C                 	db	44
  1632  00783B  54                 	db	84
  1633  00783C  88                 	db	136
  1634  00783D  98                 	db	152
  1635  00783E  F1                 	db	241
  1636  00783F  35                 	db	53
  1637  007840  D9                 	db	217
  1638  007841  F4                 	db	244
  1639  007842  18                 	db	24
  1640  007843  D8                 	db	216
  1641  007844  F1                 	db	241
  1642  007845  A2                 	db	162
  1643  007846  D0                 	db	208
  1644  007847  F8                 	db	248
  1645  007848  F9                 	db	249
  1646  007849  A8                 	db	168
  1647  00784A  84                 	db	132
  1648  00784B  D9                 	db	217
  1649  00784C  C7                 	db	199
  1650  00784D  DF                 	db	223
  1651  00784E  F8                 	db	248
  1652  00784F  F8                 	db	248
  1653  007850  83                 	db	131
  1654  007851  C5                 	db	197
  1655  007852  DA                 	db	218
  1656  007853  DF                 	db	223
  1657  007854  69                 	db	105
  1658  007855  DF                 	db	223
  1659  007856  83                 	db	131
  1660  007857  C1                 	db	193
  1661  007858  D8                 	db	216
  1662  007859  F4                 	db	244
  1663  00785A  01                 	db	1
  1664  00785B  14                 	db	20
  1665  00785C  F1                 	db	241
  1666  00785D  A8                 	db	168
  1667  00785E  82                 	db	130
  1668  00785F  4E                 	db	78
  1669  007860  A8                 	db	168
  1670  007861  84                 	db	132
  1671  007862  F3                 	db	243
  1672  007863  11                 	db	17
  1673  007864  D1                 	db	209
  1674  007865  82                 	db	130
  1675  007866  F5                 	db	245
  1676  007867  D9                 	db	217
  1677  007868  92                 	db	146
  1678  007869  28                 	db	40
  1679  00786A  97                 	db	151
  1680  00786B  88                 	db	136
  1681  00786C  F1                 	db	241
  1682  00786D  09                 	db	9
  1683  00786E  F4                 	db	244
  1684  00786F  1C                 	db	28
  1685  007870  1C                 	db	28
  1686  007871  D8                 	db	216
  1687  007872  84                 	db	132
  1688  007873  A8                 	db	168
  1689  007874  F3                 	db	243
  1690  007875  C0                 	db	192
  1691  007876  F9                 	db	249
  1692  007877  D1                 	db	209
  1693  007878  D9                 	db	217
  1694  007879  97                 	db	151
  1695  00787A  82                 	db	130
  1696  00787B  F1                 	db	241
  1697  00787C  29                 	db	41
  1698  00787D  F4                 	db	244
  1699  00787E  0D                 	db	13
  1700  00787F  D8                 	db	216
  1701  007880  F3                 	db	243
  1702  007881  F9                 	db	249
  1703  007882  F9                 	db	249
  1704  007883  D1                 	db	209
  1705  007884  D9                 	db	217
  1706  007885  82                 	db	130
  1707  007886  F4                 	db	244
  1708  007887  C2                 	db	194
  1709  007888  03                 	db	3
  1710  007889  D8                 	db	216
  1711  00788A  DE                 	db	222
  1712  00788B  DF                 	db	223
  1713  00788C  1A                 	db	26
  1714  00788D  D8                 	db	216
  1715  00788E  F1                 	db	241
  1716  00788F  A2                 	db	162
  1717  007890  FA                 	db	250
  1718  007891  F9                 	db	249
  1719  007892  A8                 	db	168
  1720  007893  84                 	db	132
  1721  007894  98                 	db	152
  1722  007895  D9                 	db	217
  1723  007896  C7                 	db	199
  1724  007897  DF                 	db	223
  1725  007898  F8                 	db	248
  1726  007899  F8                 	db	248
  1727  00789A  F8                 	db	248
  1728  00789B  83                 	db	131
  1729  00789C  C7                 	db	199
  1730  00789D  DA                 	db	218
  1731  00789E  DF                 	db	223
  1732  00789F  69                 	db	105
  1733  0078A0  DF                 	db	223
  1734  0078A1  F8                 	db	248
  1735  0078A2  83                 	db	131
  1736  0078A3  C3                 	db	195
  1737  0078A4  D8                 	db	216
  1738  0078A5  F4                 	db	244
  1739  0078A6  01                 	db	1
  1740  0078A7  14                 	db	20
  1741  0078A8  F1                 	db	241
  1742  0078A9  98                 	db	152
  1743  0078AA  A8                 	db	168
  1744  0078AB  82                 	db	130
  1745  0078AC  2E                 	db	46
  1746  0078AD  A8                 	db	168
  1747  0078AE  84                 	db	132
  1748  0078AF  F3                 	db	243
  1749  0078B0  11                 	db	17
  1750  0078B1  D1                 	db	209
  1751  0078B2  82                 	db	130
  1752  0078B3  F5                 	db	245
  1753  0078B4  D9                 	db	217
  1754  0078B5  92                 	db	146
  1755  0078B6  50                 	db	80
  1756  0078B7  97                 	db	151
  1757  0078B8  88                 	db	136
  1758  0078B9  F1                 	db	241
  1759  0078BA  09                 	db	9
  1760  0078BB  F4                 	db	244
  1761  0078BC  1C                 	db	28
  1762  0078BD  D8                 	db	216
  1763  0078BE  84                 	db	132
  1764  0078BF  A8                 	db	168
  1765  0078C0  F3                 	db	243
  1766  0078C1  C0                 	db	192
  1767  0078C2  F8                 	db	248
  1768  0078C3  F9                 	db	249
  1769  0078C4  D1                 	db	209
  1770  0078C5  D9                 	db	217
  1771  0078C6  97                 	db	151
  1772  0078C7  82                 	db	130
  1773  0078C8  F1                 	db	241
  1774  0078C9  49                 	db	73
  1775  0078CA  F4                 	db	244
  1776  0078CB  0D                 	db	13
  1777  0078CC  D8                 	db	216
  1778  0078CD  F3                 	db	243
  1779  0078CE  F9                 	db	249
  1780  0078CF  F9                 	db	249
  1781  0078D0  D1                 	db	209
  1782  0078D1  D9                 	db	217
  1783  0078D2  82                 	db	130
  1784  0078D3  F4                 	db	244
  1785  0078D4  C4                 	db	196
  1786  0078D5  03                 	db	3
  1787  0078D6  D8                 	db	216
  1788  0078D7  DE                 	db	222
  1789  0078D8  DF                 	db	223
  1790  0078D9  D8                 	db	216
  1791  0078DA  F1                 	db	241
  1792  0078DB  AD                 	db	173
  1793  0078DC  88                 	db	136
  1794  0078DD  98                 	db	152
  1795  0078DE  CC                 	db	204
  1796  0078DF  A8                 	db	168
  1797  0078E0  09                 	db	9
  1798  0078E1  F9                 	db	249
  1799  0078E2  D9                 	db	217
  1800  0078E3  82                 	db	130
  1801  0078E4  92                 	db	146
  1802  0078E5  A8                 	db	168
  1803  0078E6  F5                 	db	245
  1804  0078E7  7C                 	db	124
  1805  0078E8  F1                 	db	241
  1806  0078E9  88                 	db	136
  1807  0078EA  3A                 	db	58
  1808  0078EB  CF                 	db	207
  1809  0078EC  94                 	db	148
  1810  0078ED  4A                 	db	74
  1811  0078EE  6E                 	db	110
  1812  0078EF  98                 	db	152
  1813  0078F0  DB                 	db	219
  1814  0078F1  69                 	db	105
  1815  0078F2  31                 	db	49
  1816  0078F3  DA                 	db	218
  1817  0078F4  AD                 	db	173
  1818  0078F5  F2                 	db	242
  1819  0078F6  DE                 	db	222
  1820  0078F7  F9                 	db	249
  1821  0078F8  D8                 	db	216
  1822  0078F9  87                 	db	135
  1823  0078FA  95                 	db	149
  1824  0078FB  A8                 	db	168
  1825  0078FC  F2                 	db	242
  1826  0078FD  21                 	db	33
  1827  0078FE  D1                 	db	209
  1828  0078FF  DA                 	db	218
  1829  007900  A5                 	db	165
  1830  007901  F9                 	db	249
  1831  007902  F4                 	db	244
  1832  007903  17                 	db	23
  1833  007904  D9                 	db	217
  1834  007905  F1                 	db	241
  1835  007906  AE                 	db	174
  1836  007907  8E                 	db	142
  1837  007908  D0                 	db	208
  1838  007909  C0                 	db	192
  1839  00790A  C3                 	db	195
  1840  00790B  AE                 	db	174
  1841  00790C  82                 	db	130
  1842  00790D  C6                 	db	198
  1843  00790E  84                 	db	132
  1844  00790F  C3                 	db	195
  1845  007910  A8                 	db	168
  1846  007911  85                 	db	133
  1847  007912  95                 	db	149
  1848  007913  C8                 	db	200
  1849  007914  A5                 	db	165
  1850  007915  88                 	db	136
  1851  007916  F2                 	db	242
  1852  007917  C0                 	db	192
  1853  007918  F1                 	db	241
  1854  007919  F4                 	db	244
  1855  00791A  01                 	db	1
  1856  00791B  0E                 	db	14
  1857  00791C  F1                 	db	241
  1858  00791D  8E                 	db	142
  1859  00791E  9E                 	db	158
  1860  00791F  A8                 	db	168
  1861  007920  C6                 	db	198
  1862  007921  3E                 	db	62
  1863  007922  56                 	db	86
  1864  007923  F5                 	db	245
  1865  007924  54                 	db	84
  1866  007925  F1                 	db	241
  1867  007926  88                 	db	136
  1868  007927  72                 	db	114
  1869  007928  F4                 	db	244
  1870  007929  01                 	db	1
  1871  00792A  15                 	db	21
  1872  00792B  F1                 	db	241
  1873  00792C  98                 	db	152
  1874  00792D  45                 	db	69
  1875  00792E  85                 	db	133
  1876  00792F  6E                 	db	110
  1877  007930  F5                 	db	245
  1878  007931  8E                 	db	142
  1879  007932  9E                 	db	158
  1880  007933  04                 	db	4
  1881  007934  88                 	db	136
  1882  007935  F1                 	db	241
  1883  007936  42                 	db	66
  1884  007937  98                 	db	152
  1885  007938  5A                 	db	90
  1886  007939  8E                 	db	142
  1887  00793A  9E                 	db	158
  1888  00793B  06                 	db	6
  1889  00793C  88                 	db	136
  1890  00793D  69                 	db	105
  1891  00793E  F4                 	db	244
  1892  00793F  01                 	db	1
  1893  007940  1C                 	db	28
  1894  007941  F1                 	db	241
  1895  007942  98                 	db	152
  1896  007943  1E                 	db	30
  1897  007944  11                 	db	17
  1898  007945  08                 	db	8
  1899  007946  D0                 	db	208
  1900  007947  F5                 	db	245
  1901  007948  04                 	db	4
  1902  007949  F1                 	db	241
  1903  00794A  1E                 	db	30
  1904  00794B  97                 	db	151
  1905  00794C  02                 	db	2
  1906  00794D  02                 	db	2
  1907  00794E  98                 	db	152
  1908  00794F  36                 	db	54
  1909  007950  25                 	db	37
  1910  007951  DB                 	db	219
  1911  007952  F9                 	db	249
  1912  007953  D9                 	db	217
  1913  007954  85                 	db	133
  1914  007955  A5                 	db	165
  1915  007956  F3                 	db	243
  1916  007957  C1                 	db	193
  1917  007958  DA                 	db	218
  1918  007959  85                 	db	133
  1919  00795A  A5                 	db	165
  1920  00795B  F3                 	db	243
  1921  00795C  DF                 	db	223
  1922  00795D  D8                 	db	216
  1923  00795E  85                 	db	133
  1924  00795F  95                 	db	149
  1925  007960  A8                 	db	168
  1926  007961  F3                 	db	243
  1927  007962  09                 	db	9
  1928  007963  DA                 	db	218
  1929  007964  A5                 	db	165
  1930  007965  FA                 	db	250
  1931  007966  D8                 	db	216
  1932  007967  82                 	db	130
  1933  007968  92                 	db	146
  1934  007969  A8                 	db	168
  1935  00796A  F5                 	db	245
  1936  00796B  78                 	db	120
  1937  00796C  F1                 	db	241
  1938  00796D  88                 	db	136
  1939  00796E  1A                 	db	26
  1940  00796F  84                 	db	132
  1941  007970  9F                 	db	159
  1942  007971  26                 	db	38
  1943  007972  88                 	db	136
  1944  007973  98                 	db	152
  1945  007974  21                 	db	33
  1946  007975  DA                 	db	218
  1947  007976  F4                 	db	244
  1948  007977  1D                 	db	29
  1949  007978  F3                 	db	243
  1950  007979  D8                 	db	216
  1951  00797A  87                 	db	135
  1952  00797B  9F                 	db	159
  1953  00797C  39                 	db	57
  1954  00797D  D1                 	db	209
  1955  00797E  AF                 	db	175
  1956  00797F  D9                 	db	217
  1957  007980  DF                 	db	223
  1958  007981  DF                 	db	223
  1959  007982  FB                 	db	251
  1960  007983  F9                 	db	249
  1961  007984  F4                 	db	244
  1962  007985  0C                 	db	12
  1963  007986  F3                 	db	243
  1964  007987  D8                 	db	216
  1965  007988  FA                 	db	250
  1966  007989  D0                 	db	208
  1967  00798A  F8                 	db	248
  1968  00798B  DA                 	db	218
  1969  00798C  F9                 	db	249
  1970  00798D  F9                 	db	249
  1971  00798E  D0                 	db	208
  1972  00798F  DF                 	db	223
  1973  007990  D9                 	db	217
  1974  007991  F9                 	db	249
  1975  007992  D8                 	db	216
  1976  007993  F4                 	db	244
  1977  007994  0B                 	db	11
  1978  007995  D8                 	db	216
  1979  007996  F3                 	db	243
  1980  007997  87                 	db	135
  1981  007998  9F                 	db	159
  1982  007999  39                 	db	57
  1983  00799A  D1                 	db	209
  1984  00799B  AF                 	db	175
  1985  00799C  D9                 	db	217
  1986  00799D  DF                 	db	223
  1987  00799E  DF                 	db	223
  1988  00799F  F4                 	db	244
  1989  0079A0  1D                 	db	29
  1990  0079A1  F3                 	db	243
  1991  0079A2  D8                 	db	216
  1992  0079A3  FA                 	db	250
  1993  0079A4  FC                 	db	252
  1994  0079A5  A8                 	db	168
  1995  0079A6  69                 	db	105
  1996  0079A7  F9                 	db	249
  1997  0079A8  F9                 	db	249
  1998  0079A9  AF                 	db	175
  1999  0079AA  D0                 	db	208
  2000  0079AB  DA                 	db	218
  2001  0079AC  DE                 	db	222
  2002  0079AD  FA                 	db	250
  2003  0079AE  D9                 	db	217
  2004  0079AF  F8                 	db	248
  2005  0079B0  8F                 	db	143
  2006  0079B1  9F                 	db	159
  2007  0079B2  A8                 	db	168
  2008  0079B3  F1                 	db	241
  2009  0079B4  CC                 	db	204
  2010  0079B5  F3                 	db	243
  2011  0079B6  98                 	db	152
  2012  0079B7  DB                 	db	219
  2013  0079B8  45                 	db	69
  2014  0079B9  D9                 	db	217
  2015  0079BA  AF                 	db	175
  2016  0079BB  DF                 	db	223
  2017  0079BC  D0                 	db	208
  2018  0079BD  F8                 	db	248
  2019  0079BE  D8                 	db	216
  2020  0079BF  F1                 	db	241
  2021  0079C0  8F                 	db	143
  2022  0079C1  9F                 	db	159
  2023  0079C2  A8                 	db	168
  2024  0079C3  CA                 	db	202
  2025  0079C4  F3                 	db	243
  2026  0079C5  88                 	db	136
  2027  0079C6  09                 	db	9
  2028  0079C7  DA                 	db	218
  2029  0079C8  AF                 	db	175
  2030  0079C9  8F                 	db	143
  2031  0079CA  CB                 	db	203
  2032  0079CB  F8                 	db	248
  2033  0079CC  D8                 	db	216
  2034  0079CD  F2                 	db	242
  2035  0079CE  AD                 	db	173
  2036  0079CF  97                 	db	151
  2037  0079D0  8D                 	db	141
  2038  0079D1  0C                 	db	12
  2039  0079D2  D9                 	db	217
  2040  0079D3  A5                 	db	165
  2041  0079D4  DF                 	db	223
  2042  0079D5  F9                 	db	249
  2043  0079D6  BA                 	db	186
  2044  0079D7  A6                 	db	166
  2045  0079D8  F3                 	db	243
  2046  0079D9  FA                 	db	250
  2047  0079DA  F4                 	db	244
  2048  0079DB  12                 	db	18
  2049  0079DC  F2                 	db	242
  2050  0079DD  D8                 	db	216
  2051  0079DE  95                 	db	149
  2052  0079DF  0D                 	db	13
  2053  0079E0  D1                 	db	209
  2054  0079E1  D9                 	db	217
  2055  0079E2  BA                 	db	186
  2056  0079E3  A6                 	db	166
  2057  0079E4  F3                 	db	243
  2058  0079E5  FA                 	db	250
  2059  0079E6  DA                 	db	218
  2060  0079E7  A5                 	db	165
  2061  0079E8  F2                 	db	242
  2062  0079E9  C1                 	db	193
  2063  0079EA  BA                 	db	186
  2064  0079EB  A6                 	db	166
  2065  0079EC  F3                 	db	243
  2066  0079ED  DF                 	db	223
  2067  0079EE  D8                 	db	216
  2068  0079EF  F1                 	db	241
  2069  0079F0  BA                 	db	186
  2070  0079F1  B2                 	db	178
  2071  0079F2  B6                 	db	182
  2072  0079F3  86                 	db	134
  2073  0079F4  96                 	db	150
  2074  0079F5  A6                 	db	166
  2075  0079F6  D0                 	db	208
  2076  0079F7  CA                 	db	202
  2077  0079F8  F3                 	db	243
  2078  0079F9  49                 	db	73
  2079  0079FA  DA                 	db	218
  2080  0079FB  A6                 	db	166
  2081  0079FC  CB                 	db	203
  2082  0079FD  F8                 	db	248
  2083  0079FE  D8                 	db	216
  2084  0079FF  B0                 	db	176
  2085  007A00  B4                 	db	180
  2086  007A01  B8                 	db	184
  2087  007A02  D8                 	db	216
  2088  007A03  AD                 	db	173
  2089  007A04  84                 	db	132
  2090  007A05  F2                 	db	242
  2091  007A06  C0                 	db	192
  2092  007A07  DF                 	db	223
  2093  007A08  F1                 	db	241
  2094  007A09  8F                 	db	143
  2095  007A0A  CB                 	db	203
  2096  007A0B  C3                 	db	195
  2097  007A0C  A8                 	db	168
  2098  007A0D  B2                 	db	178
  2099  007A0E  B6                 	db	182
  2100  007A0F  86                 	db	134
  2101  007A10  96                 	db	150
  2102  007A11  C8                 	db	200
  2103  007A12  C1                 	db	193
  2104  007A13  CB                 	db	203
  2105  007A14  C3                 	db	195
  2106  007A15  F3                 	db	243
  2107  007A16  B0                 	db	176
  2108  007A17  B4                 	db	180
  2109  007A18  88                 	db	136
  2110  007A19  98                 	db	152
  2111  007A1A  A8                 	db	168
  2112  007A1B  21                 	db	33
  2113  007A1C  DB                 	db	219
  2114  007A1D  71                 	db	113
  2115  007A1E  8D                 	db	141
  2116  007A1F  9D                 	db	157
  2117  007A20  71                 	db	113
  2118  007A21  85                 	db	133
  2119  007A22  95                 	db	149
  2120  007A23  21                 	db	33
  2121  007A24  D9                 	db	217
  2122  007A25  AD                 	db	173
  2123  007A26  F2                 	db	242
  2124  007A27  FA                 	db	250
  2125  007A28  D8                 	db	216
  2126  007A29  85                 	db	133
  2127  007A2A  97                 	db	151
  2128  007A2B  A8                 	db	168
  2129  007A2C  28                 	db	40
  2130  007A2D  D9                 	db	217
  2131  007A2E  F4                 	db	244
  2132  007A2F  08                 	db	8
  2133  007A30  D8                 	db	216
  2134  007A31  F2                 	db	242
  2135  007A32  8D                 	db	141
  2136  007A33  29                 	db	41
  2137  007A34  DA                 	db	218
  2138  007A35  F4                 	db	244
  2139  007A36  05                 	db	5
  2140  007A37  D9                 	db	217
  2141  007A38  F2                 	db	242
  2142  007A39  85                 	db	133
  2143  007A3A  A4                 	db	164
  2144  007A3B  C2                 	db	194
  2145  007A3C  F2                 	db	242
  2146  007A3D  D8                 	db	216
  2147  007A3E  A8                 	db	168
  2148  007A3F  8D                 	db	141
  2149  007A40  94                 	db	148
  2150  007A41  01                 	db	1
  2151  007A42  D1                 	db	209
  2152  007A43  D9                 	db	217
  2153  007A44  F4                 	db	244
  2154  007A45  11                 	db	17
  2155  007A46  F2                 	db	242
  2156  007A47  D8                 	db	216
  2157  007A48  87                 	db	135
  2158  007A49  21                 	db	33
  2159  007A4A  D8                 	db	216
  2160  007A4B  F4                 	db	244
  2161  007A4C  0A                 	db	10
  2162  007A4D  D8                 	db	216
  2163  007A4E  F2                 	db	242
  2164  007A4F  84                 	db	132
  2165  007A50  98                 	db	152
  2166  007A51  A8                 	db	168
  2167  007A52  C8                 	db	200
  2168  007A53  01                 	db	1
  2169  007A54  D1                 	db	209
  2170  007A55  D9                 	db	217
  2171  007A56  F4                 	db	244
  2172  007A57  11                 	db	17
  2173  007A58  D8                 	db	216
  2174  007A59  F3                 	db	243
  2175  007A5A  A4                 	db	164
  2176  007A5B  C8                 	db	200
  2177  007A5C  BB                 	db	187
  2178  007A5D  AF                 	db	175
  2179  007A5E  D0                 	db	208
  2180  007A5F  F2                 	db	242
  2181  007A60  DE                 	db	222
  2182  007A61  F8                 	db	248
  2183  007A62  F8                 	db	248
  2184  007A63  F8                 	db	248
  2185  007A64  F8                 	db	248
  2186  007A65  F8                 	db	248
  2187  007A66  F8                 	db	248
  2188  007A67  F8                 	db	248
  2189  007A68  F8                 	db	248
  2190  007A69  D8                 	db	216
  2191  007A6A  F1                 	db	241
  2192  007A6B  B8                 	db	184
  2193  007A6C  F6                 	db	246
  2194  007A6D  B5                 	db	181
  2195  007A6E  B9                 	db	185
  2196  007A6F  B0                 	db	176
  2197  007A70  8A                 	db	138
  2198  007A71  95                 	db	149
  2199  007A72  A3                 	db	163
  2200  007A73  DE                 	db	222
  2201  007A74  3C                 	db	60
  2202  007A75  A3                 	db	163
  2203  007A76  D9                 	db	217
  2204  007A77  F8                 	db	248
  2205  007A78  D8                 	db	216
  2206  007A79  5C                 	db	92
  2207  007A7A  A3                 	db	163
  2208  007A7B  D9                 	db	217
  2209  007A7C  F8                 	db	248
  2210  007A7D  D8                 	db	216
  2211  007A7E  7C                 	db	124
  2212  007A7F  A3                 	db	163
  2213  007A80  D9                 	db	217
  2214  007A81  F8                 	db	248
  2215  007A82  D8                 	db	216
  2216  007A83  F8                 	db	248
  2217  007A84  F9                 	db	249
  2218  007A85  D1                 	db	209
  2219  007A86  A5                 	db	165
  2220  007A87  D9                 	db	217
  2221  007A88  DF                 	db	223
  2222  007A89  DA                 	db	218
  2223  007A8A  FA                 	db	250
  2224  007A8B  D8                 	db	216
  2225  007A8C  B1                 	db	177
  2226  007A8D  85                 	db	133
  2227  007A8E  30                 	db	48
  2228  007A8F  F7                 	db	247
  2229  007A90  D9                 	db	217
  2230  007A91  DE                 	db	222
  2231  007A92  D8                 	db	216
  2232  007A93  F8                 	db	248
  2233  007A94  30                 	db	48
  2234  007A95  AD                 	db	173
  2235  007A96  DA                 	db	218
  2236  007A97  DE                 	db	222
  2237  007A98  D8                 	db	216
  2238  007A99  F2                 	db	242
  2239  007A9A  B4                 	db	180
  2240  007A9B  8C                 	db	140
  2241  007A9C  99                 	db	153
  2242  007A9D  A3                 	db	163
  2243  007A9E  2D                 	db	45
  2244  007A9F  55                 	db	85
  2245  007AA0  7D                 	db	125
  2246  007AA1  A0                 	db	160
  2247  007AA2  83                 	db	131
  2248  007AA3  DF                 	db	223
  2249  007AA4  DF                 	db	223
  2250  007AA5  DF                 	db	223
  2251  007AA6  B5                 	db	181
  2252  007AA7  91                 	db	145
  2253  007AA8  A0                 	db	160
  2254  007AA9  F6                 	db	246
  2255  007AAA  29                 	db	41
  2256  007AAB  D9                 	db	217
  2257  007AAC  FB                 	db	251
  2258  007AAD  D8                 	db	216
  2259  007AAE  A0                 	db	160
  2260  007AAF  FC                 	db	252
  2261  007AB0  29                 	db	41
  2262  007AB1  D9                 	db	217
  2263  007AB2  FA                 	db	250
  2264  007AB3  D8                 	db	216
  2265  007AB4  A0                 	db	160
  2266  007AB5  D0                 	db	208
  2267  007AB6  51                 	db	81
  2268  007AB7  D9                 	db	217
  2269  007AB8  F8                 	db	248
  2270  007AB9  D8                 	db	216
  2271  007ABA  FC                 	db	252
  2272  007ABB  51                 	db	81
  2273  007ABC  D9                 	db	217
  2274  007ABD  F9                 	db	249
  2275  007ABE  D8                 	db	216
  2276  007ABF  79                 	db	121
  2277  007AC0  D9                 	db	217
  2278  007AC1  FB                 	db	251
  2279  007AC2  D8                 	db	216
  2280  007AC3  A0                 	db	160
  2281  007AC4  D0                 	db	208
  2282  007AC5  FC                 	db	252
  2283  007AC6  79                 	db	121
  2284  007AC7  D9                 	db	217
  2285  007AC8  FA                 	db	250
  2286  007AC9  D8                 	db	216
  2287  007ACA  A1                 	db	161
  2288  007ACB  F9                 	db	249
  2289  007ACC  F9                 	db	249
  2290  007ACD  F9                 	db	249
  2291  007ACE  F9                 	db	249
  2292  007ACF  F9                 	db	249
  2293  007AD0  A0                 	db	160
  2294  007AD1  DA                 	db	218
  2295  007AD2  DF                 	db	223
  2296  007AD3  DF                 	db	223
  2297  007AD4  DF                 	db	223
  2298  007AD5  D8                 	db	216
  2299  007AD6  A1                 	db	161
  2300  007AD7  F8                 	db	248
  2301  007AD8  F8                 	db	248
  2302  007AD9  F8                 	db	248
  2303  007ADA  F8                 	db	248
  2304  007ADB  F8                 	db	248
  2305  007ADC  AC                 	db	172
  2306  007ADD  DE                 	db	222
  2307  007ADE  F8                 	db	248
  2308  007ADF  AD                 	db	173
  2309  007AE0  DE                 	db	222
  2310  007AE1  83                 	db	131
  2311  007AE2  93                 	db	147
  2312  007AE3  AC                 	db	172
  2313  007AE4  2C                 	db	44
  2314  007AE5  54                 	db	84
  2315  007AE6  7C                 	db	124
  2316  007AE7  F1                 	db	241
  2317  007AE8  A8                 	db	168
  2318  007AE9  DF                 	db	223
  2319  007AEA  DF                 	db	223
  2320  007AEB  DF                 	db	223
  2321  007AEC  F6                 	db	246
  2322  007AED  9D                 	db	157
  2323  007AEE  2C                 	db	44
  2324  007AEF  DA                 	db	218
  2325  007AF0  A0                 	db	160
  2326  007AF1  DF                 	db	223
  2327  007AF2  D9                 	db	217
  2328  007AF3  FA                 	db	250
  2329  007AF4  DB                 	db	219
  2330  007AF5  2D                 	db	45
  2331  007AF6  F8                 	db	248
  2332  007AF7  D8                 	db	216
  2333  007AF8  A8                 	db	168
  2334  007AF9  50                 	db	80
  2335  007AFA  DA                 	db	218
  2336  007AFB  A0                 	db	160
  2337  007AFC  D0                 	db	208
  2338  007AFD  DE                 	db	222
  2339  007AFE  D9                 	db	217
  2340  007AFF  D0                 	db	208
  2341  007B00  F8                 	db	248
  2342  007B01  F8                 	db	248
  2343  007B02  F8                 	db	248
  2344  007B03  DB                 	db	219
  2345  007B04  55                 	db	85
  2346  007B05  F8                 	db	248
  2347  007B06  D8                 	db	216
  2348  007B07  A8                 	db	168
  2349  007B08  78                 	db	120
  2350  007B09  DA                 	db	218
  2351  007B0A  A0                 	db	160
  2352  007B0B  D0                 	db	208
  2353  007B0C  DF                 	db	223
  2354  007B0D  D9                 	db	217
  2355  007B0E  D0                 	db	208
  2356  007B0F  FA                 	db	250
  2357  007B10  F8                 	db	248
  2358  007B11  F8                 	db	248
  2359  007B12  F8                 	db	248
  2360  007B13  F8                 	db	248
  2361  007B14  DB                 	db	219
  2362  007B15  7D                 	db	125
  2363  007B16  F8                 	db	248
  2364  007B17  D8                 	db	216
  2365  007B18  9C                 	db	156
  2366  007B19  A8                 	db	168
  2367  007B1A  8C                 	db	140
  2368  007B1B  F5                 	db	245
  2369  007B1C  30                 	db	48
  2370  007B1D  DB                 	db	219
  2371  007B1E  38                 	db	56
  2372  007B1F  D9                 	db	217
  2373  007B20  D0                 	db	208
  2374  007B21  DE                 	db	222
  2375  007B22  DF                 	db	223
  2376  007B23  A0                 	db	160
  2377  007B24  D0                 	db	208
  2378  007B25  DE                 	db	222
  2379  007B26  DF                 	db	223
  2380  007B27  D8                 	db	216
  2381  007B28  A8                 	db	168
  2382  007B29  48                 	db	72
  2383  007B2A  DB                 	db	219
  2384  007B2B  58                 	db	88
  2385  007B2C  D9                 	db	217
  2386  007B2D  DF                 	db	223
  2387  007B2E  D0                 	db	208
  2388  007B2F  DE                 	db	222
  2389  007B30  A0                 	db	160
  2390  007B31  DF                 	db	223
  2391  007B32  D0                 	db	208
  2392  007B33  DE                 	db	222
  2393  007B34  D8                 	db	216
  2394  007B35  A8                 	db	168
  2395  007B36  68                 	db	104
  2396  007B37  DB                 	db	219
  2397  007B38  70                 	db	112
  2398  007B39  D9                 	db	217
  2399  007B3A  DF                 	db	223
  2400  007B3B  DF                 	db	223
  2401  007B3C  A0                 	db	160
  2402  007B3D  DF                 	db	223
  2403  007B3E  DF                 	db	223
  2404  007B3F  D8                 	db	216
  2405  007B40  F1                 	db	241
  2406  007B41  A8                 	db	168
  2407  007B42  88                 	db	136
  2408  007B43  90                 	db	144
  2409  007B44  2C                 	db	44
  2410  007B45  54                 	db	84
  2411  007B46  7C                 	db	124
  2412  007B47  98                 	db	152
  2413  007B48  A8                 	db	168
  2414  007B49  D0                 	db	208
  2415  007B4A  5C                 	db	92
  2416  007B4B  38                 	db	56
  2417  007B4C  D1                 	db	209
  2418  007B4D  DA                 	db	218
  2419  007B4E  F2                 	db	242
  2420  007B4F  AE                 	db	174
  2421  007B50  8C                 	db	140
  2422  007B51  DF                 	db	223
  2423  007B52  F9                 	db	249
  2424  007B53  D8                 	db	216
  2425  007B54  B0                 	db	176
  2426  007B55  87                 	db	135
  2427  007B56  A8                 	db	168
  2428  007B57  C1                 	db	193
  2429  007B58  C1                 	db	193
  2430  007B59  B1                 	db	177
  2431  007B5A  88                 	db	136
  2432  007B5B  A8                 	db	168
  2433  007B5C  C6                 	db	198
  2434  007B5D  F9                 	db	249
  2435  007B5E  F9                 	db	249
  2436  007B5F  DA                 	db	218
  2437  007B60  36                 	db	54
  2438  007B61  D8                 	db	216
  2439  007B62  A8                 	db	168
  2440  007B63  F9                 	db	249
  2441  007B64  DA                 	db	218
  2442  007B65  36                 	db	54
  2443  007B66  D8                 	db	216
  2444  007B67  A8                 	db	168
  2445  007B68  F9                 	db	249
  2446  007B69  DA                 	db	218
  2447  007B6A  36                 	db	54
  2448  007B6B  D8                 	db	216
  2449  007B6C  A8                 	db	168
  2450  007B6D  F9                 	db	249
  2451  007B6E  DA                 	db	218
  2452  007B6F  36                 	db	54
  2453  007B70  D8                 	db	216
  2454  007B71  A8                 	db	168
  2455  007B72  F9                 	db	249
  2456  007B73  DA                 	db	218
  2457  007B74  36                 	db	54
  2458  007B75  D8                 	db	216
  2459  007B76  F7                 	db	247
  2460  007B77  8D                 	db	141
  2461  007B78  9D                 	db	157
  2462  007B79  AD                 	db	173
  2463  007B7A  F8                 	db	248
  2464  007B7B  18                 	db	24
  2465  007B7C  DA                 	db	218
  2466  007B7D  F2                 	db	242
  2467  007B7E  AE                 	db	174
  2468  007B7F  DF                 	db	223
  2469  007B80  D8                 	db	216
  2470  007B81  F7                 	db	247
  2471  007B82  AD                 	db	173
  2472  007B83  FA                 	db	250
  2473  007B84  30                 	db	48
  2474  007B85  D9                 	db	217
  2475  007B86  A4                 	db	164
  2476  007B87  DE                 	db	222
  2477  007B88  F9                 	db	249
  2478  007B89  D8                 	db	216
  2479  007B8A  F2                 	db	242
  2480  007B8B  AE                 	db	174
  2481  007B8C  DE                 	db	222
  2482  007B8D  FA                 	db	250
  2483  007B8E  F9                 	db	249
  2484  007B8F  83                 	db	131
  2485  007B90  A7                 	db	167
  2486  007B91  D9                 	db	217
  2487  007B92  C3                 	db	195
  2488  007B93  C5                 	db	197
  2489  007B94  C7                 	db	199
  2490  007B95  F1                 	db	241
  2491  007B96  88                 	db	136
  2492  007B97  9B                 	db	155
  2493  007B98  A7                 	db	167
  2494  007B99  7A                 	db	122
  2495  007B9A  AD                 	db	173
  2496  007B9B  F7                 	db	247
  2497  007B9C  DE                 	db	222
  2498  007B9D  DF                 	db	223
  2499  007B9E  A4                 	db	164
  2500  007B9F  F8                 	db	248
  2501  007BA0  84                 	db	132
  2502  007BA1  94                 	db	148
  2503  007BA2  08                 	db	8
  2504  007BA3  A7                 	db	167
  2505  007BA4  97                 	db	151
  2506  007BA5  F3                 	db	243
  2507  007BA6  00                 	db	0
  2508  007BA7  AE                 	db	174
  2509  007BA8  F2                 	db	242
  2510  007BA9  98                 	db	152
  2511  007BAA  19                 	db	25
  2512  007BAB  A4                 	db	164
  2513  007BAC  88                 	db	136
  2514  007BAD  C6                 	db	198
  2515  007BAE  A3                 	db	163
  2516  007BAF  94                 	db	148
  2517  007BB0  88                 	db	136
  2518  007BB1  F6                 	db	246
  2519  007BB2  32                 	db	50
  2520  007BB3  DF                 	db	223
  2521  007BB4  F2                 	db	242
  2522  007BB5  83                 	db	131
  2523  007BB6  93                 	db	147
  2524  007BB7  DB                 	db	219
  2525  007BB8  09                 	db	9
  2526  007BB9  D9                 	db	217
  2527  007BBA  F2                 	db	242
  2528  007BBB  AA                 	db	170
  2529  007BBC  DF                 	db	223
  2530  007BBD  D8                 	db	216
  2531  007BBE  D8                 	db	216
  2532  007BBF  AE                 	db	174
  2533  007BC0  F8                 	db	248
  2534  007BC1  F9                 	db	249
  2535  007BC2  D1                 	db	209
  2536  007BC3  DA                 	db	218
  2537  007BC4  F3                 	db	243
  2538  007BC5  A4                 	db	164
  2539  007BC6  DE                 	db	222
  2540  007BC7  A7                 	db	167
  2541  007BC8  F1                 	db	241
  2542  007BC9  88                 	db	136
  2543  007BCA  9B                 	db	155
  2544  007BCB  7A                 	db	122
  2545  007BCC  D8                 	db	216
  2546  007BCD  F3                 	db	243
  2547  007BCE  84                 	db	132
  2548  007BCF  94                 	db	148
  2549  007BD0  AE                 	db	174
  2550  007BD1  19                 	db	25
  2551  007BD2  F9                 	db	249
  2552  007BD3  DA                 	db	218
  2553  007BD4  AA                 	db	170
  2554  007BD5  F1                 	db	241
  2555  007BD6  DF                 	db	223
  2556  007BD7  D8                 	db	216
  2557  007BD8  A8                 	db	168
  2558  007BD9  81                 	db	129
  2559  007BDA  C0                 	db	192
  2560  007BDB  C3                 	db	195
  2561  007BDC  C5                 	db	197
  2562  007BDD  C7                 	db	199
  2563  007BDE  A3                 	db	163
  2564  007BDF  92                 	db	146
  2565  007BE0  83                 	db	131
  2566  007BE1  F6                 	db	246
  2567  007BE2  28                 	db	40
  2568  007BE3  AD                 	db	173
  2569  007BE4  DE                 	db	222
  2570  007BE5  D9                 	db	217
  2571  007BE6  F8                 	db	248
  2572  007BE7  D8                 	db	216
  2573  007BE8  A3                 	db	163
  2574  007BE9  50                 	db	80
  2575  007BEA  AD                 	db	173
  2576  007BEB  D9                 	db	217
  2577  007BEC  F8                 	db	248
  2578  007BED  D8                 	db	216
  2579  007BEE  A3                 	db	163
  2580  007BEF  78                 	db	120
  2581  007BF0  AD                 	db	173
  2582  007BF1  D9                 	db	217
  2583  007BF2  F8                 	db	248
  2584  007BF3  D8                 	db	216
  2585  007BF4  F8                 	db	248
  2586  007BF5  F9                 	db	249
  2587  007BF6  D1                 	db	209
  2588  007BF7  A1                 	db	161
  2589  007BF8  DA                 	db	218
  2590  007BF9  DE                 	db	222
  2591  007BFA  C3                 	db	195
  2592  007BFB  C5                 	db	197
  2593  007BFC  C7                 	db	199
  2594  007BFD  D8                 	db	216
  2595  007BFE  A1                 	db	161
  2596  007BFF  81                 	db	129
  2597  007C00  94                 	db	148
  2598  007C01  F8                 	db	248
  2599  007C02  18                 	db	24
  2600  007C03  F2                 	db	242
  2601  007C04  B0                 	db	176
  2602  007C05  89                 	db	137
  2603  007C06  AC                 	db	172
  2604  007C07  C3                 	db	195
  2605  007C08  C5                 	db	197
  2606  007C09  C7                 	db	199
  2607  007C0A  F1                 	db	241
  2608  007C0B  D8                 	db	216
  2609  007C0C  B8                 	db	184
  2610  007C0D  B4                 	db	180
  2611  007C0E  B0                 	db	176
  2612  007C0F  97                 	db	151
  2613  007C10  86                 	db	134
  2614  007C11  A8                 	db	168
  2615  007C12  31                 	db	49
  2616  007C13  9B                 	db	155
  2617  007C14  06                 	db	6
  2618  007C15  99                 	db	153
  2619  007C16  07                 	db	7
  2620  007C17  AB                 	db	171
  2621  007C18  97                 	db	151
  2622  007C19  28                 	db	40
  2623  007C1A  88                 	db	136
  2624  007C1B  9B                 	db	155
  2625  007C1C  F0                 	db	240
  2626  007C1D  0C                 	db	12
  2627  007C1E  20                 	db	32
  2628  007C1F  14                 	db	20
  2629  007C20  40                 	db	64
  2630  007C21  B0                 	db	176
  2631  007C22  B4                 	db	180
  2632  007C23  B8                 	db	184
  2633  007C24  F0                 	db	240
  2634  007C25  A8                 	db	168
  2635  007C26  8A                 	db	138
  2636  007C27  9A                 	db	154
  2637  007C28  28                 	db	40
  2638  007C29  50                 	db	80
  2639  007C2A  78                 	db	120
  2640  007C2B  B7                 	db	183
  2641  007C2C  9B                 	db	155
  2642  007C2D  A8                 	db	168
  2643  007C2E  29                 	db	41
  2644  007C2F  51                 	db	81
  2645  007C30  79                 	db	121
  2646  007C31  24                 	db	36
  2647  007C32  70                 	db	112
  2648  007C33  59                 	db	89
  2649  007C34  44                 	db	68
  2650  007C35  69                 	db	105
  2651  007C36  38                 	db	56
  2652  007C37  64                 	db	100
  2653  007C38  48                 	db	72
  2654  007C39  31                 	db	49
  2655  007C3A  F1                 	db	241
  2656  007C3B  BB                 	db	187
  2657  007C3C  AB                 	db	171
  2658  007C3D  88                 	db	136
  2659  007C3E  00                 	db	0
  2660  007C3F  2C                 	db	44
  2661  007C40  54                 	db	84
  2662  007C41  7C                 	db	124
  2663  007C42  F0                 	db	240
  2664  007C43  B3                 	db	179
  2665  007C44  8B                 	db	139
  2666  007C45  B8                 	db	184
  2667  007C46  A8                 	db	168
  2668  007C47  04                 	db	4
  2669  007C48  28                 	db	40
  2670  007C49  50                 	db	80
  2671  007C4A  78                 	db	120
  2672  007C4B  F1                 	db	241
  2673  007C4C  B0                 	db	176
  2674  007C4D  88                 	db	136
  2675  007C4E  B4                 	db	180
  2676  007C4F  97                 	db	151
  2677  007C50  26                 	db	38
  2678  007C51  A8                 	db	168
  2679  007C52  59                 	db	89
  2680  007C53  98                 	db	152
  2681  007C54  BB                 	db	187
  2682  007C55  AB                 	db	171
  2683  007C56  B3                 	db	179
  2684  007C57  8B                 	db	139
  2685  007C58  02                 	db	2
  2686  007C59  26                 	db	38
  2687  007C5A  46                 	db	70
  2688  007C5B  66                 	db	102
  2689  007C5C  B0                 	db	176
  2690  007C5D  B8                 	db	184
  2691  007C5E  F0                 	db	240
  2692  007C5F  8A                 	db	138
  2693  007C60  9C                 	db	156
  2694  007C61  A8                 	db	168
  2695  007C62  29                 	db	41
  2696  007C63  51                 	db	81
  2697  007C64  79                 	db	121
  2698  007C65  8B                 	db	139
  2699  007C66  29                 	db	41
  2700  007C67  51                 	db	81
  2701  007C68  79                 	db	121
  2702  007C69  8A                 	db	138
  2703  007C6A  24                 	db	36
  2704  007C6B  70                 	db	112
  2705  007C6C  59                 	db	89
  2706  007C6D  8B                 	db	139
  2707  007C6E  20                 	db	32
  2708  007C6F  58                 	db	88
  2709  007C70  71                 	db	113
  2710  007C71  8A                 	db	138
  2711  007C72  44                 	db	68
  2712  007C73  69                 	db	105
  2713  007C74  38                 	db	56
  2714  007C75  8B                 	db	139
  2715  007C76  39                 	db	57
  2716  007C77  40                 	db	64
  2717  007C78  68                 	db	104
  2718  007C79  8A                 	db	138
  2719  007C7A  64                 	db	100
  2720  007C7B  48                 	db	72
  2721  007C7C  31                 	db	49
  2722  007C7D  8B                 	db	139
  2723  007C7E  30                 	db	48
  2724  007C7F  49                 	db	73
  2725  007C80  60                 	db	96
  2726  007C81  88                 	db	136
  2727  007C82  F1                 	db	241
  2728  007C83  AC                 	db	172
  2729  007C84  00                 	db	0
  2730  007C85  2C                 	db	44
  2731  007C86  54                 	db	84
  2732  007C87  7C                 	db	124
  2733  007C88  F0                 	db	240
  2734  007C89  8C                 	db	140
  2735  007C8A  A8                 	db	168
  2736  007C8B  04                 	db	4
  2737  007C8C  28                 	db	40
  2738  007C8D  50                 	db	80
  2739  007C8E  78                 	db	120
  2740  007C8F  F1                 	db	241
  2741  007C90  88                 	db	136
  2742  007C91  97                 	db	151
  2743  007C92  26                 	db	38
  2744  007C93  A8                 	db	168
  2745  007C94  59                 	db	89
  2746  007C95  98                 	db	152
  2747  007C96  AC                 	db	172
  2748  007C97  8C                 	db	140
  2749  007C98  02                 	db	2
  2750  007C99  26                 	db	38
  2751  007C9A  46                 	db	70
  2752  007C9B  66                 	db	102
  2753  007C9C  F0                 	db	240
  2754  007C9D  89                 	db	137
  2755  007C9E  9C                 	db	156
  2756  007C9F  A8                 	db	168
  2757  007CA0  29                 	db	41
  2758  007CA1  51                 	db	81
  2759  007CA2  79                 	db	121
  2760  007CA3  24                 	db	36
  2761  007CA4  70                 	db	112
  2762  007CA5  59                 	db	89
  2763  007CA6  44                 	db	68
  2764  007CA7  69                 	db	105
  2765  007CA8  38                 	db	56
  2766  007CA9  64                 	db	100
  2767  007CAA  48                 	db	72
  2768  007CAB  31                 	db	49
  2769  007CAC  A9                 	db	169
  2770  007CAD  88                 	db	136
  2771  007CAE  09                 	db	9
  2772  007CAF  20                 	db	32
  2773  007CB0  59                 	db	89
  2774  007CB1  70                 	db	112
  2775  007CB2  AB                 	db	171
  2776  007CB3  11                 	db	17
  2777  007CB4  38                 	db	56
  2778  007CB5  40                 	db	64
  2779  007CB6  69                 	db	105
  2780  007CB7  A8                 	db	168
  2781  007CB8  19                 	db	25
  2782  007CB9  31                 	db	49
  2783  007CBA  48                 	db	72
  2784  007CBB  60                 	db	96
  2785  007CBC  8C                 	db	140
  2786  007CBD  A8                 	db	168
  2787  007CBE  3C                 	db	60
  2788  007CBF  41                 	db	65
  2789  007CC0  5C                 	db	92
  2790  007CC1  20                 	db	32
  2791  007CC2  7C                 	db	124
  2792  007CC3  00                 	db	0
  2793  007CC4  F1                 	db	241
  2794  007CC5  87                 	db	135
  2795  007CC6  98                 	db	152
  2796  007CC7  19                 	db	25
  2797  007CC8  86                 	db	134
  2798  007CC9  A8                 	db	168
  2799  007CCA  6E                 	db	110
  2800  007CCB  76                 	db	118
  2801  007CCC  7E                 	db	126
  2802  007CCD  A9                 	db	169
  2803  007CCE  99                 	db	153
  2804  007CCF  88                 	db	136
  2805  007CD0  2D                 	db	45
  2806  007CD1  55                 	db	85
  2807  007CD2  7D                 	db	125
  2808  007CD3  D8                 	db	216
  2809  007CD4  B1                 	db	177
  2810  007CD5  B5                 	db	181
  2811  007CD6  B9                 	db	185
  2812  007CD7  A3                 	db	163
  2813  007CD8  DF                 	db	223
  2814  007CD9  DF                 	db	223
  2815  007CDA  DF                 	db	223
  2816  007CDB  AE                 	db	174
  2817  007CDC  D0                 	db	208
  2818  007CDD  DF                 	db	223
  2819  007CDE  AA                 	db	170
  2820  007CDF  D0                 	db	208
  2821  007CE0  DE                 	db	222
  2822  007CE1  F2                 	db	242
  2823  007CE2  AB                 	db	171
  2824  007CE3  F8                 	db	248
  2825  007CE4  F9                 	db	249
  2826  007CE5  D9                 	db	217
  2827  007CE6  B0                 	db	176
  2828  007CE7  87                 	db	135
  2829  007CE8  C4                 	db	196
  2830  007CE9  AA                 	db	170
  2831  007CEA  F1                 	db	241
  2832  007CEB  DF                 	db	223
  2833  007CEC  DF                 	db	223
  2834  007CED  BB                 	db	187
  2835  007CEE  AF                 	db	175
  2836  007CEF  DF                 	db	223
  2837  007CF0  DF                 	db	223
  2838  007CF1  B9                 	db	185
  2839  007CF2  D8                 	db	216
  2840  007CF3  B1                 	db	177
  2841  007CF4  F1                 	db	241
  2842  007CF5  A3                 	db	163
  2843  007CF6  97                 	db	151
  2844  007CF7  8E                 	db	142
  2845  007CF8  60                 	db	96
  2846  007CF9  DF                 	db	223
  2847  007CFA  B0                 	db	176
  2848  007CFB  84                 	db	132
  2849  007CFC  F2                 	db	242
  2850  007CFD  C8                 	db	200
  2851  007CFE  F8                 	db	248
  2852  007CFF  F9                 	db	249
  2853  007D00  D9                 	db	217
  2854  007D01  DE                 	db	222
  2855  007D02  D8                 	db	216
  2856  007D03  93                 	db	147
  2857  007D04  85                 	db	133
  2858  007D05  F1                 	db	241
  2859  007D06  4A                 	db	74
  2860  007D07  B1                 	db	177
  2861  007D08  83                 	db	131
  2862  007D09  A3                 	db	163
  2863  007D0A  08                 	db	8
  2864  007D0B  B5                 	db	181
  2865  007D0C  83                 	db	131
  2866  007D0D  9A                 	db	154
  2867  007D0E  08                 	db	8
  2868  007D0F  10                 	db	16
  2869  007D10  B7                 	db	183
  2870  007D11  9F                 	db	159
  2871  007D12  10                 	db	16
  2872  007D13  D8                 	db	216
  2873  007D14  F1                 	db	241
  2874  007D15  B0                 	db	176
  2875  007D16  BA                 	db	186
  2876  007D17  AE                 	db	174
  2877  007D18  B0                 	db	176
  2878  007D19  8A                 	db	138
  2879  007D1A  C2                 	db	194
  2880  007D1B  B2                 	db	178
  2881  007D1C  B6                 	db	182
  2882  007D1D  8E                 	db	142
  2883  007D1E  9E                 	db	158
  2884  007D1F  F1                 	db	241
  2885  007D20  FB                 	db	251
  2886  007D21  D9                 	db	217
  2887  007D22  F4                 	db	244
  2888  007D23  1D                 	db	29
  2889  007D24  D8                 	db	216
  2890  007D25  F9                 	db	249
  2891  007D26  D9                 	db	217
  2892  007D27  0C                 	db	12
  2893  007D28  F1                 	db	241
  2894  007D29  D8                 	db	216
  2895  007D2A  F8                 	db	248
  2896  007D2B  F8                 	db	248
  2897  007D2C  AD                 	db	173
  2898  007D2D  61                 	db	97
  2899  007D2E  D9                 	db	217
  2900  007D2F  AE                 	db	174
  2901  007D30  FB                 	db	251
  2902  007D31  D8                 	db	216
  2903  007D32  F4                 	db	244
  2904  007D33  0C                 	db	12
  2905  007D34  F1                 	db	241
  2906  007D35  D8                 	db	216
  2907  007D36  F8                 	db	248
  2908  007D37  F8                 	db	248
  2909  007D38  AD                 	db	173
  2910  007D39  19                 	db	25
  2911  007D3A  D9                 	db	217
  2912  007D3B  AE                 	db	174
  2913  007D3C  FB                 	db	251
  2914  007D3D  DF                 	db	223
  2915  007D3E  D8                 	db	216
  2916  007D3F  F4                 	db	244
  2917  007D40  16                 	db	22
  2918  007D41  F1                 	db	241
  2919  007D42  D8                 	db	216
  2920  007D43  F8                 	db	248
  2921  007D44  AD                 	db	173
  2922  007D45  8D                 	db	141
  2923  007D46  61                 	db	97
  2924  007D47  D9                 	db	217
  2925  007D48  F4                 	db	244
  2926  007D49  F4                 	db	244
  2927  007D4A  AC                 	db	172
  2928  007D4B  F5                 	db	245
  2929  007D4C  9C                 	db	156
  2930  007D4D  9C                 	db	156
  2931  007D4E  8D                 	db	141
  2932  007D4F  DF                 	db	223
  2933  007D50  2B                 	db	43
  2934  007D51  BA                 	db	186
  2935  007D52  B6                 	db	182
  2936  007D53  AE                 	db	174
  2937  007D54  FA                 	db	250
  2938  007D55  F8                 	db	248
  2939  007D56  F4                 	db	244
  2940  007D57  0B                 	db	11
  2941  007D58  D8                 	db	216
  2942  007D59  F1                 	db	241
  2943  007D5A  AE                 	db	174
  2944  007D5B  D0                 	db	208
  2945  007D5C  F8                 	db	248
  2946  007D5D  AD                 	db	173
  2947  007D5E  51                 	db	81
  2948  007D5F  DA                 	db	218
  2949  007D60  AE                 	db	174
  2950  007D61  FA                 	db	250
  2951  007D62  F8                 	db	248
  2952  007D63  F1                 	db	241
  2953  007D64  D8                 	db	216
  2954  007D65  B9                 	db	185
  2955  007D66  B1                 	db	177
  2956  007D67  B6                 	db	182
  2957  007D68  A3                 	db	163
  2958  007D69  83                 	db	131
  2959  007D6A  9C                 	db	156
  2960  007D6B  08                 	db	8
  2961  007D6C  B9                 	db	185
  2962  007D6D  B1                 	db	177
  2963  007D6E  83                 	db	131
  2964  007D6F  9A                 	db	154
  2965  007D70  B5                 	db	181
  2966  007D71  AA                 	db	170
  2967  007D72  C0                 	db	192
  2968  007D73  FD                 	db	253
  2969  007D74  30                 	db	48
  2970  007D75  83                 	db	131
  2971  007D76  B7                 	db	183
  2972  007D77  9F                 	db	159
  2973  007D78  10                 	db	16
  2974  007D79  B5                 	db	181
  2975  007D7A  8B                 	db	139
  2976  007D7B  93                 	db	147
  2977  007D7C  F2                 	db	242
  2978  007D7D  02                 	db	2
  2979  007D7E  02                 	db	2
  2980  007D7F  D1                 	db	209
  2981  007D80  AB                 	db	171
  2982  007D81  DA                 	db	218
  2983  007D82  DE                 	db	222
  2984  007D83  D8                 	db	216
  2985  007D84  F1                 	db	241
  2986  007D85  B0                 	db	176
  2987  007D86  80                 	db	128
  2988  007D87  BA                 	db	186
  2989  007D88  AB                 	db	171
  2990  007D89  C0                 	db	192
  2991  007D8A  C3                 	db	195
  2992  007D8B  B2                 	db	178
  2993  007D8C  84                 	db	132
  2994  007D8D  C1                 	db	193
  2995  007D8E  C3                 	db	195
  2996  007D8F  D8                 	db	216
  2997  007D90  B1                 	db	177
  2998  007D91  B9                 	db	185
  2999  007D92  F3                 	db	243
  3000  007D93  8B                 	db	139
  3001  007D94  A3                 	db	163
  3002  007D95  91                 	db	145
  3003  007D96  B6                 	db	182
  3004  007D97  09                 	db	9
  3005  007D98  B4                 	db	180
  3006  007D99  D9                 	db	217
  3007  007D9A  AB                 	db	171
  3008  007D9B  DE                 	db	222
  3009  007D9C  B0                 	db	176
  3010  007D9D  87                 	db	135
  3011  007D9E  9C                 	db	156
  3012  007D9F  B9                 	db	185
  3013  007DA0  A3                 	db	163
  3014  007DA1  DD                 	db	221
  3015  007DA2  F1                 	db	241
  3016  007DA3  B3                 	db	179
  3017  007DA4  8B                 	db	139
  3018  007DA5  8B                 	db	139
  3019  007DA6  8B                 	db	139
  3020  007DA7  8B                 	db	139
  3021  007DA8  8B                 	db	139
  3022  007DA9  B0                 	db	176
  3023  007DAA  87                 	db	135
  3024  007DAB  20                 	db	32
  3025  007DAC  28                 	db	40
  3026  007DAD  30                 	db	48
  3027  007DAE  38                 	db	56
  3028  007DAF  B2                 	db	178
  3029  007DB0  8B                 	db	139
  3030  007DB1  B6                 	db	182
  3031  007DB2  9B                 	db	155
  3032  007DB3  F2                 	db	242
  3033  007DB4  A3                 	db	163
  3034  007DB5  C0                 	db	192
  3035  007DB6  C8                 	db	200
  3036  007DB7  C2                 	db	194
  3037  007DB8  C4                 	db	196
  3038  007DB9  CC                 	db	204
  3039  007DBA  C6                 	db	198
  3040  007DBB  A3                 	db	163
  3041  007DBC  A3                 	db	163
  3042  007DBD  A3                 	db	163
  3043  007DBE  F1                 	db	241
  3044  007DBF  B0                 	db	176
  3045  007DC0  87                 	db	135
  3046  007DC1  B5                 	db	181
  3047  007DC2  9A                 	db	154
  3048  007DC3  D8                 	db	216
  3049  007DC4  F3                 	db	243
  3050  007DC5  9B                 	db	155
  3051  007DC6  A3                 	db	163
  3052  007DC7  A3                 	db	163
  3053  007DC8  DC                 	db	220
  3054  007DC9  BA                 	db	186
  3055  007DCA  AC                 	db	172
  3056  007DCB  DF                 	db	223
  3057  007DCC  B9                 	db	185
  3058  007DCD  A3                 	db	163
  3059  007DCE  FE                 	db	254
  3060  007DCF  F2                 	db	242
  3061  007DD0  AB                 	db	171
  3062  007DD1  C4                 	db	196
  3063  007DD2  AA                 	db	170
  3064  007DD3  F1                 	db	241
  3065  007DD4  DF                 	db	223
  3066  007DD5  DF                 	db	223
  3067  007DD6  BB                 	db	187
  3068  007DD7  AF                 	db	175
  3069  007DD8  DF                 	db	223
  3070  007DD9  DF                 	db	223
  3071  007DDA  A3                 	db	163
  3072  007DDB  A3                 	db	163
  3073  007DDC  A3                 	db	163
  3074  007DDD  D8                 	db	216
  3075  007DDE  D8                 	db	216
  3076  007DDF  D8                 	db	216
  3077  007DE0  BB                 	db	187
  3078  007DE1  B3                 	db	179
  3079  007DE2  B7                 	db	183
  3080  007DE3  F1                 	db	241
  3081  007DE4  AA                 	db	170
  3082  007DE5  F9                 	db	249
  3083  007DE6  DA                 	db	218
  3084  007DE7  FF                 	db	255
  3085  007DE8  D9                 	db	217
  3086  007DE9  80                 	db	128
  3087  007DEA  9A                 	db	154
  3088  007DEB  AA                 	db	170
  3089  007DEC  28                 	db	40
  3090  007DED  B4                 	db	180
  3091  007DEE  80                 	db	128
  3092  007DEF  98                 	db	152
  3093  007DF0  A7                 	db	167
  3094  007DF1  20                 	db	32
  3095  007DF2  B7                 	db	183
  3096  007DF3  97                 	db	151
  3097  007DF4  87                 	db	135
  3098  007DF5  A8                 	db	168
  3099  007DF6  66                 	db	102
  3100  007DF7  88                 	db	136
  3101  007DF8  F0                 	db	240
  3102  007DF9  79                 	db	121
  3103  007DFA  51                 	db	81
  3104  007DFB  F1                 	db	241
  3105  007DFC  90                 	db	144
  3106  007DFD  2C                 	db	44
  3107  007DFE  87                 	db	135
  3108  007DFF  0C                 	db	12
  3109  007E00  A7                 	db	167
  3110  007E01  81                 	db	129
  3111  007E02  97                 	db	151
  3112  007E03  62                 	db	98
  3113  007E04  93                 	db	147
  3114  007E05  F0                 	db	240
  3115  007E06  71                 	db	113
  3116  007E07  71                 	db	113
  3117  007E08  60                 	db	96
  3118  007E09  85                 	db	133
  3119  007E0A  94                 	db	148
  3120  007E0B  01                 	db	1
  3121  007E0C  29                 	db	41
  3122  007E0D  51                 	db	81
  3123  007E0E  79                 	db	121
  3124  007E0F  90                 	db	144
  3125  007E10  A5                 	db	165
  3126  007E11  F1                 	db	241
  3127  007E12  28                 	db	40
  3128  007E13  4C                 	db	76
  3129  007E14  6C                 	db	108
  3130  007E15  87                 	db	135
  3131  007E16  0C                 	db	12
  3132  007E17  95                 	db	149
  3133  007E18  18                 	db	24
  3134  007E19  85                 	db	133
  3135  007E1A  78                 	db	120
  3136  007E1B  A3                 	db	163
  3137  007E1C  83                 	db	131
  3138  007E1D  90                 	db	144
  3139  007E1E  28                 	db	40
  3140  007E1F  4C                 	db	76
  3141  007E20  6C                 	db	108
  3142  007E21  88                 	db	136
  3143  007E22  6C                 	db	108
  3144  007E23  D8                 	db	216
  3145  007E24  F3                 	db	243
  3146  007E25  A2                 	db	162
  3147  007E26  82                 	db	130
  3148  007E27  00                 	db	0
  3149  007E28  F2                 	db	242
  3150  007E29  10                 	db	16
  3151  007E2A  A8                 	db	168
  3152  007E2B  92                 	db	146
  3153  007E2C  19                 	db	25
  3154  007E2D  80                 	db	128
  3155  007E2E  A2                 	db	162
  3156  007E2F  F2                 	db	242
  3157  007E30  D9                 	db	217
  3158  007E31  26                 	db	38
  3159  007E32  D8                 	db	216
  3160  007E33  F1                 	db	241
  3161  007E34  88                 	db	136
  3162  007E35  A8                 	db	168
  3163  007E36  4D                 	db	77
  3164  007E37  D9                 	db	217
  3165  007E38  48                 	db	72
  3166  007E39  D8                 	db	216
  3167  007E3A  96                 	db	150
  3168  007E3B  A8                 	db	168
  3169  007E3C  39                 	db	57
  3170  007E3D  80                 	db	128
  3171  007E3E  D9                 	db	217
  3172  007E3F  3C                 	db	60
  3173  007E40  D8                 	db	216
  3174  007E41  95                 	db	149
  3175  007E42  80                 	db	128
  3176  007E43  A8                 	db	168
  3177  007E44  39                 	db	57
  3178  007E45  A6                 	db	166
  3179  007E46  86                 	db	134
  3180  007E47  98                 	db	152
  3181  007E48  D9                 	db	217
  3182  007E49  2C                 	db	44
  3183  007E4A  DA                 	db	218
  3184  007E4B  87                 	db	135
  3185  007E4C  A7                 	db	167
  3186  007E4D  2C                 	db	44
  3187  007E4E  D8                 	db	216
  3188  007E4F  A8                 	db	168
  3189  007E50  89                 	db	137
  3190  007E51  95                 	db	149
  3191  007E52  19                 	db	25
  3192  007E53  A9                 	db	169
  3193  007E54  80                 	db	128
  3194  007E55  D9                 	db	217
  3195  007E56  38                 	db	56
  3196  007E57  D8                 	db	216
  3197  007E58  A8                 	db	168
  3198  007E59  89                 	db	137
  3199  007E5A  39                 	db	57
  3200  007E5B  A9                 	db	169
  3201  007E5C  80                 	db	128
  3202  007E5D  DA                 	db	218
  3203  007E5E  3C                 	db	60
  3204  007E5F  D8                 	db	216
  3205  007E60  A8                 	db	168
  3206  007E61  2E                 	db	46
  3207  007E62  A8                 	db	168
  3208  007E63  39                 	db	57
  3209  007E64  90                 	db	144
  3210  007E65  D9                 	db	217
  3211  007E66  0C                 	db	12
  3212  007E67  D8                 	db	216
  3213  007E68  A8                 	db	168
  3214  007E69  95                 	db	149
  3215  007E6A  31                 	db	49
  3216  007E6B  98                 	db	152
  3217  007E6C  D9                 	db	217
  3218  007E6D  0C                 	db	12
  3219  007E6E  D8                 	db	216
  3220  007E6F  A8                 	db	168
  3221  007E70  09                 	db	9
  3222  007E71  D9                 	db	217
  3223  007E72  FF                 	db	255
  3224  007E73  D8                 	db	216
  3225  007E74  01                 	db	1
  3226  007E75  DA                 	db	218
  3227  007E76  FF                 	db	255
  3228  007E77  D8                 	db	216
  3229  007E78  95                 	db	149
  3230  007E79  39                 	db	57
  3231  007E7A  A9                 	db	169
  3232  007E7B  DA                 	db	218
  3233  007E7C  26                 	db	38
  3234  007E7D  FF                 	db	255
  3235  007E7E  D8                 	db	216
  3236  007E7F  90                 	db	144
  3237  007E80  A8                 	db	168
  3238  007E81  0D                 	db	13
  3239  007E82  89                 	db	137
  3240  007E83  99                 	db	153
  3241  007E84  A8                 	db	168
  3242  007E85  10                 	db	16
  3243  007E86  80                 	db	128
  3244  007E87  98                 	db	152
  3245  007E88  21                 	db	33
  3246  007E89  DA                 	db	218
  3247  007E8A  2E                 	db	46
  3248  007E8B  D8                 	db	216
  3249  007E8C  89                 	db	137
  3250  007E8D  99                 	db	153
  3251  007E8E  A8                 	db	168
  3252  007E8F  31                 	db	49
  3253  007E90  80                 	db	128
  3254  007E91  DA                 	db	218
  3255  007E92  2E                 	db	46
  3256  007E93  D8                 	db	216
  3257  007E94  A8                 	db	168
  3258  007E95  86                 	db	134
  3259  007E96  96                 	db	150
  3260  007E97  31                 	db	49
  3261  007E98  80                 	db	128
  3262  007E99  DA                 	db	218
  3263  007E9A  2E                 	db	46
  3264  007E9B  D8                 	db	216
  3265  007E9C  A8                 	db	168
  3266  007E9D  87                 	db	135
  3267  007E9E  31                 	db	49
  3268  007E9F  80                 	db	128
  3269  007EA0  DA                 	db	218
  3270  007EA1  2E                 	db	46
  3271  007EA2  D8                 	db	216
  3272  007EA3  A8                 	db	168
  3273  007EA4  82                 	db	130
  3274  007EA5  92                 	db	146
  3275  007EA6  F3                 	db	243
  3276  007EA7  41                 	db	65
  3277  007EA8  80                 	db	128
  3278  007EA9  F1                 	db	241
  3279  007EAA  D9                 	db	217
  3280  007EAB  2E                 	db	46
  3281  007EAC  D8                 	db	216
  3282  007EAD  A8                 	db	168
  3283  007EAE  82                 	db	130
  3284  007EAF  F3                 	db	243
  3285  007EB0  19                 	db	25
  3286  007EB1  80                 	db	128
  3287  007EB2  F1                 	db	241
  3288  007EB3  D9                 	db	217
  3289  007EB4  2E                 	db	46
  3290  007EB5  D8                 	db	216
  3291  007EB6  82                 	db	130
  3292  007EB7  AC                 	db	172
  3293  007EB8  F3                 	db	243
  3294  007EB9  C0                 	db	192
  3295  007EBA  A2                 	db	162
  3296  007EBB  80                 	db	128
  3297  007EBC  22                 	db	34
  3298  007EBD  F1                 	db	241
  3299  007EBE  A6                 	db	166
  3300  007EBF  2E                 	db	46
  3301  007EC0  A7                 	db	167
  3302  007EC1  2E                 	db	46
  3303  007EC2  A9                 	db	169
  3304  007EC3  22                 	db	34
  3305  007EC4  98                 	db	152
  3306  007EC5  A8                 	db	168
  3307  007EC6  29                 	db	41
  3308  007EC7  DA                 	db	218
  3309  007EC8  AC                 	db	172
  3310  007EC9  DE                 	db	222
  3311  007ECA  FF                 	db	255
  3312  007ECB  D8                 	db	216
  3313  007ECC  A2                 	db	162
  3314  007ECD  F2                 	db	242
  3315  007ECE  2A                 	db	42
  3316  007ECF  F1                 	db	241
  3317  007ED0  A9                 	db	169
  3318  007ED1  2E                 	db	46
  3319  007ED2  82                 	db	130
  3320  007ED3  92                 	db	146
  3321  007ED4  A8                 	db	168
  3322  007ED5  F2                 	db	242
  3323  007ED6  31                 	db	49
  3324  007ED7  80                 	db	128
  3325  007ED8  A6                 	db	166
  3326  007ED9  96                 	db	150
  3327  007EDA  F1                 	db	241
  3328  007EDB  D9                 	db	217
  3329  007EDC  00                 	db	0
  3330  007EDD  AC                 	db	172
  3331  007EDE  8C                 	db	140
  3332  007EDF  9C                 	db	156
  3333  007EE0  0C                 	db	12
  3334  007EE1  30                 	db	48
  3335  007EE2  AC                 	db	172
  3336  007EE3  DE                 	db	222
  3337  007EE4  D0                 	db	208
  3338  007EE5  DE                 	db	222
  3339  007EE6  FF                 	db	255
  3340  007EE7  D8                 	db	216
  3341  007EE8  8C                 	db	140
  3342  007EE9  9C                 	db	156
  3343  007EEA  AC                 	db	172
  3344  007EEB  D0                 	db	208
  3345  007EEC  10                 	db	16
  3346  007EED  AC                 	db	172
  3347  007EEE  DE                 	db	222
  3348  007EEF  80                 	db	128
  3349  007EF0  92                 	db	146
  3350  007EF1  A2                 	db	162
  3351  007EF2  F2                 	db	242
  3352  007EF3  4C                 	db	76
  3353  007EF4  82                 	db	130
  3354  007EF5  A8                 	db	168
  3355  007EF6  F1                 	db	241
  3356  007EF7  CA                 	db	202
  3357  007EF8  F2                 	db	242
  3358  007EF9  35                 	db	53
  3359  007EFA  F1                 	db	241
  3360  007EFB  96                 	db	150
  3361  007EFC  88                 	db	136
  3362  007EFD  A6                 	db	166
  3363  007EFE  D9                 	db	217
  3364  007EFF  00                 	db	0
  3365  007F00  D8                 	db	216
  3366  007F01  F1                 	db	241
  3367  007F02  FF                 	db	255
  3368  007F03                     __end_of_dmpMemory:
  3369                           	callstack 0
  3370  007F03  6C00               	dw	27648
  3371  007F05  02DC               	dw	732
  3372  007F07                     __end_of__X_FREQ:
  3373                           	callstack 0
  3374  0000                     _LATBbits	set	3978
  3375  0000                     _T1CONbits	set	4045
  3376  0000                     _T2CONbits	set	4042
  3377  0000                     _T2CON	set	4042
  3378  0000                     _PR2	set	4043
  3379  0000                     _INTCONbits	set	4082
  3380  0000                     _RCONbits	set	4048
  3381  0000                     _INTCON2bits	set	4081
  3382  0000                     _PIE1bits	set	3997
  3383  0000                     _CCPR2L	set	4027
  3384  0000                     _CCPR1L	set	4030
  3385  0000                     _CCP2CONbits	set	4026
  3386  0000                     _CCP1CONbits	set	4029
  3387  0000                     _TRISC	set	3988
  3388  0000                     _ADCON1	set	4033
  3389  0000                     _INTCON3bits	set	4080
  3390  0000                     _RCREG	set	4014
  3391  0000                     _TXREG	set	4013
  3392  0000                     _RCSTAbits	set	4011
  3393  0000                     _TRISCbits	set	3988
  3394  0000                     _SPBRG	set	4015
  3395  0000                     _TXSTAbits	set	4012
  3396  0000                     _SSPSTATbits	set	4039
  3397  0000                     _SSPBUF	set	4041
  3398  0000                     _SSPCON2bits	set	4037
  3399  0000                     _PIR1bits	set	3998
  3400  0000                     _PIR2bits	set	4001
  3401  0000                     _SSPCON1bits	set	4038
  3402  0000                     _SSPSTAT	set	4039
  3403  0000                     _SSPCON2	set	4037
  3404  0000                     _SSPCON1	set	4038
  3405  0000                     _SSPADD	set	4040
  3406  0000                     _TRISBbits	set	3987
  3407  0000                     _OERR	set	32089
  3408  0000                     _RCIF	set	31989
  3409  0000                     _TXIF	set	31988
  3410  0000                     _TXEN	set	32101
  3411  0000                     _CREN	set	32092
  3412  007F07                     STR_2:
  3413  007F07  54                 	db	84	;'T'
  3414  007F08  65                 	db	101	;'e'
  3415  007F09  73                 	db	115	;'s'
  3416  007F0A  74                 	db	116	;'t'
  3417  007F0B  69                 	db	105	;'i'
  3418  007F0C  6E                 	db	110	;'n'
  3419  007F0D  67                 	db	103	;'g'
  3420  007F0E  20                 	db	32
  3421  007F0F  64                 	db	100	;'d'
  3422  007F10  65                 	db	101	;'e'
  3423  007F11  76                 	db	118	;'v'
  3424  007F12  69                 	db	105	;'i'
  3425  007F13  63                 	db	99	;'c'
  3426  007F14  65                 	db	101	;'e'
  3427  007F15  20                 	db	32
  3428  007F16  63                 	db	99	;'c'
  3429  007F17  6F                 	db	111	;'o'
  3430  007F18  6E                 	db	110	;'n'
  3431  007F19  6E                 	db	110	;'n'
  3432  007F1A  65                 	db	101	;'e'
  3433  007F1B  63                 	db	99	;'c'
  3434  007F1C  74                 	db	116	;'t'
  3435  007F1D  69                 	db	105	;'i'
  3436  007F1E  6F                 	db	111	;'o'
  3437  007F1F  6E                 	db	110	;'n'
  3438  007F20  73                 	db	115	;'s'
  3439  007F21  2E                 	db	46
  3440  007F22  2E                 	db	46
  3441  007F23  2E                 	db	46
  3442  007F24  0A                 	db	10
  3443  007F25  00                 	db	0
  3444  007F26                     STR_3:
  3445  007F26  4D                 	db	77	;'M'
  3446  007F27  50                 	db	80	;'P'
  3447  007F28  55                 	db	85	;'U'
  3448  007F29  36                 	db	54	;'6'
  3449  007F2A  30                 	db	48	;'0'
  3450  007F2B  35                 	db	53	;'5'
  3451  007F2C  30                 	db	48	;'0'
  3452  007F2D  20                 	db	32
  3453  007F2E  63                 	db	99	;'c'
  3454  007F2F  6F                 	db	111	;'o'
  3455  007F30  6E                 	db	110	;'n'
  3456  007F31  6E                 	db	110	;'n'
  3457  007F32  65                 	db	101	;'e'
  3458  007F33  63                 	db	99	;'c'
  3459  007F34  74                 	db	116	;'t'
  3460  007F35  69                 	db	105	;'i'
  3461  007F36  6F                 	db	111	;'o'
  3462  007F37  6E                 	db	110	;'n'
  3463  007F38  20                 	db	32
  3464  007F39  73                 	db	115	;'s'
  3465  007F3A  75                 	db	117	;'u'
  3466  007F3B  63                 	db	99	;'c'
  3467  007F3C  63                 	db	99	;'c'
  3468  007F3D  65                 	db	101	;'e'
  3469  007F3E  73                 	db	115	;'s'
  3470  007F3F  73                 	db	115	;'s'
  3471  007F40  66                 	db	102	;'f'
  3472  007F41  75                 	db	117	;'u'
  3473  007F42  6C                 	db	108	;'l'
  3474  007F43  0A                 	db	10
  3475  007F44  00                 	db	0
  3476  007F45                     STR_1:
  3477  007F45  49                 	db	73	;'I'
  3478  007F46  6E                 	db	110	;'n'
  3479  007F47  69                 	db	105	;'i'
  3480  007F48  74                 	db	116	;'t'
  3481  007F49  69                 	db	105	;'i'
  3482  007F4A  61                 	db	97	;'a'
  3483  007F4B  6C                 	db	108	;'l'
  3484  007F4C  69                 	db	105	;'i'
  3485  007F4D  7A                 	db	122	;'z'
  3486  007F4E  69                 	db	105	;'i'
  3487  007F4F  6E                 	db	110	;'n'
  3488  007F50  67                 	db	103	;'g'
  3489  007F51  20                 	db	32
  3490  007F52  49                 	db	73	;'I'
  3491  007F53  32                 	db	50	;'2'
  3492  007F54  43                 	db	67	;'C'
  3493  007F55  20                 	db	32
  3494  007F56  64                 	db	100	;'d'
  3495  007F57  65                 	db	101	;'e'
  3496  007F58  76                 	db	118	;'v'
  3497  007F59  69                 	db	105	;'i'
  3498  007F5A  63                 	db	99	;'c'
  3499  007F5B  65                 	db	101	;'e'
  3500  007F5C  73                 	db	115	;'s'
  3501  007F5D  2E                 	db	46
  3502  007F5E  2E                 	db	46
  3503  007F5F  2E                 	db	46
  3504  007F60  0A                 	db	10
  3505  007F61  00                 	db	0
  3506  007F62                     STR_4:
  3507  007F62  4D                 	db	77	;'M'
  3508  007F63  50                 	db	80	;'P'
  3509  007F64  55                 	db	85	;'U'
  3510  007F65  36                 	db	54	;'6'
  3511  007F66  30                 	db	48	;'0'
  3512  007F67  35                 	db	53	;'5'
  3513  007F68  30                 	db	48	;'0'
  3514  007F69  20                 	db	32
  3515  007F6A  63                 	db	99	;'c'
  3516  007F6B  6F                 	db	111	;'o'
  3517  007F6C  6E                 	db	110	;'n'
  3518  007F6D  6E                 	db	110	;'n'
  3519  007F6E  65                 	db	101	;'e'
  3520  007F6F  63                 	db	99	;'c'
  3521  007F70  74                 	db	116	;'t'
  3522  007F71  69                 	db	105	;'i'
  3523  007F72  6F                 	db	111	;'o'
  3524  007F73  6E                 	db	110	;'n'
  3525  007F74  20                 	db	32
  3526  007F75  66                 	db	102	;'f'
  3527  007F76  61                 	db	97	;'a'
  3528  007F77  69                 	db	105	;'i'
  3529  007F78  6C                 	db	108	;'l'
  3530  007F79  65                 	db	101	;'e'
  3531  007F7A  64                 	db	100	;'d'
  3532  007F7B  0A                 	db	10
  3533  007F7C  00                 	db	0
  3534  007F7D                     STR_6:
  3535  007F7D  49                 	db	73	;'I'
  3536  007F7E  6E                 	db	110	;'n'
  3537  007F7F  69                 	db	105	;'i'
  3538  007F80  74                 	db	116	;'t'
  3539  007F81  69                 	db	105	;'i'
  3540  007F82  61                 	db	97	;'a'
  3541  007F83  6C                 	db	108	;'l'
  3542  007F84  69                 	db	105	;'i'
  3543  007F85  7A                 	db	122	;'z'
  3544  007F86  61                 	db	97	;'a'
  3545  007F87  74                 	db	116	;'t'
  3546  007F88  69                 	db	105	;'i'
  3547  007F89  6F                 	db	111	;'o'
  3548  007F8A  6E                 	db	110	;'n'
  3549  007F8B  20                 	db	32
  3550  007F8C  53                 	db	83	;'S'
  3551  007F8D  75                 	db	117	;'u'
  3552  007F8E  63                 	db	99	;'c'
  3553  007F8F  65                 	db	101	;'e'
  3554  007F90  73                 	db	115	;'s'
  3555  007F91  73                 	db	115	;'s'
  3556  007F92  66                 	db	102	;'f'
  3557  007F93  75                 	db	117	;'u'
  3558  007F94  6C                 	db	108	;'l'
  3559  007F95  6C                 	db	108	;'l'
  3560  007F96  0A                 	db	10
  3561  007F97  00                 	db	0
  3562  007F98                     STR_7:
  3563  007F98  49                 	db	73	;'I'
  3564  007F99  6E                 	db	110	;'n'
  3565  007F9A  69                 	db	105	;'i'
  3566  007F9B  74                 	db	116	;'t'
  3567  007F9C  69                 	db	105	;'i'
  3568  007F9D  61                 	db	97	;'a'
  3569  007F9E  6C                 	db	108	;'l'
  3570  007F9F  69                 	db	105	;'i'
  3571  007FA0  7A                 	db	122	;'z'
  3572  007FA1  61                 	db	97	;'a'
  3573  007FA2  74                 	db	116	;'t'
  3574  007FA3  69                 	db	105	;'i'
  3575  007FA4  6F                 	db	111	;'o'
  3576  007FA5  6E                 	db	110	;'n'
  3577  007FA6  20                 	db	32
  3578  007FA7  46                 	db	70	;'F'
  3579  007FA8  61                 	db	97	;'a'
  3580  007FA9  69                 	db	105	;'i'
  3581  007FAA  6C                 	db	108	;'l'
  3582  007FAB  65                 	db	101	;'e'
  3583  007FAC  64                 	db	100	;'d'
  3584  007FAD  0A                 	db	10
  3585  007FAE  00                 	db	0
  3586  007FAF                     STR_9:
  3587  007FAF  6B                 	db	107	;'k'
  3588  007FB0  50                 	db	80	;'P'
  3589  007FB1  3A                 	db	58	;':'
  3590  007FB2  20                 	db	32
  3591  007FB3  25                 	db	37
  3592  007FB4  66                 	db	102	;'f'
  3593  007FB5  2C                 	db	44
  3594  007FB6  20                 	db	32
  3595  007FB7  6B                 	db	107	;'k'
  3596  007FB8  49                 	db	73	;'I'
  3597  007FB9  3A                 	db	58	;':'
  3598  007FBA  25                 	db	37
  3599  007FBB  66                 	db	102	;'f'
  3600  007FBC  2C                 	db	44
  3601  007FBD  20                 	db	32
  3602  007FBE  6B                 	db	107	;'k'
  3603  007FBF  44                 	db	68	;'D'
  3604  007FC0  3A                 	db	58	;':'
  3605  007FC1  25                 	db	37
  3606  007FC2  66                 	db	102	;'f'
  3607  007FC3  0A                 	db	10
  3608  007FC4  00                 	db	0
  3609  007FC5                     STR_5:
  3610  007FC5  49                 	db	73	;'I'
  3611  007FC6  6E                 	db	110	;'n'
  3612  007FC7  69                 	db	105	;'i'
  3613  007FC8  74                 	db	116	;'t'
  3614  007FC9  69                 	db	105	;'i'
  3615  007FCA  61                 	db	97	;'a'
  3616  007FCB  6C                 	db	108	;'l'
  3617  007FCC  69                 	db	105	;'i'
  3618  007FCD  7A                 	db	122	;'z'
  3619  007FCE  69                 	db	105	;'i'
  3620  007FCF  6E                 	db	110	;'n'
  3621  007FD0  67                 	db	103	;'g'
  3622  007FD1  20                 	db	32
  3623  007FD2  44                 	db	68	;'D'
  3624  007FD3  4D                 	db	77	;'M'
  3625  007FD4  50                 	db	80	;'P'
  3626  007FD5  2E                 	db	46
  3627  007FD6  2E                 	db	46
  3628  007FD7  2E                 	db	46
  3629  007FD8  0A                 	db	10
  3630  007FD9  00                 	db	0
  3631  007FDA                     STR_8:
  3632  007FDA  45                 	db	69	;'E'
  3633  007FDB  6E                 	db	110	;'n'
  3634  007FDC  61                 	db	97	;'a'
  3635  007FDD  62                 	db	98	;'b'
  3636  007FDE  6C                 	db	108	;'l'
  3637  007FDF  69                 	db	105	;'i'
  3638  007FE0  6E                 	db	110	;'n'
  3639  007FE1  67                 	db	103	;'g'
  3640  007FE2  20                 	db	32
  3641  007FE3  44                 	db	68	;'D'
  3642  007FE4  4D                 	db	77	;'M'
  3643  007FE5  50                 	db	80	;'P'
  3644  007FE6  2E                 	db	46
  3645  007FE7  2E                 	db	46
  3646  007FE8  2E                 	db	46
  3647  007FE9  0A                 	db	10
  3648  007FEA  00                 	db	0
  3649  007FEB                     STR_10:
  3650  007FEB  49                 	db	73	;'I'
  3651  007FEC  4E                 	db	78	;'N'
  3652  007FED  46                 	db	70	;'F'
  3653  007FEE  00                 	db	0
  3654  007FEF                     STR_14:
  3655  007FEF  4E                 	db	78	;'N'
  3656  007FF0  41                 	db	65	;'A'
  3657  007FF1  4E                 	db	78	;'N'
  3658  007FF2  00                 	db	0
  3659  007FF3                     STR_11:
  3660  007FF3  69                 	db	105	;'i'
  3661  007FF4  6E                 	db	110	;'n'
  3662  007FF5  66                 	db	102	;'f'
  3663  007FF6  00                 	db	0
  3664  007FF7                     STR_15:
  3665  007FF7  6E                 	db	110	;'n'
  3666  007FF8  61                 	db	97	;'a'
  3667  007FF9  6E                 	db	110	;'n'
  3668  007FFA  00                 	db	0
  3669  007FFB                     STR_18:
  3670  007FFB  6C                 	db	108	;'l'
  3671  007FFC  66                 	db	102	;'f'
  3672  007FFD  00                 	db	0
  3673  007FFE  00                 	db	0	; dummy byte at the end
  3674  0000                     
  3675                           ; #config settings
  3676                           
  3677                           	psect	cinit
  3678  005CC8                     __pcinit:
  3679                           	callstack 0
  3680  005CC8                     start_initialization:
  3681                           	callstack 0
  3682  005CC8                     __initialization:
  3683                           	callstack 0
  3684                           
  3685                           ; Initialize objects allocated to BANK2 (36 bytes)
  3686                           ; load TBLPTR registers with __pidataBANK2
  3687  005CC8  0EEA               	movlw	low __pidataBANK2
  3688  005CCA  6EF6               	movwf	tblptrl,c
  3689  005CCC  0E65               	movlw	high __pidataBANK2
  3690  005CCE  6EF7               	movwf	tblptrh,c
  3691  005CD0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  3692  005CD2  6EF8               	movwf	tblptru,c
  3693  005CD4  EE02  F0D1         	lfsr	0,__pdataBANK2
  3694  005CD8  EE10 F024          	lfsr	1,36
  3695  005CDC                     copy_data0:
  3696  005CDC  0009               	tblrd		*+
  3697  005CDE  CFF5 FFEE          	movff	tablat,postinc0
  3698  005CE2  50E5               	movf	postdec1,w,c
  3699  005CE4  50E1               	movf	fsr1l,w,c
  3700  005CE6  E1FA               	bnz	copy_data0
  3701                           
  3702                           ; Initialize objects allocated to BANK1 (16 bytes)
  3703                           ; load TBLPTR registers with __pidataBANK1
  3704  005CE8  0E68               	movlw	low __pidataBANK1
  3705  005CEA  6EF6               	movwf	tblptrl,c
  3706  005CEC  0E68               	movlw	high __pidataBANK1
  3707  005CEE  6EF7               	movwf	tblptrh,c
  3708  005CF0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3709  005CF2  6EF8               	movwf	tblptru,c
  3710  005CF4  EE01  F0EE         	lfsr	0,__pdataBANK1
  3711  005CF8  EE10 F010          	lfsr	1,16
  3712  005CFC                     copy_data1:
  3713  005CFC  0009               	tblrd		*+
  3714  005CFE  CFF5 FFEE          	movff	tablat,postinc0
  3715  005D02  50E5               	movf	postdec1,w,c
  3716  005D04  50E1               	movf	fsr1l,w,c
  3717  005D06  E1FA               	bnz	copy_data1
  3718                           
  3719                           ; Initialize objects allocated to BANK0 (1 bytes)
  3720                           ; load TBLPTR registers with __pidataBANK0
  3721  005D08  0E8C               	movlw	low __pidataBANK0
  3722  005D0A  6EF6               	movwf	tblptrl,c
  3723  005D0C  0E68               	movlw	high __pidataBANK0
  3724  005D0E  6EF7               	movwf	tblptrh,c
  3725  005D10  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3726  005D12  6EF8               	movwf	tblptru,c
  3727  005D14  0009               	tblrd		*+	;fetch initializer
  3728  005D16  CFF5 F0FC          	movff	tablat,__pdataBANK0
  3729                           
  3730                           ; Clear objects allocated to BANK3 (176 bytes)
  3731  005D1A  EE03  F000         	lfsr	0,__pbssBANK3
  3732  005D1E  0EB0               	movlw	176
  3733  005D20                     clear_0:
  3734  005D20  6AEE               	clrf	postinc0,c
  3735  005D22  06E8               	decf	wreg,f,c
  3736  005D24  E1FD               	bnz	clear_0
  3737                           
  3738                           ; Clear objects allocated to BANK2 (209 bytes)
  3739  005D26  EE02  F000         	lfsr	0,__pbssBANK2
  3740  005D2A  0ED1               	movlw	209
  3741  005D2C                     clear_1:
  3742  005D2C  6AEE               	clrf	postinc0,c
  3743  005D2E  06E8               	decf	wreg,f,c
  3744  005D30  E1FD               	bnz	clear_1
  3745                           
  3746                           ; Clear objects allocated to BANK1 (172 bytes)
  3747  005D32  EE01  F000         	lfsr	0,__pbssBANK1
  3748  005D36  0EAC               	movlw	172
  3749  005D38                     clear_2:
  3750  005D38  6AEE               	clrf	postinc0,c
  3751  005D3A  06E8               	decf	wreg,f,c
  3752  005D3C  E1FD               	bnz	clear_2
  3753                           
  3754                           ; Clear objects allocated to BANK0 (12 bytes)
  3755  005D3E  EE00  F0F0         	lfsr	0,__pbssBANK0
  3756  005D42  0E0C               	movlw	12
  3757  005D44                     clear_3:
  3758  005D44  6AEE               	clrf	postinc0,c
  3759  005D46  06E8               	decf	wreg,f,c
  3760  005D48  E1FD               	bnz	clear_3
  3761                           
  3762                           ; Clear objects allocated to COMRAM (2 bytes)
  3763  005D4A  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  3764  005D4C  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  3765  005D4E                     end_of_initialization:
  3766                           	callstack 0
  3767  005D4E                     __end_of__initialization:
  3768                           	callstack 0
  3769  005D4E  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3770  005D50  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3771  005D52  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3772  005D54  6EF8               	movwf	tblptru,c
  3773  005D56  0100               	movlb	0
  3774  005D58  EF09  F000         	goto	_main	;jump to C main() function
  3775                           
  3776                           	psect	bssCOMRAM
  3777  00005A                     __pbssCOMRAM:
  3778                           	callstack 0
  3779  00005A                     _flags:
  3780                           	callstack 0
  3781  00005A                     	ds	2
  3782                           
  3783                           	psect	bssBANK0
  3784  0000F0                     __pbssBANK0:
  3785                           	callstack 0
  3786  0000F0                     _nout:
  3787                           	callstack 0
  3788  0000F0                     	ds	2
  3789  0000F2                     _width:
  3790                           	callstack 0
  3791  0000F2                     	ds	2
  3792  0000F4                     _prec:
  3793                           	callstack 0
  3794  0000F4                     	ds	2
  3795  0000F6                     _dmpPacketSize:
  3796                           	callstack 0
  3797  0000F6                     	ds	2
  3798  0000F8                     _dmpPacketBuffer:
  3799                           	callstack 0
  3800  0000F8                     	ds	2
  3801  0000FA                     _brake:
  3802                           	callstack 0
  3803  0000FA                     	ds	1
  3804  0000FB                     _hold_pos:
  3805                           	callstack 0
  3806  0000FB                     	ds	1
  3807                           
  3808                           	psect	dataBANK0
  3809  0000FC                     __pdataBANK0:
  3810                           	callstack 0
  3811  0000FC                     _mInv:
  3812                           	callstack 0
  3813  0000FC                     	ds	1
  3814                           
  3815                           	psect	bssBANK1
  3816  000100                     __pbssBANK1:
  3817                           	callstack 0
  3818  000100                     _calcAA:
  3819                           	callstack 0
  3820  000100                     	ds	12
  3821  00010C                     _lastAA:
  3822                           	callstack 0
  3823  00010C                     	ds	12
  3824  000118                     _lastDisplacement:
  3825                           	callstack 0
  3826  000118                     	ds	12
  3827  000124                     _displacement:
  3828                           	callstack 0
  3829  000124                     	ds	12
  3830  000130                     _lastSpeed:
  3831                           	callstack 0
  3832  000130                     	ds	12
  3833  00013C                     _speed:
  3834                           	callstack 0
  3835  00013C                     	ds	12
  3836  000148                     floorf@F527:
  3837                           	callstack 0
  3838  000148                     	ds	4
  3839  00014C                     fabsf@F465:
  3840                           	callstack 0
  3841  00014C                     	ds	4
  3842  000150                     ___fpclassifyf@F465:
  3843                           	callstack 0
  3844  000150                     	ds	4
  3845  000154                     _derivada:
  3846                           	callstack 0
  3847  000154                     	ds	4
  3848  000158                     _integral:
  3849                           	callstack 0
  3850  000158                     	ds	4
  3851  00015C                     _error:
  3852                           	callstack 0
  3853  00015C                     	ds	4
  3854  000160                     _lastAngle:
  3855                           	callstack 0
  3856  000160                     	ds	4
  3857  000164                     _rollPID:
  3858                           	callstack 0
  3859  000164                     	ds	4
  3860  000168                     _dt:
  3861                           	callstack 0
  3862  000168                     	ds	4
  3863  00016C                     _self_setPoint:
  3864                           	callstack 0
  3865  00016C                     	ds	4
  3866  000170                     _setPoint:
  3867                           	callstack 0
  3868  000170                     	ds	4
  3869  000174                     _time_ms:
  3870                           	callstack 0
  3871  000174                     	ds	4
  3872  000178                     _errno:
  3873                           	callstack 0
  3874  000178                     	ds	2
  3875  00017A                     _mOffset:
  3876                           	callstack 0
  3877  00017A                     	ds	2
  3878  00017C                     _start:
  3879                           	callstack 0
  3880  00017C                     	ds	1
  3881  00017D                     _mpuInterrupt:
  3882                           	callstack 0
  3883  00017D                     	ds	1
  3884  00017E                     _direction:
  3885                           	callstack 0
  3886  00017E                     	ds	1
  3887  00017F                     _btRX:
  3888                           	callstack 0
  3889  00017F                     	ds	24
  3890  000197                     _mpu6050:
  3891                           	callstack 0
  3892  000197                     	ds	15
  3893  0001A6                     _aaReal:
  3894                           	callstack 0
  3895  0001A6                     	ds	6
  3896                           
  3897                           	psect	dataBANK1
  3898  0001EE                     __pdataBANK1:
  3899                           	callstack 0
  3900  0001EE                     _kD:
  3901                           	callstack 0
  3902  0001EE                     	ds	4
  3903  0001F2                     _kI:
  3904                           	callstack 0
  3905  0001F2                     	ds	4
  3906  0001F6                     _kP:
  3907                           	callstack 0
  3908  0001F6                     	ds	4
  3909  0001FA                     _turning_speed:
  3910                           	callstack 0
  3911  0001FA                     	ds	2
  3912  0001FC                     _mOutLimite:
  3913                           	callstack 0
  3914  0001FC                     	ds	2
  3915                           
  3916                           	psect	bssBANK2
  3917  000200                     __pbssBANK2:
  3918                           	callstack 0
  3919  000200                     _Ubuff:
  3920                           	callstack 0
  3921  000200                     	ds	26
  3922  00021A                     getNormalizedQ@F4060:
  3923                           	callstack 0
  3924  00021A                     	ds	16
  3925  00022A                     getConjugateQ@F4051:
  3926                           	callstack 0
  3927  00022A                     	ds	16
  3928  00023A                     getProductQ@F4047:
  3929                           	callstack 0
  3930  00023A                     	ds	16
  3931  00024A                     getRotatedVF@F4126:
  3932                           	callstack 0
  3933  00024A                     	ds	12
  3934  000256                     getNormalizedVF@F4116:
  3935                           	callstack 0
  3936  000256                     	ds	12
  3937  000262                     vectorFloatF@F4107:
  3938                           	callstack 0
  3939  000262                     	ds	12
  3940  00026E                     vectorFloat@F4101:
  3941                           	callstack 0
  3942  00026E                     	ds	12
  3943  00027A                     _aaWorld:
  3944                           	callstack 0
  3945  00027A                     	ds	6
  3946  000280                     getRotatedVI@F4093:
  3947                           	callstack 0
  3948  000280                     	ds	6
  3949  000286                     getNormalizedVI@F4083:
  3950                           	callstack 0
  3951  000286                     	ds	6
  3952  00028C                     vectorInt16F@F4074:
  3953                           	callstack 0
  3954  00028C                     	ds	6
  3955  000292                     vectorInt16@F4068:
  3956                           	callstack 0
  3957  000292                     	ds	6
  3958  000298                     roundf@F528:
  3959                           	callstack 0
  3960  000298                     	ds	4
  3961  00029C                     _prevTime:
  3962                           	callstack 0
  3963  00029C                     	ds	4
  3964  0002A0                     	ds	3
  3965  0002A3                     _q:
  3966                           	callstack 0
  3967  0002A3                     	ds	16
  3968  0002B3                     _ypr:
  3969                           	callstack 0
  3970  0002B3                     	ds	12
  3971  0002BF                     _gravity:
  3972                           	callstack 0
  3973  0002BF                     	ds	12
  3974  0002CB                     _aa:
  3975                           	callstack 0
  3976  0002CB                     	ds	6
  3977                           
  3978                           	psect	dataBANK2
  3979  0002D1                     __pdataBANK2:
  3980                           	callstack 0
  3981  0002D1                     _teapotPacket:
  3982                           	callstack 0
  3983  0002D1                     	ds	20
  3984  0002E5                     quaternion@F4036:
  3985                           	callstack 0
  3986  0002E5                     	ds	16
  3987                           
  3988                           	psect	bssBANK3
  3989  000300                     __pbssBANK3:
  3990                           	callstack 0
  3991  000300                     rotateVF@F4121:
  3992                           	callstack 0
  3993  000300                     	ds	16
  3994  000310                     rotateVI@F4088:
  3995                           	callstack 0
  3996  000310                     	ds	16
  3997  000320                     _dbuf:
  3998                           	callstack 0
  3999  000320                     	ds	80
  4000  000370                     _text:
  4001                           	callstack 0
  4002  000370                     	ds	64
  4003                           
  4004                           	psect	cstackBANK1
  4005  0001AC                     __pcstackBANK1:
  4006                           	callstack 0
  4007  0001AC                     	ds	2
  4008  0001AE                     main@fifoBuffer:
  4009                           	callstack 0
  4010                           
  4011                           ; 28 bytes @ 0x2
  4012  0001AE                     	ds	33
  4013  0001CF                     _main$4558:
  4014                           	callstack 0
  4015                           
  4016                           ; 4 bytes @ 0x23
  4017  0001CF                     	ds	4
  4018  0001D3                     main@time_elapsed:
  4019                           	callstack 0
  4020                           
  4021                           ; 4 bytes @ 0x27
  4022  0001D3                     	ds	4
  4023  0001D7                     _main$2480:
  4024                           	callstack 0
  4025                           
  4026                           ; 2 bytes @ 0x2B
  4027  0001D7                     	ds	2
  4028  0001D9                     main@motorPID:
  4029                           	callstack 0
  4030                           
  4031                           ; 2 bytes @ 0x2D
  4032  0001D9                     	ds	2
  4033  0001DB                     main@countZero:
  4034                           	callstack 0
  4035                           
  4036                           ; 3 bytes @ 0x2F
  4037  0001DB                     	ds	7
  4038  0001E2                     _main$4556:
  4039                           	callstack 0
  4040                           
  4041                           ; 4 bytes @ 0x36
  4042  0001E2                     	ds	4
  4043  0001E6                     main@angle:
  4044                           	callstack 0
  4045                           
  4046                           ; 4 bytes @ 0x3A
  4047  0001E6                     	ds	4
  4048  0001EA                     main@mot1:
  4049                           	callstack 0
  4050                           
  4051                           ; 2 bytes @ 0x3E
  4052  0001EA                     	ds	2
  4053  0001EC                     main@mot2:
  4054                           	callstack 0
  4055                           
  4056                           ; 2 bytes @ 0x40
  4057  0001EC                     	ds	2
  4058                           
  4059                           	psect	cstackBANK0
  4060  000060                     __pcstackBANK0:
  4061                           	callstack 0
  4062  000060                     ??_controlReceive:
  4063  000060                     ?___flsub:
  4064                           	callstack 0
  4065  000060                     ___flsub@b:
  4066                           	callstack 0
  4067                           
  4068                           ; 4 bytes @ 0x0
  4069  000060                     	ds	4
  4070  000064                     ___flsub@a:
  4071                           	callstack 0
  4072                           
  4073                           ; 4 bytes @ 0x4
  4074  000064                     	ds	4
  4075  000068                     ?_atanf:
  4076                           	callstack 0
  4077  000068                     ?___fltol:
  4078                           	callstack 0
  4079  000068                     MPU6050_dmpGetGravityVF@v:
  4080                           	callstack 0
  4081  000068                     ___fltol@f1:
  4082                           	callstack 0
  4083  000068                     atanf@x:
  4084                           	callstack 0
  4085  000068                     _controlReceive$4554:
  4086                           	callstack 0
  4087                           
  4088                           ; 4 bytes @ 0x8
  4089  000068                     	ds	2
  4090  00006A                     MPU6050_dmpGetGravityVF@q:
  4091                           	callstack 0
  4092                           
  4093                           ; 2 bytes @ 0xA
  4094  00006A                     	ds	2
  4095  00006C                     ??_atanf:
  4096  00006C                     ??___fltol:
  4097  00006C                     _MPU6050_dmpGetGravityVF$4535:
  4098                           	callstack 0
  4099                           
  4100                           ; 4 bytes @ 0xC
  4101  00006C                     	ds	4
  4102  000070                     ___fltol@sign1:
  4103                           	callstack 0
  4104  000070                     atanf@__xc8_float_word:
  4105                           	callstack 0
  4106  000070                     _MPU6050_dmpGetGravityVF$4536:
  4107                           	callstack 0
  4108                           
  4109                           ; 4 bytes @ 0x10
  4110  000070                     	ds	1
  4111  000071                     ___fltol@exp1:
  4112                           	callstack 0
  4113                           
  4114                           ; 1 bytes @ 0x11
  4115  000071                     	ds	1
  4116  000072                     ?_efgtoa:
  4117                           	callstack 0
  4118  000072                     MPU6050_dmpGetLinearAccel@v:
  4119                           	callstack 0
  4120  000072                     efgtoa@fp:
  4121                           	callstack 0
  4122                           
  4123                           ; 2 bytes @ 0x12
  4124  000072                     	ds	2
  4125  000074                     MPU6050_dmpGetLinearAccel@vRaw:
  4126                           	callstack 0
  4127  000074                     efgtoa@f:
  4128                           	callstack 0
  4129  000074                     _MPU6050_dmpGetGravityVF$4534:
  4130                           	callstack 0
  4131  000074                     _atanf$4569:
  4132                           	callstack 0
  4133                           
  4134                           ; 4 bytes @ 0x14
  4135  000074                     	ds	2
  4136  000076                     MPU6050_dmpGetLinearAccel@gravity:
  4137                           	callstack 0
  4138                           
  4139                           ; 2 bytes @ 0x16
  4140  000076                     	ds	2
  4141  000078                     efgtoa@c:
  4142                           	callstack 0
  4143  000078                     _atanf$4571:
  4144                           	callstack 0
  4145                           
  4146                           ; 4 bytes @ 0x18
  4147  000078                     	ds	1
  4148  000079                     ??_efgtoa:
  4149                           
  4150                           ; 1 bytes @ 0x19
  4151  000079                     	ds	3
  4152  00007C                     _atanf$4572:
  4153                           	callstack 0
  4154                           
  4155                           ; 4 bytes @ 0x1C
  4156  00007C                     	ds	2
  4157  00007E                     _efgtoa$3173:
  4158                           	callstack 0
  4159                           
  4160                           ; 2 bytes @ 0x1E
  4161  00007E                     	ds	2
  4162  000080                     _efgtoa$3174:
  4163                           	callstack 0
  4164  000080                     atanf@s1:
  4165                           	callstack 0
  4166                           
  4167                           ; 4 bytes @ 0x20
  4168  000080                     	ds	2
  4169  000082                     _efgtoa$3179:
  4170                           	callstack 0
  4171                           
  4172                           ; 2 bytes @ 0x22
  4173  000082                     	ds	2
  4174  000084                     _efgtoa$3183:
  4175                           	callstack 0
  4176  000084                     atanf@s2:
  4177                           	callstack 0
  4178                           
  4179                           ; 4 bytes @ 0x24
  4180  000084                     	ds	2
  4181  000086                     _efgtoa$3184:
  4182                           	callstack 0
  4183                           
  4184                           ; 2 bytes @ 0x26
  4185  000086                     	ds	2
  4186  000088                     _efgtoa$3185:
  4187                           	callstack 0
  4188  000088                     atanf@sign:
  4189                           	callstack 0
  4190                           
  4191                           ; 4 bytes @ 0x28
  4192  000088                     	ds	2
  4193  00008A                     efgtoa@t:
  4194                           	callstack 0
  4195                           
  4196                           ; 2 bytes @ 0x2A
  4197  00008A                     	ds	2
  4198  00008C                     efgtoa@pp:
  4199                           	callstack 0
  4200  00008C                     _atanf$4568:
  4201                           	callstack 0
  4202                           
  4203                           ; 4 bytes @ 0x2C
  4204  00008C                     	ds	2
  4205  00008E                     efgtoa@ne:
  4206                           	callstack 0
  4207                           
  4208                           ; 2 bytes @ 0x2E
  4209  00008E                     	ds	2
  4210  000090                     efgtoa@m:
  4211                           	callstack 0
  4212  000090                     _atanf$4570:
  4213                           	callstack 0
  4214                           
  4215                           ; 4 bytes @ 0x30
  4216  000090                     	ds	2
  4217  000092                     efgtoa@ou:
  4218                           	callstack 0
  4219                           
  4220                           ; 4 bytes @ 0x32
  4221  000092                     	ds	2
  4222  000094                     atanf@w:
  4223                           	callstack 0
  4224                           
  4225                           ; 4 bytes @ 0x34
  4226  000094                     	ds	2
  4227  000096                     efgtoa@d:
  4228                           	callstack 0
  4229                           
  4230                           ; 2 bytes @ 0x36
  4231  000096                     	ds	2
  4232  000098                     atanf@id:
  4233                           	callstack 0
  4234  000098                     efgtoa@sign:
  4235                           	callstack 0
  4236                           
  4237                           ; 2 bytes @ 0x38
  4238  000098                     	ds	2
  4239  00009A                     efgtoa@p:
  4240                           	callstack 0
  4241  00009A                     atanf@z:
  4242                           	callstack 0
  4243                           
  4244                           ; 4 bytes @ 0x3A
  4245  00009A                     	ds	2
  4246  00009C                     efgtoa@w:
  4247                           	callstack 0
  4248                           
  4249                           ; 2 bytes @ 0x3C
  4250  00009C                     	ds	2
  4251  00009E                     efgtoa@nmode:
  4252                           	callstack 0
  4253  00009E                     atanf@ix:
  4254                           	callstack 0
  4255                           
  4256                           ; 4 bytes @ 0x3E
  4257  00009E                     	ds	1
  4258  00009F                     efgtoa@mode:
  4259                           	callstack 0
  4260                           
  4261                           ; 1 bytes @ 0x3F
  4262  00009F                     	ds	1
  4263  0000A0                     efgtoa@h:
  4264                           	callstack 0
  4265                           
  4266                           ; 4 bytes @ 0x40
  4267  0000A0                     	ds	2
  4268  0000A2                     ?_atan2f:
  4269                           	callstack 0
  4270  0000A2                     atan2f@y:
  4271                           	callstack 0
  4272                           
  4273                           ; 4 bytes @ 0x42
  4274  0000A2                     	ds	2
  4275  0000A4                     efgtoa@l:
  4276                           	callstack 0
  4277                           
  4278                           ; 4 bytes @ 0x44
  4279  0000A4                     	ds	2
  4280  0000A6                     atan2f@x:
  4281                           	callstack 0
  4282                           
  4283                           ; 4 bytes @ 0x46
  4284  0000A6                     	ds	2
  4285  0000A8                     efgtoa@i:
  4286                           	callstack 0
  4287                           
  4288                           ; 2 bytes @ 0x48
  4289  0000A8                     	ds	2
  4290  0000AA                     ??_atan2f:
  4291  0000AA                     efgtoa@g:
  4292                           	callstack 0
  4293                           
  4294                           ; 4 bytes @ 0x4A
  4295  0000AA                     	ds	4
  4296  0000AE                     efgtoa@e:
  4297                           	callstack 0
  4298                           
  4299                           ; 2 bytes @ 0x4E
  4300  0000AE                     	ds	2
  4301  0000B0                     efgtoa@n:
  4302                           	callstack 0
  4303                           
  4304                           ; 2 bytes @ 0x50
  4305  0000B0                     	ds	2
  4306  0000B2                     efgtoa@u:
  4307                           	callstack 0
  4308                           
  4309                           ; 4 bytes @ 0x52
  4310  0000B2                     	ds	4
  4311  0000B6                     ?_vfpfcnvrt:
  4312                           	callstack 0
  4313  0000B6                     vfpfcnvrt@fp:
  4314                           	callstack 0
  4315                           
  4316                           ; 2 bytes @ 0x56
  4317  0000B6                     	ds	2
  4318  0000B8                     vfpfcnvrt@fmt:
  4319                           	callstack 0
  4320                           
  4321                           ; 2 bytes @ 0x58
  4322  0000B8                     	ds	2
  4323  0000BA                     vfpfcnvrt@ap:
  4324                           	callstack 0
  4325  0000BA                     _atan2f$4565:
  4326                           	callstack 0
  4327                           
  4328                           ; 4 bytes @ 0x5A
  4329  0000BA                     	ds	2
  4330  0000BC                     ??_vfpfcnvrt:
  4331                           
  4332                           ; 1 bytes @ 0x5C
  4333  0000BC                     	ds	2
  4334  0000BE                     _atan2f$4566:
  4335                           	callstack 0
  4336                           
  4337                           ; 4 bytes @ 0x5E
  4338  0000BE                     	ds	2
  4339  0000C0                     _vfpfcnvrt$3202:
  4340                           	callstack 0
  4341                           
  4342                           ; 2 bytes @ 0x60
  4343  0000C0                     	ds	2
  4344  0000C2                     vfpfcnvrt@ct:
  4345                           	callstack 0
  4346  0000C2                     _atan2f$4567:
  4347                           	callstack 0
  4348                           
  4349                           ; 4 bytes @ 0x62
  4350  0000C2                     	ds	3
  4351  0000C5                     vfpfcnvrt@f:
  4352                           	callstack 0
  4353                           
  4354                           ; 4 bytes @ 0x65
  4355  0000C5                     	ds	1
  4356  0000C6                     atan2f@__xc8_float_word:
  4357                           	callstack 0
  4358                           
  4359                           ; 4 bytes @ 0x66
  4360  0000C6                     	ds	3
  4361  0000C9                     vfpfcnvrt@c:
  4362                           	callstack 0
  4363                           
  4364                           ; 1 bytes @ 0x69
  4365  0000C9                     	ds	1
  4366  0000CA                     ?_vfprintf:
  4367                           	callstack 0
  4368  0000CA                     vfprintf@fp:
  4369                           	callstack 0
  4370  0000CA                     atan2f@z:
  4371                           	callstack 0
  4372                           
  4373                           ; 4 bytes @ 0x6A
  4374  0000CA                     	ds	2
  4375  0000CC                     vfprintf@fmt:
  4376                           	callstack 0
  4377                           
  4378                           ; 2 bytes @ 0x6C
  4379  0000CC                     	ds	2
  4380  0000CE                     vfprintf@ap:
  4381                           	callstack 0
  4382  0000CE                     atan2f@ix:
  4383                           	callstack 0
  4384                           
  4385                           ; 4 bytes @ 0x6E
  4386  0000CE                     	ds	2
  4387  0000D0                     vfprintf@cfmt:
  4388                           	callstack 0
  4389                           
  4390                           ; 2 bytes @ 0x70
  4391  0000D0                     	ds	2
  4392  0000D2                     ?_sprintf:
  4393                           	callstack 0
  4394  0000D2                     sprintf@s:
  4395                           	callstack 0
  4396  0000D2                     atan2f@iy:
  4397                           	callstack 0
  4398                           
  4399                           ; 4 bytes @ 0x72
  4400  0000D2                     	ds	2
  4401  0000D4                     sprintf@fmt:
  4402                           	callstack 0
  4403                           
  4404                           ; 2 bytes @ 0x74
  4405  0000D4                     	ds	2
  4406  0000D6                     atan2f@m:
  4407                           	callstack 0
  4408                           
  4409                           ; 4 bytes @ 0x76
  4410  0000D6                     	ds	4
  4411  0000DA                     MPU6050_dmpGetRoll@data:
  4412                           	callstack 0
  4413                           
  4414                           ; 2 bytes @ 0x7A
  4415  0000DA                     	ds	2
  4416  0000DC                     MPU6050_dmpGetRoll@q:
  4417                           	callstack 0
  4418                           
  4419                           ; 2 bytes @ 0x7C
  4420  0000DC                     	ds	2
  4421  0000DE                     MPU6050_dmpGetRoll@gravity:
  4422                           	callstack 0
  4423                           
  4424                           ; 2 bytes @ 0x7E
  4425  0000DE                     	ds	6
  4426  0000E4                     sprintf@ap:
  4427                           	callstack 0
  4428                           
  4429                           ; 2 bytes @ 0x84
  4430  0000E4                     	ds	2
  4431  0000E6                     sprintf@f:
  4432                           	callstack 0
  4433                           
  4434                           ; 6 bytes @ 0x86
  4435  0000E6                     	ds	6
  4436  0000EC                     ??_main:
  4437                           
  4438                           ; 1 bytes @ 0x8C
  4439  0000EC                     	ds	4
  4440                           
  4441                           	psect	cstackCOMRAM
  4442  000001                     __pcstackCOMRAM:
  4443                           	callstack 0
  4444  000001                     
  4445                           ; 1 bytes @ 0x0
  4446  000001                     	ds	1
  4447  000002                     ??__int_timing:
  4448                           
  4449                           ; 1 bytes @ 0x1
  4450  000002                     	ds	2
  4451  000004                     ??_IdleI2C:
  4452  000004                     ?_memcmp:
  4453                           	callstack 0
  4454  000004                     ?_MPU6050_dmpGetFIFOPacketSize:
  4455                           	callstack 0
  4456  000004                     ?___fpclassifyf:
  4457                           	callstack 0
  4458  000004                     ?_strlen:
  4459                           	callstack 0
  4460  000004                     ?_isupper:
  4461                           	callstack 0
  4462  000004                     ?_strncmp:
  4463                           	callstack 0
  4464  000004                     ?___wmul:
  4465                           	callstack 0
  4466  000004                     ?___awdiv:
  4467                           	callstack 0
  4468  000004                     ?___awmod:
  4469                           	callstack 0
  4470  000004                     ?___lldiv:
  4471                           	callstack 0
  4472  000004                     ?___flneg:
  4473                           	callstack 0
  4474  000004                     WriteI2C@data:
  4475                           	callstack 0
  4476  000004                     MPU6050@address:
  4477                           	callstack 0
  4478  000004                     USART_UART_transmitByte@data:
  4479                           	callstack 0
  4480  000004                     MPU6050_dmpGetAccelI16@data:
  4481                           	callstack 0
  4482  000004                     MPU6050_dmpGetQuaternionI16@data:
  4483                           	callstack 0
  4484  000004                     USART_UART_readBuffer@buffer:
  4485                           	callstack 0
  4486  000004                     ___wmul@multiplier:
  4487                           	callstack 0
  4488  000004                     ___awdiv@dividend:
  4489                           	callstack 0
  4490  000004                     ___awmod@dividend:
  4491                           	callstack 0
  4492  000004                     memcmp@vl:
  4493                           	callstack 0
  4494  000004                     isupper@c:
  4495                           	callstack 0
  4496  000004                     fputc@c:
  4497                           	callstack 0
  4498  000004                     strcpy@dest:
  4499                           	callstack 0
  4500  000004                     strlen@s:
  4501                           	callstack 0
  4502  000004                     strncmp@_l:
  4503                           	callstack 0
  4504  000004                     ___lldiv@dividend:
  4505                           	callstack 0
  4506  000004                     ___fleq@ff1:
  4507                           	callstack 0
  4508  000004                     ___flneg@f1:
  4509                           	callstack 0
  4510  000004                     ___fpclassifyf@x:
  4511                           	callstack 0
  4512                           
  4513                           ; 4 bytes @ 0x3
  4514  000004                     	ds	1
  4515  000005                     I2Cdev_readBytes@regAddr:
  4516                           	callstack 0
  4517  000005                     I2Cdev_writeBytes@regAddr:
  4518                           	callstack 0
  4519  000005                     I2Cdev_writeWords@regAddr:
  4520                           	callstack 0
  4521  000005                     USART_UART_transmitString@data:
  4522                           	callstack 0
  4523                           
  4524                           ; 2 bytes @ 0x4
  4525  000005                     	ds	1
  4526  000006                     ??_isupper:
  4527  000006                     I2Cdev_readBytes@length:
  4528                           	callstack 0
  4529  000006                     I2Cdev_writeBytes@length:
  4530                           	callstack 0
  4531  000006                     I2Cdev_writeWords@length:
  4532                           	callstack 0
  4533  000006                     USART_UART_readBuffer@size:
  4534                           	callstack 0
  4535  000006                     MPU6050_dmpGetAccelI16@packet:
  4536                           	callstack 0
  4537  000006                     MPU6050_dmpGetQuaternionI16@packet:
  4538                           	callstack 0
  4539  000006                     ___wmul@multiplicand:
  4540                           	callstack 0
  4541  000006                     ___awdiv@divisor:
  4542                           	callstack 0
  4543  000006                     ___awmod@divisor:
  4544                           	callstack 0
  4545  000006                     memcmp@vr:
  4546                           	callstack 0
  4547  000006                     fputc@fp:
  4548                           	callstack 0
  4549  000006                     strcpy@src:
  4550                           	callstack 0
  4551  000006                     strlen@a:
  4552                           	callstack 0
  4553  000006                     strncmp@_r:
  4554                           	callstack 0
  4555                           
  4556                           ; 2 bytes @ 0x5
  4557  000006                     	ds	1
  4558  000007                     I2Cdev_readBytes@data:
  4559                           	callstack 0
  4560  000007                     I2Cdev_writeBytes@data:
  4561                           	callstack 0
  4562  000007                     I2Cdev_writeWords@data:
  4563                           	callstack 0
  4564                           
  4565                           ; 2 bytes @ 0x6
  4566  000007                     	ds	1
  4567  000008                     ??___fpclassifyf:
  4568  000008                     ??_fputc:
  4569  000008                     ??_strcpy:
  4570  000008                     ??_MPU6050_dmpGetAccelI16:
  4571  000008                     ??_MPU6050_dmpGetQuaternionI16:
  4572  000008                     USART_UART_readBuffer@i:
  4573                           	callstack 0
  4574  000008                     ___awdiv@counter:
  4575                           	callstack 0
  4576  000008                     ___awmod@counter:
  4577                           	callstack 0
  4578  000008                     ___wmul@product:
  4579                           	callstack 0
  4580  000008                     memcmp@n:
  4581                           	callstack 0
  4582  000008                     strncmp@n:
  4583                           	callstack 0
  4584  000008                     ___lldiv@divisor:
  4585                           	callstack 0
  4586  000008                     ___fleq@ff2:
  4587                           	callstack 0
  4588                           
  4589                           ; 4 bytes @ 0x7
  4590  000008                     	ds	1
  4591  000009                     ??_I2Cdev_readBytes:
  4592  000009                     ??_I2Cdev_writeBytes:
  4593  000009                     ??_I2Cdev_writeWords:
  4594  000009                     ___awdiv@sign:
  4595                           	callstack 0
  4596  000009                     ___awmod@sign:
  4597                           	callstack 0
  4598                           
  4599                           ; 1 bytes @ 0x8
  4600  000009                     	ds	1
  4601  00000A                     ??_memcmp:
  4602  00000A                     ??_strncmp:
  4603  00000A                     ?_tolower:
  4604                           	callstack 0
  4605  00000A                     ?___xxtofl:
  4606                           	callstack 0
  4607  00000A                     ___awdiv@quotient:
  4608                           	callstack 0
  4609  00000A                     strcpy@s:
  4610                           	callstack 0
  4611  00000A                     tolower@c:
  4612                           	callstack 0
  4613  00000A                     ___xxtofl@val:
  4614                           	callstack 0
  4615                           
  4616                           ; 4 bytes @ 0x9
  4617  00000A                     	ds	1
  4618  00000B                     I2Cdev_writeBytes@devAddr:
  4619                           	callstack 0
  4620  00000B                     strncmp@l:
  4621                           	callstack 0
  4622                           
  4623                           ; 2 bytes @ 0xA
  4624  00000B                     	ds	1
  4625  00000C                     ??_tolower:
  4626  00000C                     ??___fleq:
  4627  00000C                     I2Cdev_writeBytes@i:
  4628                           	callstack 0
  4629  00000C                     ___fpclassifyf@e:
  4630                           	callstack 0
  4631  00000C                     memcmp@l:
  4632                           	callstack 0
  4633  00000C                     strcpy@d:
  4634                           	callstack 0
  4635  00000C                     ___lldiv@quotient:
  4636                           	callstack 0
  4637                           
  4638                           ; 4 bytes @ 0xB
  4639  00000C                     	ds	1
  4640  00000D                     I2Cdev_writeByte@regAddr:
  4641                           	callstack 0
  4642  00000D                     I2Cdev_writeWords@devAddr:
  4643                           	callstack 0
  4644  00000D                     fputs@s:
  4645                           	callstack 0
  4646  00000D                     strncmp@r:
  4647                           	callstack 0
  4648                           
  4649                           ; 2 bytes @ 0xC
  4650  00000D                     	ds	1
  4651  00000E                     ??___xxtofl:
  4652  00000E                     I2Cdev_writeByte@data:
  4653                           	callstack 0
  4654  00000E                     I2Cdev_writeWords@i:
  4655                           	callstack 0
  4656  00000E                     memcmp@r:
  4657                           	callstack 0
  4658  00000E                     ___fpclassifyf@u:
  4659                           	callstack 0
  4660                           
  4661                           ; 4 bytes @ 0xD
  4662  00000E                     	ds	1
  4663  00000F                     I2Cdev_readBytes@devAddr:
  4664                           	callstack 0
  4665  00000F                     I2Cdev_writeByte@devAddr:
  4666                           	callstack 0
  4667  00000F                     I2Cdev_writeWord@regAddr:
  4668                           	callstack 0
  4669  00000F                     fputs@fp:
  4670                           	callstack 0
  4671                           
  4672                           ; 2 bytes @ 0xE
  4673  00000F                     	ds	1
  4674  000010                     I2Cdev_readBytes@count:
  4675                           	callstack 0
  4676  000010                     MPU6050_setMemoryBank@prefetchEnabled:
  4677                           	callstack 0
  4678  000010                     MPU6050_setMemoryStartAddress@address:
  4679                           	callstack 0
  4680  000010                     ___lldiv@counter:
  4681                           	callstack 0
  4682  000010                     I2Cdev_writeWord@data:
  4683                           	callstack 0
  4684  000010                     _tolower$3336:
  4685                           	callstack 0
  4686                           
  4687                           ; 2 bytes @ 0xF
  4688  000010                     	ds	1
  4689  000011                     ?_MPU6050_getFIFOCount:
  4690                           	callstack 0
  4691  000011                     I2Cdev_readByte@regAddr:
  4692                           	callstack 0
  4693  000011                     MPU6050_setMemoryBank@userBank:
  4694                           	callstack 0
  4695  000011                     fputs@c:
  4696                           	callstack 0
  4697  000011                     i2c_init@freqK:
  4698                           	callstack 0
  4699  000011                     MPU6050_getFIFOBytes@data:
  4700                           	callstack 0
  4701  000011                     USART_setBaudRate@rate:
  4702                           	callstack 0
  4703                           
  4704                           ; 4 bytes @ 0x10
  4705  000011                     	ds	1
  4706  000012                     I2Cdev_writeWord@devAddr:
  4707                           	callstack 0
  4708  000012                     MPU6050_setMemoryBank@bank:
  4709                           	callstack 0
  4710  000012                     ___xxtofl@sign:
  4711                           	callstack 0
  4712  000012                     I2Cdev_readByte@data:
  4713                           	callstack 0
  4714  000012                     fputs@i:
  4715                           	callstack 0
  4716                           
  4717                           ; 2 bytes @ 0x11
  4718  000012                     	ds	1
  4719  000013                     ??_MPU6050_getFIFOCount:
  4720  000013                     MPU6050_getFIFOBytes@length:
  4721                           	callstack 0
  4722  000013                     ___xxtofl@exp:
  4723                           	callstack 0
  4724  000013                     MPU6050_writeMemoryBlock@data:
  4725                           	callstack 0
  4726  000013                     _i2c_init$4518:
  4727                           	callstack 0
  4728                           
  4729                           ; 4 bytes @ 0x12
  4730  000013                     	ds	1
  4731  000014                     ?_pad:
  4732                           	callstack 0
  4733  000014                     I2Cdev_readByte@devAddr:
  4734                           	callstack 0
  4735  000014                     pad@fp:
  4736                           	callstack 0
  4737  000014                     ___xxtofl@arg:
  4738                           	callstack 0
  4739                           
  4740                           ; 4 bytes @ 0x13
  4741  000014                     	ds	1
  4742  000015                     I2Cdev_readBits@regAddr:
  4743                           	callstack 0
  4744  000015                     I2Cdev_writeBit@regAddr:
  4745                           	callstack 0
  4746  000015                     I2Cdev_writeBits@regAddr:
  4747                           	callstack 0
  4748  000015                     MPU6050_writeMemoryBlock@dataSize:
  4749                           	callstack 0
  4750  000015                     USART_UART_init@rate:
  4751                           	callstack 0
  4752                           
  4753                           ; 4 bytes @ 0x14
  4754  000015                     	ds	1
  4755  000016                     I2Cdev_readBits@bitStart:
  4756                           	callstack 0
  4757  000016                     I2Cdev_writeBit@bitNum:
  4758                           	callstack 0
  4759  000016                     I2Cdev_writeBits@bitStart:
  4760                           	callstack 0
  4761  000016                     pad@buf:
  4762                           	callstack 0
  4763                           
  4764                           ; 2 bytes @ 0x15
  4765  000016                     	ds	1
  4766  000017                     I2Cdev_readBits@length:
  4767                           	callstack 0
  4768  000017                     I2Cdev_writeBit@data:
  4769                           	callstack 0
  4770  000017                     I2Cdev_writeBits@length:
  4771                           	callstack 0
  4772  000017                     MPU6050_writeMemoryBlock@bank:
  4773                           	callstack 0
  4774                           
  4775                           ; 1 bytes @ 0x16
  4776  000017                     	ds	1
  4777  000018                     ??_I2Cdev_writeBit:
  4778  000018                     ?___fldiv:
  4779                           	callstack 0
  4780  000018                     I2Cdev_writeBits@data:
  4781                           	callstack 0
  4782  000018                     MPU6050_writeMemoryBlock@address:
  4783                           	callstack 0
  4784  000018                     I2Cdev_readBits@data:
  4785                           	callstack 0
  4786  000018                     pad@p:
  4787                           	callstack 0
  4788  000018                     ___fldiv@b:
  4789                           	callstack 0
  4790                           
  4791                           ; 4 bytes @ 0x17
  4792  000018                     	ds	1
  4793  000019                     ??_I2Cdev_writeBits:
  4794  000019                     MPU6050_writeMemoryBlock@verify:
  4795                           	callstack 0
  4796  000019                     USART_UART_init@fastMode:
  4797                           	callstack 0
  4798                           
  4799                           ; 1 bytes @ 0x18
  4800  000019                     	ds	1
  4801  00001A                     ??_I2Cdev_readBits:
  4802  00001A                     ??_pad:
  4803  00001A                     MPU6050_writeMemoryBlock@useProgMem:
  4804                           	callstack 0
  4805                           
  4806                           ; 1 bytes @ 0x19
  4807  00001A                     	ds	1
  4808  00001B                     ??_MPU6050_writeMemoryBlock:
  4809  00001B                     pad@i:
  4810                           	callstack 0
  4811                           
  4812                           ; 2 bytes @ 0x1A
  4813  00001B                     	ds	1
  4814  00001C                     I2Cdev_writeBits@devAddr:
  4815                           	callstack 0
  4816  00001C                     ___fldiv@a:
  4817                           	callstack 0
  4818                           
  4819                           ; 4 bytes @ 0x1B
  4820  00001C                     	ds	1
  4821  00001D                     I2Cdev_readBits@count:
  4822                           	callstack 0
  4823  00001D                     I2Cdev_writeBits@mask:
  4824                           	callstack 0
  4825  00001D                     _I2Cdev_writeBit$600:
  4826                           	callstack 0
  4827  00001D                     pad@w:
  4828                           	callstack 0
  4829                           
  4830                           ; 2 bytes @ 0x1C
  4831  00001D                     	ds	1
  4832  00001E                     I2Cdev_readBits@devAddr:
  4833                           	callstack 0
  4834  00001E                     I2Cdev_writeBits@b:
  4835                           	callstack 0
  4836                           
  4837                           ; 1 bytes @ 0x1D
  4838  00001E                     	ds	1
  4839  00001F                     I2Cdev_readBits@mask:
  4840                           	callstack 0
  4841  00001F                     I2Cdev_writeBit@devAddr:
  4842                           	callstack 0
  4843  00001F                     MPU6050_setFullScaleGyroRange@range:
  4844                           	callstack 0
  4845  00001F                     MPU6050_setFullScaleAccelRange@range:
  4846                           	callstack 0
  4847  00001F                     MPU6050_setClockSource@source:
  4848                           	callstack 0
  4849                           
  4850                           ; 1 bytes @ 0x1E
  4851  00001F                     	ds	1
  4852  000020                     ??___fldiv:
  4853  000020                     I2Cdev_readBits@b:
  4854                           	callstack 0
  4855  000020                     I2Cdev_writeBit@b:
  4856                           	callstack 0
  4857  000020                     MPU6050_writeMemoryBlock@mlc1:
  4858                           	callstack 0
  4859                           
  4860                           ; 16 bytes @ 0x1F
  4861  000020                     	ds	1
  4862  000021                     MPU6050_setSleepEnabled@enabled:
  4863                           	callstack 0
  4864  000021                     MPU6050_setDMPEnabled@enabled:
  4865                           	callstack 0
  4866  000021                     MPU6050_GetCurrentFIFOPacket@data:
  4867                           	callstack 0
  4868                           
  4869                           ; 2 bytes @ 0x20
  4870  000021                     	ds	1
  4871  000022                     
  4872                           ; 1 bytes @ 0x21
  4873  000022                     	ds	1
  4874  000023                     MPU6050_GetCurrentFIFOPacket@length:
  4875                           	callstack 0
  4876                           
  4877                           ; 1 bytes @ 0x22
  4878  000023                     	ds	1
  4879  000024                     ??_MPU6050_GetCurrentFIFOPacket:
  4880  000024                     ___fldiv@rem:
  4881                           	callstack 0
  4882                           
  4883                           ; 4 bytes @ 0x23
  4884  000024                     	ds	4
  4885  000028                     ___fldiv@sign:
  4886                           	callstack 0
  4887  000028                     MPU6050_GetCurrentFIFOPacket@Trash:
  4888                           	callstack 0
  4889                           
  4890                           ; 32 bytes @ 0x27
  4891  000028                     	ds	1
  4892  000029                     ___fldiv@new_exp:
  4893                           	callstack 0
  4894                           
  4895                           ; 2 bytes @ 0x28
  4896  000029                     	ds	2
  4897  00002B                     ___fldiv@grs:
  4898                           	callstack 0
  4899                           
  4900                           ; 4 bytes @ 0x2A
  4901  00002B                     	ds	4
  4902  00002F                     ___fldiv@bexp:
  4903                           	callstack 0
  4904                           
  4905                           ; 1 bytes @ 0x2E
  4906  00002F                     	ds	1
  4907  000030                     ___fldiv@aexp:
  4908                           	callstack 0
  4909  000030                     MPU6050_writeMemoryBlock@mlc2:
  4910                           	callstack 0
  4911                           
  4912                           ; 16 bytes @ 0x2F
  4913  000030                     	ds	1
  4914  000031                     ?___flmul:
  4915                           	callstack 0
  4916  000031                     ?_fabsf:
  4917                           	callstack 0
  4918  000031                     ?_floorf:
  4919                           	callstack 0
  4920  000031                     MPU6050_dmpGetQuaternionQ@q:
  4921                           	callstack 0
  4922  000031                     ___flmul@b:
  4923                           	callstack 0
  4924  000031                     fabsf@x:
  4925                           	callstack 0
  4926  000031                     floorf@x:
  4927                           	callstack 0
  4928                           
  4929                           ; 4 bytes @ 0x30
  4930  000031                     	ds	2
  4931  000033                     MPU6050_dmpGetQuaternionQ@packet:
  4932                           	callstack 0
  4933                           
  4934                           ; 2 bytes @ 0x32
  4935  000033                     	ds	2
  4936  000035                     ??_floorf:
  4937  000035                     MPU6050_dmpGetQuaternionQ@status:
  4938                           	callstack 0
  4939  000035                     ___flmul@a:
  4940                           	callstack 0
  4941  000035                     fabsf@u:
  4942                           	callstack 0
  4943                           
  4944                           ; 4 bytes @ 0x34
  4945  000035                     	ds	1
  4946  000036                     MPU6050_dmpGetQuaternionQ@qI:
  4947                           	callstack 0
  4948                           
  4949                           ; 8 bytes @ 0x35
  4950  000036                     	ds	3
  4951  000039                     ??___flmul:
  4952                           
  4953                           ; 1 bytes @ 0x38
  4954  000039                     	ds	2
  4955  00003B                     floorf@m:
  4956                           	callstack 0
  4957                           
  4958                           ; 4 bytes @ 0x3A
  4959  00003B                     	ds	2
  4960  00003D                     ___flmul@sign:
  4961                           	callstack 0
  4962                           
  4963                           ; 1 bytes @ 0x3C
  4964  00003D                     	ds	1
  4965  00003E                     ___flmul@grs:
  4966                           	callstack 0
  4967                           
  4968                           ; 4 bytes @ 0x3D
  4969  00003E                     	ds	1
  4970  00003F                     floorf@e:
  4971                           	callstack 0
  4972                           
  4973                           ; 2 bytes @ 0x3E
  4974  00003F                     	ds	1
  4975  000040                     MPU6050_writeMemoryBlock@verifyBuffer:
  4976                           	callstack 0
  4977                           
  4978                           ; 2 bytes @ 0x3F
  4979  000040                     	ds	1
  4980  000041                     floorf@u:
  4981                           	callstack 0
  4982                           
  4983                           ; 4 bytes @ 0x40
  4984  000041                     	ds	1
  4985  000042                     ___flmul@aexp:
  4986                           	callstack 0
  4987  000042                     MPU6050_writeMemoryBlock@progBuffer:
  4988                           	callstack 0
  4989                           
  4990                           ; 2 bytes @ 0x41
  4991  000042                     	ds	1
  4992  000043                     ___flmul@bexp:
  4993                           	callstack 0
  4994                           
  4995                           ; 1 bytes @ 0x42
  4996  000043                     	ds	1
  4997  000044                     MPU6050_writeMemoryBlock@j:
  4998                           	callstack 0
  4999  000044                     ___flmul@prod:
  5000                           	callstack 0
  5001                           
  5002                           ; 4 bytes @ 0x43
  5003  000044                     	ds	1
  5004  000045                     MPU6050_writeMemoryBlock@i:
  5005                           	callstack 0
  5006                           
  5007                           ; 2 bytes @ 0x44
  5008  000045                     	ds	2
  5009  000047                     MPU6050_writeMemoryBlock@chunkSize:
  5010                           	callstack 0
  5011                           
  5012                           ; 1 bytes @ 0x46
  5013  000047                     	ds	1
  5014  000048                     MPU6050_writeProgMemoryBlock@data:
  5015                           	callstack 0
  5016  000048                     ___flmul@temp:
  5017                           	callstack 0
  5018  000048                     MPU6050_GetCurrentFIFOPacket@BreakTimer:
  5019                           	callstack 0
  5020                           
  5021                           ; 4 bytes @ 0x47
  5022  000048                     	ds	2
  5023  00004A                     ?___fladd:
  5024                           	callstack 0
  5025  00004A                     MPU6050_writeProgMemoryBlock@dataSize:
  5026                           	callstack 0
  5027  00004A                     ___flge@ff1:
  5028                           	callstack 0
  5029  00004A                     ___fladd@b:
  5030                           	callstack 0
  5031                           
  5032                           ; 4 bytes @ 0x49
  5033  00004A                     	ds	2
  5034  00004C                     MPU6050_writeProgMemoryBlock@bank:
  5035                           	callstack 0
  5036  00004C                     MPU6050_GetCurrentFIFOPacket@RemoveBytes:
  5037                           	callstack 0
  5038                           
  5039                           ; 2 bytes @ 0x4B
  5040  00004C                     	ds	1
  5041  00004D                     MPU6050_writeProgMemoryBlock@address:
  5042                           	callstack 0
  5043                           
  5044                           ; 1 bytes @ 0x4C
  5045  00004D                     	ds	1
  5046  00004E                     MPU6050_writeProgMemoryBlock@verify:
  5047                           	callstack 0
  5048  00004E                     MPU6050_GetCurrentFIFOPacket@fifoC:
  5049                           	callstack 0
  5050  00004E                     ___flge@ff2:
  5051                           	callstack 0
  5052  00004E                     ___fladd@a:
  5053                           	callstack 0
  5054                           
  5055                           ; 4 bytes @ 0x4D
  5056  00004E                     	ds	1
  5057  00004F                     ??_MPU6050_dmpInitialize:
  5058                           
  5059                           ; 1 bytes @ 0x4E
  5060  00004F                     	ds	1
  5061  000050                     MPU6050_dmpGetCurrentFIFOPacket@data:
  5062                           	callstack 0
  5063                           
  5064                           ; 2 bytes @ 0x4F
  5065  000050                     	ds	1
  5066  000051                     MPU6050_dmpInitialize@val:
  5067                           	callstack 0
  5068                           
  5069                           ; 1 bytes @ 0x50
  5070  000051                     	ds	1
  5071  000052                     ??___fladd:
  5072  000052                     ??___flge:
  5073                           
  5074                           ; 1 bytes @ 0x51
  5075  000052                     	ds	4
  5076  000056                     ___fladd@signs:
  5077                           	callstack 0
  5078                           
  5079                           ; 1 bytes @ 0x55
  5080  000056                     	ds	1
  5081  000057                     ___fladd@aexp:
  5082                           	callstack 0
  5083                           
  5084                           ; 1 bytes @ 0x56
  5085  000057                     	ds	1
  5086  000058                     ___fladd@bexp:
  5087                           	callstack 0
  5088                           
  5089                           ; 1 bytes @ 0x57
  5090  000058                     	ds	1
  5091  000059                     ___fladd@grs:
  5092                           	callstack 0
  5093                           
  5094                           ; 1 bytes @ 0x58
  5095  000059                     	ds	1
  5096  00005A                     
  5097                           ; 1 bytes @ 0x59
  5098 ;;
  5099 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5100 ;;
  5101 ;; *************** function _main *****************
  5102 ;; Defined at:
  5103 ;;		line 165 in file "main.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  angle           4   58[BANK1 ] float 
  5108 ;;  fifoBuffer     28    2[BANK1 ] unsigned char [28]
  5109 ;;  time_elapsed    4   39[BANK1 ] unsigned long 
  5110 ;;  countZero       3   47[BANK1 ] unsigned char [3]
  5111 ;;  mot2            2   64[BANK1 ] int 
  5112 ;;  mot1            2   62[BANK1 ] int 
  5113 ;;  motorPID        2   45[BANK1 ] int 
  5114 ;;  packetSize      2    0        unsigned short 
  5115 ;;  fifoCount       2    0        unsigned short 
  5116 ;;  mpuIntStatus    1    0        unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0
  5127 ;;      Locals:         0       0      66       0       0       0       0       0       0
  5128 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5129 ;;      Totals:         0       4      66       0       0       0       0       0       0
  5130 ;;Total ram usage:       70 bytes
  5131 ;; Hardware stack levels required when called:   10
  5132 ;; This function calls:
  5133 ;;		_MPU6050
  5134 ;;		_MPU6050_dmpGetAccelI16
  5135 ;;		_MPU6050_dmpGetCurrentFIFOPacket
  5136 ;;		_MPU6050_dmpGetFIFOPacketSize
  5137 ;;		_MPU6050_dmpGetGravityVF
  5138 ;;		_MPU6050_dmpGetLinearAccel
  5139 ;;		_MPU6050_dmpGetQuaternionQ
  5140 ;;		_MPU6050_dmpGetRoll
  5141 ;;		_MPU6050_dmpInitialize
  5142 ;;		_MPU6050_getIntStatus
  5143 ;;		_MPU6050_initialize
  5144 ;;		_MPU6050_setDMPEnabled
  5145 ;;		_MPU6050_testConnection
  5146 ;;		_USART_UART_init
  5147 ;;		_USART_UART_transmitString
  5148 ;;		___fladd
  5149 ;;		___fldiv
  5150 ;;		___flge
  5151 ;;		___flmul
  5152 ;;		___flsub
  5153 ;;		___fltol
  5154 ;;		___wmul
  5155 ;;		___xxtofl
  5156 ;;		_controlReceive
  5157 ;;		_i2c_init
  5158 ;;		_resetDisplacement
  5159 ;;		_sprintf
  5160 ;; This function is called by:
  5161 ;;		Startup code after reset
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text0
  5166  000012                     __ptext0:
  5167                           	callstack 0
  5168  000012                     _main:
  5169                           	callstack 21
  5170  000012                     
  5171                           ;main.c: 167:     _delay((unsigned long)((1000)*(_X_FREQ/4000.0)));
  5172  000012  0E3D               	movlw	61
  5173  000014  0100               	movlb	0	; () banked
  5174  000016  6FED               	movwf	(??_main+1)& (0+255),b
  5175  000018  0EE1               	movlw	225
  5176  00001A  6FEC               	movwf	??_main& (0+255),b
  5177  00001C  0E3F               	movlw	63
  5178  00001E                     u12137:
  5179  00001E  2EE8               	decfsz	wreg,f,c
  5180  000020  D7FE               	bra	u12137
  5181  000022  2FEC               	decfsz	??_main& (0+255),f,b
  5182  000024  D7FC               	bra	u12137
  5183  000026  2FED               	decfsz	(??_main+1)& (0+255),f,b
  5184  000028  D7FA               	bra	u12137
  5185  00002A  D000               	nop2	
  5186  00002C                     
  5187                           ;main.c: 170:     ADCON1 = 0x0F;
  5188  00002C  0E0F               	movlw	15
  5189  00002E  6EC1               	movwf	193,c	;volatile
  5190  000030                     
  5191                           ;main.c: 172:     TRISC &= 0b00111111;
  5192  000030  0E3F               	movlw	63
  5193  000032  1694               	andwf	148,f,c	;volatile
  5194  000034                     
  5195                           ;main.c: 176:     TRISCbits.RC2 = 0;TRISCbits.RC1 = 0;
  5196  000034  9494               	bcf	148,2,c	;volatile
  5197  000036  9294               	bcf	148,1,c	;volatile
  5198  000038                     
  5199                           ;main.c: 177:     TRISBbits.RB4 = 0;TRISBbits.RB3 = 0;
  5200  000038  9893               	bcf	147,4,c	;volatile
  5201  00003A  9693               	bcf	147,3,c	;volatile
  5202  00003C                     
  5203                           ;main.c: 178:     CCP1CONbits.CCP1M = 0b00001100;
  5204  00003C  50BD               	movf	189,w,c	;volatile
  5205  00003E  0BF0               	andlw	-16
  5206  000040  090C               	iorlw	12
  5207  000042  6EBD               	movwf	189,c	;volatile
  5208  000044                     
  5209                           ;main.c: 179:     CCP2CONbits.CCP2M = 0b00001100;
  5210  000044  50BA               	movf	186,w,c	;volatile
  5211  000046  0BF0               	andlw	-16
  5212  000048  090C               	iorlw	12
  5213  00004A  6EBA               	movwf	186,c	;volatile
  5214  00004C                     
  5215                           ;main.c: 180:     CCPR1L = 0 >> 2; CCP1CONbits.DC1B = 0x03 & 0;
  5216  00004C  0E00               	movlw	0
  5217  00004E  6EBE               	movwf	190,c	;volatile
  5218  000050  0ECF               	movlw	-49
  5219  000052  16BD               	andwf	189,f,c	;volatile
  5220  000054                     
  5221                           ;main.c: 181:     CCPR2L = 0 >> 2; CCP2CONbits.DC2B = 0x03 & 0;
  5222  000054  0E00               	movlw	0
  5223  000056  6EBB               	movwf	187,c	;volatile
  5224  000058  0ECF               	movlw	-49
  5225  00005A  16BA               	andwf	186,f,c	;volatile
  5226  00005C                     
  5227                           ;main.c: 184:     PIE1bits.TMR2IE = 1;
  5228  00005C  829D               	bsf	157,1,c	;volatile
  5229  00005E                     
  5230                           ;main.c: 186:     INTCON2bits.INTEDG2 = 1;
  5231  00005E  88F1               	bsf	241,4,c	;volatile
  5232  000060                     
  5233                           ;main.c: 187:     INTCON3bits.INT2E = 1;
  5234  000060  88F0               	bsf	240,4,c	;volatile
  5235  000062                     
  5236                           ;main.c: 188:     PIE1bits.RCIE = 1;
  5237  000062  8A9D               	bsf	157,5,c	;volatile
  5238  000064                     
  5239                           ;main.c: 190:     RCONbits.IPEN = 0;
  5240  000064  9ED0               	bcf	208,7,c	;volatile
  5241  000066                     
  5242                           ;main.c: 193:     INTCONbits.GIEH = 1;
  5243  000066  8EF2               	bsf	242,7,c	;volatile
  5244  000068                     
  5245                           ;main.c: 194:     INTCONbits.GIEL = 1;
  5246  000068  8CF2               	bsf	242,6,c	;volatile
  5247  00006A                     
  5248                           ;main.c: 196:     i2c_init(400);
  5249  00006A  0E01               	movlw	1
  5250  00006C  6E12               	movwf	(i2c_init@freqK+1)^0,c
  5251  00006E  0E90               	movlw	144
  5252  000070  6E11               	movwf	i2c_init@freqK^0,c
  5253  000072  ECF8  F02F         	call	_i2c_init	;wreg free
  5254  000076                     
  5255                           ;main.c: 199:     PR2 = 249;
  5256  000076  0EF9               	movlw	249
  5257  000078  6ECB               	movwf	203,c	;volatile
  5258  00007A                     
  5259                           ;main.c: 200:     T2CON = 0b00010011;
  5260  00007A  0E13               	movlw	19
  5261  00007C  6ECA               	movwf	202,c	;volatile
  5262  00007E                     
  5263                           ;main.c: 202:     USART_UART_init(115200, 1);
  5264  00007E  0E00               	movlw	0
  5265  000080  6E15               	movwf	USART_UART_init@rate^0,c
  5266  000082  0EC2               	movlw	194
  5267  000084  6E16               	movwf	(USART_UART_init@rate+1)^0,c
  5268  000086  0E01               	movlw	1
  5269  000088  6E17               	movwf	(USART_UART_init@rate+2)^0,c
  5270  00008A  0E00               	movlw	0
  5271  00008C  6E18               	movwf	(USART_UART_init@rate+3)^0,c
  5272  00008E  0E01               	movlw	1
  5273  000090  6E19               	movwf	USART_UART_init@fastMode^0,c
  5274  000092  EC93  F032         	call	_USART_UART_init	;wreg free
  5275  000096                     
  5276                           ;main.c: 204:     T2CONbits.TMR2ON = 1;
  5277  000096  84CA               	bsf	202,2,c	;volatile
  5278  000098                     
  5279                           ;main.c: 205:     T1CONbits.TMR1ON = 0;
  5280  000098  90CD               	bcf	205,0,c	;volatile
  5281  00009A                     
  5282                           ;main.c: 208:     MPU6050(0x68);
  5283  00009A  0E68               	movlw	104
  5284  00009C  EC41  F034         	call	_MPU6050
  5285  0000A0                     
  5286                           ;main.c: 209:     USART_UART_transmitString( "Initializing I2C devices...\n" );
  5287  0000A0  0E45               	movlw	low STR_1
  5288  0000A2  6E05               	movwf	USART_UART_transmitString@data^0,c
  5289  0000A4  0E7F               	movlw	high STR_1
  5290  0000A6  6E06               	movwf	(USART_UART_transmitString@data+1)^0,c
  5291  0000A8  ECC5  F030         	call	_USART_UART_transmitString	;wreg free
  5292  0000AC                     
  5293                           ;main.c: 210:     MPU6050_initialize();
  5294  0000AC  EC82  F033         	call	_MPU6050_initialize	;wreg free
  5295  0000B0                     
  5296                           ;main.c: 213:     USART_UART_transmitString( "Testing device connections...\n" );
  5297  0000B0  0E07               	movlw	low STR_2
  5298  0000B2  6E05               	movwf	USART_UART_transmitString@data^0,c
  5299  0000B4  0E7F               	movlw	high STR_2
  5300  0000B6  6E06               	movwf	(USART_UART_transmitString@data+1)^0,c
  5301  0000B8  ECC5  F030         	call	_USART_UART_transmitString	;wreg free
  5302  0000BC                     
  5303                           ;main.c: 214:     USART_UART_transmitString( MPU6050_testConnection() ? "MPU6050 connect
      +                          ion successful\n": "MPU6050 connection failed\n" );
  5304  0000BC  EC75  F033         	call	_MPU6050_testConnection	;wreg free
  5305  0000C0  0900               	iorlw	0
  5306  0000C2  A4D8               	btfss	status,2,c
  5307  0000C4  EF66  F000         	goto	u11791
  5308  0000C8  EF68  F000         	goto	u11790
  5309  0000CC                     u11791:
  5310  0000CC  EF6F  F000         	goto	l12675
  5311  0000D0                     u11790:
  5312  0000D0  0E62               	movlw	low STR_4
  5313  0000D2  0101               	movlb	1	; () banked
  5314  0000D4  6FD7               	movwf	_main$2480& (0+255),b
  5315  0000D6  0E7F               	movlw	high STR_4
  5316  0000D8  6FD8               	movwf	(_main$2480+1)& (0+255),b
  5317  0000DA  EF74  F000         	goto	l12677
  5318  0000DE                     l12675:
  5319  0000DE  0E26               	movlw	low STR_3
  5320  0000E0  0101               	movlb	1	; () banked
  5321  0000E2  6FD7               	movwf	_main$2480& (0+255),b
  5322  0000E4  0E7F               	movlw	high STR_3
  5323  0000E6  6FD8               	movwf	(_main$2480+1)& (0+255),b
  5324  0000E8                     l12677:
  5325                           
  5326                           ; BSR set to: 1
  5327  0000E8  C1D7  F005         	movff	_main$2480,USART_UART_transmitString@data
  5328  0000EC  C1D8  F006         	movff	_main$2480+1,USART_UART_transmitString@data+1
  5329  0000F0  ECC5  F030         	call	_USART_UART_transmitString	;wreg free
  5330  0000F4                     
  5331                           ;main.c: 218:     USART_UART_transmitString( "Initializing DMP...\n" );
  5332  0000F4  0EC5               	movlw	low STR_5
  5333  0000F6  6E05               	movwf	USART_UART_transmitString@data^0,c
  5334  0000F8  0E7F               	movlw	high STR_5
  5335  0000FA  6E06               	movwf	(USART_UART_transmitString@data+1)^0,c
  5336  0000FC  ECC5  F030         	call	_USART_UART_transmitString	;wreg free
  5337  000100                     
  5338                           ;main.c: 219:     if(MPU6050_dmpInitialize())
  5339  000100  ECBA  F026         	call	_MPU6050_dmpInitialize	;wreg free
  5340  000104  0900               	iorlw	0
  5341  000106  B4D8               	btfsc	status,2,c
  5342  000108  EF88  F000         	goto	u11801
  5343  00010C  EF8A  F000         	goto	u11800
  5344  000110                     u11801:
  5345  000110  EF92  F000         	goto	l12685
  5346  000114                     u11800:
  5347  000114                     
  5348                           ;main.c: 220:         USART_UART_transmitString( "Initialization Sucessfull\n" );
  5349  000114  0E7D               	movlw	low STR_6
  5350  000116  6E05               	movwf	USART_UART_transmitString@data^0,c
  5351  000118  0E7F               	movlw	high STR_6
  5352  00011A  6E06               	movwf	(USART_UART_transmitString@data+1)^0,c
  5353  00011C  ECC5  F030         	call	_USART_UART_transmitString	;wreg free
  5354  000120  EF9A  F000         	goto	l12687
  5355  000124                     l12685:
  5356                           
  5357                           ;main.c: 222:     {;main.c: 223:         USART_UART_transmitString( "Initialization Fail
      +                          ed\n" );
  5358  000124  0E98               	movlw	low STR_7
  5359  000126  6E05               	movwf	USART_UART_transmitString@data^0,c
  5360  000128  0E7F               	movlw	high STR_7
  5361  00012A  6E06               	movwf	(USART_UART_transmitString@data+1)^0,c
  5362  00012C  ECC5  F030         	call	_USART_UART_transmitString	;wreg free
  5363  000130                     l1763:
  5364  000130  EF98  F000         	goto	l1763
  5365  000134                     l12687:
  5366                           
  5367                           ;main.c: 239:     USART_UART_transmitString( "Enabling DMP...\n" );
  5368  000134  0EDA               	movlw	low STR_8
  5369  000136  6E05               	movwf	USART_UART_transmitString@data^0,c
  5370  000138  0E7F               	movlw	high STR_8
  5371  00013A  6E06               	movwf	(USART_UART_transmitString@data+1)^0,c
  5372  00013C  ECC5  F030         	call	_USART_UART_transmitString	;wreg free
  5373  000140                     
  5374                           ;main.c: 240:     MPU6050_setDMPEnabled(1);
  5375  000140  0E01               	movlw	1
  5376  000142  ECE8  F033         	call	_MPU6050_setDMPEnabled
  5377  000146  EC8F  F033         	call	_MPU6050_getIntStatus	;wreg free
  5378  00014A  EC3C  F034         	call	_MPU6050_dmpGetFIFOPacketSize	;wreg free
  5379  00014E                     
  5380                           ;main.c: 252:     uint32_t time_elapsed = time_ms;
  5381  00014E  C174  F1D3         	movff	_time_ms,main@time_elapsed
  5382  000152  C175  F1D4         	movff	_time_ms+1,main@time_elapsed+1
  5383  000156  C176  F1D5         	movff	_time_ms+2,main@time_elapsed+2
  5384  00015A  C177  F1D6         	movff	_time_ms+3,main@time_elapsed+3
  5385  00015E                     
  5386                           ;main.c: 253:     uint8_t countZero[3]= "";
  5387  00015E  0E00               	movlw	0
  5388  000160  0101               	movlb	1	; () banked
  5389  000162  6FDB               	movwf	main@countZero& (0+255),b
  5390  000164  0E00               	movlw	0
  5391  000166  6FDC               	movwf	(main@countZero+1)& (0+255),b
  5392  000168  0E00               	movlw	0
  5393  00016A  6FDD               	movwf	(main@countZero+2)& (0+255),b
  5394  00016C                     l12701:
  5395                           
  5396                           ;main.c: 255:     {;main.c: 256:         dt = 0.010f;
  5397  00016C  0E0A               	movlw	10
  5398  00016E  0101               	movlb	1	; () banked
  5399  000170  6F68               	movwf	_dt& (0+255),b
  5400  000172  0ED7               	movlw	215
  5401  000174  6F69               	movwf	(_dt+1)& (0+255),b
  5402  000176  0E23               	movlw	35
  5403  000178  6F6A               	movwf	(_dt+2)& (0+255),b
  5404  00017A  0E3C               	movlw	60
  5405  00017C  6F6B               	movwf	(_dt+3)& (0+255),b
  5406  00017E                     
  5407                           ; BSR set to: 1
  5408                           ;main.c: 259:         controlReceive();
  5409  00017E  EC56  F014         	call	_controlReceive	;wreg free
  5410  000182                     l12705:
  5411  000182  0101               	movlb	1	; () banked
  5412  000184  517D               	movf	_mpuInterrupt& (0+255),w,b
  5413  000186  B4D8               	btfsc	status,2,c
  5414  000188  EFC8  F000         	goto	u11811
  5415  00018C  EFCA  F000         	goto	u11810
  5416  000190                     u11811:
  5417  000190  EFC1  F000         	goto	l12705
  5418  000194                     u11810:
  5419  000194                     
  5420                           ; BSR set to: 1
  5421                           ;main.c: 288:         mpuInterrupt = 0;
  5422  000194  0E00               	movlw	0
  5423  000196  6F7D               	movwf	_mpuInterrupt& (0+255),b
  5424  000198                     l12709:
  5425  000198  0EAE               	movlw	low main@fifoBuffer
  5426  00019A  6E50               	movwf	MPU6050_dmpGetCurrentFIFOPacket@data^0,c
  5427  00019C  0E01               	movlw	high main@fifoBuffer
  5428  00019E  6E51               	movwf	(MPU6050_dmpGetCurrentFIFOPacket@data+1)^0,c
  5429  0001A0  EC2B  F034         	call	_MPU6050_dmpGetCurrentFIFOPacket	;wreg free
  5430  0001A4  0900               	iorlw	0
  5431  0001A6  B4D8               	btfsc	status,2,c
  5432  0001A8  EFD8  F000         	goto	u11821
  5433  0001AC  EFDA  F000         	goto	u11820
  5434  0001B0                     u11821:
  5435  0001B0  EFCC  F000         	goto	l12709
  5436  0001B4                     u11820:
  5437  0001B4                     
  5438                           ;main.c: 292:         MPU6050_dmpGetQuaternionQ(&q, fifoBuffer);
  5439  0001B4  0EA3               	movlw	low _q
  5440  0001B6  6E31               	movwf	MPU6050_dmpGetQuaternionQ@q^0,c
  5441  0001B8  0E02               	movlw	high _q
  5442  0001BA  6E32               	movwf	(MPU6050_dmpGetQuaternionQ@q+1)^0,c
  5443  0001BC  0EAE               	movlw	low main@fifoBuffer
  5444  0001BE  6E33               	movwf	MPU6050_dmpGetQuaternionQ@packet^0,c
  5445  0001C0  0E01               	movlw	high main@fifoBuffer
  5446  0001C2  6E34               	movwf	(MPU6050_dmpGetQuaternionQ@packet+1)^0,c
  5447  0001C4  ECF2  F025         	call	_MPU6050_dmpGetQuaternionQ	;wreg free
  5448                           
  5449                           ;main.c: 293:         MPU6050_dmpGetAccelI16(&aa, fifoBuffer);
  5450  0001C8  0ECB               	movlw	low _aa
  5451  0001CA  6E04               	movwf	MPU6050_dmpGetAccelI16@data^0,c
  5452  0001CC  0E02               	movlw	high _aa
  5453  0001CE  6E05               	movwf	(MPU6050_dmpGetAccelI16@data+1)^0,c
  5454  0001D0  0EAE               	movlw	low main@fifoBuffer
  5455  0001D2  6E06               	movwf	MPU6050_dmpGetAccelI16@packet^0,c
  5456  0001D4  0E01               	movlw	high main@fifoBuffer
  5457  0001D6  6E07               	movwf	(MPU6050_dmpGetAccelI16@packet+1)^0,c
  5458  0001D8  EC03  F02A         	call	_MPU6050_dmpGetAccelI16	;wreg free
  5459  0001DC                     
  5460                           ;main.c: 294:         MPU6050_dmpGetGravityVF(&gravity, &q);
  5461  0001DC  0EBF               	movlw	low _gravity
  5462  0001DE  0100               	movlb	0	; () banked
  5463  0001E0  6F68               	movwf	MPU6050_dmpGetGravityVF@v& (0+255),b
  5464  0001E2  0E02               	movlw	high _gravity
  5465  0001E4  6F69               	movwf	(MPU6050_dmpGetGravityVF@v+1)& (0+255),b
  5466  0001E6  0EA3               	movlw	low _q
  5467  0001E8  6F6A               	movwf	MPU6050_dmpGetGravityVF@q& (0+255),b
  5468  0001EA  0E02               	movlw	high _q
  5469  0001EC  6F6B               	movwf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),b
  5470  0001EE  ECAC  F01D         	call	_MPU6050_dmpGetGravityVF	;wreg free
  5471  0001F2                     
  5472                           ;main.c: 295:         MPU6050_dmpGetLinearAccel(&aaReal, &aa, &gravity);
  5473  0001F2  0EA6               	movlw	low _aaReal
  5474  0001F4  0100               	movlb	0	; () banked
  5475  0001F6  6F72               	movwf	MPU6050_dmpGetLinearAccel@v& (0+255),b
  5476  0001F8  0E01               	movlw	high _aaReal
  5477  0001FA  6F73               	movwf	(MPU6050_dmpGetLinearAccel@v+1)& (0+255),b
  5478  0001FC  0ECB               	movlw	low _aa
  5479  0001FE  6F74               	movwf	MPU6050_dmpGetLinearAccel@vRaw& (0+255),b
  5480  000200  0E02               	movlw	high _aa
  5481  000202  6F75               	movwf	(MPU6050_dmpGetLinearAccel@vRaw+1)& (0+255),b
  5482  000204  0EBF               	movlw	low _gravity
  5483  000206  6F76               	movwf	MPU6050_dmpGetLinearAccel@gravity& (0+255),b
  5484  000208  0E02               	movlw	high _gravity
  5485  00020A  6F77               	movwf	(MPU6050_dmpGetLinearAccel@gravity+1)& (0+255),b
  5486  00020C  EC3C  F023         	call	_MPU6050_dmpGetLinearAccel	;wreg free
  5487  000210                     
  5488                           ;main.c: 297:         MPU6050_dmpGetRoll(ypr, &q, &gravity);
  5489  000210  0EB3               	movlw	low _ypr
  5490  000212  0100               	movlb	0	; () banked
  5491  000214  6FDA               	movwf	MPU6050_dmpGetRoll@data& (0+255),b
  5492  000216  0E02               	movlw	high _ypr
  5493  000218  6FDB               	movwf	(MPU6050_dmpGetRoll@data+1)& (0+255),b
  5494  00021A  0EA3               	movlw	low _q
  5495  00021C  6FDC               	movwf	MPU6050_dmpGetRoll@q& (0+255),b
  5496  00021E  0E02               	movlw	high _q
  5497  000220  6FDD               	movwf	(MPU6050_dmpGetRoll@q+1)& (0+255),b
  5498  000222  0EBF               	movlw	low _gravity
  5499  000224  6FDE               	movwf	MPU6050_dmpGetRoll@gravity& (0+255),b
  5500  000226  0E02               	movlw	high _gravity
  5501  000228  6FDF               	movwf	(MPU6050_dmpGetRoll@gravity+1)& (0+255),b
  5502  00022A  ECF4  F030         	call	_MPU6050_dmpGetRoll	;wreg free
  5503  00022E                     
  5504                           ;main.c: 347:         teapotPacket[2] = fifoBuffer[0];
  5505  00022E  C1AE  F2D3         	movff	main@fifoBuffer,_teapotPacket+2
  5506  000232                     
  5507                           ;main.c: 348:         teapotPacket[3] = fifoBuffer[1];
  5508  000232  C1AF  F2D4         	movff	main@fifoBuffer+1,_teapotPacket+3
  5509  000236                     
  5510                           ;main.c: 349:         teapotPacket[4] = fifoBuffer[4];
  5511  000236  C1B2  F2D5         	movff	main@fifoBuffer+4,_teapotPacket+4
  5512  00023A                     
  5513                           ;main.c: 350:         teapotPacket[5] = fifoBuffer[5];
  5514  00023A  C1B3  F2D6         	movff	main@fifoBuffer+5,_teapotPacket+5
  5515  00023E                     
  5516                           ;main.c: 351:         teapotPacket[6] = fifoBuffer[8];
  5517  00023E  C1B6  F2D7         	movff	main@fifoBuffer+8,_teapotPacket+6
  5518  000242                     
  5519                           ;main.c: 352:         teapotPacket[7] = fifoBuffer[9];
  5520  000242  C1B7  F2D8         	movff	main@fifoBuffer+9,_teapotPacket+7
  5521  000246                     
  5522                           ;main.c: 353:         teapotPacket[8] = fifoBuffer[12];
  5523  000246  C1BA  F2D9         	movff	main@fifoBuffer+12,_teapotPacket+8
  5524  00024A                     
  5525                           ;main.c: 354:         teapotPacket[9] = fifoBuffer[13];
  5526  00024A  C1BB  F2DA         	movff	main@fifoBuffer+13,_teapotPacket+9
  5527  00024E                     
  5528                           ;main.c: 356:         teapotPacket[10] = ((int)(displacement.x*1000)) >> 8;
  5529  00024E  0E00               	movlw	0
  5530  000250  6E35               	movwf	___flmul@a^0,c
  5531  000252  0E00               	movlw	0
  5532  000254  6E36               	movwf	(___flmul@a+1)^0,c
  5533  000256  0E7A               	movlw	122
  5534  000258  6E37               	movwf	(___flmul@a+2)^0,c
  5535  00025A  0E44               	movlw	68
  5536  00025C  6E38               	movwf	(___flmul@a+3)^0,c
  5537  00025E  C124  F031         	movff	_displacement,___flmul@b
  5538  000262  C125  F032         	movff	_displacement+1,___flmul@b+1
  5539  000266  C126  F033         	movff	_displacement+2,___flmul@b+2
  5540  00026A  C127  F034         	movff	_displacement+3,___flmul@b+3
  5541  00026E  ECCA  F019         	call	___flmul	;wreg free
  5542  000272  C031  F068         	movff	?___flmul,___fltol@f1
  5543  000276  C032  F069         	movff	?___flmul+1,___fltol@f1+1
  5544  00027A  C033  F06A         	movff	?___flmul+2,___fltol@f1+2
  5545  00027E  C034  F06B         	movff	?___flmul+3,___fltol@f1+3
  5546  000282  EC0C  F028         	call	___fltol	;wreg free
  5547  000286  0100               	movlb	0	; () banked
  5548  000288  C069  F068         	movff	?___fltol+1,?___fltol
  5549  00028C  6B69               	clrf	(?___fltol+1)& (0+255),b
  5550  00028E  BF68               	btfsc	?___fltol& (0+255),7,b
  5551  000290  6969               	setf	(?___fltol+1)& (0+255),b
  5552  000292  5168               	movf	?___fltol& (0+255),w,b
  5553  000294  0102               	movlb	2	; () banked
  5554  000296  6FDB               	movwf	(_teapotPacket+10)& (0+255),b
  5555  000298                     
  5556                           ; BSR set to: 2
  5557                           ;main.c: 357:         teapotPacket[11] = ((int)(displacement.x*1000)) & 0x00FF;
  5558  000298  0E00               	movlw	0
  5559  00029A  6E35               	movwf	___flmul@a^0,c
  5560  00029C  0E00               	movlw	0
  5561  00029E  6E36               	movwf	(___flmul@a+1)^0,c
  5562  0002A0  0E7A               	movlw	122
  5563  0002A2  6E37               	movwf	(___flmul@a+2)^0,c
  5564  0002A4  0E44               	movlw	68
  5565  0002A6  6E38               	movwf	(___flmul@a+3)^0,c
  5566  0002A8  C124  F031         	movff	_displacement,___flmul@b
  5567  0002AC  C125  F032         	movff	_displacement+1,___flmul@b+1
  5568  0002B0  C126  F033         	movff	_displacement+2,___flmul@b+2
  5569  0002B4  C127  F034         	movff	_displacement+3,___flmul@b+3
  5570  0002B8  ECCA  F019         	call	___flmul	;wreg free
  5571  0002BC  C031  F068         	movff	?___flmul,___fltol@f1
  5572  0002C0  C032  F069         	movff	?___flmul+1,___fltol@f1+1
  5573  0002C4  C033  F06A         	movff	?___flmul+2,___fltol@f1+2
  5574  0002C8  C034  F06B         	movff	?___flmul+3,___fltol@f1+3
  5575  0002CC  EC0C  F028         	call	___fltol	;wreg free
  5576  0002D0  0100               	movlb	0	; () banked
  5577  0002D2  5168               	movf	?___fltol& (0+255),w,b
  5578  0002D4  0102               	movlb	2	; () banked
  5579  0002D6  6FDC               	movwf	(_teapotPacket+11)& (0+255),b
  5580  0002D8                     
  5581                           ; BSR set to: 2
  5582                           ;main.c: 358:         teapotPacket[12] = ((int)(displacement.y*1000)) >> 8;
  5583  0002D8  0E00               	movlw	0
  5584  0002DA  6E35               	movwf	___flmul@a^0,c
  5585  0002DC  0E00               	movlw	0
  5586  0002DE  6E36               	movwf	(___flmul@a+1)^0,c
  5587  0002E0  0E7A               	movlw	122
  5588  0002E2  6E37               	movwf	(___flmul@a+2)^0,c
  5589  0002E4  0E44               	movlw	68
  5590  0002E6  6E38               	movwf	(___flmul@a+3)^0,c
  5591  0002E8  C128  F031         	movff	_displacement+4,___flmul@b
  5592  0002EC  C129  F032         	movff	_displacement+5,___flmul@b+1
  5593  0002F0  C12A  F033         	movff	_displacement+6,___flmul@b+2
  5594  0002F4  C12B  F034         	movff	_displacement+7,___flmul@b+3
  5595  0002F8  ECCA  F019         	call	___flmul	;wreg free
  5596  0002FC  C031  F068         	movff	?___flmul,___fltol@f1
  5597  000300  C032  F069         	movff	?___flmul+1,___fltol@f1+1
  5598  000304  C033  F06A         	movff	?___flmul+2,___fltol@f1+2
  5599  000308  C034  F06B         	movff	?___flmul+3,___fltol@f1+3
  5600  00030C  EC0C  F028         	call	___fltol	;wreg free
  5601  000310  0100               	movlb	0	; () banked
  5602  000312  C069  F068         	movff	?___fltol+1,?___fltol
  5603  000316  6B69               	clrf	(?___fltol+1)& (0+255),b
  5604  000318  BF68               	btfsc	?___fltol& (0+255),7,b
  5605  00031A  6969               	setf	(?___fltol+1)& (0+255),b
  5606  00031C  5168               	movf	?___fltol& (0+255),w,b
  5607  00031E  0102               	movlb	2	; () banked
  5608  000320  6FDD               	movwf	(_teapotPacket+12)& (0+255),b
  5609  000322                     
  5610                           ; BSR set to: 2
  5611                           ;main.c: 359:         teapotPacket[13] = ((int)(displacement.y*1000)) & 0x00FF;
  5612  000322  0E00               	movlw	0
  5613  000324  6E35               	movwf	___flmul@a^0,c
  5614  000326  0E00               	movlw	0
  5615  000328  6E36               	movwf	(___flmul@a+1)^0,c
  5616  00032A  0E7A               	movlw	122
  5617  00032C  6E37               	movwf	(___flmul@a+2)^0,c
  5618  00032E  0E44               	movlw	68
  5619  000330  6E38               	movwf	(___flmul@a+3)^0,c
  5620  000332  C128  F031         	movff	_displacement+4,___flmul@b
  5621  000336  C129  F032         	movff	_displacement+5,___flmul@b+1
  5622  00033A  C12A  F033         	movff	_displacement+6,___flmul@b+2
  5623  00033E  C12B  F034         	movff	_displacement+7,___flmul@b+3
  5624  000342  ECCA  F019         	call	___flmul	;wreg free
  5625  000346  C031  F068         	movff	?___flmul,___fltol@f1
  5626  00034A  C032  F069         	movff	?___flmul+1,___fltol@f1+1
  5627  00034E  C033  F06A         	movff	?___flmul+2,___fltol@f1+2
  5628  000352  C034  F06B         	movff	?___flmul+3,___fltol@f1+3
  5629  000356  EC0C  F028         	call	___fltol	;wreg free
  5630  00035A  0100               	movlb	0	; () banked
  5631  00035C  5168               	movf	?___fltol& (0+255),w,b
  5632  00035E  0102               	movlb	2	; () banked
  5633  000360  6FDE               	movwf	(_teapotPacket+13)& (0+255),b
  5634  000362                     
  5635                           ; BSR set to: 2
  5636                           ;main.c: 364:         float angle = ypr[2]*RAD_TO_DEG;
  5637  000362  C2BB  F031         	movff	_ypr+8,___flmul@b
  5638  000366  C2BC  F032         	movff	_ypr+9,___flmul@b+1
  5639  00036A  C2BD  F033         	movff	_ypr+10,___flmul@b+2
  5640  00036E  C2BE  F034         	movff	_ypr+11,___flmul@b+3
  5641  000372  0EE1               	movlw	225
  5642  000374  6E35               	movwf	___flmul@a^0,c
  5643  000376  0E2E               	movlw	46
  5644  000378  6E36               	movwf	(___flmul@a+1)^0,c
  5645  00037A  0E65               	movlw	101
  5646  00037C  6E37               	movwf	(___flmul@a+2)^0,c
  5647  00037E  0E42               	movlw	66
  5648  000380  6E38               	movwf	(___flmul@a+3)^0,c
  5649  000382  ECCA  F019         	call	___flmul	;wreg free
  5650  000386  C031  F1E6         	movff	?___flmul,main@angle
  5651  00038A  C032  F1E7         	movff	?___flmul+1,main@angle+1
  5652  00038E  C033  F1E8         	movff	?___flmul+2,main@angle+2
  5653  000392  C034  F1E9         	movff	?___flmul+3,main@angle+3
  5654  000396                     
  5655                           ;main.c: 365:         if(!start && angle < 2 && angle > -2) start = 1;
  5656  000396  0101               	movlb	1	; () banked
  5657  000398  517C               	movf	_start& (0+255),w,b
  5658  00039A  A4D8               	btfss	status,2,c
  5659  00039C  EFD2  F001         	goto	u11831
  5660  0003A0  EFD4  F001         	goto	u11830
  5661  0003A4                     u11831:
  5662  0003A4  EF09  F002         	goto	l1786
  5663  0003A8                     u11830:
  5664  0003A8                     
  5665                           ; BSR set to: 1
  5666  0003A8  C1E6  F04A         	movff	main@angle,___flge@ff1
  5667  0003AC  C1E7  F04B         	movff	main@angle+1,___flge@ff1+1
  5668  0003B0  C1E8  F04C         	movff	main@angle+2,___flge@ff1+2
  5669  0003B4  C1E9  F04D         	movff	main@angle+3,___flge@ff1+3
  5670  0003B8  0E00               	movlw	0
  5671  0003BA  6E4E               	movwf	___flge@ff2^0,c
  5672  0003BC  0E00               	movlw	0
  5673  0003BE  6E4F               	movwf	(___flge@ff2+1)^0,c
  5674  0003C0  0E00               	movlw	0
  5675  0003C2  6E50               	movwf	(___flge@ff2+2)^0,c
  5676  0003C4  0E40               	movlw	64
  5677  0003C6  6E51               	movwf	(___flge@ff2+3)^0,c
  5678  0003C8  EC90  F028         	call	___flge	;wreg free
  5679  0003CC  B0D8               	btfsc	status,0,c
  5680  0003CE  EFEB  F001         	goto	u11841
  5681  0003D2  EFED  F001         	goto	u11840
  5682  0003D6                     u11841:
  5683  0003D6  EF09  F002         	goto	l1786
  5684  0003DA                     u11840:
  5685  0003DA  0E00               	movlw	0
  5686  0003DC  6E4A               	movwf	___flge@ff1^0,c
  5687  0003DE  0E00               	movlw	0
  5688  0003E0  6E4B               	movwf	(___flge@ff1+1)^0,c
  5689  0003E2  0E00               	movlw	0
  5690  0003E4  6E4C               	movwf	(___flge@ff1+2)^0,c
  5691  0003E6  0EC0               	movlw	192
  5692  0003E8  6E4D               	movwf	(___flge@ff1+3)^0,c
  5693  0003EA  C1E6  F04E         	movff	main@angle,___flge@ff2
  5694  0003EE  C1E7  F04F         	movff	main@angle+1,___flge@ff2+1
  5695  0003F2  C1E8  F050         	movff	main@angle+2,___flge@ff2+2
  5696  0003F6  C1E9  F051         	movff	main@angle+3,___flge@ff2+3
  5697  0003FA  EC90  F028         	call	___flge	;wreg free
  5698  0003FE  B0D8               	btfsc	status,0,c
  5699  000400  EF04  F002         	goto	u11851
  5700  000404  EF06  F002         	goto	u11850
  5701  000408                     u11851:
  5702  000408  EF09  F002         	goto	l1786
  5703  00040C                     u11850:
  5704  00040C  0E01               	movlw	1
  5705  00040E  0101               	movlb	1	; () banked
  5706  000410  6F7C               	movwf	_start& (0+255),b
  5707  000412                     l1786:
  5708                           
  5709                           ;main.c: 366:         if(start && angle < 80 && angle > -80 )
  5710  000412  0101               	movlb	1	; () banked
  5711  000414  517C               	movf	_start& (0+255),w,b
  5712  000416  B4D8               	btfsc	status,2,c
  5713  000418  EF10  F002         	goto	u11861
  5714  00041C  EF12  F002         	goto	u11860
  5715  000420                     u11861:
  5716  000420  EF3A  F004         	goto	l12837
  5717  000424                     u11860:
  5718  000424                     
  5719                           ; BSR set to: 1
  5720  000424  C1E6  F04A         	movff	main@angle,___flge@ff1
  5721  000428  C1E7  F04B         	movff	main@angle+1,___flge@ff1+1
  5722  00042C  C1E8  F04C         	movff	main@angle+2,___flge@ff1+2
  5723  000430  C1E9  F04D         	movff	main@angle+3,___flge@ff1+3
  5724  000434  0E00               	movlw	0
  5725  000436  6E4E               	movwf	___flge@ff2^0,c
  5726  000438  0E00               	movlw	0
  5727  00043A  6E4F               	movwf	(___flge@ff2+1)^0,c
  5728  00043C  0EA0               	movlw	160
  5729  00043E  6E50               	movwf	(___flge@ff2+2)^0,c
  5730  000440  0E42               	movlw	66
  5731  000442  6E51               	movwf	(___flge@ff2+3)^0,c
  5732  000444  EC90  F028         	call	___flge	;wreg free
  5733  000448  B0D8               	btfsc	status,0,c
  5734  00044A  EF29  F002         	goto	u11871
  5735  00044E  EF2B  F002         	goto	u11870
  5736  000452                     u11871:
  5737  000452  EF3A  F004         	goto	l12837
  5738  000456                     u11870:
  5739  000456  0E00               	movlw	0
  5740  000458  6E4A               	movwf	___flge@ff1^0,c
  5741  00045A  0E00               	movlw	0
  5742  00045C  6E4B               	movwf	(___flge@ff1+1)^0,c
  5743  00045E  0EA0               	movlw	160
  5744  000460  6E4C               	movwf	(___flge@ff1+2)^0,c
  5745  000462  0EC2               	movlw	194
  5746  000464  6E4D               	movwf	(___flge@ff1+3)^0,c
  5747  000466  C1E6  F04E         	movff	main@angle,___flge@ff2
  5748  00046A  C1E7  F04F         	movff	main@angle+1,___flge@ff2+1
  5749  00046E  C1E8  F050         	movff	main@angle+2,___flge@ff2+2
  5750  000472  C1E9  F051         	movff	main@angle+3,___flge@ff2+3
  5751  000476  EC90  F028         	call	___flge	;wreg free
  5752  00047A  B0D8               	btfsc	status,0,c
  5753  00047C  EF42  F002         	goto	u11881
  5754  000480  EF44  F002         	goto	u11880
  5755  000484                     u11881:
  5756  000484  EF3A  F004         	goto	l12837
  5757  000488                     u11880:
  5758  000488                     
  5759                           ;main.c: 367:         {;main.c: 368:             error = setPoint + self_setPoint - angl
      +                          e;
  5760  000488  C16C  F04E         	movff	_self_setPoint,___fladd@a
  5761  00048C  C16D  F04F         	movff	_self_setPoint+1,___fladd@a+1
  5762  000490  C16E  F050         	movff	_self_setPoint+2,___fladd@a+2
  5763  000494  C16F  F051         	movff	_self_setPoint+3,___fladd@a+3
  5764  000498  C170  F04A         	movff	_setPoint,___fladd@b
  5765  00049C  C171  F04B         	movff	_setPoint+1,___fladd@b+1
  5766  0004A0  C172  F04C         	movff	_setPoint+2,___fladd@b+2
  5767  0004A4  C173  F04D         	movff	_setPoint+3,___fladd@b+3
  5768  0004A8  EC6A  F017         	call	___fladd	;wreg free
  5769  0004AC  C04A  F1CF         	movff	?___fladd,_main$4558
  5770  0004B0  C04B  F1D0         	movff	?___fladd+1,_main$4558+1
  5771  0004B4  C04C  F1D1         	movff	?___fladd+2,_main$4558+2
  5772  0004B8  C04D  F1D2         	movff	?___fladd+3,_main$4558+3
  5773                           
  5774                           ;main.c: 367:         {;main.c: 368:             error = setPoint + self_setPoint - angl
      +                          e;
  5775  0004BC  C1CF  F060         	movff	_main$4558,___flsub@b
  5776  0004C0  C1D0  F061         	movff	_main$4558+1,___flsub@b+1
  5777  0004C4  C1D1  F062         	movff	_main$4558+2,___flsub@b+2
  5778  0004C8  C1D2  F063         	movff	_main$4558+3,___flsub@b+3
  5779  0004CC  C1E6  F064         	movff	main@angle,___flsub@a
  5780  0004D0  C1E7  F065         	movff	main@angle+1,___flsub@a+1
  5781  0004D4  C1E8  F066         	movff	main@angle+2,___flsub@a+2
  5782  0004D8  C1E9  F067         	movff	main@angle+3,___flsub@a+3
  5783  0004DC  ECA9  F031         	call	___flsub	;wreg free
  5784  0004E0  C060  F15C         	movff	?___flsub,_error
  5785  0004E4  C061  F15D         	movff	?___flsub+1,_error+1
  5786  0004E8  C062  F15E         	movff	?___flsub+2,_error+2
  5787  0004EC  C063  F15F         	movff	?___flsub+3,_error+3
  5788  0004F0                     
  5789                           ;main.c: 369:             integral += kI*error;
  5790  0004F0  C158  F04A         	movff	_integral,___fladd@b
  5791  0004F4  C159  F04B         	movff	_integral+1,___fladd@b+1
  5792  0004F8  C15A  F04C         	movff	_integral+2,___fladd@b+2
  5793  0004FC  C15B  F04D         	movff	_integral+3,___fladd@b+3
  5794  000500  C15C  F035         	movff	_error,___flmul@a
  5795  000504  C15D  F036         	movff	_error+1,___flmul@a+1
  5796  000508  C15E  F037         	movff	_error+2,___flmul@a+2
  5797  00050C  C15F  F038         	movff	_error+3,___flmul@a+3
  5798  000510  C1F2  F031         	movff	_kI,___flmul@b
  5799  000514  C1F3  F032         	movff	_kI+1,___flmul@b+1
  5800  000518  C1F4  F033         	movff	_kI+2,___flmul@b+2
  5801  00051C  C1F5  F034         	movff	_kI+3,___flmul@b+3
  5802  000520  ECCA  F019         	call	___flmul	;wreg free
  5803  000524  C031  F04E         	movff	?___flmul,___fladd@a
  5804  000528  C032  F04F         	movff	?___flmul+1,___fladd@a+1
  5805  00052C  C033  F050         	movff	?___flmul+2,___fladd@a+2
  5806  000530  C034  F051         	movff	?___flmul+3,___fladd@a+3
  5807  000534  EC6A  F017         	call	___fladd	;wreg free
  5808  000538  C04A  F158         	movff	?___fladd,_integral
  5809  00053C  C04B  F159         	movff	?___fladd+1,_integral+1
  5810  000540  C04C  F15A         	movff	?___fladd+2,_integral+2
  5811  000544  C04D  F15B         	movff	?___fladd+3,_integral+3
  5812  000548                     
  5813                           ;main.c: 370:             if(integral > mOutLimite ) integral = mOutLimite; else if(inte
      +                          gral < -mOutLimite) integral = -mOutLimite;
  5814  000548  C1FC  F00A         	movff	_mOutLimite,___xxtofl@val
  5815  00054C  C1FD  F00B         	movff	_mOutLimite+1,___xxtofl@val+1
  5816  000550  0E00               	movlw	0
  5817  000552  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5818  000554  0EFF               	movlw	-1
  5819  000556  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5820  000558  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5821  00055A  0E01               	movlw	1
  5822  00055C  EC18  F025         	call	___xxtofl
  5823  000560  C00A  F04A         	movff	?___xxtofl,___flge@ff1
  5824  000564  C00B  F04B         	movff	?___xxtofl+1,___flge@ff1+1
  5825  000568  C00C  F04C         	movff	?___xxtofl+2,___flge@ff1+2
  5826  00056C  C00D  F04D         	movff	?___xxtofl+3,___flge@ff1+3
  5827  000570  C158  F04E         	movff	_integral,___flge@ff2
  5828  000574  C159  F04F         	movff	_integral+1,___flge@ff2+1
  5829  000578  C15A  F050         	movff	_integral+2,___flge@ff2+2
  5830  00057C  C15B  F051         	movff	_integral+3,___flge@ff2+3
  5831  000580  EC90  F028         	call	___flge	;wreg free
  5832  000584  B0D8               	btfsc	status,0,c
  5833  000586  EFC7  F002         	goto	u11891
  5834  00058A  EFC9  F002         	goto	u11890
  5835  00058E                     u11891:
  5836  00058E  EFDF  F002         	goto	l12821
  5837  000592                     u11890:
  5838  000592  C1FC  F00A         	movff	_mOutLimite,___xxtofl@val
  5839  000596  C1FD  F00B         	movff	_mOutLimite+1,___xxtofl@val+1
  5840  00059A  0E00               	movlw	0
  5841  00059C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5842  00059E  0EFF               	movlw	-1
  5843  0005A0  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5844  0005A2  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5845  0005A4  0E01               	movlw	1
  5846  0005A6  EC18  F025         	call	___xxtofl
  5847  0005AA  C00A  F158         	movff	?___xxtofl,_integral
  5848  0005AE  C00B  F159         	movff	?___xxtofl+1,_integral+1
  5849  0005B2  C00C  F15A         	movff	?___xxtofl+2,_integral+2
  5850  0005B6  C00D  F15B         	movff	?___xxtofl+3,_integral+3
  5851  0005BA  EF2A  F003         	goto	l12825
  5852  0005BE                     l12821:
  5853  0005BE  C158  F04A         	movff	_integral,___flge@ff1
  5854  0005C2  C159  F04B         	movff	_integral+1,___flge@ff1+1
  5855  0005C6  C15A  F04C         	movff	_integral+2,___flge@ff1+2
  5856  0005CA  C15B  F04D         	movff	_integral+3,___flge@ff1+3
  5857  0005CE  C1FC  F0EC         	movff	_mOutLimite,??_main
  5858  0005D2  C1FD  F0ED         	movff	_mOutLimite+1,??_main+1
  5859  0005D6  0100               	movlb	0	; () banked
  5860  0005D8  1FEC               	comf	??_main& (0+255),f,b
  5861  0005DA  1FED               	comf	(??_main+1)& (0+255),f,b
  5862  0005DC  4BEC               	infsnz	??_main& (0+255),f,b
  5863  0005DE  2BED               	incf	(??_main+1)& (0+255),f,b
  5864  0005E0  C0EC  F00A         	movff	??_main,___xxtofl@val
  5865  0005E4  C0ED  F00B         	movff	??_main+1,___xxtofl@val+1
  5866  0005E8  0E00               	movlw	0
  5867  0005EA  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5868  0005EC  0EFF               	movlw	-1
  5869  0005EE  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5870  0005F0  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5871  0005F2  0E01               	movlw	1
  5872  0005F4  EC18  F025         	call	___xxtofl
  5873  0005F8  C00A  F04E         	movff	?___xxtofl,___flge@ff2
  5874  0005FC  C00B  F04F         	movff	?___xxtofl+1,___flge@ff2+1
  5875  000600  C00C  F050         	movff	?___xxtofl+2,___flge@ff2+2
  5876  000604  C00D  F051         	movff	?___xxtofl+3,___flge@ff2+3
  5877  000608  EC90  F028         	call	___flge	;wreg free
  5878  00060C  B0D8               	btfsc	status,0,c
  5879  00060E  EF0B  F003         	goto	u11901
  5880  000612  EF0D  F003         	goto	u11900
  5881  000616                     u11901:
  5882  000616  EF2A  F003         	goto	l12825
  5883  00061A                     u11900:
  5884  00061A  C1FC  F0EC         	movff	_mOutLimite,??_main
  5885  00061E  C1FD  F0ED         	movff	_mOutLimite+1,??_main+1
  5886  000622  0100               	movlb	0	; () banked
  5887  000624  1FEC               	comf	??_main& (0+255),f,b
  5888  000626  1FED               	comf	(??_main+1)& (0+255),f,b
  5889  000628  4BEC               	infsnz	??_main& (0+255),f,b
  5890  00062A  2BED               	incf	(??_main+1)& (0+255),f,b
  5891  00062C  C0EC  F00A         	movff	??_main,___xxtofl@val
  5892  000630  C0ED  F00B         	movff	??_main+1,___xxtofl@val+1
  5893  000634  0E00               	movlw	0
  5894  000636  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5895  000638  0EFF               	movlw	-1
  5896  00063A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5897  00063C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5898  00063E  0E01               	movlw	1
  5899  000640  EC18  F025         	call	___xxtofl
  5900  000644  C00A  F158         	movff	?___xxtofl,_integral
  5901  000648  C00B  F159         	movff	?___xxtofl+1,_integral+1
  5902  00064C  C00C  F15A         	movff	?___xxtofl+2,_integral+2
  5903  000650  C00D  F15B         	movff	?___xxtofl+3,_integral+3
  5904  000654                     l12825:
  5905                           
  5906                           ;main.c: 371:             derivada = kD*(angle - lastAngle);
  5907  000654  C160  F064         	movff	_lastAngle,___flsub@a
  5908  000658  C161  F065         	movff	_lastAngle+1,___flsub@a+1
  5909  00065C  C162  F066         	movff	_lastAngle+2,___flsub@a+2
  5910  000660  C163  F067         	movff	_lastAngle+3,___flsub@a+3
  5911  000664  C1E6  F060         	movff	main@angle,___flsub@b
  5912  000668  C1E7  F061         	movff	main@angle+1,___flsub@b+1
  5913  00066C  C1E8  F062         	movff	main@angle+2,___flsub@b+2
  5914  000670  C1E9  F063         	movff	main@angle+3,___flsub@b+3
  5915  000674  ECA9  F031         	call	___flsub	;wreg free
  5916  000678  C060  F031         	movff	?___flsub,___flmul@b
  5917  00067C  C061  F032         	movff	?___flsub+1,___flmul@b+1
  5918  000680  C062  F033         	movff	?___flsub+2,___flmul@b+2
  5919  000684  C063  F034         	movff	?___flsub+3,___flmul@b+3
  5920  000688  C1EE  F035         	movff	_kD,___flmul@a
  5921  00068C  C1EF  F036         	movff	_kD+1,___flmul@a+1
  5922  000690  C1F0  F037         	movff	_kD+2,___flmul@a+2
  5923  000694  C1F1  F038         	movff	_kD+3,___flmul@a+3
  5924  000698  ECCA  F019         	call	___flmul	;wreg free
  5925  00069C  C031  F154         	movff	?___flmul,_derivada
  5926  0006A0  C032  F155         	movff	?___flmul+1,_derivada+1
  5927  0006A4  C033  F156         	movff	?___flmul+2,_derivada+2
  5928  0006A8  C034  F157         	movff	?___flmul+3,_derivada+3
  5929  0006AC                     
  5930                           ;main.c: 373:             rollPID = kP*error - derivada + integral;
  5931  0006AC  C154  F064         	movff	_derivada,___flsub@a
  5932  0006B0  C155  F065         	movff	_derivada+1,___flsub@a+1
  5933  0006B4  C156  F066         	movff	_derivada+2,___flsub@a+2
  5934  0006B8  C157  F067         	movff	_derivada+3,___flsub@a+3
  5935  0006BC  C15C  F035         	movff	_error,___flmul@a
  5936  0006C0  C15D  F036         	movff	_error+1,___flmul@a+1
  5937  0006C4  C15E  F037         	movff	_error+2,___flmul@a+2
  5938  0006C8  C15F  F038         	movff	_error+3,___flmul@a+3
  5939  0006CC  C1F6  F031         	movff	_kP,___flmul@b
  5940  0006D0  C1F7  F032         	movff	_kP+1,___flmul@b+1
  5941  0006D4  C1F8  F033         	movff	_kP+2,___flmul@b+2
  5942  0006D8  C1F9  F034         	movff	_kP+3,___flmul@b+3
  5943  0006DC  ECCA  F019         	call	___flmul	;wreg free
  5944  0006E0  C031  F060         	movff	?___flmul,___flsub@b
  5945  0006E4  C032  F061         	movff	?___flmul+1,___flsub@b+1
  5946  0006E8  C033  F062         	movff	?___flmul+2,___flsub@b+2
  5947  0006EC  C034  F063         	movff	?___flmul+3,___flsub@b+3
  5948  0006F0  ECA9  F031         	call	___flsub	;wreg free
  5949  0006F4  C060  F1E2         	movff	?___flsub,_main$4556
  5950  0006F8  C061  F1E3         	movff	?___flsub+1,_main$4556+1
  5951  0006FC  C062  F1E4         	movff	?___flsub+2,_main$4556+2
  5952  000700  C063  F1E5         	movff	?___flsub+3,_main$4556+3
  5953                           
  5954                           ;main.c: 373:             rollPID = kP*error - derivada + integral;
  5955  000704  C1E2  F04A         	movff	_main$4556,___fladd@b
  5956  000708  C1E3  F04B         	movff	_main$4556+1,___fladd@b+1
  5957  00070C  C1E4  F04C         	movff	_main$4556+2,___fladd@b+2
  5958  000710  C1E5  F04D         	movff	_main$4556+3,___fladd@b+3
  5959  000714  C158  F04E         	movff	_integral,___fladd@a
  5960  000718  C159  F04F         	movff	_integral+1,___fladd@a+1
  5961  00071C  C15A  F050         	movff	_integral+2,___fladd@a+2
  5962  000720  C15B  F051         	movff	_integral+3,___fladd@a+3
  5963  000724  EC6A  F017         	call	___fladd	;wreg free
  5964  000728  C04A  F164         	movff	?___fladd,_rollPID
  5965  00072C  C04B  F165         	movff	?___fladd+1,_rollPID+1
  5966  000730  C04C  F166         	movff	?___fladd+2,_rollPID+2
  5967  000734  C04D  F167         	movff	?___fladd+3,_rollPID+3
  5968                           
  5969                           ;main.c: 374:             if(rollPID > mOutLimite ) rollPID = mOutLimite; else if(rollPI
      +                          D < -mOutLimite) rollPID = -mOutLimite;
  5970  000738  C1FC  F00A         	movff	_mOutLimite,___xxtofl@val
  5971  00073C  C1FD  F00B         	movff	_mOutLimite+1,___xxtofl@val+1
  5972  000740  0E00               	movlw	0
  5973  000742  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5974  000744  0EFF               	movlw	-1
  5975  000746  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5976  000748  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5977  00074A  0E01               	movlw	1
  5978  00074C  EC18  F025         	call	___xxtofl
  5979  000750  C00A  F04A         	movff	?___xxtofl,___flge@ff1
  5980  000754  C00B  F04B         	movff	?___xxtofl+1,___flge@ff1+1
  5981  000758  C00C  F04C         	movff	?___xxtofl+2,___flge@ff1+2
  5982  00075C  C00D  F04D         	movff	?___xxtofl+3,___flge@ff1+3
  5983  000760  C164  F04E         	movff	_rollPID,___flge@ff2
  5984  000764  C165  F04F         	movff	_rollPID+1,___flge@ff2+1
  5985  000768  C166  F050         	movff	_rollPID+2,___flge@ff2+2
  5986  00076C  C167  F051         	movff	_rollPID+3,___flge@ff2+3
  5987  000770  EC90  F028         	call	___flge	;wreg free
  5988  000774  B0D8               	btfsc	status,0,c
  5989  000776  EFBF  F003         	goto	u11911
  5990  00077A  EFC1  F003         	goto	u11910
  5991  00077E                     u11911:
  5992  00077E  EFD7  F003         	goto	l12831
  5993  000782                     u11910:
  5994  000782  C1FC  F00A         	movff	_mOutLimite,___xxtofl@val
  5995  000786  C1FD  F00B         	movff	_mOutLimite+1,___xxtofl@val+1
  5996  00078A  0E00               	movlw	0
  5997  00078C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5998  00078E  0EFF               	movlw	-1
  5999  000790  6E0C               	movwf	(___xxtofl@val+2)^0,c
  6000  000792  6E0D               	movwf	(___xxtofl@val+3)^0,c
  6001  000794  0E01               	movlw	1
  6002  000796  EC18  F025         	call	___xxtofl
  6003  00079A  C00A  F164         	movff	?___xxtofl,_rollPID
  6004  00079E  C00B  F165         	movff	?___xxtofl+1,_rollPID+1
  6005  0007A2  C00C  F166         	movff	?___xxtofl+2,_rollPID+2
  6006  0007A6  C00D  F167         	movff	?___xxtofl+3,_rollPID+3
  6007  0007AA  EF22  F004         	goto	l12835
  6008  0007AE                     l12831:
  6009  0007AE  C164  F04A         	movff	_rollPID,___flge@ff1
  6010  0007B2  C165  F04B         	movff	_rollPID+1,___flge@ff1+1
  6011  0007B6  C166  F04C         	movff	_rollPID+2,___flge@ff1+2
  6012  0007BA  C167  F04D         	movff	_rollPID+3,___flge@ff1+3
  6013  0007BE  C1FC  F0EC         	movff	_mOutLimite,??_main
  6014  0007C2  C1FD  F0ED         	movff	_mOutLimite+1,??_main+1
  6015  0007C6  0100               	movlb	0	; () banked
  6016  0007C8  1FEC               	comf	??_main& (0+255),f,b
  6017  0007CA  1FED               	comf	(??_main+1)& (0+255),f,b
  6018  0007CC  4BEC               	infsnz	??_main& (0+255),f,b
  6019  0007CE  2BED               	incf	(??_main+1)& (0+255),f,b
  6020  0007D0  C0EC  F00A         	movff	??_main,___xxtofl@val
  6021  0007D4  C0ED  F00B         	movff	??_main+1,___xxtofl@val+1
  6022  0007D8  0E00               	movlw	0
  6023  0007DA  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  6024  0007DC  0EFF               	movlw	-1
  6025  0007DE  6E0C               	movwf	(___xxtofl@val+2)^0,c
  6026  0007E0  6E0D               	movwf	(___xxtofl@val+3)^0,c
  6027  0007E2  0E01               	movlw	1
  6028  0007E4  EC18  F025         	call	___xxtofl
  6029  0007E8  C00A  F04E         	movff	?___xxtofl,___flge@ff2
  6030  0007EC  C00B  F04F         	movff	?___xxtofl+1,___flge@ff2+1
  6031  0007F0  C00C  F050         	movff	?___xxtofl+2,___flge@ff2+2
  6032  0007F4  C00D  F051         	movff	?___xxtofl+3,___flge@ff2+3
  6033  0007F8  EC90  F028         	call	___flge	;wreg free
  6034  0007FC  B0D8               	btfsc	status,0,c
  6035  0007FE  EF03  F004         	goto	u11921
  6036  000802  EF05  F004         	goto	u11920
  6037  000806                     u11921:
  6038  000806  EF22  F004         	goto	l12835
  6039  00080A                     u11920:
  6040  00080A  C1FC  F0EC         	movff	_mOutLimite,??_main
  6041  00080E  C1FD  F0ED         	movff	_mOutLimite+1,??_main+1
  6042  000812  0100               	movlb	0	; () banked
  6043  000814  1FEC               	comf	??_main& (0+255),f,b
  6044  000816  1FED               	comf	(??_main+1)& (0+255),f,b
  6045  000818  4BEC               	infsnz	??_main& (0+255),f,b
  6046  00081A  2BED               	incf	(??_main+1)& (0+255),f,b
  6047  00081C  C0EC  F00A         	movff	??_main,___xxtofl@val
  6048  000820  C0ED  F00B         	movff	??_main+1,___xxtofl@val+1
  6049  000824  0E00               	movlw	0
  6050  000826  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  6051  000828  0EFF               	movlw	-1
  6052  00082A  6E0C               	movwf	(___xxtofl@val+2)^0,c
  6053  00082C  6E0D               	movwf	(___xxtofl@val+3)^0,c
  6054  00082E  0E01               	movlw	1
  6055  000830  EC18  F025         	call	___xxtofl
  6056  000834  C00A  F164         	movff	?___xxtofl,_rollPID
  6057  000838  C00B  F165         	movff	?___xxtofl+1,_rollPID+1
  6058  00083C  C00C  F166         	movff	?___xxtofl+2,_rollPID+2
  6059  000840  C00D  F167         	movff	?___xxtofl+3,_rollPID+3
  6060  000844                     l12835:
  6061                           
  6062                           ;main.c: 376:             lastAngle = angle;
  6063  000844  C1E6  F160         	movff	main@angle,_lastAngle
  6064  000848  C1E7  F161         	movff	main@angle+1,_lastAngle+1
  6065  00084C  C1E8  F162         	movff	main@angle+2,_lastAngle+2
  6066  000850  C1E9  F163         	movff	main@angle+3,_lastAngle+3
  6067                           
  6068                           ;main.c: 378:             motorPID = (int)rollPID;
  6069  000854  C164  F068         	movff	_rollPID,___fltol@f1
  6070  000858  C165  F069         	movff	_rollPID+1,___fltol@f1+1
  6071  00085C  C166  F06A         	movff	_rollPID+2,___fltol@f1+2
  6072  000860  C167  F06B         	movff	_rollPID+3,___fltol@f1+3
  6073  000864  EC0C  F028         	call	___fltol	;wreg free
  6074  000868  C068  F1D9         	movff	?___fltol,main@motorPID
  6075  00086C  C069  F1DA         	movff	?___fltol+1,main@motorPID+1
  6076                           
  6077                           ;main.c: 381:         }
  6078  000870  EF57  F004         	goto	l12839
  6079  000874                     l12837:
  6080                           
  6081                           ;main.c: 383:         {;main.c: 384:             self_setPoint = 0;
  6082  000874  0E00               	movlw	0
  6083  000876  0101               	movlb	1	; () banked
  6084  000878  6F6C               	movwf	_self_setPoint& (0+255),b
  6085  00087A  0E00               	movlw	0
  6086  00087C  6F6D               	movwf	(_self_setPoint+1)& (0+255),b
  6087  00087E  0E00               	movlw	0
  6088  000880  6F6E               	movwf	(_self_setPoint+2)& (0+255),b
  6089  000882  0E00               	movlw	0
  6090  000884  6F6F               	movwf	(_self_setPoint+3)& (0+255),b
  6091                           
  6092                           ;main.c: 385:             setPoint = 0;
  6093  000886  0E00               	movlw	0
  6094  000888  6F70               	movwf	_setPoint& (0+255),b
  6095  00088A  0E00               	movlw	0
  6096  00088C  6F71               	movwf	(_setPoint+1)& (0+255),b
  6097  00088E  0E00               	movlw	0
  6098  000890  6F72               	movwf	(_setPoint+2)& (0+255),b
  6099  000892  0E00               	movlw	0
  6100  000894  6F73               	movwf	(_setPoint+3)& (0+255),b
  6101                           
  6102                           ;main.c: 386:             integral = 0;
  6103  000896  0E00               	movlw	0
  6104  000898  6F58               	movwf	_integral& (0+255),b
  6105  00089A  0E00               	movlw	0
  6106  00089C  6F59               	movwf	(_integral+1)& (0+255),b
  6107  00089E  0E00               	movlw	0
  6108  0008A0  6F5A               	movwf	(_integral+2)& (0+255),b
  6109  0008A2  0E00               	movlw	0
  6110  0008A4  6F5B               	movwf	(_integral+3)& (0+255),b
  6111                           
  6112                           ;main.c: 387:             motorPID = 0;
  6113  0008A6  0E00               	movlw	0
  6114  0008A8  6FDA               	movwf	(main@motorPID+1)& (0+255),b
  6115  0008AA  0E00               	movlw	0
  6116  0008AC  6FD9               	movwf	main@motorPID& (0+255),b
  6117  0008AE                     l12839:
  6118                           
  6119                           ;main.c: 390:         if(time_ms - time_elapsed >= 100)
  6120  0008AE  0101               	movlb	1	; () banked
  6121  0008B0  51D3               	movf	main@time_elapsed& (0+255),w,b
  6122  0008B2  5D74               	subwf	_time_ms& (0+255),w,b
  6123  0008B4  0100               	movlb	0	; () banked
  6124  0008B6  6FEC               	movwf	??_main& (0+255),b
  6125  0008B8  0101               	movlb	1	; () banked
  6126  0008BA  51D4               	movf	(main@time_elapsed+1)& (0+255),w,b
  6127  0008BC  5975               	subwfb	(_time_ms+1)& (0+255),w,b
  6128  0008BE  0100               	movlb	0	; () banked
  6129  0008C0  6FED               	movwf	(??_main+1)& (0+255),b
  6130  0008C2  0101               	movlb	1	; () banked
  6131  0008C4  51D5               	movf	(main@time_elapsed+2)& (0+255),w,b
  6132  0008C6  5976               	subwfb	(_time_ms+2)& (0+255),w,b
  6133  0008C8  0100               	movlb	0	; () banked
  6134  0008CA  6FEE               	movwf	(??_main+2)& (0+255),b
  6135  0008CC  0101               	movlb	1	; () banked
  6136  0008CE  51D6               	movf	(main@time_elapsed+3)& (0+255),w,b
  6137  0008D0  5977               	subwfb	(_time_ms+3)& (0+255),w,b
  6138  0008D2  0100               	movlb	0	; () banked
  6139  0008D4  6FEF               	movwf	(??_main+3)& (0+255),b
  6140  0008D6  51EF               	movf	(??_main+3)& (0+255),w,b
  6141  0008D8  11EE               	iorwf	(??_main+2)& (0+255),w,b
  6142  0008DA  11ED               	iorwf	(??_main+1)& (0+255),w,b
  6143  0008DC  E109               	bnz	u11930
  6144  0008DE  0E64               	movlw	100
  6145  0008E0  5DEC               	subwf	??_main& (0+255),w,b
  6146  0008E2  A0D8               	btfss	status,0,c
  6147  0008E4  EF76  F004         	goto	u11931
  6148  0008E8  EF78  F004         	goto	u11930
  6149  0008EC                     u11931:
  6150  0008EC  EFA8  F004         	goto	l12847
  6151  0008F0                     u11930:
  6152  0008F0                     
  6153                           ; BSR set to: 0
  6154                           ;main.c: 391:         {;main.c: 396:             sprintf(text,"kP: %f, kI:%f, kD:%f\n", 
      +                          kP, kI, kD);
  6155  0008F0  0E70               	movlw	low _text
  6156  0008F2  6FD2               	movwf	sprintf@s& (0+255),b
  6157  0008F4  0E03               	movlw	high _text
  6158  0008F6  6FD3               	movwf	(sprintf@s+1)& (0+255),b
  6159  0008F8  0EAF               	movlw	low STR_9
  6160  0008FA  6FD4               	movwf	sprintf@fmt& (0+255),b
  6161  0008FC  0E7F               	movlw	high STR_9
  6162  0008FE  6FD5               	movwf	(sprintf@fmt+1)& (0+255),b
  6163  000900  C1F6  F0D6         	movff	_kP,?_sprintf+4
  6164  000904  C1F7  F0D7         	movff	_kP+1,?_sprintf+5
  6165  000908  C1F8  F0D8         	movff	_kP+2,?_sprintf+6
  6166  00090C  C1F9  F0D9         	movff	_kP+3,?_sprintf+7
  6167  000910  C1F2  F0DA         	movff	_kI,?_sprintf+8
  6168  000914  C1F3  F0DB         	movff	_kI+1,?_sprintf+9
  6169  000918  C1F4  F0DC         	movff	_kI+2,?_sprintf+10
  6170  00091C  C1F5  F0DD         	movff	_kI+3,?_sprintf+11
  6171  000920  C1EE  F0DE         	movff	_kD,?_sprintf+12
  6172  000924  C1EF  F0DF         	movff	_kD+1,?_sprintf+13
  6173  000928  C1F0  F0E0         	movff	_kD+2,?_sprintf+14
  6174  00092C  C1F1  F0E1         	movff	_kD+3,?_sprintf+15
  6175  000930  EC80  F031         	call	_sprintf	;wreg free
  6176  000934                     
  6177                           ;main.c: 397:             USART_UART_transmitString( text );
  6178  000934  0E70               	movlw	low _text
  6179  000936  6E05               	movwf	USART_UART_transmitString@data^0,c
  6180  000938  0E03               	movlw	high _text
  6181  00093A  6E06               	movwf	(USART_UART_transmitString@data+1)^0,c
  6182  00093C  ECC5  F030         	call	_USART_UART_transmitString	;wreg free
  6183  000940                     
  6184                           ;main.c: 398:             time_elapsed = time_ms;
  6185  000940  C174  F1D3         	movff	_time_ms,main@time_elapsed
  6186  000944  C175  F1D4         	movff	_time_ms+1,main@time_elapsed+1
  6187  000948  C176  F1D5         	movff	_time_ms+2,main@time_elapsed+2
  6188  00094C  C177  F1D6         	movff	_time_ms+3,main@time_elapsed+3
  6189  000950                     l12847:
  6190                           
  6191                           ;main.c: 401:         mot1 = mot2 = motorPID;
  6192  000950  C1D9  F1EC         	movff	main@motorPID,main@mot2
  6193  000954  C1DA  F1ED         	movff	main@motorPID+1,main@mot2+1
  6194  000958  C1EC  F1EA         	movff	main@mot2,main@mot1
  6195  00095C  C1ED  F1EB         	movff	main@mot2+1,main@mot1+1
  6196  000960                     
  6197                           ;main.c: 402:         if(direction)
  6198  000960  0101               	movlb	1	; () banked
  6199  000962  517E               	movf	_direction& (0+255),w,b
  6200  000964  B4D8               	btfsc	status,2,c
  6201  000966  EFB7  F004         	goto	u11941
  6202  00096A  EFB9  F004         	goto	u11940
  6203  00096E                     u11941:
  6204  00096E  EFD3  F004         	goto	l1796
  6205  000972                     u11940:
  6206  000972                     
  6207                           ; BSR set to: 1
  6208                           ;main.c: 403:         {;main.c: 404:             if(direction == 1)
  6209  000972  057E               	decf	_direction& (0+255),w,b
  6210  000974  A4D8               	btfss	status,2,c
  6211  000976  EFBF  F004         	goto	u11951
  6212  00097A  EFC1  F004         	goto	u11950
  6213  00097E                     u11951:
  6214  00097E  EFCB  F004         	goto	l12855
  6215  000982                     u11950:
  6216  000982                     
  6217                           ; BSR set to: 1
  6218                           ;main.c: 405:             {;main.c: 406:                 mot1 += turning_speed;
  6219  000982  51FA               	movf	_turning_speed& (0+255),w,b
  6220  000984  27EA               	addwf	main@mot1& (0+255),f,b
  6221  000986  51FB               	movf	(_turning_speed+1)& (0+255),w,b
  6222  000988  23EB               	addwfc	(main@mot1+1)& (0+255),f,b
  6223                           
  6224                           ;main.c: 407:                 mot2 -= turning_speed;
  6225  00098A  51FA               	movf	_turning_speed& (0+255),w,b
  6226  00098C  5FEC               	subwf	main@mot2& (0+255),f,b
  6227  00098E  51FB               	movf	(_turning_speed+1)& (0+255),w,b
  6228  000990  5BED               	subwfb	(main@mot2+1)& (0+255),f,b
  6229                           
  6230                           ;main.c: 408:             }
  6231  000992  EFD3  F004         	goto	l1796
  6232  000996                     l12855:
  6233                           
  6234                           ; BSR set to: 1
  6235                           ;main.c: 410:             {;main.c: 411:                 mot1 -= turning_speed;
  6236  000996  51FA               	movf	_turning_speed& (0+255),w,b
  6237  000998  5FEA               	subwf	main@mot1& (0+255),f,b
  6238  00099A  51FB               	movf	(_turning_speed+1)& (0+255),w,b
  6239  00099C  5BEB               	subwfb	(main@mot1+1)& (0+255),f,b
  6240                           
  6241                           ;main.c: 412:                 mot2 += turning_speed;
  6242  00099E  51FA               	movf	_turning_speed& (0+255),w,b
  6243  0009A0  27EC               	addwf	main@mot2& (0+255),f,b
  6244  0009A2  51FB               	movf	(_turning_speed+1)& (0+255),w,b
  6245  0009A4  23ED               	addwfc	(main@mot2+1)& (0+255),f,b
  6246  0009A6                     l1796:
  6247                           
  6248                           ; BSR set to: 1
  6249                           ;main.c: 415:         if(hold_pos == 1)
  6250  0009A6  0100               	movlb	0	; () banked
  6251  0009A8  05FB               	decf	_hold_pos& (0+255),w,b
  6252  0009AA  A4D8               	btfss	status,2,c
  6253  0009AC  EFDA  F004         	goto	u11961
  6254  0009B0  EFDC  F004         	goto	u11960
  6255  0009B4                     u11961:
  6256  0009B4  EF83  F005         	goto	l12873
  6257  0009B8                     u11960:
  6258  0009B8                     
  6259                           ; BSR set to: 0
  6260                           ;main.c: 416:         {;main.c: 417:             if(displacement.y > 2 || displacement.y
      +                           < -2) resetDisplacement();
  6261  0009B8  0E00               	movlw	0
  6262  0009BA  6E4A               	movwf	___flge@ff1^0,c
  6263  0009BC  0E00               	movlw	0
  6264  0009BE  6E4B               	movwf	(___flge@ff1+1)^0,c
  6265  0009C0  0E00               	movlw	0
  6266  0009C2  6E4C               	movwf	(___flge@ff1+2)^0,c
  6267  0009C4  0E40               	movlw	64
  6268  0009C6  6E4D               	movwf	(___flge@ff1+3)^0,c
  6269  0009C8  C128  F04E         	movff	_displacement+4,___flge@ff2
  6270  0009CC  C129  F04F         	movff	_displacement+5,___flge@ff2+1
  6271  0009D0  C12A  F050         	movff	_displacement+6,___flge@ff2+2
  6272  0009D4  C12B  F051         	movff	_displacement+7,___flge@ff2+3
  6273  0009D8  EC90  F028         	call	___flge	;wreg free
  6274  0009DC  A0D8               	btfss	status,0,c
  6275  0009DE  EFF3  F004         	goto	u11971
  6276  0009E2  EFF5  F004         	goto	u11970
  6277  0009E6                     u11971:
  6278  0009E6  EF0E  F005         	goto	l12861
  6279  0009EA                     u11970:
  6280  0009EA  C128  F04A         	movff	_displacement+4,___flge@ff1
  6281  0009EE  C129  F04B         	movff	_displacement+5,___flge@ff1+1
  6282  0009F2  C12A  F04C         	movff	_displacement+6,___flge@ff1+2
  6283  0009F6  C12B  F04D         	movff	_displacement+7,___flge@ff1+3
  6284  0009FA  0E00               	movlw	0
  6285  0009FC  6E4E               	movwf	___flge@ff2^0,c
  6286  0009FE  0E00               	movlw	0
  6287  000A00  6E4F               	movwf	(___flge@ff2+1)^0,c
  6288  000A02  0E00               	movlw	0
  6289  000A04  6E50               	movwf	(___flge@ff2+2)^0,c
  6290  000A06  0EC0               	movlw	192
  6291  000A08  6E51               	movwf	(___flge@ff2+3)^0,c
  6292  000A0A  EC90  F028         	call	___flge	;wreg free
  6293  000A0E  B0D8               	btfsc	status,0,c
  6294  000A10  EF0C  F005         	goto	u11981
  6295  000A14  EF0E  F005         	goto	u11980
  6296  000A18                     u11981:
  6297  000A18  EF10  F005         	goto	l12863
  6298  000A1C                     u11980:
  6299  000A1C                     l12861:
  6300  000A1C  EC09  F02C         	call	_resetDisplacement	;wreg free
  6301  000A20                     l12863:
  6302                           
  6303                           ;main.c: 418:             if(displacement.y > 0.001f)
  6304  000A20  0E6F               	movlw	111
  6305  000A22  6E4A               	movwf	___flge@ff1^0,c
  6306  000A24  0E12               	movlw	18
  6307  000A26  6E4B               	movwf	(___flge@ff1+1)^0,c
  6308  000A28  0E83               	movlw	131
  6309  000A2A  6E4C               	movwf	(___flge@ff1+2)^0,c
  6310  000A2C  0E3A               	movlw	58
  6311  000A2E  6E4D               	movwf	(___flge@ff1+3)^0,c
  6312  000A30  C128  F04E         	movff	_displacement+4,___flge@ff2
  6313  000A34  C129  F04F         	movff	_displacement+5,___flge@ff2+1
  6314  000A38  C12A  F050         	movff	_displacement+6,___flge@ff2+2
  6315  000A3C  C12B  F051         	movff	_displacement+7,___flge@ff2+3
  6316  000A40  EC90  F028         	call	___flge	;wreg free
  6317  000A44  B0D8               	btfsc	status,0,c
  6318  000A46  EF27  F005         	goto	u11991
  6319  000A4A  EF29  F005         	goto	u11990
  6320  000A4E                     u11991:
  6321  000A4E  EF45  F005         	goto	l12867
  6322  000A52                     u11990:
  6323  000A52                     
  6324                           ;main.c: 419:                 setPoint = self_setPoint - 5;
  6325  000A52  C16C  F04A         	movff	_self_setPoint,___fladd@b
  6326  000A56  C16D  F04B         	movff	_self_setPoint+1,___fladd@b+1
  6327  000A5A  C16E  F04C         	movff	_self_setPoint+2,___fladd@b+2
  6328  000A5E  C16F  F04D         	movff	_self_setPoint+3,___fladd@b+3
  6329  000A62  0E00               	movlw	0
  6330  000A64  6E4E               	movwf	___fladd@a^0,c
  6331  000A66  0E00               	movlw	0
  6332  000A68  6E4F               	movwf	(___fladd@a+1)^0,c
  6333  000A6A  0EA0               	movlw	160
  6334  000A6C  6E50               	movwf	(___fladd@a+2)^0,c
  6335  000A6E  0EC0               	movlw	192
  6336  000A70  6E51               	movwf	(___fladd@a+3)^0,c
  6337  000A72  EC6A  F017         	call	___fladd	;wreg free
  6338  000A76  C04A  F170         	movff	?___fladd,_setPoint
  6339  000A7A  C04B  F171         	movff	?___fladd+1,_setPoint+1
  6340  000A7E  C04C  F172         	movff	?___fladd+2,_setPoint+2
  6341  000A82  C04D  F173         	movff	?___fladd+3,_setPoint+3
  6342  000A86  EF83  F005         	goto	l12873
  6343  000A8A                     l12867:
  6344  000A8A  C128  F04A         	movff	_displacement+4,___flge@ff1
  6345  000A8E  C129  F04B         	movff	_displacement+5,___flge@ff1+1
  6346  000A92  C12A  F04C         	movff	_displacement+6,___flge@ff1+2
  6347  000A96  C12B  F04D         	movff	_displacement+7,___flge@ff1+3
  6348  000A9A  0E6F               	movlw	111
  6349  000A9C  6E4E               	movwf	___flge@ff2^0,c
  6350  000A9E  0E12               	movlw	18
  6351  000AA0  6E4F               	movwf	(___flge@ff2+1)^0,c
  6352  000AA2  0E83               	movlw	131
  6353  000AA4  6E50               	movwf	(___flge@ff2+2)^0,c
  6354  000AA6  0EBA               	movlw	186
  6355  000AA8  6E51               	movwf	(___flge@ff2+3)^0,c
  6356  000AAA  EC90  F028         	call	___flge	;wreg free
  6357  000AAE  B0D8               	btfsc	status,0,c
  6358  000AB0  EF5C  F005         	goto	u12001
  6359  000AB4  EF5E  F005         	goto	u12000
  6360  000AB8                     u12001:
  6361  000AB8  EF7A  F005         	goto	l12871
  6362  000ABC                     u12000:
  6363  000ABC                     
  6364                           ;main.c: 421:                 setPoint = self_setPoint + 5;
  6365  000ABC  C16C  F04A         	movff	_self_setPoint,___fladd@b
  6366  000AC0  C16D  F04B         	movff	_self_setPoint+1,___fladd@b+1
  6367  000AC4  C16E  F04C         	movff	_self_setPoint+2,___fladd@b+2
  6368  000AC8  C16F  F04D         	movff	_self_setPoint+3,___fladd@b+3
  6369  000ACC  0E00               	movlw	0
  6370  000ACE  6E4E               	movwf	___fladd@a^0,c
  6371  000AD0  0E00               	movlw	0
  6372  000AD2  6E4F               	movwf	(___fladd@a+1)^0,c
  6373  000AD4  0EA0               	movlw	160
  6374  000AD6  6E50               	movwf	(___fladd@a+2)^0,c
  6375  000AD8  0E40               	movlw	64
  6376  000ADA  6E51               	movwf	(___fladd@a+3)^0,c
  6377  000ADC  EC6A  F017         	call	___fladd	;wreg free
  6378  000AE0  C04A  F170         	movff	?___fladd,_setPoint
  6379  000AE4  C04B  F171         	movff	?___fladd+1,_setPoint+1
  6380  000AE8  C04C  F172         	movff	?___fladd+2,_setPoint+2
  6381  000AEC  C04D  F173         	movff	?___fladd+3,_setPoint+3
  6382  000AF0  EF83  F005         	goto	l12873
  6383  000AF4                     l12871:
  6384  000AF4  0E00               	movlw	0
  6385  000AF6  0101               	movlb	1	; () banked
  6386  000AF8  6F70               	movwf	_setPoint& (0+255),b
  6387  000AFA  0E00               	movlw	0
  6388  000AFC  6F71               	movwf	(_setPoint+1)& (0+255),b
  6389  000AFE  0E00               	movlw	0
  6390  000B00  6F72               	movwf	(_setPoint+2)& (0+255),b
  6391  000B02  0E00               	movlw	0
  6392  000B04  6F73               	movwf	(_setPoint+3)& (0+255),b
  6393  000B06                     l12873:
  6394                           
  6395                           ;main.c: 426:         if(mot1 > mOutLimite ) mot1 = mOutLimite; else if(mot1 < -mOutLimi
      +                          te) mot1 = -mOutLimite;
  6396  000B06  0101               	movlb	1	; () banked
  6397  000B08  51EA               	movf	main@mot1& (0+255),w,b
  6398  000B0A  5DFC               	subwf	_mOutLimite& (0+255),w,b
  6399  000B0C  51FD               	movf	(_mOutLimite+1)& (0+255),w,b
  6400  000B0E  0A80               	xorlw	128
  6401  000B10  0100               	movlb	0	; () banked
  6402  000B12  6FEC               	movwf	??_main& (0+255),b
  6403  000B14  0101               	movlb	1	; () banked
  6404  000B16  51EB               	movf	(main@mot1+1)& (0+255),w,b
  6405  000B18  0A80               	xorlw	128
  6406  000B1A  0100               	movlb	0	; () banked
  6407  000B1C  59EC               	subwfb	??_main& (0+255),w,b
  6408  000B1E  B0D8               	btfsc	status,0,c
  6409  000B20  EF94  F005         	goto	u12011
  6410  000B24  EF96  F005         	goto	u12010
  6411  000B28                     u12011:
  6412  000B28  EF9C  F005         	goto	l12877
  6413  000B2C                     u12010:
  6414  000B2C                     
  6415                           ; BSR set to: 0
  6416  000B2C  C1FC  F1EA         	movff	_mOutLimite,main@mot1
  6417  000B30  C1FD  F1EB         	movff	_mOutLimite+1,main@mot1+1
  6418  000B34  EFC1  F005         	goto	l12881
  6419  000B38                     l12877:
  6420                           
  6421                           ; BSR set to: 0
  6422  000B38  C1FC  F0EC         	movff	_mOutLimite,??_main
  6423  000B3C  C1FD  F0ED         	movff	_mOutLimite+1,??_main+1
  6424  000B40  1FEC               	comf	??_main& (0+255),f,b
  6425  000B42  1FED               	comf	(??_main+1)& (0+255),f,b
  6426  000B44  4BEC               	infsnz	??_main& (0+255),f,b
  6427  000B46  2BED               	incf	(??_main+1)& (0+255),f,b
  6428  000B48  51EC               	movf	??_main& (0+255),w,b
  6429  000B4A  0101               	movlb	1	; () banked
  6430  000B4C  5DEA               	subwf	main@mot1& (0+255),w,b
  6431  000B4E  51EB               	movf	(main@mot1+1)& (0+255),w,b
  6432  000B50  0A80               	xorlw	128
  6433  000B52  0100               	movlb	0	; () banked
  6434  000B54  6FEE               	movwf	(??_main+2)& (0+255),b
  6435  000B56  51ED               	movf	(??_main+1)& (0+255),w,b
  6436  000B58  0A80               	xorlw	128
  6437  000B5A  59EE               	subwfb	(??_main+2)& (0+255),w,b
  6438  000B5C  B0D8               	btfsc	status,0,c
  6439  000B5E  EFB3  F005         	goto	u12021
  6440  000B62  EFB5  F005         	goto	u12020
  6441  000B66                     u12021:
  6442  000B66  EFC1  F005         	goto	l12881
  6443  000B6A                     u12020:
  6444  000B6A                     
  6445                           ; BSR set to: 0
  6446  000B6A  C1FC  F0EC         	movff	_mOutLimite,??_main
  6447  000B6E  C1FD  F0ED         	movff	_mOutLimite+1,??_main+1
  6448  000B72  1FEC               	comf	??_main& (0+255),f,b
  6449  000B74  1FED               	comf	(??_main+1)& (0+255),f,b
  6450  000B76  4BEC               	infsnz	??_main& (0+255),f,b
  6451  000B78  2BED               	incf	(??_main+1)& (0+255),f,b
  6452  000B7A  C0EC  F1EA         	movff	??_main,main@mot1
  6453  000B7E  C0ED  F1EB         	movff	??_main+1,main@mot1+1
  6454  000B82                     l12881:
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;main.c: 427:         if(mot2 > mOutLimite ) mot2 = mOutLimite; else if(mot2 < -mOutLimi
      +                          te) mot2 = -mOutLimite;
  6458  000B82  0101               	movlb	1	; () banked
  6459  000B84  51EC               	movf	main@mot2& (0+255),w,b
  6460  000B86  5DFC               	subwf	_mOutLimite& (0+255),w,b
  6461  000B88  51FD               	movf	(_mOutLimite+1)& (0+255),w,b
  6462  000B8A  0A80               	xorlw	128
  6463  000B8C  0100               	movlb	0	; () banked
  6464  000B8E  6FEC               	movwf	??_main& (0+255),b
  6465  000B90  0101               	movlb	1	; () banked
  6466  000B92  51ED               	movf	(main@mot2+1)& (0+255),w,b
  6467  000B94  0A80               	xorlw	128
  6468  000B96  0100               	movlb	0	; () banked
  6469  000B98  59EC               	subwfb	??_main& (0+255),w,b
  6470  000B9A  B0D8               	btfsc	status,0,c
  6471  000B9C  EFD2  F005         	goto	u12031
  6472  000BA0  EFD4  F005         	goto	u12030
  6473  000BA4                     u12031:
  6474  000BA4  EFDA  F005         	goto	l12885
  6475  000BA8                     u12030:
  6476  000BA8                     
  6477                           ; BSR set to: 0
  6478  000BA8  C1FC  F1EC         	movff	_mOutLimite,main@mot2
  6479  000BAC  C1FD  F1ED         	movff	_mOutLimite+1,main@mot2+1
  6480  000BB0  EFFF  F005         	goto	l12889
  6481  000BB4                     l12885:
  6482                           
  6483                           ; BSR set to: 0
  6484  000BB4  C1FC  F0EC         	movff	_mOutLimite,??_main
  6485  000BB8  C1FD  F0ED         	movff	_mOutLimite+1,??_main+1
  6486  000BBC  1FEC               	comf	??_main& (0+255),f,b
  6487  000BBE  1FED               	comf	(??_main+1)& (0+255),f,b
  6488  000BC0  4BEC               	infsnz	??_main& (0+255),f,b
  6489  000BC2  2BED               	incf	(??_main+1)& (0+255),f,b
  6490  000BC4  51EC               	movf	??_main& (0+255),w,b
  6491  000BC6  0101               	movlb	1	; () banked
  6492  000BC8  5DEC               	subwf	main@mot2& (0+255),w,b
  6493  000BCA  51ED               	movf	(main@mot2+1)& (0+255),w,b
  6494  000BCC  0A80               	xorlw	128
  6495  000BCE  0100               	movlb	0	; () banked
  6496  000BD0  6FEE               	movwf	(??_main+2)& (0+255),b
  6497  000BD2  51ED               	movf	(??_main+1)& (0+255),w,b
  6498  000BD4  0A80               	xorlw	128
  6499  000BD6  59EE               	subwfb	(??_main+2)& (0+255),w,b
  6500  000BD8  B0D8               	btfsc	status,0,c
  6501  000BDA  EFF1  F005         	goto	u12041
  6502  000BDE  EFF3  F005         	goto	u12040
  6503  000BE2                     u12041:
  6504  000BE2  EFFF  F005         	goto	l12889
  6505  000BE6                     u12040:
  6506  000BE6                     
  6507                           ; BSR set to: 0
  6508  000BE6  C1FC  F0EC         	movff	_mOutLimite,??_main
  6509  000BEA  C1FD  F0ED         	movff	_mOutLimite+1,??_main+1
  6510  000BEE  1FEC               	comf	??_main& (0+255),f,b
  6511  000BF0  1FED               	comf	(??_main+1)& (0+255),f,b
  6512  000BF2  4BEC               	infsnz	??_main& (0+255),f,b
  6513  000BF4  2BED               	incf	(??_main+1)& (0+255),f,b
  6514  000BF6  C0EC  F1EC         	movff	??_main,main@mot2
  6515  000BFA  C0ED  F1ED         	movff	??_main+1,main@mot2+1
  6516  000BFE                     l12889:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;main.c: 428:         if(mot1 >= 0)
  6520  000BFE  0101               	movlb	1	; () banked
  6521  000C00  BFEB               	btfsc	(main@mot1+1)& (0+255),7,b
  6522  000C02  EF05  F006         	goto	u12051
  6523  000C06  EF07  F006         	goto	u12050
  6524  000C0A                     u12051:
  6525  000C0A  EF1C  F006         	goto	l1813
  6526  000C0E                     u12050:
  6527  000C0E                     
  6528                           ; BSR set to: 1
  6529                           ;main.c: 429:             LATBbits.LATB4 = !mInv;
  6530  000C0E  0100               	movlb	0	; () banked
  6531  000C10  51FC               	movf	_mInv& (0+255),w,b
  6532  000C12  B4D8               	btfsc	status,2,c
  6533  000C14  EF0E  F006         	goto	u12061
  6534  000C18  EF12  F006         	goto	u12060
  6535  000C1C                     u12061:
  6536  000C1C  6BEC               	clrf	??_main& (0+255),b
  6537  000C1E  2BEC               	incf	??_main& (0+255),f,b
  6538  000C20  EF14  F006         	goto	u12078
  6539  000C24                     u12060:
  6540  000C24  0100               	movlb	0	; () banked
  6541  000C26  6BEC               	clrf	??_main& (0+255),b
  6542  000C28                     u12078:
  6543  000C28  3BEC               	swapf	??_main& (0+255),f,b
  6544  000C2A  508A               	movf	138,w,c	;volatile
  6545  000C2C  19EC               	xorwf	??_main& (0+255),w,b
  6546  000C2E  0BEF               	andlw	-17
  6547  000C30  19EC               	xorwf	??_main& (0+255),w,b
  6548  000C32  6E8A               	movwf	138,c	;volatile
  6549  000C34  EF2F  F006         	goto	l12895
  6550  000C38                     l1813:
  6551                           
  6552                           ; BSR set to: 1
  6553                           ;main.c: 431:         {;main.c: 432:             LATBbits.LATB4 = mInv;
  6554  000C38  0100               	movlb	0	; () banked
  6555  000C3A  B1FC               	btfsc	_mInv& (0+255),0,b
  6556  000C3C  D002               	bra	u12085
  6557  000C3E  988A               	bcf	138,4,c	;volatile
  6558  000C40  D001               	bra	u12086
  6559  000C42                     u12085:
  6560  000C42  888A               	bsf	138,4,c	;volatile
  6561  000C44                     u12086:
  6562  000C44                     
  6563                           ;main.c: 433:             mot1 *= -1;
  6564  000C44  C1EA  F004         	movff	main@mot1,___wmul@multiplier
  6565  000C48  C1EB  F005         	movff	main@mot1+1,___wmul@multiplier+1
  6566  000C4C  0EFF               	movlw	255
  6567  000C4E  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6568  000C50  6806               	setf	___wmul@multiplicand^0,c
  6569  000C52  ECBC  F032         	call	___wmul	;wreg free
  6570  000C56  C004  F1EA         	movff	?___wmul,main@mot1
  6571  000C5A  C005  F1EB         	movff	?___wmul+1,main@mot1+1
  6572  000C5E                     l12895:
  6573                           
  6574                           ;main.c: 435:         if(mot2 >= 0)
  6575  000C5E  0101               	movlb	1	; () banked
  6576  000C60  BFED               	btfsc	(main@mot2+1)& (0+255),7,b
  6577  000C62  EF35  F006         	goto	u12091
  6578  000C66  EF37  F006         	goto	u12090
  6579  000C6A                     u12091:
  6580  000C6A  EF4E  F006         	goto	l1815
  6581  000C6E                     u12090:
  6582  000C6E                     
  6583                           ; BSR set to: 1
  6584                           ;main.c: 436:             LATBbits.LATB3 = !mInv;
  6585  000C6E  0100               	movlb	0	; () banked
  6586  000C70  51FC               	movf	_mInv& (0+255),w,b
  6587  000C72  B4D8               	btfsc	status,2,c
  6588  000C74  EF3E  F006         	goto	u12101
  6589  000C78  EF42  F006         	goto	u12100
  6590  000C7C                     u12101:
  6591  000C7C  6BEC               	clrf	??_main& (0+255),b
  6592  000C7E  2BEC               	incf	??_main& (0+255),f,b
  6593  000C80  EF44  F006         	goto	u12118
  6594  000C84                     u12100:
  6595  000C84  0100               	movlb	0	; () banked
  6596  000C86  6BEC               	clrf	??_main& (0+255),b
  6597  000C88                     u12118:
  6598  000C88  47EC               	rlncf	??_main& (0+255),f,b
  6599  000C8A  47EC               	rlncf	??_main& (0+255),f,b
  6600  000C8C  47EC               	rlncf	??_main& (0+255),f,b
  6601  000C8E  508A               	movf	138,w,c	;volatile
  6602  000C90  19EC               	xorwf	??_main& (0+255),w,b
  6603  000C92  0BF7               	andlw	-9
  6604  000C94  19EC               	xorwf	??_main& (0+255),w,b
  6605  000C96  6E8A               	movwf	138,c	;volatile
  6606  000C98  EF61  F006         	goto	l12901
  6607  000C9C                     l1815:
  6608                           
  6609                           ; BSR set to: 1
  6610                           ;main.c: 438:         {;main.c: 439:             LATBbits.LATB3 = mInv;
  6611  000C9C  0100               	movlb	0	; () banked
  6612  000C9E  B1FC               	btfsc	_mInv& (0+255),0,b
  6613  000CA0  D002               	bra	u12125
  6614  000CA2  968A               	bcf	138,3,c	;volatile
  6615  000CA4  D001               	bra	u12126
  6616  000CA6                     u12125:
  6617  000CA6  868A               	bsf	138,3,c	;volatile
  6618  000CA8                     u12126:
  6619  000CA8                     
  6620                           ;main.c: 440:             mot2 *= -1;
  6621  000CA8  C1EC  F004         	movff	main@mot2,___wmul@multiplier
  6622  000CAC  C1ED  F005         	movff	main@mot2+1,___wmul@multiplier+1
  6623  000CB0  0EFF               	movlw	255
  6624  000CB2  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6625  000CB4  6806               	setf	___wmul@multiplicand^0,c
  6626  000CB6  ECBC  F032         	call	___wmul	;wreg free
  6627  000CBA  C004  F1EC         	movff	?___wmul,main@mot2
  6628  000CBE  C005  F1ED         	movff	?___wmul+1,main@mot2+1
  6629  000CC2                     l12901:
  6630                           
  6631                           ;main.c: 442:         CCPR1L = mot1 >> 2; CCP1CONbits.DC1B = 0x03 & mot1;
  6632  000CC2  C1EA  F0EC         	movff	main@mot1,??_main
  6633  000CC6  C1EB  F0ED         	movff	main@mot1+1,??_main+1
  6634  000CCA  0100               	movlb	0	; () banked
  6635  000CCC  35ED               	rlcf	(??_main+1)& (0+255),w,b
  6636  000CCE  33ED               	rrcf	(??_main+1)& (0+255),f,b
  6637  000CD0  33EC               	rrcf	??_main& (0+255),f,b
  6638  000CD2  35ED               	rlcf	(??_main+1)& (0+255),w,b
  6639  000CD4  33ED               	rrcf	(??_main+1)& (0+255),f,b
  6640  000CD6  33EC               	rrcf	??_main& (0+255),f,b
  6641  000CD8  51EC               	movf	??_main& (0+255),w,b
  6642  000CDA  6EBE               	movwf	190,c	;volatile
  6643  000CDC                     
  6644                           ; BSR set to: 0
  6645  000CDC  C1EA  F0EC         	movff	main@mot1,??_main
  6646  000CE0  0E03               	movlw	3
  6647  000CE2  17EC               	andwf	??_main& (0+255),f,b
  6648  000CE4  3BEC               	swapf	??_main& (0+255),f,b
  6649  000CE6  50BD               	movf	189,w,c	;volatile
  6650  000CE8  19EC               	xorwf	??_main& (0+255),w,b
  6651  000CEA  0BCF               	andlw	-49
  6652  000CEC  19EC               	xorwf	??_main& (0+255),w,b
  6653  000CEE  6EBD               	movwf	189,c	;volatile
  6654  000CF0                     
  6655                           ; BSR set to: 0
  6656                           ;main.c: 443:         CCPR2L = mot2 >> 2; CCP2CONbits.DC2B = 0x03 & mot2;
  6657  000CF0  C1EC  F0EC         	movff	main@mot2,??_main
  6658  000CF4  C1ED  F0ED         	movff	main@mot2+1,??_main+1
  6659  000CF8  35ED               	rlcf	(??_main+1)& (0+255),w,b
  6660  000CFA  33ED               	rrcf	(??_main+1)& (0+255),f,b
  6661  000CFC  33EC               	rrcf	??_main& (0+255),f,b
  6662  000CFE  35ED               	rlcf	(??_main+1)& (0+255),w,b
  6663  000D00  33ED               	rrcf	(??_main+1)& (0+255),f,b
  6664  000D02  33EC               	rrcf	??_main& (0+255),f,b
  6665  000D04  51EC               	movf	??_main& (0+255),w,b
  6666  000D06  6EBB               	movwf	187,c	;volatile
  6667  000D08                     
  6668                           ; BSR set to: 0
  6669  000D08  C1EC  F0EC         	movff	main@mot2,??_main
  6670  000D0C  0E03               	movlw	3
  6671  000D0E  17EC               	andwf	??_main& (0+255),f,b
  6672  000D10  3BEC               	swapf	??_main& (0+255),f,b
  6673  000D12  50BA               	movf	186,w,c	;volatile
  6674  000D14  19EC               	xorwf	??_main& (0+255),w,b
  6675  000D16  0BCF               	andlw	-49
  6676  000D18  19EC               	xorwf	??_main& (0+255),w,b
  6677  000D1A  6EBA               	movwf	186,c	;volatile
  6678  000D1C  EFB6  F000         	goto	l12701
  6679  000D20  EF07  F000         	goto	start
  6680  000D24                     __end_of_main:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function _sprintf *****************
  6684 ;; Defined at:
  6685 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  s               2  114[BANK0 ] PTR unsigned char 
  6688 ;;		 -> text(64), 
  6689 ;;  fmt             2  116[BANK0 ] PTR const unsigned char 
  6690 ;;		 -> STR_9(22), 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  f               6  134[BANK0 ] struct _IO_FILE
  6693 ;;  ap              2  132[BANK0 ] PTR void [1]
  6694 ;;		 -> ?_sprintf(2), 
  6695 ;;  ret             2    0        int 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  2  114[BANK0 ] int 
  6698 ;; Registers used:
  6699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6705 ;;      Params:         0      16       0       0       0       0       0       0       0
  6706 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6708 ;;      Totals:         0      26       0       0       0       0       0       0       0
  6709 ;;Total ram usage:       26 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    9
  6712 ;; This function calls:
  6713 ;;		_vfprintf
  6714 ;; This function is called by:
  6715 ;;		_main
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text1
  6720  006300                     __ptext1:
  6721                           	callstack 0
  6722  006300                     _sprintf:
  6723                           	callstack 21
  6724  006300  0ED6               	movlw	low (?_sprintf+4)
  6725  006302  0100               	movlb	0	; () banked
  6726  006304  6FE4               	movwf	sprintf@ap& (0+255),b
  6727  006306  0E00               	movlw	high (?_sprintf+4)
  6728  006308  6FE5               	movwf	(sprintf@ap+1)& (0+255),b
  6729  00630A  C0D2  F0E6         	movff	sprintf@s,sprintf@f
  6730  00630E  C0D3  F0E7         	movff	sprintf@s+1,sprintf@f+1
  6731  006312                     
  6732                           ; BSR set to: 0
  6733  006312  0E00               	movlw	0
  6734  006314  6FE9               	movwf	(sprintf@f+3)& (0+255),b
  6735  006316  0E00               	movlw	0
  6736  006318  6FE8               	movwf	(sprintf@f+2)& (0+255),b
  6737  00631A                     
  6738                           ; BSR set to: 0
  6739  00631A  0E00               	movlw	0
  6740  00631C  6FEB               	movwf	(sprintf@f+5)& (0+255),b
  6741  00631E  0E00               	movlw	0
  6742  006320  6FEA               	movwf	(sprintf@f+4)& (0+255),b
  6743  006322                     
  6744                           ; BSR set to: 0
  6745  006322  0EE6               	movlw	low sprintf@f
  6746  006324  6FCA               	movwf	vfprintf@fp& (0+255),b
  6747  006326  0E00               	movlw	high sprintf@f
  6748  006328  6FCB               	movwf	(vfprintf@fp+1)& (0+255),b
  6749  00632A  C0D4  F0CC         	movff	sprintf@fmt,vfprintf@fmt
  6750  00632E  C0D5  F0CD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6751  006332  0EE4               	movlw	low sprintf@ap
  6752  006334  6FCE               	movwf	vfprintf@ap& (0+255),b
  6753  006336  0E00               	movlw	high sprintf@ap
  6754  006338  6FCF               	movwf	(vfprintf@ap+1)& (0+255),b
  6755  00633A  EC64  F030         	call	_vfprintf	;wreg free
  6756  00633E  0100               	movlb	0	; () banked
  6757  006340  51E8               	movf	(sprintf@f+2)& (0+255),w,b
  6758  006342  25D2               	addwf	sprintf@s& (0+255),w,b
  6759  006344  6ED9               	movwf	fsr2l,c
  6760  006346  51E9               	movf	(sprintf@f+3)& (0+255),w,b
  6761  006348  21D3               	addwfc	(sprintf@s+1)& (0+255),w,b
  6762  00634A  6EDA               	movwf	fsr2h,c
  6763  00634C  0E00               	movlw	0
  6764  00634E  6EDF               	movwf	indf2,c
  6765  006350                     
  6766                           ; BSR set to: 0
  6767  006350  0012               	return		;funcret
  6768  006352                     __end_of_sprintf:
  6769                           	callstack 0
  6770                           
  6771 ;; *************** function _vfprintf *****************
  6772 ;; Defined at:
  6773 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;  fp              2  106[BANK0 ] PTR struct _IO_FILE
  6776 ;;		 -> sprintf@f(6), 
  6777 ;;  fmt             2  108[BANK0 ] PTR const unsigned char 
  6778 ;;		 -> STR_9(22), 
  6779 ;;  ap              2  110[BANK0 ] PTR PTR void 
  6780 ;;		 -> sprintf@ap(2), 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  cfmt            2  112[BANK0 ] PTR unsigned char 
  6783 ;;		 -> STR_9(22), 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  2  106[BANK0 ] int 
  6786 ;; Registers used:
  6787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6793 ;;      Params:         0       6       0       0       0       0       0       0       0
  6794 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6796 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6797 ;;Total ram usage:        8 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    8
  6800 ;; This function calls:
  6801 ;;		_vfpfcnvrt
  6802 ;; This function is called by:
  6803 ;;		_sprintf
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text2
  6808  0060C8                     __ptext2:
  6809                           	callstack 0
  6810  0060C8                     _vfprintf:
  6811                           	callstack 21
  6812  0060C8                     
  6813                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6814  0060C8  C0CC  F0D0         	movff	vfprintf@fmt,vfprintf@cfmt
  6815  0060CC  C0CD  F0D1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6816  0060D0                     
  6817                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6818  0060D0  0E00               	movlw	0
  6819  0060D2  0100               	movlb	0	; () banked
  6820  0060D4  6FF1               	movwf	(_nout+1)& (0+255),b
  6821  0060D6  0E00               	movlw	0
  6822  0060D8  6FF0               	movwf	_nout& (0+255),b
  6823                           
  6824                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6825  0060DA  EF82  F030         	goto	l12379
  6826  0060DE                     l12377:
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6830  0060DE  C0CA  F0B6         	movff	vfprintf@fp,vfpfcnvrt@fp
  6831  0060E2  C0CB  F0B7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6832  0060E6  0ED0               	movlw	low vfprintf@cfmt
  6833  0060E8  6FB8               	movwf	vfpfcnvrt@fmt& (0+255),b
  6834  0060EA  0E00               	movlw	high vfprintf@cfmt
  6835  0060EC  6FB9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6836  0060EE  C0CE  F0BA         	movff	vfprintf@ap,vfpfcnvrt@ap
  6837  0060F2  C0CF  F0BB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6838  0060F6  EC63  F01F         	call	_vfpfcnvrt	;wreg free
  6839  0060FA  0100               	movlb	0	; () banked
  6840  0060FC  51B6               	movf	?_vfpfcnvrt& (0+255),w,b
  6841  0060FE  27F0               	addwf	_nout& (0+255),f,b
  6842  006100  51B7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6843  006102  23F1               	addwfc	(_nout+1)& (0+255),f,b
  6844  006104                     l12379:
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6848  006104  C0D0  FFF6         	movff	vfprintf@cfmt,tblptrl
  6849  006108  C0D1  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6850  00610C                     	if	0	;tblptru may be non-zero
  6851  00610C                     	endif
  6852  00610C                     	if	0	;tblptru may be non-zero
  6853  00610C                     	endif
  6854  00610C  0008               	tblrd		*
  6855  00610E  50F5               	movf	tablat,w,c
  6856  006110  0900               	iorlw	0
  6857  006112  A4D8               	btfss	status,2,c
  6858  006114  EF8E  F030         	goto	u11471
  6859  006118  EF90  F030         	goto	u11470
  6860  00611C                     u11471:
  6861  00611C  EF6F  F030         	goto	l12377
  6862  006120                     u11470:
  6863  006120                     
  6864                           ; BSR set to: 0
  6865                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6866  006120  C0F0  F0CA         	movff	_nout,?_vfprintf
  6867  006124  C0F1  F0CB         	movff	_nout+1,?_vfprintf+1
  6868  006128                     
  6869                           ; BSR set to: 0
  6870  006128  0012               	return		;funcret
  6871  00612A                     __end_of_vfprintf:
  6872                           	callstack 0
  6873                           
  6874 ;; *************** function _vfpfcnvrt *****************
  6875 ;; Defined at:
  6876 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  fp              2   86[BANK0 ] PTR struct _IO_FILE
  6879 ;;		 -> sprintf@f(6), 
  6880 ;;  fmt             2   88[BANK0 ] PTR PTR unsigned char 
  6881 ;;		 -> vfprintf@cfmt(2), 
  6882 ;;  ap              2   90[BANK0 ] PTR PTR void 
  6883 ;;		 -> sprintf@ap(2), 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  llu             8    0        unsigned long long 
  6886 ;;  ll              8    0        long long 
  6887 ;;  f               4  101[BANK0 ] long long 
  6888 ;;  ct              3   98[BANK0 ] unsigned char [3]
  6889 ;;  vp              3    0        PTR void 
  6890 ;;  cp              3    0        PTR unsigned char 
  6891 ;;  i               2    0        int 
  6892 ;;  done            2    0        int 
  6893 ;;  c               1  105[BANK0 ] unsigned char 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  2   86[BANK0 ] int 
  6896 ;; Registers used:
  6897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6903 ;;      Params:         0       6       0       0       0       0       0       0       0
  6904 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6905 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6906 ;;      Totals:         0      20       0       0       0       0       0       0       0
  6907 ;;Total ram usage:       20 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; Hardware stack levels required when called:    7
  6910 ;; This function calls:
  6911 ;;		_efgtoa
  6912 ;;		_fputc
  6913 ;;		_isupper
  6914 ;;		_strncmp
  6915 ;;		_tolower
  6916 ;; This function is called by:
  6917 ;;		_vfprintf
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text3
  6922  003EC6                     __ptext3:
  6923                           	callstack 0
  6924  003EC6                     _vfpfcnvrt:
  6925                           	callstack 21
  6926  003EC6                     
  6927                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6928  003EC6  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6929  003ECA  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6930  003ECE  CFDE FFF6          	movff	postinc2,tblptrl
  6931  003ED2  CFDD FFF7          	movff	postdec2,tblptrh
  6932  003ED6                     	if	0	;tblptru may be non-zero
  6933  003ED6                     	endif
  6934  003ED6                     	if	0	;tblptru may be non-zero
  6935  003ED6                     	endif
  6936  003ED6  0008               	tblrd		*
  6937  003ED8  50F5               	movf	tablat,w,c
  6938  003EDA  0A25               	xorlw	37
  6939  003EDC  A4D8               	btfss	status,2,c
  6940  003EDE  EF73  F01F         	goto	u11381
  6941  003EE2  EF75  F01F         	goto	u11380
  6942  003EE6                     u11381:
  6943  003EE6  EFEE  F020         	goto	l12365
  6944  003EEA                     u11380:
  6945  003EEA                     
  6946                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6947  003EEA  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6948  003EEE  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6949  003EF2  2ADE               	incf	postinc2,f,c
  6950  003EF4  0E00               	movlw	0
  6951  003EF6  22DD               	addwfc	postdec2,f,c
  6952  003EF8                     
  6953                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6954  003EF8  0E00               	movlw	0
  6955  003EFA  0100               	movlb	0	; () banked
  6956  003EFC  6FF3               	movwf	(_width+1)& (0+255),b
  6957  003EFE  0E00               	movlw	0
  6958  003F00  6FF2               	movwf	_width& (0+255),b
  6959  003F02  C0F2  F05A         	movff	_width,_flags
  6960  003F06  C0F3  F05B         	movff	_width+1,_flags+1
  6961  003F0A                     
  6962                           ; BSR set to: 0
  6963                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6964  003F0A  69F4               	setf	_prec& (0+255),b
  6965  003F0C  69F5               	setf	(_prec+1)& (0+255),b
  6966  003F0E                     
  6967                           ; BSR set to: 0
  6968                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  6969  003F0E  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6970  003F12  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6971  003F16  CFDE FFF6          	movff	postinc2,tblptrl
  6972  003F1A  CFDD FFF7          	movff	postdec2,tblptrh
  6973  003F1E                     	if	0	;tblptru may be non-zero
  6974  003F1E                     	endif
  6975  003F1E                     	if	0	;tblptru may be non-zero
  6976  003F1E                     	endif
  6977  003F1E  0008               	tblrd		*
  6978  003F20  50F5               	movf	tablat,w,c
  6979  003F22  6E0A               	movwf	tolower@c^0,c
  6980  003F24  6A0B               	clrf	(tolower@c+1)^0,c
  6981  003F26  EC95  F030         	call	_tolower	;wreg free
  6982  003F2A  500A               	movf	?_tolower^0,w,c
  6983  003F2C  0100               	movlb	0	; () banked
  6984  003F2E  6FC2               	movwf	vfpfcnvrt@ct& (0+255),b
  6985  003F30                     
  6986                           ; BSR set to: 0
  6987                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  6988  003F30  51C2               	movf	vfpfcnvrt@ct& (0+255),w,b
  6989  003F32  B4D8               	btfsc	status,2,c
  6990  003F34  EF9E  F01F         	goto	u11391
  6991  003F38  EFA0  F01F         	goto	u11390
  6992  003F3C                     u11391:
  6993  003F3C  EFDA  F01F         	goto	l12321
  6994  003F40                     u11390:
  6995  003F40                     
  6996                           ; BSR set to: 0
  6997                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  6998  003F40  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6999  003F44  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7000  003F48  CFDE F0BC          	movff	postinc2,??_vfpfcnvrt
  7001  003F4C  CFDD F0BD          	movff	postdec2,??_vfpfcnvrt+1
  7002  003F50  0E01               	movlw	1
  7003  003F52  27BC               	addwf	??_vfpfcnvrt& (0+255),f,b
  7004  003F54  0E00               	movlw	0
  7005  003F56  23BD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7006  003F58  C0BC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7007  003F5C  C0BD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7008  003F60                     	if	0	;tblptru may be non-zero
  7009  003F60                     	endif
  7010  003F60                     	if	0	;tblptru may be non-zero
  7011  003F60                     	endif
  7012  003F60  0008               	tblrd		*
  7013  003F62  50F5               	movf	tablat,w,c
  7014  003F64  6E0A               	movwf	tolower@c^0,c
  7015  003F66  6A0B               	clrf	(tolower@c+1)^0,c
  7016  003F68  EC95  F030         	call	_tolower	;wreg free
  7017  003F6C  500A               	movf	?_tolower^0,w,c
  7018  003F6E  0100               	movlb	0	; () banked
  7019  003F70  6FC3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  7020  003F72                     
  7021                           ; BSR set to: 0
  7022                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  7023  003F72  51C3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  7024  003F74  B4D8               	btfsc	status,2,c
  7025  003F76  EFBF  F01F         	goto	u11401
  7026  003F7A  EFC1  F01F         	goto	u11400
  7027  003F7E                     u11401:
  7028  003F7E  EFDA  F01F         	goto	l12321
  7029  003F82                     u11400:
  7030  003F82                     
  7031                           ; BSR set to: 0
  7032                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  7033  003F82  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7034  003F86  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7035  003F8A  CFDE F0BC          	movff	postinc2,??_vfpfcnvrt
  7036  003F8E  CFDD F0BD          	movff	postdec2,??_vfpfcnvrt+1
  7037  003F92  0E02               	movlw	2
  7038  003F94  27BC               	addwf	??_vfpfcnvrt& (0+255),f,b
  7039  003F96  0E00               	movlw	0
  7040  003F98  23BD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7041  003F9A  C0BC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7042  003F9E  C0BD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7043  003FA2                     	if	0	;tblptru may be non-zero
  7044  003FA2                     	endif
  7045  003FA2                     	if	0	;tblptru may be non-zero
  7046  003FA2                     	endif
  7047  003FA2  0008               	tblrd		*
  7048  003FA4  50F5               	movf	tablat,w,c
  7049  003FA6  6E0A               	movwf	tolower@c^0,c
  7050  003FA8  6A0B               	clrf	(tolower@c+1)^0,c
  7051  003FAA  EC95  F030         	call	_tolower	;wreg free
  7052  003FAE  500A               	movf	?_tolower^0,w,c
  7053  003FB0  0100               	movlb	0	; () banked
  7054  003FB2  6FC4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  7055  003FB4                     l12321:
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  7059  003FB4  0E66               	movlw	102
  7060  003FB6  19C2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  7061  003FB8  A4D8               	btfss	status,2,c
  7062  003FBA  EFE1  F01F         	goto	u11411
  7063  003FBE  EFE3  F01F         	goto	u11410
  7064  003FC2                     u11411:
  7065  003FC2  EF23  F020         	goto	l12333
  7066  003FC6                     u11410:
  7067  003FC6                     
  7068                           ; BSR set to: 0
  7069                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  7070  003FC6  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7071  003FCA  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7072  003FCE  CFDE FFF6          	movff	postinc2,tblptrl
  7073  003FD2  CFDD FFF7          	movff	postdec2,tblptrh
  7074  003FD6                     	if	0	;tblptru may be non-zero
  7075  003FD6                     	endif
  7076  003FD6                     	if	0	;tblptru may be non-zero
  7077  003FD6                     	endif
  7078  003FD6  0008               	tblrd		*
  7079  003FD8  CFF5 F0C9          	movff	tablat,vfpfcnvrt@c
  7080  003FDC                     
  7081                           ; BSR set to: 0
  7082                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  7083  003FDC  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7084  003FE0  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7085  003FE4  2ADE               	incf	postinc2,f,c
  7086  003FE6  0E00               	movlw	0
  7087  003FE8  22DD               	addwfc	postdec2,f,c
  7088  003FEA                     
  7089                           ; BSR set to: 0
  7090                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7091  003FEA  C0BA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7092  003FEE  C0BB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7093  003FF2  CFDF F0BC          	movff	indf2,??_vfpfcnvrt
  7094  003FF6  0E04               	movlw	4
  7095  003FF8  26DE               	addwf	postinc2,f,c
  7096  003FFA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt+1
  7097  003FFE  0E00               	movlw	0
  7098  004000  22DD               	addwfc	postdec2,f,c
  7099  004002  C0BC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7100  004006  C0BD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7101  00400A  CFDE F0C5          	movff	postinc2,vfpfcnvrt@f
  7102  00400E  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f+1
  7103  004012  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+2
  7104  004016  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+3
  7105  00401A                     l12329:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  7109  00401A  C0B6  F072         	movff	vfpfcnvrt@fp,efgtoa@fp
  7110  00401E  C0B7  F073         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7111  004022  C0C5  F074         	movff	vfpfcnvrt@f,efgtoa@f
  7112  004026  C0C6  F075         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7113  00402A  C0C7  F076         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7114  00402E  C0C8  F077         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7115  004032  C0C9  F078         	movff	vfpfcnvrt@c,efgtoa@c
  7116  004036  EC92  F006         	call	_efgtoa	;wreg free
  7117  00403A  C072  F0B6         	movff	?_efgtoa,?_vfpfcnvrt
  7118  00403E  C073  F0B7         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7119  004042  EF09  F021         	goto	l2803
  7120  004046                     l12333:
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7124  004046  0EC2               	movlw	low vfpfcnvrt@ct
  7125  004048  6E04               	movwf	strncmp@_l^0,c
  7126  00404A  0E00               	movlw	high vfpfcnvrt@ct
  7127  00404C  6E05               	movwf	(strncmp@_l+1)^0,c
  7128  00404E  0EFB               	movlw	low STR_18
  7129  004050  6E06               	movwf	strncmp@_r^0,c
  7130  004052  0E7F               	movlw	high STR_18
  7131  004054  6E07               	movwf	(strncmp@_r+1)^0,c
  7132  004056  0E00               	movlw	0
  7133  004058  6E09               	movwf	(strncmp@n+1)^0,c
  7134  00405A  0E02               	movlw	2
  7135  00405C  6E08               	movwf	strncmp@n^0,c
  7136  00405E  EC72  F02A         	call	_strncmp	;wreg free
  7137  004062  5004               	movf	?_strncmp^0,w,c
  7138  004064  1005               	iorwf	(?_strncmp+1)^0,w,c
  7139  004066  A4D8               	btfss	status,2,c
  7140  004068  EF38  F020         	goto	u11421
  7141  00406C  EF3A  F020         	goto	u11420
  7142  004070                     u11421:
  7143  004070  EFB6  F020         	goto	l12349
  7144  004074                     u11420:
  7145  004074                     
  7146                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7147  004074  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7148  004078  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7149  00407C  CFDE F0BC          	movff	postinc2,??_vfpfcnvrt
  7150  004080  CFDD F0BD          	movff	postdec2,??_vfpfcnvrt+1
  7151  004084  0E01               	movlw	1
  7152  004086  0100               	movlb	0	; () banked
  7153  004088  27BC               	addwf	??_vfpfcnvrt& (0+255),f,b
  7154  00408A  0E00               	movlw	0
  7155  00408C  23BD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7156  00408E  C0BC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7157  004092  C0BD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7158  004096                     	if	0	;tblptru may be non-zero
  7159  004096                     	endif
  7160  004096                     	if	0	;tblptru may be non-zero
  7161  004096                     	endif
  7162  004096  0008               	tblrd		*
  7163  004098  CFF5 F0C9          	movff	tablat,vfpfcnvrt@c
  7164  00409C  0EBF               	movlw	191
  7165  00409E  6FBC               	movwf	??_vfpfcnvrt& (0+255),b
  7166  0040A0  0EFF               	movlw	255
  7167  0040A2  6FBD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7168  0040A4  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7169  0040A8  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7170  0040AC  CFDE FFF6          	movff	postinc2,tblptrl
  7171  0040B0  CFDD FFF7          	movff	postdec2,tblptrh
  7172  0040B4                     	if	0	;tblptru may be non-zero
  7173  0040B4                     	endif
  7174  0040B4                     	if	0	;tblptru may be non-zero
  7175  0040B4                     	endif
  7176  0040B4  0008               	tblrd		*
  7177  0040B6  50F5               	movf	tablat,w,c
  7178  0040B8  6FBE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7179  0040BA  6BBF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7180  0040BC  51BC               	movf	??_vfpfcnvrt& (0+255),w,b
  7181  0040BE  27BE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7182  0040C0  51BD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7183  0040C2  23BF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7184  0040C4  51BF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7185  0040C6  E10A               	bnz	u11430
  7186  0040C8  0E1A               	movlw	26
  7187  0040CA  5DBE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7188  0040CC  A0D8               	btfss	status,0,c
  7189  0040CE  EF6B  F020         	goto	u11431
  7190  0040D2  EF6E  F020         	goto	u11430
  7191  0040D6                     u11431:
  7192  0040D6  0E01               	movlw	1
  7193  0040D8  EF6F  F020         	goto	u11440
  7194  0040DC                     u11430:
  7195  0040DC  0E00               	movlw	0
  7196  0040DE                     u11440:
  7197  0040DE  6FC0               	movwf	_vfpfcnvrt$3202& (0+255),b
  7198  0040E0  6BC1               	clrf	(_vfpfcnvrt$3202+1)& (0+255),b
  7199  0040E2                     
  7200                           ; BSR set to: 0
  7201  0040E2  51C0               	movf	_vfpfcnvrt$3202& (0+255),w,b
  7202  0040E4  11C1               	iorwf	(_vfpfcnvrt$3202+1)& (0+255),w,b
  7203  0040E6  B4D8               	btfsc	status,2,c
  7204  0040E8  EF78  F020         	goto	u11451
  7205  0040EC  EF7A  F020         	goto	u11450
  7206  0040F0                     u11451:
  7207  0040F0  EF94  F020         	goto	l12343
  7208  0040F4                     u11450:
  7209  0040F4                     
  7210                           ; BSR set to: 0
  7211                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7212  0040F4  C0BA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7213  0040F8  C0BB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7214  0040FC  CFDF F0BC          	movff	indf2,??_vfpfcnvrt
  7215  004100  0E04               	movlw	4
  7216  004102  26DE               	addwf	postinc2,f,c
  7217  004104  CFDF F0BD          	movff	indf2,??_vfpfcnvrt+1
  7218  004108  0E00               	movlw	0
  7219  00410A  22DD               	addwfc	postdec2,f,c
  7220  00410C  C0BC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7221  004110  C0BD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7222  004114  CFDE F0C5          	movff	postinc2,vfpfcnvrt@f
  7223  004118  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f+1
  7224  00411C  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+2
  7225  004120  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+3
  7226                           
  7227                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  7228  004124  EFAC  F020         	goto	l2810
  7229  004128                     l12343:
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7233  004128  C0BA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7234  00412C  C0BB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7235  004130  CFDF F0BC          	movff	indf2,??_vfpfcnvrt
  7236  004134  0E04               	movlw	4
  7237  004136  26DE               	addwf	postinc2,f,c
  7238  004138  CFDF F0BD          	movff	indf2,??_vfpfcnvrt+1
  7239  00413C  0E00               	movlw	0
  7240  00413E  22DD               	addwfc	postdec2,f,c
  7241  004140  C0BC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7242  004144  C0BD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7243  004148  CFDE F0C5          	movff	postinc2,vfpfcnvrt@f
  7244  00414C  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f+1
  7245  004150  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+2
  7246  004154  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+3
  7247  004158                     l2810:
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7251  004158  0E02               	movlw	2
  7252  00415A  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7253  00415E  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7254  004162  26DE               	addwf	postinc2,f,c
  7255  004164  0E00               	movlw	0
  7256  004166  22DD               	addwfc	postdec2,f,c
  7257  004168  EF0D  F020         	goto	l12329
  7258  00416C                     l12349:
  7259                           
  7260                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7261  00416C  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7262  004170  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7263  004174  CFDE FFF6          	movff	postinc2,tblptrl
  7264  004178  CFDD FFF7          	movff	postdec2,tblptrh
  7265  00417C                     	if	0	;tblptru may be non-zero
  7266  00417C                     	endif
  7267  00417C                     	if	0	;tblptru may be non-zero
  7268  00417C                     	endif
  7269  00417C  0008               	tblrd		*
  7270  00417E  50F5               	movf	tablat,w,c
  7271  004180  0A25               	xorlw	37
  7272  004182  A4D8               	btfss	status,2,c
  7273  004184  EFC6  F020         	goto	u11461
  7274  004188  EFC8  F020         	goto	u11460
  7275  00418C                     u11461:
  7276  00418C  EFE0  F020         	goto	l12359
  7277  004190                     u11460:
  7278  004190                     
  7279                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7280  004190  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7281  004194  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7282  004198  2ADE               	incf	postinc2,f,c
  7283  00419A  0E00               	movlw	0
  7284  00419C  22DD               	addwfc	postdec2,f,c
  7285  00419E                     
  7286                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7287  00419E  0E00               	movlw	0
  7288  0041A0  6E05               	movwf	(fputc@c+1)^0,c
  7289  0041A2  0E25               	movlw	37
  7290  0041A4  6E04               	movwf	fputc@c^0,c
  7291  0041A6  C0B6  F006         	movff	vfpfcnvrt@fp,fputc@fp
  7292  0041AA  C0B7  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7293  0041AE  ECDD  F02A         	call	_fputc	;wreg free
  7294  0041B2                     l12355:
  7295                           
  7296                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7297  0041B2  0E00               	movlw	0
  7298  0041B4  0100               	movlb	0	; () banked
  7299  0041B6  6FB7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7300  0041B8  0E01               	movlw	1
  7301  0041BA  6FB6               	movwf	?_vfpfcnvrt& (0+255),b
  7302  0041BC  EF09  F021         	goto	l2803
  7303  0041C0                     l12359:
  7304                           
  7305                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7306  0041C0  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7307  0041C4  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7308  0041C8  2ADE               	incf	postinc2,f,c
  7309  0041CA  0E00               	movlw	0
  7310  0041CC  22DD               	addwfc	postdec2,f,c
  7311  0041CE                     
  7312                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7313  0041CE  0E00               	movlw	0
  7314  0041D0  0100               	movlb	0	; () banked
  7315  0041D2  6FB7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7316  0041D4  0E00               	movlw	0
  7317  0041D6  6FB6               	movwf	?_vfpfcnvrt& (0+255),b
  7318  0041D8  EF09  F021         	goto	l2803
  7319  0041DC                     l12365:
  7320                           
  7321                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7322  0041DC  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7323  0041E0  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7324  0041E4  CFDE FFF6          	movff	postinc2,tblptrl
  7325  0041E8  CFDD FFF7          	movff	postdec2,tblptrh
  7326  0041EC                     	if	0	;tblptru may be non-zero
  7327  0041EC                     	endif
  7328  0041EC                     	if	0	;tblptru may be non-zero
  7329  0041EC                     	endif
  7330  0041EC  0008               	tblrd		*
  7331  0041EE  50F5               	movf	tablat,w,c
  7332  0041F0  6E04               	movwf	fputc@c^0,c
  7333  0041F2  6A05               	clrf	(fputc@c+1)^0,c
  7334  0041F4  C0B6  F006         	movff	vfpfcnvrt@fp,fputc@fp
  7335  0041F8  C0B7  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7336  0041FC  ECDD  F02A         	call	_fputc	;wreg free
  7337  004200                     
  7338                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7339  004200  C0B8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7340  004204  C0B9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7341  004208  2ADE               	incf	postinc2,f,c
  7342  00420A  0E00               	movlw	0
  7343  00420C  22DD               	addwfc	postdec2,f,c
  7344  00420E  EFD9  F020         	goto	l12355
  7345  004212                     l2803:
  7346  004212  0012               	return		;funcret
  7347  004214                     __end_of_vfpfcnvrt:
  7348                           	callstack 0
  7349                           
  7350 ;; *************** function _strncmp *****************
  7351 ;; Defined at:
  7352 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strncmp.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  7355 ;;		 -> vfpfcnvrt@ct(3), 
  7356 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  7357 ;;		 -> STR_20(3), 
  7358 ;;  n               2    7[COMRAM] unsigned int 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  r               2   12[COMRAM] PTR const unsigned char 
  7361 ;;		 -> STR_20(3), 
  7362 ;;  l               2   10[COMRAM] PTR const unsigned char 
  7363 ;;		 -> vfpfcnvrt@ct(3), 
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  2    3[COMRAM] int 
  7366 ;; Registers used:
  7367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7373 ;;      Params:         6       0       0       0       0       0       0       0       0
  7374 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7375 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7376 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7377 ;;Total ram usage:       11 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    2
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_vfpfcnvrt
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text4
  7388  0054E4                     __ptext4:
  7389                           	callstack 0
  7390  0054E4                     _strncmp:
  7391                           	callstack 25
  7392  0054E4  C004  F00B         	movff	strncmp@_l,strncmp@l
  7393  0054E8  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  7394  0054EC  C006  F00D         	movff	strncmp@_r,strncmp@r
  7395  0054F0  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  7396  0054F4  0608               	decf	strncmp@n^0,f,c
  7397  0054F6  A0D8               	btfss	status,0,c
  7398  0054F8  0609               	decf	(strncmp@n+1)^0,f,c
  7399  0054FA  2808               	incf	strncmp@n^0,w,c
  7400  0054FC  E106               	bnz	u7781
  7401  0054FE  2809               	incf	(strncmp@n+1)^0,w,c
  7402  005500  A4D8               	btfss	status,2,c
  7403  005502  EF85  F02A         	goto	u7781
  7404  005506  EF87  F02A         	goto	u7780
  7405  00550A                     u7781:
  7406  00550A  EF94  F02A         	goto	l8675
  7407  00550E                     u7780:
  7408  00550E  0E00               	movlw	0
  7409  005510  6E05               	movwf	(?_strncmp+1)^0,c
  7410  005512  0E00               	movlw	0
  7411  005514  6E04               	movwf	?_strncmp^0,c
  7412  005516  EFDC  F02A         	goto	l2925
  7413  00551A                     l8673:
  7414  00551A  4A0B               	infsnz	strncmp@l^0,f,c
  7415  00551C  2A0C               	incf	(strncmp@l+1)^0,f,c
  7416  00551E  4A0D               	infsnz	strncmp@r^0,f,c
  7417  005520  2A0E               	incf	(strncmp@r+1)^0,f,c
  7418  005522  0608               	decf	strncmp@n^0,f,c
  7419  005524  A0D8               	btfss	status,0,c
  7420  005526  0609               	decf	(strncmp@n+1)^0,f,c
  7421  005528                     l8675:
  7422  005528  C00B  FFD9         	movff	strncmp@l,fsr2l
  7423  00552C  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  7424  005530  50DF               	movf	indf2,w,c
  7425  005532  B4D8               	btfsc	status,2,c
  7426  005534  EF9E  F02A         	goto	u7791
  7427  005538  EFA0  F02A         	goto	u7790
  7428  00553C                     u7791:
  7429  00553C  EFCB  F02A         	goto	l8683
  7430  005540                     u7790:
  7431  005540  C00D  FFF6         	movff	strncmp@r,tblptrl
  7432  005544  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7433  005548                     	if	0	;tblptru may be non-zero
  7434  005548                     	endif
  7435  005548                     	if	0	;tblptru may be non-zero
  7436  005548                     	endif
  7437  005548  0008               	tblrd		*
  7438  00554A  50F5               	movf	tablat,w,c
  7439  00554C  0900               	iorlw	0
  7440  00554E  B4D8               	btfsc	status,2,c
  7441  005550  EFAC  F02A         	goto	u7801
  7442  005554  EFAE  F02A         	goto	u7800
  7443  005558                     u7801:
  7444  005558  EFCB  F02A         	goto	l8683
  7445  00555C                     u7800:
  7446  00555C  5008               	movf	strncmp@n^0,w,c
  7447  00555E  1009               	iorwf	(strncmp@n+1)^0,w,c
  7448  005560  B4D8               	btfsc	status,2,c
  7449  005562  EFB5  F02A         	goto	u7811
  7450  005566  EFB7  F02A         	goto	u7810
  7451  00556A                     u7811:
  7452  00556A  EFCB  F02A         	goto	l8683
  7453  00556E                     u7810:
  7454  00556E  C00B  FFD9         	movff	strncmp@l,fsr2l
  7455  005572  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  7456  005576  50DF               	movf	indf2,w,c
  7457  005578  6E0A               	movwf	??_strncmp^0,c
  7458  00557A  C00D  FFF6         	movff	strncmp@r,tblptrl
  7459  00557E  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7460  005582                     	if	0	;tblptru may be non-zero
  7461  005582                     	endif
  7462  005582                     	if	0	;tblptru may be non-zero
  7463  005582                     	endif
  7464  005582  0008               	tblrd		*
  7465  005584  50F5               	movf	tablat,w,c
  7466  005586  180A               	xorwf	??_strncmp^0,w,c
  7467  005588  B4D8               	btfsc	status,2,c
  7468  00558A  EFC9  F02A         	goto	u7821
  7469  00558E  EFCB  F02A         	goto	u7820
  7470  005592                     u7821:
  7471  005592  EF8D  F02A         	goto	l8673
  7472  005596                     u7820:
  7473  005596                     l8683:
  7474  005596  C00B  FFD9         	movff	strncmp@l,fsr2l
  7475  00559A  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  7476  00559E  50DF               	movf	indf2,w,c
  7477  0055A0  6E0A               	movwf	??_strncmp^0,c
  7478  0055A2  C00D  FFF6         	movff	strncmp@r,tblptrl
  7479  0055A6  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7480  0055AA                     	if	0	;tblptru may be non-zero
  7481  0055AA                     	endif
  7482  0055AA                     	if	0	;tblptru may be non-zero
  7483  0055AA                     	endif
  7484  0055AA  0008               	tblrd		*
  7485  0055AC  50F5               	movf	tablat,w,c
  7486  0055AE  5C0A               	subwf	??_strncmp^0,w,c
  7487  0055B0  6E04               	movwf	?_strncmp^0,c
  7488  0055B2  6A05               	clrf	(?_strncmp+1)^0,c
  7489  0055B4  A0D8               	btfss	status,0,c
  7490  0055B6  0605               	decf	(?_strncmp+1)^0,f,c
  7491  0055B8                     l2925:
  7492  0055B8  0012               	return		;funcret
  7493  0055BA                     __end_of_strncmp:
  7494                           	callstack 0
  7495                           
  7496 ;; *************** function _efgtoa *****************
  7497 ;; Defined at:
  7498 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  7501 ;;		 -> sprintf@f(6), 
  7502 ;;  f               4   20[BANK0 ] PTR struct _IO_FILE
  7503 ;;  c               1   24[BANK0 ] unsigned char 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;  u               4   82[BANK0 ] unsigned char 
  7506 ;;  g               4   74[BANK0 ] unsigned char 
  7507 ;;  l               4   68[BANK0 ] unsigned char 
  7508 ;;  h               4   64[BANK0 ] unsigned char 
  7509 ;;  ou              4   50[BANK0 ] unsigned char 
  7510 ;;  n               2   80[BANK0 ] int 
  7511 ;;  e               2   78[BANK0 ] int 
  7512 ;;  i               2   72[BANK0 ] int 
  7513 ;;  w               2   60[BANK0 ] int 
  7514 ;;  p               2   58[BANK0 ] int 
  7515 ;;  sign            2   56[BANK0 ] int 
  7516 ;;  d               2   54[BANK0 ] int 
  7517 ;;  m               2   48[BANK0 ] int 
  7518 ;;  ne              2   46[BANK0 ] int 
  7519 ;;  pp              2   44[BANK0 ] int 
  7520 ;;  t               2   42[BANK0 ] int 
  7521 ;;  mode            1   63[BANK0 ] unsigned char 
  7522 ;;  nmode           1   62[BANK0 ] unsigned char 
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  2   18[BANK0 ] int 
  7525 ;; Registers used:
  7526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7532 ;;      Params:         0       7       0       0       0       0       0       0       0
  7533 ;;      Locals:         0      56       0       0       0       0       0       0       0
  7534 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7535 ;;      Totals:         0      68       0       0       0       0       0       0       0
  7536 ;;Total ram usage:       68 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    6
  7539 ;; This function calls:
  7540 ;;		___awdiv
  7541 ;;		___awmod
  7542 ;;		___fladd
  7543 ;;		___fldiv
  7544 ;;		___fleq
  7545 ;;		___flge
  7546 ;;		___flmul
  7547 ;;		___flneg
  7548 ;;		___flsub
  7549 ;;		___fltol
  7550 ;;		___fpclassifyf
  7551 ;;		_floorf
  7552 ;;		_isupper
  7553 ;;		_pad
  7554 ;;		_strcpy
  7555 ;;		_tolower
  7556 ;; This function is called by:
  7557 ;;		_vfpfcnvrt
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text5
  7562  000D24                     __ptext5:
  7563                           	callstack 0
  7564  000D24                     _efgtoa:
  7565                           	callstack 21
  7566  000D24                     
  7567                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  7568  000D24  0E00               	movlw	0
  7569  000D26  0100               	movlb	0	; () banked
  7570  000D28  6F99               	movwf	(efgtoa@sign+1)& (0+255),b
  7571  000D2A  0E00               	movlw	0
  7572  000D2C  6F98               	movwf	efgtoa@sign& (0+255),b
  7573  000D2E                     
  7574                           ; BSR set to: 0
  7575                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 340:     g = f;
  7576  000D2E  C074  F0AA         	movff	efgtoa@f,efgtoa@g
  7577  000D32  C075  F0AB         	movff	efgtoa@f+1,efgtoa@g+1
  7578  000D36  C076  F0AC         	movff	efgtoa@f+2,efgtoa@g+2
  7579  000D3A  C077  F0AD         	movff	efgtoa@f+3,efgtoa@g+3
  7580  000D3E                     
  7581                           ; BSR set to: 0
  7582                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  7583  000D3E  BFAD               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7584  000D40  EFA6  F006         	goto	u10840
  7585  000D44  EFA4  F006         	goto	u10841
  7586  000D48                     u10841:
  7587  000D48  EFBC  F006         	goto	l12005
  7588  000D4C                     u10840:
  7589  000D4C                     
  7590                           ; BSR set to: 0
  7591                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  7592  000D4C  0E00               	movlw	0
  7593  000D4E  6F99               	movwf	(efgtoa@sign+1)& (0+255),b
  7594  000D50  0E01               	movlw	1
  7595  000D52  6F98               	movwf	efgtoa@sign& (0+255),b
  7596  000D54                     
  7597                           ; BSR set to: 0
  7598                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  7599  000D54  C0AA  F004         	movff	efgtoa@g,___flneg@f1
  7600  000D58  C0AB  F005         	movff	efgtoa@g+1,___flneg@f1+1
  7601  000D5C  C0AC  F006         	movff	efgtoa@g+2,___flneg@f1+2
  7602  000D60  C0AD  F007         	movff	efgtoa@g+3,___flneg@f1+3
  7603  000D64  EC29  F032         	call	___flneg	;wreg free
  7604  000D68  C004  F0AA         	movff	?___flneg,efgtoa@g
  7605  000D6C  C005  F0AB         	movff	?___flneg+1,efgtoa@g+1
  7606  000D70  C006  F0AC         	movff	?___flneg+2,efgtoa@g+2
  7607  000D74  C007  F0AD         	movff	?___flneg+3,efgtoa@g+3
  7608  000D78                     l12005:
  7609                           
  7610                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  7611  000D78  0E00               	movlw	0
  7612  000D7A  0100               	movlb	0	; () banked
  7613  000D7C  6FB1               	movwf	(efgtoa@n+1)& (0+255),b
  7614  000D7E  0E00               	movlw	0
  7615  000D80  6FB0               	movwf	efgtoa@n& (0+255),b
  7616  000D82                     
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  7619  000D82  C0F2  F09C         	movff	_width,efgtoa@w
  7620  000D86  C0F3  F09D         	movff	_width+1,efgtoa@w+1
  7621  000D8A                     
  7622                           ; BSR set to: 0
  7623                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  7624  000D8A  5198               	movf	efgtoa@sign& (0+255),w,b
  7625  000D8C  1199               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7626  000D8E  A4D8               	btfss	status,2,c
  7627  000D90  EFCC  F006         	goto	u10851
  7628  000D94  EFCE  F006         	goto	u10850
  7629  000D98                     u10851:
  7630  000D98  EFD5  F006         	goto	l12013
  7631  000D9C                     u10850:
  7632  000D9C                     
  7633                           ; BSR set to: 0
  7634  000D9C  A45A               	btfss	_flags^0,2,c
  7635  000D9E  EFD3  F006         	goto	u10861
  7636  000DA2  EFD5  F006         	goto	u10860
  7637  000DA6                     u10861:
  7638  000DA6  EFEF  F006         	goto	l12025
  7639  000DAA                     u10860:
  7640  000DAA                     l12013:
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  7644  000DAA  5198               	movf	efgtoa@sign& (0+255),w,b
  7645  000DAC  1199               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7646  000DAE  A4D8               	btfss	status,2,c
  7647  000DB0  EFDC  F006         	goto	u10871
  7648  000DB4  EFDE  F006         	goto	u10870
  7649  000DB8                     u10871:
  7650  000DB8  EFE4  F006         	goto	l12017
  7651  000DBC                     u10870:
  7652  000DBC                     
  7653                           ; BSR set to: 0
  7654  000DBC  0E00               	movlw	0
  7655  000DBE  6F7F               	movwf	(_efgtoa$3173+1)& (0+255),b
  7656  000DC0  0E2B               	movlw	43
  7657  000DC2  6F7E               	movwf	_efgtoa$3173& (0+255),b
  7658  000DC4  EFE8  F006         	goto	l12019
  7659  000DC8                     l12017:
  7660                           
  7661                           ; BSR set to: 0
  7662  000DC8  0E00               	movlw	0
  7663  000DCA  6F7F               	movwf	(_efgtoa$3173+1)& (0+255),b
  7664  000DCC  0E2D               	movlw	45
  7665  000DCE  6F7E               	movwf	_efgtoa$3173& (0+255),b
  7666  000DD0                     l12019:
  7667                           
  7668                           ; BSR set to: 0
  7669  000DD0  C07E  F320         	movff	_efgtoa$3173,_dbuf
  7670  000DD4                     
  7671                           ; BSR set to: 0
  7672                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 351:         ++n;
  7673  000DD4  4BB0               	infsnz	efgtoa@n& (0+255),f,b
  7674  000DD6  2BB1               	incf	(efgtoa@n+1)& (0+255),f,b
  7675  000DD8                     
  7676                           ; BSR set to: 0
  7677                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 352:         --w;
  7678  000DD8  079C               	decf	efgtoa@w& (0+255),f,b
  7679  000DDA  A0D8               	btfss	status,0,c
  7680  000DDC  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  7681  000DDE                     l12025:
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7685  000DDE  C0AA  F004         	movff	efgtoa@g,___fpclassifyf@x
  7686  000DE2  C0AB  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7687  000DE6  C0AC  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7688  000DEA  C0AD  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7689  000DEE  EC12  F029         	call	___fpclassifyf	;wreg free
  7690  000DF2  0404               	decf	?___fpclassifyf^0,w,c
  7691  000DF4  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  7692  000DF6  A4D8               	btfss	status,2,c
  7693  000DF8  EF00  F007         	goto	u10881
  7694  000DFC  EF02  F007         	goto	u10880
  7695  000E00                     u10881:
  7696  000E00  EF59  F007         	goto	l12043
  7697  000E04                     u10880:
  7698  000E04  0EBF               	movlw	191
  7699  000E06  0100               	movlb	0	; () banked
  7700  000E08  6F79               	movwf	??_efgtoa& (0+255),b
  7701  000E0A  0EFF               	movlw	255
  7702  000E0C  6F7A               	movwf	(??_efgtoa+1)& (0+255),b
  7703  000E0E  5178               	movf	efgtoa@c& (0+255),w,b
  7704  000E10  6F7B               	movwf	(??_efgtoa+2)& (0+255),b
  7705  000E12  6B7C               	clrf	(??_efgtoa+3)& (0+255),b
  7706  000E14  5179               	movf	??_efgtoa& (0+255),w,b
  7707  000E16  277B               	addwf	(??_efgtoa+2)& (0+255),f,b
  7708  000E18  517A               	movf	(??_efgtoa+1)& (0+255),w,b
  7709  000E1A  237C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7710  000E1C  517C               	movf	(??_efgtoa+3)& (0+255),w,b
  7711  000E1E  E10A               	bnz	u10890
  7712  000E20  0E1A               	movlw	26
  7713  000E22  5D7B               	subwf	(??_efgtoa+2)& (0+255),w,b
  7714  000E24  A0D8               	btfss	status,0,c
  7715  000E26  EF17  F007         	goto	u10891
  7716  000E2A  EF1A  F007         	goto	u10890
  7717  000E2E                     u10891:
  7718  000E2E  0E01               	movlw	1
  7719  000E30  EF1B  F007         	goto	u10900
  7720  000E34                     u10890:
  7721  000E34  0E00               	movlw	0
  7722  000E36                     u10900:
  7723  000E36  6F80               	movwf	_efgtoa$3174& (0+255),b
  7724  000E38  6B81               	clrf	(_efgtoa$3174+1)& (0+255),b
  7725  000E3A                     
  7726                           ; BSR set to: 0
  7727  000E3A  5180               	movf	_efgtoa$3174& (0+255),w,b
  7728  000E3C  1181               	iorwf	(_efgtoa$3174+1)& (0+255),w,b
  7729  000E3E  B4D8               	btfsc	status,2,c
  7730  000E40  EF24  F007         	goto	u10911
  7731  000E44  EF26  F007         	goto	u10910
  7732  000E48                     u10911:
  7733  000E48  EF34  F007         	goto	l12035
  7734  000E4C                     u10910:
  7735  000E4C                     
  7736                           ; BSR set to: 0
  7737                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  7738  000E4C  0E20               	movlw	low _dbuf
  7739  000E4E  25B0               	addwf	efgtoa@n& (0+255),w,b
  7740  000E50  6E04               	movwf	strcpy@dest^0,c
  7741  000E52  0E03               	movlw	high _dbuf
  7742  000E54  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7743  000E56  6E05               	movwf	(strcpy@dest+1)^0,c
  7744  000E58  0EEB               	movlw	low STR_10
  7745  000E5A  6E06               	movwf	strcpy@src^0,c
  7746  000E5C  0E7F               	movlw	high STR_10
  7747  000E5E  6E07               	movwf	(strcpy@src+1)^0,c
  7748  000E60  EC52  F031         	call	_strcpy	;wreg free
  7749                           
  7750                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  7751  000E64  EF40  F007         	goto	l12037
  7752  000E68                     l12035:
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  7756  000E68  0E20               	movlw	low _dbuf
  7757  000E6A  25B0               	addwf	efgtoa@n& (0+255),w,b
  7758  000E6C  6E04               	movwf	strcpy@dest^0,c
  7759  000E6E  0E03               	movlw	high _dbuf
  7760  000E70  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7761  000E72  6E05               	movwf	(strcpy@dest+1)^0,c
  7762  000E74  0EF3               	movlw	low STR_11
  7763  000E76  6E06               	movwf	strcpy@src^0,c
  7764  000E78  0E7F               	movlw	high STR_11
  7765  000E7A  6E07               	movwf	(strcpy@src+1)^0,c
  7766  000E7C  EC52  F031         	call	_strcpy	;wreg free
  7767  000E80                     l12037:
  7768                           
  7769                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7770  000E80  0100               	movlb	0	; () banked
  7771  000E82  0EFD               	movlw	253
  7772  000E84  279C               	addwf	efgtoa@w& (0+255),f,b
  7773  000E86  0EFF               	movlw	255
  7774  000E88  239D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7775  000E8A                     l12039:
  7776                           
  7777                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7778  000E8A  C072  F014         	movff	efgtoa@fp,pad@fp
  7779  000E8E  C073  F015         	movff	efgtoa@fp+1,pad@fp+1
  7780  000E92  0E20               	movlw	low _dbuf
  7781  000E94  6E16               	movwf	pad@buf^0,c
  7782  000E96  0E03               	movlw	high _dbuf
  7783  000E98  6E17               	movwf	(pad@buf+1)^0,c
  7784  000E9A  C09C  F018         	movff	efgtoa@w,pad@p
  7785  000E9E  C09D  F019         	movff	efgtoa@w+1,pad@p+1
  7786  000EA2  EC6B  F02C         	call	_pad	;wreg free
  7787  000EA6  C014  F072         	movff	?_pad,?_efgtoa
  7788  000EAA  C015  F073         	movff	?_pad+1,?_efgtoa+1
  7789  000EAE  EFBE  F00C         	goto	l2721
  7790  000EB2                     l12043:
  7791                           
  7792                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7793  000EB2  C0AA  F004         	movff	efgtoa@g,___fpclassifyf@x
  7794  000EB6  C0AB  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7795  000EBA  C0AC  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7796  000EBE  C0AD  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7797  000EC2  EC12  F029         	call	___fpclassifyf	;wreg free
  7798  000EC6  5004               	movf	?___fpclassifyf^0,w,c
  7799  000EC8  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  7800  000ECA  A4D8               	btfss	status,2,c
  7801  000ECC  EF6A  F007         	goto	u10921
  7802  000ED0  EF6C  F007         	goto	u10920
  7803  000ED4                     u10921:
  7804  000ED4  EFAC  F007         	goto	l12061
  7805  000ED8                     u10920:
  7806  000ED8  0EBF               	movlw	191
  7807  000EDA  0100               	movlb	0	; () banked
  7808  000EDC  6F79               	movwf	??_efgtoa& (0+255),b
  7809  000EDE  0EFF               	movlw	255
  7810  000EE0  6F7A               	movwf	(??_efgtoa+1)& (0+255),b
  7811  000EE2  5178               	movf	efgtoa@c& (0+255),w,b
  7812  000EE4  6F7B               	movwf	(??_efgtoa+2)& (0+255),b
  7813  000EE6  6B7C               	clrf	(??_efgtoa+3)& (0+255),b
  7814  000EE8  5179               	movf	??_efgtoa& (0+255),w,b
  7815  000EEA  277B               	addwf	(??_efgtoa+2)& (0+255),f,b
  7816  000EEC  517A               	movf	(??_efgtoa+1)& (0+255),w,b
  7817  000EEE  237C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7818  000EF0  517C               	movf	(??_efgtoa+3)& (0+255),w,b
  7819  000EF2  E10A               	bnz	u10930
  7820  000EF4  0E1A               	movlw	26
  7821  000EF6  5D7B               	subwf	(??_efgtoa+2)& (0+255),w,b
  7822  000EF8  A0D8               	btfss	status,0,c
  7823  000EFA  EF81  F007         	goto	u10931
  7824  000EFE  EF84  F007         	goto	u10930
  7825  000F02                     u10931:
  7826  000F02  0E01               	movlw	1
  7827  000F04  EF85  F007         	goto	u10940
  7828  000F08                     u10930:
  7829  000F08  0E00               	movlw	0
  7830  000F0A                     u10940:
  7831  000F0A  6F82               	movwf	_efgtoa$3179& (0+255),b
  7832  000F0C  6B83               	clrf	(_efgtoa$3179+1)& (0+255),b
  7833  000F0E                     
  7834                           ; BSR set to: 0
  7835  000F0E  5182               	movf	_efgtoa$3179& (0+255),w,b
  7836  000F10  1183               	iorwf	(_efgtoa$3179+1)& (0+255),w,b
  7837  000F12  B4D8               	btfsc	status,2,c
  7838  000F14  EF8E  F007         	goto	u10951
  7839  000F18  EF90  F007         	goto	u10950
  7840  000F1C                     u10951:
  7841  000F1C  EF9E  F007         	goto	l12053
  7842  000F20                     u10950:
  7843  000F20                     
  7844                           ; BSR set to: 0
  7845                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  7846  000F20  0E20               	movlw	low _dbuf
  7847  000F22  25B0               	addwf	efgtoa@n& (0+255),w,b
  7848  000F24  6E04               	movwf	strcpy@dest^0,c
  7849  000F26  0E03               	movlw	high _dbuf
  7850  000F28  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7851  000F2A  6E05               	movwf	(strcpy@dest+1)^0,c
  7852  000F2C  0EEF               	movlw	low STR_14
  7853  000F2E  6E06               	movwf	strcpy@src^0,c
  7854  000F30  0E7F               	movlw	high STR_14
  7855  000F32  6E07               	movwf	(strcpy@src+1)^0,c
  7856  000F34  EC52  F031         	call	_strcpy	;wreg free
  7857                           
  7858                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  7859  000F38  EF40  F007         	goto	l12037
  7860  000F3C                     l12053:
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  7864  000F3C  0E20               	movlw	low _dbuf
  7865  000F3E  25B0               	addwf	efgtoa@n& (0+255),w,b
  7866  000F40  6E04               	movwf	strcpy@dest^0,c
  7867  000F42  0E03               	movlw	high _dbuf
  7868  000F44  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7869  000F46  6E05               	movwf	(strcpy@dest+1)^0,c
  7870  000F48  0EF7               	movlw	low STR_15
  7871  000F4A  6E06               	movwf	strcpy@src^0,c
  7872  000F4C  0E7F               	movlw	high STR_15
  7873  000F4E  6E07               	movwf	(strcpy@src+1)^0,c
  7874  000F50  EC52  F031         	call	_strcpy	;wreg free
  7875  000F54  EF40  F007         	goto	l12037
  7876  000F58                     l12061:
  7877                           
  7878                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  7879  000F58  0E00               	movlw	0
  7880  000F5A  0100               	movlb	0	; () banked
  7881  000F5C  6FB2               	movwf	efgtoa@u& (0+255),b
  7882  000F5E  0E00               	movlw	0
  7883  000F60  6FB3               	movwf	(efgtoa@u+1)& (0+255),b
  7884  000F62  0E80               	movlw	128
  7885  000F64  6FB4               	movwf	(efgtoa@u+2)& (0+255),b
  7886  000F66  0E3F               	movlw	63
  7887  000F68  6FB5               	movwf	(efgtoa@u+3)& (0+255),b
  7888                           
  7889                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  7890  000F6A  0E00               	movlw	0
  7891  000F6C  6FAF               	movwf	(efgtoa@e+1)& (0+255),b
  7892  000F6E  0E00               	movlw	0
  7893  000F70  6FAE               	movwf	efgtoa@e& (0+255),b
  7894  000F72                     
  7895                           ; BSR set to: 0
  7896                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  7897  000F72  C0AA  F004         	movff	efgtoa@g,___fleq@ff1
  7898  000F76  C0AB  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  7899  000F7A  C0AC  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  7900  000F7E  C0AD  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  7901  000F82  0E00               	movlw	0
  7902  000F84  6E08               	movwf	___fleq@ff2^0,c
  7903  000F86  0E00               	movlw	0
  7904  000F88  6E09               	movwf	(___fleq@ff2+1)^0,c
  7905  000F8A  0E00               	movlw	0
  7906  000F8C  6E0A               	movwf	(___fleq@ff2+2)^0,c
  7907  000F8E  0E00               	movlw	0
  7908  000F90  6E0B               	movwf	(___fleq@ff2+3)^0,c
  7909  000F92  EC24  F02D         	call	___fleq	;wreg free
  7910  000F96  B0D8               	btfsc	status,0,c
  7911  000F98  EFD0  F007         	goto	u10961
  7912  000F9C  EFD2  F007         	goto	u10960
  7913  000FA0                     u10961:
  7914  000FA0  EF55  F008         	goto	l12079
  7915  000FA4                     u10960:
  7916  000FA4  EFF1  F007         	goto	l12071
  7917  000FA8                     l12067:
  7918                           
  7919                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  7920  000FA8  C0B2  F031         	movff	efgtoa@u,___flmul@b
  7921  000FAC  C0B3  F032         	movff	efgtoa@u+1,___flmul@b+1
  7922  000FB0  C0B4  F033         	movff	efgtoa@u+2,___flmul@b+2
  7923  000FB4  C0B5  F034         	movff	efgtoa@u+3,___flmul@b+3
  7924  000FB8  0E00               	movlw	0
  7925  000FBA  6E35               	movwf	___flmul@a^0,c
  7926  000FBC  0E00               	movlw	0
  7927  000FBE  6E36               	movwf	(___flmul@a+1)^0,c
  7928  000FC0  0E20               	movlw	32
  7929  000FC2  6E37               	movwf	(___flmul@a+2)^0,c
  7930  000FC4  0E41               	movlw	65
  7931  000FC6  6E38               	movwf	(___flmul@a+3)^0,c
  7932  000FC8  ECCA  F019         	call	___flmul	;wreg free
  7933  000FCC  C031  F0B2         	movff	?___flmul,efgtoa@u
  7934  000FD0  C032  F0B3         	movff	?___flmul+1,efgtoa@u+1
  7935  000FD4  C033  F0B4         	movff	?___flmul+2,efgtoa@u+2
  7936  000FD8  C034  F0B5         	movff	?___flmul+3,efgtoa@u+3
  7937  000FDC                     
  7938                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  7939  000FDC  0100               	movlb	0	; () banked
  7940  000FDE  4BAE               	infsnz	efgtoa@e& (0+255),f,b
  7941  000FE0  2BAF               	incf	(efgtoa@e+1)& (0+255),f,b
  7942  000FE2                     l12071:
  7943                           
  7944                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  7945  000FE2  C0AA  F04A         	movff	efgtoa@g,___flge@ff1
  7946  000FE6  C0AB  F04B         	movff	efgtoa@g+1,___flge@ff1+1
  7947  000FEA  C0AC  F04C         	movff	efgtoa@g+2,___flge@ff1+2
  7948  000FEE  C0AD  F04D         	movff	efgtoa@g+3,___flge@ff1+3
  7949  000FF2  0E00               	movlw	0
  7950  000FF4  6E35               	movwf	___flmul@a^0,c
  7951  000FF6  0E00               	movlw	0
  7952  000FF8  6E36               	movwf	(___flmul@a+1)^0,c
  7953  000FFA  0E20               	movlw	32
  7954  000FFC  6E37               	movwf	(___flmul@a+2)^0,c
  7955  000FFE  0E41               	movlw	65
  7956  001000  6E38               	movwf	(___flmul@a+3)^0,c
  7957  001002  C0B2  F031         	movff	efgtoa@u,___flmul@b
  7958  001006  C0B3  F032         	movff	efgtoa@u+1,___flmul@b+1
  7959  00100A  C0B4  F033         	movff	efgtoa@u+2,___flmul@b+2
  7960  00100E  C0B5  F034         	movff	efgtoa@u+3,___flmul@b+3
  7961  001012  ECCA  F019         	call	___flmul	;wreg free
  7962  001016  C031  F04E         	movff	?___flmul,___flge@ff2
  7963  00101A  C032  F04F         	movff	?___flmul+1,___flge@ff2+1
  7964  00101E  C033  F050         	movff	?___flmul+2,___flge@ff2+2
  7965  001022  C034  F051         	movff	?___flmul+3,___flge@ff2+3
  7966  001026  EC90  F028         	call	___flge	;wreg free
  7967  00102A  B0D8               	btfsc	status,0,c
  7968  00102C  EF1A  F008         	goto	u10971
  7969  001030  EF1C  F008         	goto	u10970
  7970  001034                     u10971:
  7971  001034  EFD4  F007         	goto	l12067
  7972  001038                     u10970:
  7973  001038  EF3C  F008         	goto	l12077
  7974  00103C                     l12073:
  7975                           
  7976                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  7977  00103C  C0B2  F018         	movff	efgtoa@u,___fldiv@b
  7978  001040  C0B3  F019         	movff	efgtoa@u+1,___fldiv@b+1
  7979  001044  C0B4  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  7980  001048  C0B5  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  7981  00104C  0E00               	movlw	0
  7982  00104E  6E1C               	movwf	___fldiv@a^0,c
  7983  001050  0E00               	movlw	0
  7984  001052  6E1D               	movwf	(___fldiv@a+1)^0,c
  7985  001054  0E20               	movlw	32
  7986  001056  6E1E               	movwf	(___fldiv@a+2)^0,c
  7987  001058  0E41               	movlw	65
  7988  00105A  6E1F               	movwf	(___fldiv@a+3)^0,c
  7989  00105C  ECDF  F01B         	call	___fldiv	;wreg free
  7990  001060  C018  F0B2         	movff	?___fldiv,efgtoa@u
  7991  001064  C019  F0B3         	movff	?___fldiv+1,efgtoa@u+1
  7992  001068  C01A  F0B4         	movff	?___fldiv+2,efgtoa@u+2
  7993  00106C  C01B  F0B5         	movff	?___fldiv+3,efgtoa@u+3
  7994  001070                     
  7995                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  7996  001070  0100               	movlb	0	; () banked
  7997  001072  07AE               	decf	efgtoa@e& (0+255),f,b
  7998  001074  A0D8               	btfss	status,0,c
  7999  001076  07AF               	decf	(efgtoa@e+1)& (0+255),f,b
  8000  001078                     l12077:
  8001                           
  8002                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  8003  001078  C0AA  F04A         	movff	efgtoa@g,___flge@ff1
  8004  00107C  C0AB  F04B         	movff	efgtoa@g+1,___flge@ff1+1
  8005  001080  C0AC  F04C         	movff	efgtoa@g+2,___flge@ff1+2
  8006  001084  C0AD  F04D         	movff	efgtoa@g+3,___flge@ff1+3
  8007  001088  C0B2  F04E         	movff	efgtoa@u,___flge@ff2
  8008  00108C  C0B3  F04F         	movff	efgtoa@u+1,___flge@ff2+1
  8009  001090  C0B4  F050         	movff	efgtoa@u+2,___flge@ff2+2
  8010  001094  C0B5  F051         	movff	efgtoa@u+3,___flge@ff2+3
  8011  001098  EC90  F028         	call	___flge	;wreg free
  8012  00109C  A0D8               	btfss	status,0,c
  8013  00109E  EF53  F008         	goto	u10981
  8014  0010A2  EF55  F008         	goto	u10980
  8015  0010A6                     u10981:
  8016  0010A6  EF1E  F008         	goto	l12073
  8017  0010AA                     u10980:
  8018  0010AA                     l12079:
  8019                           
  8020                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  8021  0010AA  C078  F00A         	movff	efgtoa@c,tolower@c
  8022  0010AE  6A0B               	clrf	(tolower@c+1)^0,c
  8023  0010B0  EC95  F030         	call	_tolower	;wreg free
  8024  0010B4  500A               	movf	?_tolower^0,w,c
  8025  0010B6  0100               	movlb	0	; () banked
  8026  0010B8  6F9F               	movwf	efgtoa@mode& (0+255),b
  8027  0010BA                     
  8028                           ; BSR set to: 0
  8029                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  8030  0010BA  C09F  F09E         	movff	efgtoa@mode,efgtoa@nmode
  8031  0010BE                     
  8032                           ; BSR set to: 0
  8033                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  8034  0010BE  0E67               	movlw	103
  8035  0010C0  199F               	xorwf	efgtoa@mode& (0+255),w,b
  8036  0010C2  A4D8               	btfss	status,2,c
  8037  0010C4  EF66  F008         	goto	u10991
  8038  0010C8  EF68  F008         	goto	u10990
  8039  0010CC                     u10991:
  8040  0010CC  EF8E  F008         	goto	l12093
  8041  0010D0                     u10990:
  8042  0010D0                     
  8043                           ; BSR set to: 0
  8044                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  8045  0010D0  51F4               	movf	_prec& (0+255),w,b
  8046  0010D2  11F5               	iorwf	(_prec+1)& (0+255),w,b
  8047  0010D4  A4D8               	btfss	status,2,c
  8048  0010D6  EF6F  F008         	goto	u11001
  8049  0010DA  EF71  F008         	goto	u11000
  8050  0010DE                     u11001:
  8051  0010DE  EF75  F008         	goto	l12089
  8052  0010E2                     u11000:
  8053  0010E2                     
  8054                           ; BSR set to: 0
  8055                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  8056  0010E2  0E00               	movlw	0
  8057  0010E4  6FF5               	movwf	(_prec+1)& (0+255),b
  8058  0010E6  0E01               	movlw	1
  8059  0010E8  6FF4               	movwf	_prec& (0+255),b
  8060  0010EA                     l12089:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  8064  0010EA  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  8065  0010EC  EF82  F008         	goto	u11010
  8066  0010F0  51F5               	movf	(_prec+1)& (0+255),w,b
  8067  0010F2  E106               	bnz	u11011
  8068  0010F4  05F4               	decf	_prec& (0+255),w,b
  8069  0010F6  B0D8               	btfsc	status,0,c
  8070  0010F8  EF80  F008         	goto	u11011
  8071  0010FC  EF82  F008         	goto	u11010
  8072  001100                     u11011:
  8073  001100  EF88  F008         	goto	l2739
  8074  001104                     u11010:
  8075  001104                     l12091:
  8076                           
  8077                           ; BSR set to: 0
  8078  001104  0E00               	movlw	0
  8079  001106  6F9B               	movwf	(efgtoa@p+1)& (0+255),b
  8080  001108  0E06               	movlw	6
  8081  00110A  6F9A               	movwf	efgtoa@p& (0+255),b
  8082  00110C  EF97  F008         	goto	l12099
  8083  001110                     l2739:
  8084                           
  8085                           ; BSR set to: 0
  8086  001110  C0F4  F09A         	movff	_prec,efgtoa@p
  8087  001114  C0F5  F09B         	movff	_prec+1,efgtoa@p+1
  8088  001118  EF97  F008         	goto	l12099
  8089  00111C                     l12093:
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  8093  00111C  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  8094  00111E  EF93  F008         	goto	u11021
  8095  001122  EF95  F008         	goto	u11020
  8096  001126                     u11021:
  8097  001126  EF82  F008         	goto	l12091
  8098  00112A                     u11020:
  8099  00112A  EF88  F008         	goto	l2739
  8100  00112E                     l12099:
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  8104  00112E  0E67               	movlw	103
  8105  001130  199F               	xorwf	efgtoa@mode& (0+255),w,b
  8106  001132  A4D8               	btfss	status,2,c
  8107  001134  EF9E  F008         	goto	u11031
  8108  001138  EFA0  F008         	goto	u11030
  8109  00113C                     u11031:
  8110  00113C  EFCF  F008         	goto	l12109
  8111  001140                     u11030:
  8112  001140                     
  8113                           ; BSR set to: 0
  8114                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8115  001140  AFAF               	btfss	(efgtoa@e+1)& (0+255),7,b
  8116  001142  EFAE  F008         	goto	u11040
  8117  001146  0EFC               	movlw	252
  8118  001148  5DAE               	subwf	efgtoa@e& (0+255),w,b
  8119  00114A  0EFF               	movlw	255
  8120  00114C  59AF               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8121  00114E  A0D8               	btfss	status,0,c
  8122  001150  EFAC  F008         	goto	u11041
  8123  001154  EFAE  F008         	goto	u11040
  8124  001158                     u11041:
  8125  001158  EFCD  F008         	goto	l12107
  8126  00115C                     u11040:
  8127  00115C                     
  8128                           ; BSR set to: 0
  8129  00115C  0EFF               	movlw	255
  8130  00115E  6F79               	movwf	??_efgtoa& (0+255),b
  8131  001160  0EFF               	movlw	255
  8132  001162  6F7A               	movwf	(??_efgtoa+1)& (0+255),b
  8133  001164  C09A  F07B         	movff	efgtoa@p,??_efgtoa+2
  8134  001168  C09B  F07C         	movff	efgtoa@p+1,??_efgtoa+3
  8135  00116C  5179               	movf	??_efgtoa& (0+255),w,b
  8136  00116E  277B               	addwf	(??_efgtoa+2)& (0+255),f,b
  8137  001170  517A               	movf	(??_efgtoa+1)& (0+255),w,b
  8138  001172  237C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8139  001174  51AE               	movf	efgtoa@e& (0+255),w,b
  8140  001176  5D7B               	subwf	(??_efgtoa+2)& (0+255),w,b
  8141  001178  517C               	movf	(??_efgtoa+3)& (0+255),w,b
  8142  00117A  0A80               	xorlw	128
  8143  00117C  6F7D               	movwf	(??_efgtoa+4)& (0+255),b
  8144  00117E  51AF               	movf	(efgtoa@e+1)& (0+255),w,b
  8145  001180  0A80               	xorlw	128
  8146  001182  597D               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8147  001184  A0D8               	btfss	status,0,c
  8148  001186  EFC7  F008         	goto	u11051
  8149  00118A  EFC9  F008         	goto	u11050
  8150  00118E                     u11051:
  8151  00118E  EFCD  F008         	goto	l12107
  8152  001192                     u11050:
  8153  001192                     
  8154                           ; BSR set to: 0
  8155                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  8156  001192  0E66               	movlw	102
  8157  001194  6F9E               	movwf	efgtoa@nmode& (0+255),b
  8158                           
  8159                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  8160  001196  EFCF  F008         	goto	l12109
  8161  00119A                     l12107:
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  8165  00119A  0E65               	movlw	101
  8166  00119C  6F9E               	movwf	efgtoa@nmode& (0+255),b
  8167  00119E                     l12109:
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 411:     m = p;
  8171  00119E  C09A  F090         	movff	efgtoa@p,efgtoa@m
  8172  0011A2  C09B  F091         	movff	efgtoa@p+1,efgtoa@m+1
  8173  0011A6                     
  8174                           ; BSR set to: 0
  8175                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8176  0011A6  0E67               	movlw	103
  8177  0011A8  199F               	xorwf	efgtoa@mode& (0+255),w,b
  8178  0011AA  A4D8               	btfss	status,2,c
  8179  0011AC  EFDA  F008         	goto	u11061
  8180  0011B0  EFDC  F008         	goto	u11060
  8181  0011B4                     u11061:
  8182  0011B4  EFEC  F008         	goto	l12117
  8183  0011B8                     u11060:
  8184  0011B8                     
  8185                           ; BSR set to: 0
  8186  0011B8  0E66               	movlw	102
  8187  0011BA  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8188  0011BC  A4D8               	btfss	status,2,c
  8189  0011BE  EFE3  F008         	goto	u11071
  8190  0011C2  EFE5  F008         	goto	u11070
  8191  0011C6                     u11071:
  8192  0011C6  EFEE  F008         	goto	l12119
  8193  0011CA                     u11070:
  8194  0011CA                     
  8195                           ; BSR set to: 0
  8196  0011CA  BFAF               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8197  0011CC  EFEC  F008         	goto	u11080
  8198  0011D0  EFEA  F008         	goto	u11081
  8199  0011D4                     u11081:
  8200  0011D4  EFEE  F008         	goto	l12119
  8201  0011D8                     u11080:
  8202  0011D8                     l12117:
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 413:         ++m;
  8206  0011D8  4B90               	infsnz	efgtoa@m& (0+255),f,b
  8207  0011DA  2B91               	incf	(efgtoa@m+1)& (0+255),f,b
  8208  0011DC                     l12119:
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  8212  0011DC  0E66               	movlw	102
  8213  0011DE  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8214  0011E0  A4D8               	btfss	status,2,c
  8215  0011E2  EFF5  F008         	goto	u11091
  8216  0011E6  EFF7  F008         	goto	u11090
  8217  0011EA                     u11091:
  8218  0011EA  EF17  F009         	goto	l12129
  8219  0011EE                     u11090:
  8220  0011EE                     
  8221                           ; BSR set to: 0
  8222                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  8223  0011EE  BFAF               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8224  0011F0  EFFE  F008         	goto	u11100
  8225  0011F4  EFFC  F008         	goto	u11101
  8226  0011F8                     u11101:
  8227  0011F8  EF0A  F009         	goto	l12125
  8228  0011FC                     u11100:
  8229  0011FC                     
  8230                           ; BSR set to: 0
  8231                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  8232  0011FC  0E00               	movlw	0
  8233  0011FE  6FB2               	movwf	efgtoa@u& (0+255),b
  8234  001200  0E00               	movlw	0
  8235  001202  6FB3               	movwf	(efgtoa@u+1)& (0+255),b
  8236  001204  0E80               	movlw	128
  8237  001206  6FB4               	movwf	(efgtoa@u+2)& (0+255),b
  8238  001208  0E3F               	movlw	63
  8239  00120A  6FB5               	movwf	(efgtoa@u+3)& (0+255),b
  8240                           
  8241                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  8242  00120C  0E00               	movlw	0
  8243  00120E  6FAF               	movwf	(efgtoa@e+1)& (0+255),b
  8244  001210  0E00               	movlw	0
  8245  001212  6FAE               	movwf	efgtoa@e& (0+255),b
  8246  001214                     l12125:
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  8250  001214  0E67               	movlw	103
  8251  001216  199F               	xorwf	efgtoa@mode& (0+255),w,b
  8252  001218  B4D8               	btfsc	status,2,c
  8253  00121A  EF11  F009         	goto	u11111
  8254  00121E  EF13  F009         	goto	u11110
  8255  001222                     u11111:
  8256  001222  EF17  F009         	goto	l12129
  8257  001226                     u11110:
  8258  001226                     
  8259                           ; BSR set to: 0
  8260                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  8261  001226  51AE               	movf	efgtoa@e& (0+255),w,b
  8262  001228  2790               	addwf	efgtoa@m& (0+255),f,b
  8263  00122A  51AF               	movf	(efgtoa@e+1)& (0+255),w,b
  8264  00122C  2391               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8265  00122E                     l12129:
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  8269  00122E  0E00               	movlw	0
  8270  001230  6FA9               	movwf	(efgtoa@i+1)& (0+255),b
  8271  001232  0E00               	movlw	0
  8272  001234  6FA8               	movwf	efgtoa@i& (0+255),b
  8273  001236                     
  8274                           ; BSR set to: 0
  8275                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 429:     h = g;
  8276  001236  C0AA  F0A0         	movff	efgtoa@g,efgtoa@h
  8277  00123A  C0AB  F0A1         	movff	efgtoa@g+1,efgtoa@h+1
  8278  00123E  C0AC  F0A2         	movff	efgtoa@g+2,efgtoa@h+2
  8279  001242  C0AD  F0A3         	movff	efgtoa@g+3,efgtoa@h+3
  8280  001246                     
  8281                           ; BSR set to: 0
  8282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  8283  001246  C0B2  F092         	movff	efgtoa@u,efgtoa@ou
  8284  00124A  C0B3  F093         	movff	efgtoa@u+1,efgtoa@ou+1
  8285  00124E  C0B4  F094         	movff	efgtoa@u+2,efgtoa@ou+2
  8286  001252  C0B5  F095         	movff	efgtoa@u+3,efgtoa@ou+3
  8287                           
  8288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  8289  001256  EFA8  F009         	goto	l12143
  8290  00125A                     l12135:
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  8294  00125A  C0A0  F018         	movff	efgtoa@h,___fldiv@b
  8295  00125E  C0A1  F019         	movff	efgtoa@h+1,___fldiv@b+1
  8296  001262  C0A2  F01A         	movff	efgtoa@h+2,___fldiv@b+2
  8297  001266  C0A3  F01B         	movff	efgtoa@h+3,___fldiv@b+3
  8298  00126A  C0B2  F01C         	movff	efgtoa@u,___fldiv@a
  8299  00126E  C0B3  F01D         	movff	efgtoa@u+1,___fldiv@a+1
  8300  001272  C0B4  F01E         	movff	efgtoa@u+2,___fldiv@a+2
  8301  001276  C0B5  F01F         	movff	efgtoa@u+3,___fldiv@a+3
  8302  00127A  ECDF  F01B         	call	___fldiv	;wreg free
  8303  00127E  C018  F031         	movff	?___fldiv,floorf@x
  8304  001282  C019  F032         	movff	?___fldiv+1,floorf@x+1
  8305  001286  C01A  F033         	movff	?___fldiv+2,floorf@x+2
  8306  00128A  C01B  F034         	movff	?___fldiv+3,floorf@x+3
  8307  00128E  EC33  F022         	call	_floorf	;wreg free
  8308  001292  C031  F0A4         	movff	?_floorf,efgtoa@l
  8309  001296  C032  F0A5         	movff	?_floorf+1,efgtoa@l+1
  8310  00129A  C033  F0A6         	movff	?_floorf+2,efgtoa@l+2
  8311  00129E  C034  F0A7         	movff	?_floorf+3,efgtoa@l+3
  8312                           
  8313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  8314  0012A2  C0A4  F068         	movff	efgtoa@l,___fltol@f1
  8315  0012A6  C0A5  F069         	movff	efgtoa@l+1,___fltol@f1+1
  8316  0012AA  C0A6  F06A         	movff	efgtoa@l+2,___fltol@f1+2
  8317  0012AE  C0A7  F06B         	movff	efgtoa@l+3,___fltol@f1+3
  8318  0012B2  EC0C  F028         	call	___fltol	;wreg free
  8319  0012B6  C068  F096         	movff	?___fltol,efgtoa@d
  8320  0012BA  C069  F097         	movff	?___fltol+1,efgtoa@d+1
  8321  0012BE                     
  8322                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  8323  0012BE  C0A0  F060         	movff	efgtoa@h,___flsub@b
  8324  0012C2  C0A1  F061         	movff	efgtoa@h+1,___flsub@b+1
  8325  0012C6  C0A2  F062         	movff	efgtoa@h+2,___flsub@b+2
  8326  0012CA  C0A3  F063         	movff	efgtoa@h+3,___flsub@b+3
  8327  0012CE  C0B2  F035         	movff	efgtoa@u,___flmul@a
  8328  0012D2  C0B3  F036         	movff	efgtoa@u+1,___flmul@a+1
  8329  0012D6  C0B4  F037         	movff	efgtoa@u+2,___flmul@a+2
  8330  0012DA  C0B5  F038         	movff	efgtoa@u+3,___flmul@a+3
  8331  0012DE  C0A4  F031         	movff	efgtoa@l,___flmul@b
  8332  0012E2  C0A5  F032         	movff	efgtoa@l+1,___flmul@b+1
  8333  0012E6  C0A6  F033         	movff	efgtoa@l+2,___flmul@b+2
  8334  0012EA  C0A7  F034         	movff	efgtoa@l+3,___flmul@b+3
  8335  0012EE  ECCA  F019         	call	___flmul	;wreg free
  8336  0012F2  C031  F064         	movff	?___flmul,___flsub@a
  8337  0012F6  C032  F065         	movff	?___flmul+1,___flsub@a+1
  8338  0012FA  C033  F066         	movff	?___flmul+2,___flsub@a+2
  8339  0012FE  C034  F067         	movff	?___flmul+3,___flsub@a+3
  8340  001302  ECA9  F031         	call	___flsub	;wreg free
  8341  001306  C060  F0A0         	movff	?___flsub,efgtoa@h
  8342  00130A  C061  F0A1         	movff	?___flsub+1,efgtoa@h+1
  8343  00130E  C062  F0A2         	movff	?___flsub+2,efgtoa@h+2
  8344  001312  C063  F0A3         	movff	?___flsub+3,efgtoa@h+3
  8345  001316                     
  8346                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  8347  001316  C0B2  F018         	movff	efgtoa@u,___fldiv@b
  8348  00131A  C0B3  F019         	movff	efgtoa@u+1,___fldiv@b+1
  8349  00131E  C0B4  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  8350  001322  C0B5  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  8351  001326  0E00               	movlw	0
  8352  001328  6E1C               	movwf	___fldiv@a^0,c
  8353  00132A  0E00               	movlw	0
  8354  00132C  6E1D               	movwf	(___fldiv@a+1)^0,c
  8355  00132E  0E20               	movlw	32
  8356  001330  6E1E               	movwf	(___fldiv@a+2)^0,c
  8357  001332  0E41               	movlw	65
  8358  001334  6E1F               	movwf	(___fldiv@a+3)^0,c
  8359  001336  ECDF  F01B         	call	___fldiv	;wreg free
  8360  00133A  C018  F0B2         	movff	?___fldiv,efgtoa@u
  8361  00133E  C019  F0B3         	movff	?___fldiv+1,efgtoa@u+1
  8362  001342  C01A  F0B4         	movff	?___fldiv+2,efgtoa@u+2
  8363  001346  C01B  F0B5         	movff	?___fldiv+3,efgtoa@u+3
  8364  00134A                     
  8365                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 436:         ++i;
  8366  00134A  0100               	movlb	0	; () banked
  8367  00134C  4BA8               	infsnz	efgtoa@i& (0+255),f,b
  8368  00134E  2BA9               	incf	(efgtoa@i+1)& (0+255),f,b
  8369  001350                     l12143:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  8373  001350  5190               	movf	efgtoa@m& (0+255),w,b
  8374  001352  5DA8               	subwf	efgtoa@i& (0+255),w,b
  8375  001354  51A9               	movf	(efgtoa@i+1)& (0+255),w,b
  8376  001356  0A80               	xorlw	128
  8377  001358  6F79               	movwf	??_efgtoa& (0+255),b
  8378  00135A  5191               	movf	(efgtoa@m+1)& (0+255),w,b
  8379  00135C  0A80               	xorlw	128
  8380  00135E  5979               	subwfb	??_efgtoa& (0+255),w,b
  8381  001360  A0D8               	btfss	status,0,c
  8382  001362  EFB5  F009         	goto	u11121
  8383  001366  EFB7  F009         	goto	u11120
  8384  00136A                     u11121:
  8385  00136A  EF2D  F009         	goto	l12135
  8386  00136E                     u11120:
  8387  00136E                     
  8388                           ; BSR set to: 0
  8389                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  8390  00136E  C0B2  F031         	movff	efgtoa@u,___flmul@b
  8391  001372  C0B3  F032         	movff	efgtoa@u+1,___flmul@b+1
  8392  001376  C0B4  F033         	movff	efgtoa@u+2,___flmul@b+2
  8393  00137A  C0B5  F034         	movff	efgtoa@u+3,___flmul@b+3
  8394  00137E  0E00               	movlw	0
  8395  001380  6E35               	movwf	___flmul@a^0,c
  8396  001382  0E00               	movlw	0
  8397  001384  6E36               	movwf	(___flmul@a+1)^0,c
  8398  001386  0EA0               	movlw	160
  8399  001388  6E37               	movwf	(___flmul@a+2)^0,c
  8400  00138A  0E40               	movlw	64
  8401  00138C  6E38               	movwf	(___flmul@a+3)^0,c
  8402  00138E  ECCA  F019         	call	___flmul	;wreg free
  8403  001392  C031  F0A4         	movff	?___flmul,efgtoa@l
  8404  001396  C032  F0A5         	movff	?___flmul+1,efgtoa@l+1
  8405  00139A  C033  F0A6         	movff	?___flmul+2,efgtoa@l+2
  8406  00139E  C034  F0A7         	movff	?___flmul+3,efgtoa@l+3
  8407  0013A2                     
  8408                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  8409  0013A2  C0A0  F04A         	movff	efgtoa@h,___flge@ff1
  8410  0013A6  C0A1  F04B         	movff	efgtoa@h+1,___flge@ff1+1
  8411  0013AA  C0A2  F04C         	movff	efgtoa@h+2,___flge@ff1+2
  8412  0013AE  C0A3  F04D         	movff	efgtoa@h+3,___flge@ff1+3
  8413  0013B2  C0A4  F04E         	movff	efgtoa@l,___flge@ff2
  8414  0013B6  C0A5  F04F         	movff	efgtoa@l+1,___flge@ff2+1
  8415  0013BA  C0A6  F050         	movff	efgtoa@l+2,___flge@ff2+2
  8416  0013BE  C0A7  F051         	movff	efgtoa@l+3,___flge@ff2+3
  8417  0013C2  EC90  F028         	call	___flge	;wreg free
  8418  0013C6  B0D8               	btfsc	status,0,c
  8419  0013C8  EFE8  F009         	goto	u11131
  8420  0013CC  EFEA  F009         	goto	u11130
  8421  0013D0                     u11131:
  8422  0013D0  EFF5  F009         	goto	l12151
  8423  0013D4                     u11130:
  8424  0013D4                     
  8425                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  8426  0013D4  0E00               	movlw	0
  8427  0013D6  0100               	movlb	0	; () banked
  8428  0013D8  6FA4               	movwf	efgtoa@l& (0+255),b
  8429  0013DA  0E00               	movlw	0
  8430  0013DC  6FA5               	movwf	(efgtoa@l+1)& (0+255),b
  8431  0013DE  0E00               	movlw	0
  8432  0013E0  6FA6               	movwf	(efgtoa@l+2)& (0+255),b
  8433  0013E2  0E00               	movlw	0
  8434  0013E4  6FA7               	movwf	(efgtoa@l+3)& (0+255),b
  8435                           
  8436                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 443:     } else {
  8437  0013E6  EF1E  F00A         	goto	l12157
  8438  0013EA                     l12151:
  8439                           
  8440                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  8441  0013EA  C0A0  F004         	movff	efgtoa@h,___fleq@ff1
  8442  0013EE  C0A1  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  8443  0013F2  C0A2  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  8444  0013F6  C0A3  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  8445  0013FA  C0A4  F008         	movff	efgtoa@l,___fleq@ff2
  8446  0013FE  C0A5  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  8447  001402  C0A6  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  8448  001406  C0A7  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  8449  00140A  EC24  F02D         	call	___fleq	;wreg free
  8450  00140E  A0D8               	btfss	status,0,c
  8451  001410  EF0C  F00A         	goto	u11141
  8452  001414  EF0E  F00A         	goto	u11140
  8453  001418                     u11141:
  8454  001418  EF1E  F00A         	goto	l12157
  8455  00141C                     u11140:
  8456  00141C  0100               	movlb	0	; () banked
  8457  00141E  B196               	btfsc	efgtoa@d& (0+255),0,b
  8458  001420  EF14  F00A         	goto	u11151
  8459  001424  EF16  F00A         	goto	u11150
  8460  001428                     u11151:
  8461  001428  EF1E  F00A         	goto	l12157
  8462  00142C                     u11150:
  8463  00142C                     
  8464                           ; BSR set to: 0
  8465                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  8466  00142C  0E00               	movlw	0
  8467  00142E  6FA4               	movwf	efgtoa@l& (0+255),b
  8468  001430  0E00               	movlw	0
  8469  001432  6FA5               	movwf	(efgtoa@l+1)& (0+255),b
  8470  001434  0E00               	movlw	0
  8471  001436  6FA6               	movwf	(efgtoa@l+2)& (0+255),b
  8472  001438  0E00               	movlw	0
  8473  00143A  6FA7               	movwf	(efgtoa@l+3)& (0+255),b
  8474  00143C                     l12157:
  8475                           
  8476                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  8477  00143C  C0AA  F04A         	movff	efgtoa@g,___fladd@b
  8478  001440  C0AB  F04B         	movff	efgtoa@g+1,___fladd@b+1
  8479  001444  C0AC  F04C         	movff	efgtoa@g+2,___fladd@b+2
  8480  001448  C0AD  F04D         	movff	efgtoa@g+3,___fladd@b+3
  8481  00144C  C0A4  F04E         	movff	efgtoa@l,___fladd@a
  8482  001450  C0A5  F04F         	movff	efgtoa@l+1,___fladd@a+1
  8483  001454  C0A6  F050         	movff	efgtoa@l+2,___fladd@a+2
  8484  001458  C0A7  F051         	movff	efgtoa@l+3,___fladd@a+3
  8485  00145C  EC6A  F017         	call	___fladd	;wreg free
  8486  001460  C04A  F0A0         	movff	?___fladd,efgtoa@h
  8487  001464  C04B  F0A1         	movff	?___fladd+1,efgtoa@h+1
  8488  001468  C04C  F0A2         	movff	?___fladd+2,efgtoa@h+2
  8489  00146C  C04D  F0A3         	movff	?___fladd+3,efgtoa@h+3
  8490  001470                     
  8491                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  8492  001470  C0A0  F04A         	movff	efgtoa@h,___flge@ff1
  8493  001474  C0A1  F04B         	movff	efgtoa@h+1,___flge@ff1+1
  8494  001478  C0A2  F04C         	movff	efgtoa@h+2,___flge@ff1+2
  8495  00147C  C0A3  F04D         	movff	efgtoa@h+3,___flge@ff1+3
  8496  001480  0E00               	movlw	0
  8497  001482  6E35               	movwf	___flmul@a^0,c
  8498  001484  0E00               	movlw	0
  8499  001486  6E36               	movwf	(___flmul@a+1)^0,c
  8500  001488  0E20               	movlw	32
  8501  00148A  6E37               	movwf	(___flmul@a+2)^0,c
  8502  00148C  0E41               	movlw	65
  8503  00148E  6E38               	movwf	(___flmul@a+3)^0,c
  8504  001490  C092  F031         	movff	efgtoa@ou,___flmul@b
  8505  001494  C093  F032         	movff	efgtoa@ou+1,___flmul@b+1
  8506  001498  C094  F033         	movff	efgtoa@ou+2,___flmul@b+2
  8507  00149C  C095  F034         	movff	efgtoa@ou+3,___flmul@b+3
  8508  0014A0  ECCA  F019         	call	___flmul	;wreg free
  8509  0014A4  C031  F04E         	movff	?___flmul,___flge@ff2
  8510  0014A8  C032  F04F         	movff	?___flmul+1,___flge@ff2+1
  8511  0014AC  C033  F050         	movff	?___flmul+2,___flge@ff2+2
  8512  0014B0  C034  F051         	movff	?___flmul+3,___flge@ff2+3
  8513  0014B4  EC90  F028         	call	___flge	;wreg free
  8514  0014B8  A0D8               	btfss	status,0,c
  8515  0014BA  EF61  F00A         	goto	u11161
  8516  0014BE  EF63  F00A         	goto	u11160
  8517  0014C2                     u11161:
  8518  0014C2  EF8C  F00A         	goto	l12169
  8519  0014C6                     u11160:
  8520  0014C6                     
  8521                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 454:   e++;
  8522  0014C6  0100               	movlb	0	; () banked
  8523  0014C8  4BAE               	infsnz	efgtoa@e& (0+255),f,b
  8524  0014CA  2BAF               	incf	(efgtoa@e+1)& (0+255),f,b
  8525  0014CC                     
  8526                           ; BSR set to: 0
  8527                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  8528  0014CC  C092  F031         	movff	efgtoa@ou,___flmul@b
  8529  0014D0  C093  F032         	movff	efgtoa@ou+1,___flmul@b+1
  8530  0014D4  C094  F033         	movff	efgtoa@ou+2,___flmul@b+2
  8531  0014D8  C095  F034         	movff	efgtoa@ou+3,___flmul@b+3
  8532  0014DC  0E00               	movlw	0
  8533  0014DE  6E35               	movwf	___flmul@a^0,c
  8534  0014E0  0E00               	movlw	0
  8535  0014E2  6E36               	movwf	(___flmul@a+1)^0,c
  8536  0014E4  0E20               	movlw	32
  8537  0014E6  6E37               	movwf	(___flmul@a+2)^0,c
  8538  0014E8  0E41               	movlw	65
  8539  0014EA  6E38               	movwf	(___flmul@a+3)^0,c
  8540  0014EC  ECCA  F019         	call	___flmul	;wreg free
  8541  0014F0  C031  F092         	movff	?___flmul,efgtoa@ou
  8542  0014F4  C032  F093         	movff	?___flmul+1,efgtoa@ou+1
  8543  0014F8  C033  F094         	movff	?___flmul+2,efgtoa@ou+2
  8544  0014FC  C034  F095         	movff	?___flmul+3,efgtoa@ou+3
  8545  001500                     
  8546                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  8547  001500  0E66               	movlw	102
  8548  001502  0100               	movlb	0	; () banked
  8549  001504  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8550  001506  A4D8               	btfss	status,2,c
  8551  001508  EF88  F00A         	goto	u11171
  8552  00150C  EF8A  F00A         	goto	u11170
  8553  001510                     u11171:
  8554  001510  EF8C  F00A         	goto	l12169
  8555  001514                     u11170:
  8556  001514                     
  8557                           ; BSR set to: 0
  8558                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 458:    m++;
  8559  001514  4B90               	infsnz	efgtoa@m& (0+255),f,b
  8560  001516  2B91               	incf	(efgtoa@m+1)& (0+255),f,b
  8561  001518                     l12169:
  8562                           
  8563                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  8564  001518  C092  F0B2         	movff	efgtoa@ou,efgtoa@u
  8565  00151C  C093  F0B3         	movff	efgtoa@ou+1,efgtoa@u+1
  8566  001520  C094  F0B4         	movff	efgtoa@ou+2,efgtoa@u+2
  8567  001524  C095  F0B5         	movff	efgtoa@ou+3,efgtoa@u+3
  8568  001528                     
  8569                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8570  001528  0E65               	movlw	101
  8571  00152A  0100               	movlb	0	; () banked
  8572  00152C  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8573  00152E  B4D8               	btfsc	status,2,c
  8574  001530  EF9C  F00A         	goto	u11181
  8575  001534  EF9E  F00A         	goto	u11180
  8576  001538                     u11181:
  8577  001538  EFA4  F00A         	goto	l12175
  8578  00153C                     u11180:
  8579  00153C                     
  8580                           ; BSR set to: 0
  8581  00153C  C0AE  F08E         	movff	efgtoa@e,efgtoa@ne
  8582  001540  C0AF  F08F         	movff	efgtoa@e+1,efgtoa@ne+1
  8583  001544  EFA8  F00A         	goto	l2767
  8584  001548                     l12175:
  8585                           
  8586                           ; BSR set to: 0
  8587  001548  0E00               	movlw	0
  8588  00154A  6F8F               	movwf	(efgtoa@ne+1)& (0+255),b
  8589  00154C  0E00               	movlw	0
  8590  00154E  6F8E               	movwf	efgtoa@ne& (0+255),b
  8591  001550                     l2767:
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  8595  001550  0E00               	movlw	0
  8596  001552  6F8D               	movwf	(efgtoa@pp+1)& (0+255),b
  8597  001554  0E00               	movlw	0
  8598  001556  6F8C               	movwf	efgtoa@pp& (0+255),b
  8599                           
  8600                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  8601  001558  0E00               	movlw	0
  8602  00155A  6F8B               	movwf	(efgtoa@t+1)& (0+255),b
  8603  00155C  0E00               	movlw	0
  8604  00155E  6F8A               	movwf	efgtoa@t& (0+255),b
  8605                           
  8606                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  8607  001560  0E00               	movlw	0
  8608  001562  6FA9               	movwf	(efgtoa@i+1)& (0+255),b
  8609  001564  0E00               	movlw	0
  8610  001566  6FA8               	movwf	efgtoa@i& (0+255),b
  8611                           
  8612                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8613  001568  EFA4  F00B         	goto	l12225
  8614  00156C                     l12177:
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  8618  00156C  C0A0  F018         	movff	efgtoa@h,___fldiv@b
  8619  001570  C0A1  F019         	movff	efgtoa@h+1,___fldiv@b+1
  8620  001574  C0A2  F01A         	movff	efgtoa@h+2,___fldiv@b+2
  8621  001578  C0A3  F01B         	movff	efgtoa@h+3,___fldiv@b+3
  8622  00157C  C0B2  F01C         	movff	efgtoa@u,___fldiv@a
  8623  001580  C0B3  F01D         	movff	efgtoa@u+1,___fldiv@a+1
  8624  001584  C0B4  F01E         	movff	efgtoa@u+2,___fldiv@a+2
  8625  001588  C0B5  F01F         	movff	efgtoa@u+3,___fldiv@a+3
  8626  00158C  ECDF  F01B         	call	___fldiv	;wreg free
  8627  001590  C018  F031         	movff	?___fldiv,floorf@x
  8628  001594  C019  F032         	movff	?___fldiv+1,floorf@x+1
  8629  001598  C01A  F033         	movff	?___fldiv+2,floorf@x+2
  8630  00159C  C01B  F034         	movff	?___fldiv+3,floorf@x+3
  8631  0015A0  EC33  F022         	call	_floorf	;wreg free
  8632  0015A4  C031  F0A4         	movff	?_floorf,efgtoa@l
  8633  0015A8  C032  F0A5         	movff	?_floorf+1,efgtoa@l+1
  8634  0015AC  C033  F0A6         	movff	?_floorf+2,efgtoa@l+2
  8635  0015B0  C034  F0A7         	movff	?_floorf+3,efgtoa@l+3
  8636                           
  8637                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  8638  0015B4  C0A4  F068         	movff	efgtoa@l,___fltol@f1
  8639  0015B8  C0A5  F069         	movff	efgtoa@l+1,___fltol@f1+1
  8640  0015BC  C0A6  F06A         	movff	efgtoa@l+2,___fltol@f1+2
  8641  0015C0  C0A7  F06B         	movff	efgtoa@l+3,___fltol@f1+3
  8642  0015C4  EC0C  F028         	call	___fltol	;wreg free
  8643  0015C8  C068  F096         	movff	?___fltol,efgtoa@d
  8644  0015CC  C069  F097         	movff	?___fltol+1,efgtoa@d+1
  8645  0015D0                     
  8646                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8647  0015D0  B85A               	btfsc	_flags^0,4,c
  8648  0015D2  EFED  F00A         	goto	u11191
  8649  0015D6  EFEF  F00A         	goto	u11190
  8650  0015DA                     u11191:
  8651  0015DA  EF0D  F00B         	goto	l12189
  8652  0015DE                     u11190:
  8653  0015DE  0100               	movlb	0	; () banked
  8654  0015E0  5196               	movf	efgtoa@d& (0+255),w,b
  8655  0015E2  1197               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8656  0015E4  A4D8               	btfss	status,2,c
  8657  0015E6  EFF7  F00A         	goto	u11201
  8658  0015EA  EFF9  F00A         	goto	u11200
  8659  0015EE                     u11201:
  8660  0015EE  EF0D  F00B         	goto	l12189
  8661  0015F2                     u11200:
  8662  0015F2                     
  8663                           ; BSR set to: 0
  8664  0015F2  0E67               	movlw	103
  8665  0015F4  199F               	xorwf	efgtoa@mode& (0+255),w,b
  8666  0015F6  A4D8               	btfss	status,2,c
  8667  0015F8  EF00  F00B         	goto	u11211
  8668  0015FC  EF02  F00B         	goto	u11210
  8669  001600                     u11211:
  8670  001600  EF0D  F00B         	goto	l12189
  8671  001604                     u11210:
  8672  001604                     
  8673                           ; BSR set to: 0
  8674  001604  BF8F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8675  001606  EF09  F00B         	goto	u11220
  8676  00160A  EF07  F00B         	goto	u11221
  8677  00160E                     u11221:
  8678  00160E  EF0D  F00B         	goto	l12189
  8679  001612                     u11220:
  8680  001612                     
  8681                           ; BSR set to: 0
  8682                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  8683  001612  4B8A               	infsnz	efgtoa@t& (0+255),f,b
  8684  001614  2B8B               	incf	(efgtoa@t+1)& (0+255),f,b
  8685                           
  8686                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  8687  001616  EF58  F00B         	goto	l12217
  8688  00161A                     l12189:
  8689                           
  8690                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  8691  00161A  0100               	movlb	0	; () banked
  8692  00161C  518C               	movf	efgtoa@pp& (0+255),w,b
  8693  00161E  118D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8694  001620  A4D8               	btfss	status,2,c
  8695  001622  EF15  F00B         	goto	u11231
  8696  001626  EF17  F00B         	goto	u11230
  8697  00162A                     u11231:
  8698  00162A  EF41  F00B         	goto	l12209
  8699  00162E                     u11230:
  8700  00162E                     
  8701                           ; BSR set to: 0
  8702  00162E  BF8F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8703  001630  EF1E  F00B         	goto	u11240
  8704  001634  EF1C  F00B         	goto	u11241
  8705  001638                     u11241:
  8706  001638  EF41  F00B         	goto	l12209
  8707  00163C                     u11240:
  8708  00163C                     
  8709                           ; BSR set to: 0
  8710                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  8711  00163C  0E20               	movlw	low _dbuf
  8712  00163E  25B0               	addwf	efgtoa@n& (0+255),w,b
  8713  001640  6ED9               	movwf	fsr2l,c
  8714  001642  0E03               	movlw	high _dbuf
  8715  001644  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8716  001646  6EDA               	movwf	fsr2h,c
  8717  001648  0E2E               	movlw	46
  8718  00164A  6EDF               	movwf	indf2,c
  8719  00164C                     
  8720                           ; BSR set to: 0
  8721  00164C  4BB0               	infsnz	efgtoa@n& (0+255),f,b
  8722  00164E  2BB1               	incf	(efgtoa@n+1)& (0+255),f,b
  8723  001650                     
  8724                           ; BSR set to: 0
  8725                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  8726  001650  079C               	decf	efgtoa@w& (0+255),f,b
  8727  001652  A0D8               	btfss	status,0,c
  8728  001654  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  8729  001656                     
  8730                           ; BSR set to: 0
  8731                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  8732  001656  0E00               	movlw	0
  8733  001658  6F8D               	movwf	(efgtoa@pp+1)& (0+255),b
  8734  00165A  0E01               	movlw	1
  8735  00165C  6F8C               	movwf	efgtoa@pp& (0+255),b
  8736  00165E  EF41  F00B         	goto	l12209
  8737  001662                     l12201:
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  8741  001662  0E20               	movlw	low _dbuf
  8742  001664  25B0               	addwf	efgtoa@n& (0+255),w,b
  8743  001666  6ED9               	movwf	fsr2l,c
  8744  001668  0E03               	movlw	high _dbuf
  8745  00166A  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8746  00166C  6EDA               	movwf	fsr2h,c
  8747  00166E  0E30               	movlw	48
  8748  001670  6EDF               	movwf	indf2,c
  8749  001672                     
  8750                           ; BSR set to: 0
  8751  001672  4BB0               	infsnz	efgtoa@n& (0+255),f,b
  8752  001674  2BB1               	incf	(efgtoa@n+1)& (0+255),f,b
  8753  001676                     
  8754                           ; BSR set to: 0
  8755                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  8756  001676  079C               	decf	efgtoa@w& (0+255),f,b
  8757  001678  A0D8               	btfss	status,0,c
  8758  00167A  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  8759  00167C                     
  8760                           ; BSR set to: 0
  8761                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  8762  00167C  078A               	decf	efgtoa@t& (0+255),f,b
  8763  00167E  A0D8               	btfss	status,0,c
  8764  001680  078B               	decf	(efgtoa@t+1)& (0+255),f,b
  8765  001682                     l12209:
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  8769  001682  518A               	movf	efgtoa@t& (0+255),w,b
  8770  001684  118B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8771  001686  A4D8               	btfss	status,2,c
  8772  001688  EF48  F00B         	goto	u11251
  8773  00168C  EF4A  F00B         	goto	u11250
  8774  001690                     u11251:
  8775  001690  EF31  F00B         	goto	l12201
  8776  001694                     u11250:
  8777  001694                     
  8778                           ; BSR set to: 0
  8779                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  8780  001694  0E20               	movlw	low _dbuf
  8781  001696  25B0               	addwf	efgtoa@n& (0+255),w,b
  8782  001698  6ED9               	movwf	fsr2l,c
  8783  00169A  0E03               	movlw	high _dbuf
  8784  00169C  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8785  00169E  6EDA               	movwf	fsr2h,c
  8786  0016A0  5196               	movf	efgtoa@d& (0+255),w,b
  8787  0016A2  0F30               	addlw	48
  8788  0016A4  6EDF               	movwf	indf2,c
  8789  0016A6                     
  8790                           ; BSR set to: 0
  8791  0016A6  4BB0               	infsnz	efgtoa@n& (0+255),f,b
  8792  0016A8  2BB1               	incf	(efgtoa@n+1)& (0+255),f,b
  8793  0016AA                     
  8794                           ; BSR set to: 0
  8795                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  8796  0016AA  079C               	decf	efgtoa@w& (0+255),f,b
  8797  0016AC  A0D8               	btfss	status,0,c
  8798  0016AE  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  8799  0016B0                     l12217:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  8803  0016B0  C0A0  F060         	movff	efgtoa@h,___flsub@b
  8804  0016B4  C0A1  F061         	movff	efgtoa@h+1,___flsub@b+1
  8805  0016B8  C0A2  F062         	movff	efgtoa@h+2,___flsub@b+2
  8806  0016BC  C0A3  F063         	movff	efgtoa@h+3,___flsub@b+3
  8807  0016C0  C0B2  F035         	movff	efgtoa@u,___flmul@a
  8808  0016C4  C0B3  F036         	movff	efgtoa@u+1,___flmul@a+1
  8809  0016C8  C0B4  F037         	movff	efgtoa@u+2,___flmul@a+2
  8810  0016CC  C0B5  F038         	movff	efgtoa@u+3,___flmul@a+3
  8811  0016D0  C0A4  F031         	movff	efgtoa@l,___flmul@b
  8812  0016D4  C0A5  F032         	movff	efgtoa@l+1,___flmul@b+1
  8813  0016D8  C0A6  F033         	movff	efgtoa@l+2,___flmul@b+2
  8814  0016DC  C0A7  F034         	movff	efgtoa@l+3,___flmul@b+3
  8815  0016E0  ECCA  F019         	call	___flmul	;wreg free
  8816  0016E4  C031  F064         	movff	?___flmul,___flsub@a
  8817  0016E8  C032  F065         	movff	?___flmul+1,___flsub@a+1
  8818  0016EC  C033  F066         	movff	?___flmul+2,___flsub@a+2
  8819  0016F0  C034  F067         	movff	?___flmul+3,___flsub@a+3
  8820  0016F4  ECA9  F031         	call	___flsub	;wreg free
  8821  0016F8  C060  F0A0         	movff	?___flsub,efgtoa@h
  8822  0016FC  C061  F0A1         	movff	?___flsub+1,efgtoa@h+1
  8823  001700  C062  F0A2         	movff	?___flsub+2,efgtoa@h+2
  8824  001704  C063  F0A3         	movff	?___flsub+3,efgtoa@h+3
  8825  001708                     
  8826                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  8827  001708  C0B2  F018         	movff	efgtoa@u,___fldiv@b
  8828  00170C  C0B3  F019         	movff	efgtoa@u+1,___fldiv@b+1
  8829  001710  C0B4  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  8830  001714  C0B5  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  8831  001718  0E00               	movlw	0
  8832  00171A  6E1C               	movwf	___fldiv@a^0,c
  8833  00171C  0E00               	movlw	0
  8834  00171E  6E1D               	movwf	(___fldiv@a+1)^0,c
  8835  001720  0E20               	movlw	32
  8836  001722  6E1E               	movwf	(___fldiv@a+2)^0,c
  8837  001724  0E41               	movlw	65
  8838  001726  6E1F               	movwf	(___fldiv@a+3)^0,c
  8839  001728  ECDF  F01B         	call	___fldiv	;wreg free
  8840  00172C  C018  F0B2         	movff	?___fldiv,efgtoa@u
  8841  001730  C019  F0B3         	movff	?___fldiv+1,efgtoa@u+1
  8842  001734  C01A  F0B4         	movff	?___fldiv+2,efgtoa@u+2
  8843  001738  C01B  F0B5         	movff	?___fldiv+3,efgtoa@u+3
  8844  00173C                     
  8845                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  8846  00173C  0100               	movlb	0	; () banked
  8847  00173E  078E               	decf	efgtoa@ne& (0+255),f,b
  8848  001740  A0D8               	btfss	status,0,c
  8849  001742  078F               	decf	(efgtoa@ne+1)& (0+255),f,b
  8850  001744                     
  8851                           ; BSR set to: 0
  8852                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 490:         ++i;
  8853  001744  4BA8               	infsnz	efgtoa@i& (0+255),f,b
  8854  001746  2BA9               	incf	(efgtoa@i+1)& (0+255),f,b
  8855  001748                     l12225:
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8859  001748  5190               	movf	efgtoa@m& (0+255),w,b
  8860  00174A  5DA8               	subwf	efgtoa@i& (0+255),w,b
  8861  00174C  51A9               	movf	(efgtoa@i+1)& (0+255),w,b
  8862  00174E  0A80               	xorlw	128
  8863  001750  6F79               	movwf	??_efgtoa& (0+255),b
  8864  001752  5191               	movf	(efgtoa@m+1)& (0+255),w,b
  8865  001754  0A80               	xorlw	128
  8866  001756  5979               	subwfb	??_efgtoa& (0+255),w,b
  8867  001758  B0D8               	btfsc	status,0,c
  8868  00175A  EFB1  F00B         	goto	u11261
  8869  00175E  EFB3  F00B         	goto	u11260
  8870  001762                     u11261:
  8871  001762  EFC1  F00B         	goto	l12229
  8872  001766                     u11260:
  8873  001766                     
  8874                           ; BSR set to: 0
  8875  001766  BFB1               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8876  001768  EFBF  F00B         	goto	u11271
  8877  00176C  51B1               	movf	(efgtoa@n+1)& (0+255),w,b
  8878  00176E  E109               	bnz	u11270
  8879  001770  0E4B               	movlw	75
  8880  001772  5DB0               	subwf	efgtoa@n& (0+255),w,b
  8881  001774  A0D8               	btfss	status,0,c
  8882  001776  EFBF  F00B         	goto	u11271
  8883  00177A  EFC1  F00B         	goto	u11270
  8884  00177E                     u11271:
  8885  00177E  EFB6  F00A         	goto	l12177
  8886  001782                     u11270:
  8887  001782                     l12229:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8891  001782  518C               	movf	efgtoa@pp& (0+255),w,b
  8892  001784  118D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8893  001786  A4D8               	btfss	status,2,c
  8894  001788  EFC8  F00B         	goto	u11281
  8895  00178C  EFCA  F00B         	goto	u11280
  8896  001790                     u11281:
  8897  001790  EFDB  F00B         	goto	l12237
  8898  001794                     u11280:
  8899  001794                     
  8900                           ; BSR set to: 0
  8901  001794  A85A               	btfss	_flags^0,4,c
  8902  001796  EFCF  F00B         	goto	u11291
  8903  00179A  EFD1  F00B         	goto	u11290
  8904  00179E                     u11291:
  8905  00179E  EFDB  F00B         	goto	l12237
  8906  0017A2                     u11290:
  8907  0017A2                     
  8908                           ; BSR set to: 0
  8909                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  8910  0017A2  0E20               	movlw	low _dbuf
  8911  0017A4  25B0               	addwf	efgtoa@n& (0+255),w,b
  8912  0017A6  6ED9               	movwf	fsr2l,c
  8913  0017A8  0E03               	movlw	high _dbuf
  8914  0017AA  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8915  0017AC  6EDA               	movwf	fsr2h,c
  8916  0017AE  0E2E               	movlw	46
  8917  0017B0  6EDF               	movwf	indf2,c
  8918  0017B2                     
  8919                           ; BSR set to: 0
  8920  0017B2  4BB0               	infsnz	efgtoa@n& (0+255),f,b
  8921  0017B4  2BB1               	incf	(efgtoa@n+1)& (0+255),f,b
  8922  0017B6                     l12237:
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  8926  0017B6  0E20               	movlw	low _dbuf
  8927  0017B8  25B0               	addwf	efgtoa@n& (0+255),w,b
  8928  0017BA  6ED9               	movwf	fsr2l,c
  8929  0017BC  0E03               	movlw	high _dbuf
  8930  0017BE  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8931  0017C0  6EDA               	movwf	fsr2h,c
  8932  0017C2  0E00               	movlw	0
  8933  0017C4  6EDF               	movwf	indf2,c
  8934  0017C6                     
  8935                           ; BSR set to: 0
  8936                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  8937  0017C6  0E65               	movlw	101
  8938  0017C8  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8939  0017CA  A4D8               	btfss	status,2,c
  8940  0017CC  EFEA  F00B         	goto	u11301
  8941  0017D0  EFEC  F00B         	goto	u11300
  8942  0017D4                     u11301:
  8943  0017D4  EF45  F007         	goto	l12039
  8944  0017D8                     u11300:
  8945  0017D8                     
  8946                           ; BSR set to: 0
  8947                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  8948  0017D8  0E00               	movlw	0
  8949  0017DA  6FA9               	movwf	(efgtoa@i+1)& (0+255),b
  8950  0017DC  0E4F               	movlw	79
  8951  0017DE  6FA8               	movwf	efgtoa@i& (0+255),b
  8952  0017E0                     
  8953                           ; BSR set to: 0
  8954                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  8955  0017E0  0E20               	movlw	low _dbuf
  8956  0017E2  25A8               	addwf	efgtoa@i& (0+255),w,b
  8957  0017E4  6ED9               	movwf	fsr2l,c
  8958  0017E6  0E03               	movlw	high _dbuf
  8959  0017E8  21A9               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8960  0017EA  6EDA               	movwf	fsr2h,c
  8961  0017EC  0E00               	movlw	0
  8962  0017EE  6EDF               	movwf	indf2,c
  8963  0017F0                     
  8964                           ; BSR set to: 0
  8965                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  8966  0017F0  0E00               	movlw	0
  8967  0017F2  6F99               	movwf	(efgtoa@sign+1)& (0+255),b
  8968  0017F4  0E00               	movlw	0
  8969  0017F6  6F98               	movwf	efgtoa@sign& (0+255),b
  8970  0017F8                     
  8971                           ; BSR set to: 0
  8972                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  8973  0017F8  BFAF               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8974  0017FA  EF03  F00C         	goto	u11310
  8975  0017FE  EF01  F00C         	goto	u11311
  8976  001802                     u11311:
  8977  001802  EF0B  F00C         	goto	l12253
  8978  001806                     u11310:
  8979  001806                     
  8980                           ; BSR set to: 0
  8981                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  8982  001806  0E00               	movlw	0
  8983  001808  6F99               	movwf	(efgtoa@sign+1)& (0+255),b
  8984  00180A  0E01               	movlw	1
  8985  00180C  6F98               	movwf	efgtoa@sign& (0+255),b
  8986  00180E                     
  8987                           ; BSR set to: 0
  8988                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  8989  00180E  6DAE               	negf	efgtoa@e& (0+255),b
  8990  001810  1FAF               	comf	(efgtoa@e+1)& (0+255),f,b
  8991  001812  B0D8               	btfsc	status,0,c
  8992  001814  2BAF               	incf	(efgtoa@e+1)& (0+255),f,b
  8993  001816                     l12253:
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  8997  001816  0E00               	movlw	0
  8998  001818  6F9B               	movwf	(efgtoa@p+1)& (0+255),b
  8999  00181A  0E02               	movlw	2
  9000  00181C  6F9A               	movwf	efgtoa@p& (0+255),b
  9001                           
  9002                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  9003  00181E  EF3C  F00C         	goto	l12265
  9004  001822                     l12255:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  9008  001822  07A8               	decf	efgtoa@i& (0+255),f,b
  9009  001824  A0D8               	btfss	status,0,c
  9010  001826  07A9               	decf	(efgtoa@i+1)& (0+255),f,b
  9011  001828                     
  9012                           ; BSR set to: 0
  9013                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  9014  001828  0E20               	movlw	low _dbuf
  9015  00182A  25A8               	addwf	efgtoa@i& (0+255),w,b
  9016  00182C  6ED9               	movwf	fsr2l,c
  9017  00182E  0E03               	movlw	high _dbuf
  9018  001830  21A9               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9019  001832  6EDA               	movwf	fsr2h,c
  9020  001834  C0AE  F004         	movff	efgtoa@e,___awmod@dividend
  9021  001838  C0AF  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  9022  00183C  0E00               	movlw	0
  9023  00183E  6E07               	movwf	(___awmod@divisor+1)^0,c
  9024  001840  0E0A               	movlw	10
  9025  001842  6E06               	movwf	___awmod@divisor^0,c
  9026  001844  ECCC  F02C         	call	___awmod	;wreg free
  9027  001848  5004               	movf	?___awmod^0,w,c
  9028  00184A  0F30               	addlw	48
  9029  00184C  6EDF               	movwf	indf2,c
  9030  00184E                     
  9031                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  9032  00184E  C0AE  F004         	movff	efgtoa@e,___awdiv@dividend
  9033  001852  C0AF  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  9034  001856  0E00               	movlw	0
  9035  001858  6E07               	movwf	(___awdiv@divisor+1)^0,c
  9036  00185A  0E0A               	movlw	10
  9037  00185C  6E06               	movwf	___awdiv@divisor^0,c
  9038  00185E  ECA7  F02B         	call	___awdiv	;wreg free
  9039  001862  C004  F0AE         	movff	?___awdiv,efgtoa@e
  9040  001866  C005  F0AF         	movff	?___awdiv+1,efgtoa@e+1
  9041  00186A                     
  9042                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  9043  00186A  0100               	movlb	0	; () banked
  9044  00186C  079A               	decf	efgtoa@p& (0+255),f,b
  9045  00186E  A0D8               	btfss	status,0,c
  9046  001870  079B               	decf	(efgtoa@p+1)& (0+255),f,b
  9047  001872                     
  9048                           ; BSR set to: 0
  9049                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  9050  001872  079C               	decf	efgtoa@w& (0+255),f,b
  9051  001874  A0D8               	btfss	status,0,c
  9052  001876  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  9053  001878                     l12265:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  9057  001878  51AE               	movf	efgtoa@e& (0+255),w,b
  9058  00187A  11AF               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9059  00187C  A4D8               	btfss	status,2,c
  9060  00187E  EF43  F00C         	goto	u11321
  9061  001882  EF45  F00C         	goto	u11320
  9062  001886                     u11321:
  9063  001886  EF11  F00C         	goto	l12255
  9064  00188A                     u11320:
  9065  00188A                     
  9066                           ; BSR set to: 0
  9067  00188A  BF9B               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9068  00188C  EF52  F00C         	goto	u11330
  9069  001890  519B               	movf	(efgtoa@p+1)& (0+255),w,b
  9070  001892  E106               	bnz	u11331
  9071  001894  059A               	decf	efgtoa@p& (0+255),w,b
  9072  001896  B0D8               	btfsc	status,0,c
  9073  001898  EF50  F00C         	goto	u11331
  9074  00189C  EF52  F00C         	goto	u11330
  9075  0018A0                     u11331:
  9076  0018A0  EF11  F00C         	goto	l12255
  9077  0018A4                     u11330:
  9078  0018A4                     
  9079                           ; BSR set to: 0
  9080                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 514:         --i;
  9081  0018A4  07A8               	decf	efgtoa@i& (0+255),f,b
  9082  0018A6  A0D8               	btfss	status,0,c
  9083  0018A8  07A9               	decf	(efgtoa@i+1)& (0+255),f,b
  9084  0018AA                     
  9085                           ; BSR set to: 0
  9086                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  9087  0018AA  5198               	movf	efgtoa@sign& (0+255),w,b
  9088  0018AC  1199               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9089  0018AE  A4D8               	btfss	status,2,c
  9090  0018B0  EF5C  F00C         	goto	u11341
  9091  0018B4  EF5E  F00C         	goto	u11340
  9092  0018B8                     u11341:
  9093  0018B8  EF64  F00C         	goto	l12275
  9094  0018BC                     u11340:
  9095  0018BC                     
  9096                           ; BSR set to: 0
  9097  0018BC  0E00               	movlw	0
  9098  0018BE  6F85               	movwf	(_efgtoa$3183+1)& (0+255),b
  9099  0018C0  0E2B               	movlw	43
  9100  0018C2  6F84               	movwf	_efgtoa$3183& (0+255),b
  9101  0018C4  EF68  F00C         	goto	l12277
  9102  0018C8                     l12275:
  9103                           
  9104                           ; BSR set to: 0
  9105  0018C8  0E00               	movlw	0
  9106  0018CA  6F85               	movwf	(_efgtoa$3183+1)& (0+255),b
  9107  0018CC  0E2D               	movlw	45
  9108  0018CE  6F84               	movwf	_efgtoa$3183& (0+255),b
  9109  0018D0                     l12277:
  9110                           
  9111                           ; BSR set to: 0
  9112  0018D0  0E20               	movlw	low _dbuf
  9113  0018D2  25A8               	addwf	efgtoa@i& (0+255),w,b
  9114  0018D4  6ED9               	movwf	fsr2l,c
  9115  0018D6  0E03               	movlw	high _dbuf
  9116  0018D8  21A9               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9117  0018DA  6EDA               	movwf	fsr2h,c
  9118  0018DC  C084  FFDF         	movff	_efgtoa$3183,indf2
  9119  0018E0                     
  9120                           ; BSR set to: 0
  9121                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 516:         --w;
  9122  0018E0  079C               	decf	efgtoa@w& (0+255),f,b
  9123  0018E2  A0D8               	btfss	status,0,c
  9124  0018E4  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  9125  0018E6                     
  9126                           ; BSR set to: 0
  9127                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9128  0018E6  07A8               	decf	efgtoa@i& (0+255),f,b
  9129  0018E8  A0D8               	btfss	status,0,c
  9130  0018EA  07A9               	decf	(efgtoa@i+1)& (0+255),f,b
  9131  0018EC                     
  9132                           ; BSR set to: 0
  9133  0018EC  0EBF               	movlw	191
  9134  0018EE  6F79               	movwf	??_efgtoa& (0+255),b
  9135  0018F0  0EFF               	movlw	255
  9136  0018F2  6F7A               	movwf	(??_efgtoa+1)& (0+255),b
  9137  0018F4  5178               	movf	efgtoa@c& (0+255),w,b
  9138  0018F6  6F7B               	movwf	(??_efgtoa+2)& (0+255),b
  9139  0018F8  6B7C               	clrf	(??_efgtoa+3)& (0+255),b
  9140  0018FA  5179               	movf	??_efgtoa& (0+255),w,b
  9141  0018FC  277B               	addwf	(??_efgtoa+2)& (0+255),f,b
  9142  0018FE  517A               	movf	(??_efgtoa+1)& (0+255),w,b
  9143  001900  237C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9144  001902  517C               	movf	(??_efgtoa+3)& (0+255),w,b
  9145  001904  E10A               	bnz	u11350
  9146  001906  0E1A               	movlw	26
  9147  001908  5D7B               	subwf	(??_efgtoa+2)& (0+255),w,b
  9148  00190A  A0D8               	btfss	status,0,c
  9149  00190C  EF8A  F00C         	goto	u11351
  9150  001910  EF8D  F00C         	goto	u11350
  9151  001914                     u11351:
  9152  001914  0E01               	movlw	1
  9153  001916  EF8E  F00C         	goto	u11360
  9154  00191A                     u11350:
  9155  00191A  0E00               	movlw	0
  9156  00191C                     u11360:
  9157  00191C  6F88               	movwf	_efgtoa$3185& (0+255),b
  9158  00191E  6B89               	clrf	(_efgtoa$3185+1)& (0+255),b
  9159  001920                     
  9160                           ; BSR set to: 0
  9161  001920  5188               	movf	_efgtoa$3185& (0+255),w,b
  9162  001922  1189               	iorwf	(_efgtoa$3185+1)& (0+255),w,b
  9163  001924  A4D8               	btfss	status,2,c
  9164  001926  EF97  F00C         	goto	u11371
  9165  00192A  EF99  F00C         	goto	u11370
  9166  00192E                     u11371:
  9167  00192E  EF9F  F00C         	goto	l12291
  9168  001932                     u11370:
  9169  001932                     
  9170                           ; BSR set to: 0
  9171  001932  0E00               	movlw	0
  9172  001934  6F87               	movwf	(_efgtoa$3184+1)& (0+255),b
  9173  001936  0E65               	movlw	101
  9174  001938  6F86               	movwf	_efgtoa$3184& (0+255),b
  9175  00193A  EFA3  F00C         	goto	l12293
  9176  00193E                     l12291:
  9177                           
  9178                           ; BSR set to: 0
  9179  00193E  0E00               	movlw	0
  9180  001940  6F87               	movwf	(_efgtoa$3184+1)& (0+255),b
  9181  001942  0E45               	movlw	69
  9182  001944  6F86               	movwf	_efgtoa$3184& (0+255),b
  9183  001946                     l12293:
  9184                           
  9185                           ; BSR set to: 0
  9186  001946  0E20               	movlw	low _dbuf
  9187  001948  25A8               	addwf	efgtoa@i& (0+255),w,b
  9188  00194A  6ED9               	movwf	fsr2l,c
  9189  00194C  0E03               	movlw	high _dbuf
  9190  00194E  21A9               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9191  001950  6EDA               	movwf	fsr2h,c
  9192  001952  C086  FFDF         	movff	_efgtoa$3184,indf2
  9193  001956                     
  9194                           ; BSR set to: 0
  9195                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 519:         --w;
  9196  001956  079C               	decf	efgtoa@w& (0+255),f,b
  9197  001958  A0D8               	btfss	status,0,c
  9198  00195A  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  9199  00195C                     
  9200                           ; BSR set to: 0
  9201                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9202  00195C  0E20               	movlw	low _dbuf
  9203  00195E  25B0               	addwf	efgtoa@n& (0+255),w,b
  9204  001960  6E04               	movwf	strcpy@dest^0,c
  9205  001962  0E03               	movlw	high _dbuf
  9206  001964  21B1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9207  001966  6E05               	movwf	(strcpy@dest+1)^0,c
  9208  001968  0E20               	movlw	low _dbuf
  9209  00196A  25A8               	addwf	efgtoa@i& (0+255),w,b
  9210  00196C  6E06               	movwf	strcpy@src^0,c
  9211  00196E  0E03               	movlw	high _dbuf
  9212  001970  21A9               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9213  001972  6E07               	movwf	(strcpy@src+1)^0,c
  9214  001974  EC52  F031         	call	_strcpy	;wreg free
  9215  001978  EF45  F007         	goto	l12039
  9216  00197C                     l2721:
  9217  00197C  0012               	return		;funcret
  9218  00197E                     __end_of_efgtoa:
  9219                           	callstack 0
  9220                           
  9221 ;; *************** function _tolower *****************
  9222 ;; Defined at:
  9223 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\tolower.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  c               2    9[COMRAM] int 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  2    9[COMRAM] int 
  9230 ;; Registers used:
  9231 ;;		wreg, status,2, status,0
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9237 ;;      Params:         2       0       0       0       0       0       0       0       0
  9238 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9239 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9240 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9241 ;;Total ram usage:        8 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:    3
  9244 ;; This function calls:
  9245 ;;		_isupper
  9246 ;; This function is called by:
  9247 ;;		_efgtoa
  9248 ;;		_vfpfcnvrt
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text6
  9253  00612A                     __ptext6:
  9254                           	callstack 0
  9255  00612A                     _tolower:
  9256                           	callstack 24
  9257  00612A  0EBF               	movlw	191
  9258  00612C  6E0C               	movwf	??_tolower^0,c
  9259  00612E  0EFF               	movlw	255
  9260  006130  6E0D               	movwf	(??_tolower+1)^0,c
  9261  006132  C00A  F00E         	movff	tolower@c,??_tolower+2
  9262  006136  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  9263  00613A  500C               	movf	??_tolower^0,w,c
  9264  00613C  260E               	addwf	(??_tolower+2)^0,f,c
  9265  00613E  500D               	movf	(??_tolower+1)^0,w,c
  9266  006140  220F               	addwfc	(??_tolower+3)^0,f,c
  9267  006142  500F               	movf	(??_tolower+3)^0,w,c
  9268  006144  E10A               	bnz	u7020
  9269  006146  0E1A               	movlw	26
  9270  006148  5C0E               	subwf	(??_tolower+2)^0,w,c
  9271  00614A  A0D8               	btfss	status,0,c
  9272  00614C  EFAA  F030         	goto	u7021
  9273  006150  EFAD  F030         	goto	u7020
  9274  006154                     u7021:
  9275  006154  0E01               	movlw	1
  9276  006156  EFAE  F030         	goto	u7030
  9277  00615A                     u7020:
  9278  00615A  0E00               	movlw	0
  9279  00615C                     u7030:
  9280  00615C  6E10               	movwf	_tolower$3336^0,c
  9281  00615E  6A11               	clrf	(_tolower$3336+1)^0,c
  9282  006160  5010               	movf	_tolower$3336^0,w,c
  9283  006162  1011               	iorwf	(_tolower$3336+1)^0,w,c
  9284  006164  B4D8               	btfsc	status,2,c
  9285  006166  EFB7  F030         	goto	u7041
  9286  00616A  EFB9  F030         	goto	u7040
  9287  00616E                     u7041:
  9288  00616E  EFC0  F030         	goto	l2935
  9289  006172                     u7040:
  9290  006172  0E20               	movlw	32
  9291  006174  100A               	iorwf	tolower@c^0,w,c
  9292  006176  6E0A               	movwf	?_tolower^0,c
  9293  006178  500B               	movf	(tolower@c+1)^0,w,c
  9294  00617A  6E0B               	movwf	(?_tolower+1)^0,c
  9295  00617C  EFC4  F030         	goto	l2940
  9296  006180                     l2935:
  9297  006180  C00A  F00A         	movff	tolower@c,?_tolower
  9298  006184  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  9299  006188                     l2940:
  9300  006188  0012               	return		;funcret
  9301  00618A                     __end_of_tolower:
  9302                           	callstack 0
  9303                           
  9304 ;; *************** function _isupper *****************
  9305 ;; Defined at:
  9306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  c               2    3[COMRAM] int 
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;		None
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  2    3[COMRAM] int 
  9313 ;; Registers used:
  9314 ;;		wreg, status,2, status,0
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9320 ;;      Params:         2       0       0       0       0       0       0       0       0
  9321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9322 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9323 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9324 ;;Total ram usage:        6 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:    2
  9327 ;; This function calls:
  9328 ;;		Nothing
  9329 ;; This function is called by:
  9330 ;;		_efgtoa
  9331 ;;		_vfpfcnvrt
  9332 ;;		_tolower
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text7
  9337  00641A                     __ptext7:
  9338                           	callstack 0
  9339  00641A                     _isupper:
  9340                           	callstack 24
  9341  00641A  0EBF               	movlw	191
  9342  00641C  6E06               	movwf	??_isupper^0,c
  9343  00641E  0EFF               	movlw	255
  9344  006420  6E07               	movwf	(??_isupper+1)^0,c
  9345  006422  C004  F008         	movff	isupper@c,??_isupper+2
  9346  006426  C005  F009         	movff	isupper@c+1,??_isupper+3
  9347  00642A  5006               	movf	??_isupper^0,w,c
  9348  00642C  2608               	addwf	(??_isupper+2)^0,f,c
  9349  00642E  5007               	movf	(??_isupper+1)^0,w,c
  9350  006430  2209               	addwfc	(??_isupper+3)^0,f,c
  9351  006432  5009               	movf	(??_isupper+3)^0,w,c
  9352  006434  E10A               	bnz	u6170
  9353  006436  0E1A               	movlw	26
  9354  006438  5C08               	subwf	(??_isupper+2)^0,w,c
  9355  00643A  A0D8               	btfss	status,0,c
  9356  00643C  EF22  F032         	goto	u6171
  9357  006440  EF25  F032         	goto	u6170
  9358  006444                     u6171:
  9359  006444  0E01               	movlw	1
  9360  006446  EF26  F032         	goto	u6180
  9361  00644A                     u6170:
  9362  00644A  0E00               	movlw	0
  9363  00644C                     u6180:
  9364  00644C  6E04               	movwf	?_isupper^0,c
  9365  00644E  6A05               	clrf	(?_isupper+1)^0,c
  9366  006450  0012               	return		;funcret
  9367  006452                     __end_of_isupper:
  9368                           	callstack 0
  9369                           
  9370 ;; *************** function _strcpy *****************
  9371 ;; Defined at:
  9372 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strcpy.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;  dest            2    3[COMRAM] PTR unsigned char 
  9375 ;;		 -> dbuf(80), 
  9376 ;;  src             2    5[COMRAM] PTR const unsigned char 
  9377 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  9378 ;;		 -> dbuf(80), 
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;  d               2   11[COMRAM] PTR unsigned char 
  9381 ;;		 -> dbuf(80), 
  9382 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9383 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  9384 ;;		 -> dbuf(80), 
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  2    3[COMRAM] PTR unsigned char 
  9387 ;; Registers used:
  9388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9394 ;;      Params:         4       0       0       0       0       0       0       0       0
  9395 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9396 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9397 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9398 ;;Total ram usage:       10 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:    2
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_efgtoa
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text8
  9409  0062A4                     __ptext8:
  9410                           	callstack 0
  9411  0062A4                     _strcpy:
  9412                           	callstack 24
  9413  0062A4  C006  F00A         	movff	strcpy@src,strcpy@s
  9414  0062A8  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  9415  0062AC  C004  F00C         	movff	strcpy@dest,strcpy@d
  9416  0062B0  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  9417  0062B4                     l8267:
  9418  0062B4  500A               	movf	strcpy@s^0,w,c
  9419  0062B6  6E08               	movwf	??_strcpy^0,c
  9420  0062B8  500B               	movf	(strcpy@s+1)^0,w,c
  9421  0062BA  6E09               	movwf	(??_strcpy+1)^0,c
  9422  0062BC  4A0A               	infsnz	strcpy@s^0,f,c
  9423  0062BE  2A0B               	incf	(strcpy@s+1)^0,f,c
  9424  0062C0  C008  FFF6         	movff	??_strcpy,tblptrl
  9425  0062C4  C009  FFF7         	movff	??_strcpy+1,tblptrh
  9426  0062C8  6AF8               	clrf	tblptru,c
  9427  0062CA  C00C  FFD9         	movff	strcpy@d,fsr2l
  9428  0062CE  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  9429  0062D2  4A0C               	infsnz	strcpy@d^0,f,c
  9430  0062D4  2A0D               	incf	(strcpy@d+1)^0,f,c
  9431  0062D6  0E07               	movlw	(high __ramtop+-1)
  9432  0062D8  64F7               	cpfsgt	tblptrh,c
  9433  0062DA  D003               	bra	u7007
  9434  0062DC  0008               	tblrd		*
  9435  0062DE  50F5               	movf	tablat,w,c
  9436  0062E0  D005               	bra	u7000
  9437  0062E2                     u7007:
  9438  0062E2  CFF6 FFE9          	movff	tblptrl,fsr0l
  9439  0062E6  CFF7 FFEA          	movff	tblptrh,fsr0h
  9440  0062EA  50EF               	movf	indf0,w,c
  9441  0062EC                     u7000:
  9442  0062EC  6EDF               	movwf	indf2,c
  9443  0062EE  50DF               	movf	indf2,w,c
  9444  0062F0  A4D8               	btfss	status,2,c
  9445  0062F2  EF7D  F031         	goto	u7011
  9446  0062F6  EF7F  F031         	goto	u7010
  9447  0062FA                     u7011:
  9448  0062FA  EF5A  F031         	goto	l8267
  9449  0062FE                     u7010:
  9450  0062FE  0012               	return		;funcret
  9451  006300                     __end_of_strcpy:
  9452                           	callstack 0
  9453                           
  9454 ;; *************** function _pad *****************
  9455 ;; Defined at:
  9456 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  9459 ;;		 -> sprintf@f(6), 
  9460 ;;  buf             2   21[COMRAM] PTR unsigned char 
  9461 ;;		 -> dbuf(80), 
  9462 ;;  p               2   23[COMRAM] int 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  w               2   28[COMRAM] int 
  9465 ;;  i               2   26[COMRAM] int 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  2   19[COMRAM] int 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9475 ;;      Params:         6       0       0       0       0       0       0       0       0
  9476 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9477 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9478 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9479 ;;Total ram usage:       11 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    5
  9482 ;; This function calls:
  9483 ;;		_fputc
  9484 ;;		_fputs
  9485 ;;		_strlen
  9486 ;; This function is called by:
  9487 ;;		_efgtoa
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text9
  9492  0058D6                     __ptext9:
  9493                           	callstack 0
  9494  0058D6                     _pad:
  9495                           	callstack 21
  9496  0058D6                     
  9497                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9498  0058D6  A05A               	btfss	_flags^0,0,c
  9499  0058D8  EF70  F02C         	goto	u6961
  9500  0058DC  EF72  F02C         	goto	u6960
  9501  0058E0                     u6961:
  9502  0058E0  EF7C  F02C         	goto	l8247
  9503  0058E4                     u6960:
  9504  0058E4                     
  9505                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9506  0058E4  C016  F00D         	movff	pad@buf,fputs@s
  9507  0058E8  C017  F00E         	movff	pad@buf+1,fputs@s+1
  9508  0058EC  C014  F00F         	movff	pad@fp,fputs@fp
  9509  0058F0  C015  F010         	movff	pad@fp+1,fputs@fp+1
  9510  0058F4  ECCD  F031         	call	_fputs	;wreg free
  9511  0058F8                     l8247:
  9512                           
  9513                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9514  0058F8  BE19               	btfsc	(pad@p+1)^0,7,c
  9515  0058FA  EF81  F02C         	goto	u6971
  9516  0058FE  EF83  F02C         	goto	u6970
  9517  005902                     u6971:
  9518  005902  EF89  F02C         	goto	l8251
  9519  005906                     u6970:
  9520  005906  C018  F01D         	movff	pad@p,pad@w
  9521  00590A  C019  F01E         	movff	pad@p+1,pad@w+1
  9522  00590E  EF8D  F02C         	goto	l2698
  9523  005912                     l8251:
  9524  005912  0E00               	movlw	0
  9525  005914  6E1E               	movwf	(pad@w+1)^0,c
  9526  005916  0E00               	movlw	0
  9527  005918  6E1D               	movwf	pad@w^0,c
  9528  00591A                     l2698:
  9529                           
  9530                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9531  00591A  0E00               	movlw	0
  9532  00591C  6E1C               	movwf	(pad@i+1)^0,c
  9533  00591E  0E00               	movlw	0
  9534  005920  6E1B               	movwf	pad@i^0,c
  9535                           
  9536                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9537  005922  EF9F  F02C         	goto	l8257
  9538  005926                     l8253:
  9539                           
  9540                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9541  005926  0E00               	movlw	0
  9542  005928  6E05               	movwf	(fputc@c+1)^0,c
  9543  00592A  0E20               	movlw	32
  9544  00592C  6E04               	movwf	fputc@c^0,c
  9545  00592E  C014  F006         	movff	pad@fp,fputc@fp
  9546  005932  C015  F007         	movff	pad@fp+1,fputc@fp+1
  9547  005936  ECDD  F02A         	call	_fputc	;wreg free
  9548  00593A                     
  9549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9550  00593A  4A1B               	infsnz	pad@i^0,f,c
  9551  00593C  2A1C               	incf	(pad@i+1)^0,f,c
  9552  00593E                     l8257:
  9553                           
  9554                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9555  00593E  501D               	movf	pad@w^0,w,c
  9556  005940  5C1B               	subwf	pad@i^0,w,c
  9557  005942  501C               	movf	(pad@i+1)^0,w,c
  9558  005944  0A80               	xorlw	128
  9559  005946  6E1A               	movwf	??_pad^0,c
  9560  005948  501E               	movf	(pad@w+1)^0,w,c
  9561  00594A  0A80               	xorlw	128
  9562  00594C  581A               	subwfb	??_pad^0,w,c
  9563  00594E  A0D8               	btfss	status,0,c
  9564  005950  EFAC  F02C         	goto	u6981
  9565  005954  EFAE  F02C         	goto	u6980
  9566  005958                     u6981:
  9567  005958  EF93  F02C         	goto	l8253
  9568  00595C                     u6980:
  9569  00595C                     
  9570                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9571  00595C  B05A               	btfsc	_flags^0,0,c
  9572  00595E  EFB3  F02C         	goto	u6991
  9573  005962  EFB5  F02C         	goto	u6990
  9574  005966                     u6991:
  9575  005966  EFBF  F02C         	goto	l8261
  9576  00596A                     u6990:
  9577  00596A                     
  9578                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9579  00596A  C016  F00D         	movff	pad@buf,fputs@s
  9580  00596E  C017  F00E         	movff	pad@buf+1,fputs@s+1
  9581  005972  C014  F00F         	movff	pad@fp,fputs@fp
  9582  005976  C015  F010         	movff	pad@fp+1,fputs@fp+1
  9583  00597A  ECCD  F031         	call	_fputs	;wreg free
  9584  00597E                     l8261:
  9585                           
  9586                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9587  00597E  C016  F004         	movff	pad@buf,strlen@s
  9588  005982  C017  F005         	movff	pad@buf+1,strlen@s+1
  9589  005986  EC45  F032         	call	_strlen	;wreg free
  9590  00598A  501D               	movf	pad@w^0,w,c
  9591  00598C  2404               	addwf	?_strlen^0,w,c
  9592  00598E  6E14               	movwf	?_pad^0,c
  9593  005990  501E               	movf	(pad@w+1)^0,w,c
  9594  005992  2005               	addwfc	(?_strlen+1)^0,w,c
  9595  005994  6E15               	movwf	(?_pad+1)^0,c
  9596  005996  0012               	return		;funcret
  9597  005998                     __end_of_pad:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _strlen *****************
  9601 ;; Defined at:
  9602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  s               2    3[COMRAM] PTR const unsigned char 
  9605 ;;		 -> dbuf(80), 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  a               2    5[COMRAM] PTR const unsigned char 
  9608 ;;		 -> dbuf(80), 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  2    3[COMRAM] unsigned int 
  9611 ;; Registers used:
  9612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9618 ;;      Params:         2       0       0       0       0       0       0       0       0
  9619 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9621 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9622 ;;Total ram usage:        4 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:    2
  9625 ;; This function calls:
  9626 ;;		Nothing
  9627 ;; This function is called by:
  9628 ;;		_pad
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           	psect	text10
  9633  00648A                     __ptext10:
  9634                           	callstack 0
  9635  00648A                     _strlen:
  9636                           	callstack 23
  9637  00648A  C004  F006         	movff	strlen@s,strlen@a
  9638  00648E  C005  F007         	movff	strlen@s+1,strlen@a+1
  9639  006492  EF4D  F032         	goto	l7759
  9640  006496                     l7757:
  9641  006496  4A04               	infsnz	strlen@s^0,f,c
  9642  006498  2A05               	incf	(strlen@s+1)^0,f,c
  9643  00649A                     l7759:
  9644  00649A  C004  FFD9         	movff	strlen@s,fsr2l
  9645  00649E  C005  FFDA         	movff	strlen@s+1,fsr2h
  9646  0064A2  50DF               	movf	indf2,w,c
  9647  0064A4  A4D8               	btfss	status,2,c
  9648  0064A6  EF57  F032         	goto	u6161
  9649  0064AA  EF59  F032         	goto	u6160
  9650  0064AE                     u6161:
  9651  0064AE  EF4B  F032         	goto	l7757
  9652  0064B2                     u6160:
  9653  0064B2  5006               	movf	strlen@a^0,w,c
  9654  0064B4  5C04               	subwf	strlen@s^0,w,c
  9655  0064B6  6E04               	movwf	?_strlen^0,c
  9656  0064B8  5007               	movf	(strlen@a+1)^0,w,c
  9657  0064BA  5805               	subwfb	(strlen@s+1)^0,w,c
  9658  0064BC  6E05               	movwf	(?_strlen+1)^0,c
  9659  0064BE  0012               	return		;funcret
  9660  0064C0                     __end_of_strlen:
  9661                           	callstack 0
  9662                           
  9663 ;; *************** function _fputs *****************
  9664 ;; Defined at:
  9665 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  s               2   12[COMRAM] PTR const unsigned char 
  9668 ;;		 -> dbuf(80), 
  9669 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  9670 ;;		 -> sprintf@f(6), 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  i               2   17[COMRAM] int 
  9673 ;;  c               1   16[COMRAM] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  2   12[COMRAM] int 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9683 ;;      Params:         4       0       0       0       0       0       0       0       0
  9684 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9686 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9687 ;;Total ram usage:        7 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    4
  9690 ;; This function calls:
  9691 ;;		_fputc
  9692 ;; This function is called by:
  9693 ;;		_pad
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text11
  9698  00639A                     __ptext11:
  9699                           	callstack 0
  9700  00639A                     _fputs:
  9701                           	callstack 21
  9702  00639A  0E00               	movlw	0
  9703  00639C  6E13               	movwf	(fputs@i+1)^0,c
  9704  00639E  0E00               	movlw	0
  9705  0063A0  6E12               	movwf	fputs@i^0,c
  9706  0063A2  EFDE  F031         	goto	l7753
  9707  0063A6                     l7749:
  9708  0063A6  C011  F004         	movff	fputs@c,fputc@c
  9709  0063AA  6A05               	clrf	(fputc@c+1)^0,c
  9710  0063AC  C00F  F006         	movff	fputs@fp,fputc@fp
  9711  0063B0  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  9712  0063B4  ECDD  F02A         	call	_fputc	;wreg free
  9713  0063B8  4A12               	infsnz	fputs@i^0,f,c
  9714  0063BA  2A13               	incf	(fputs@i+1)^0,f,c
  9715  0063BC                     l7753:
  9716  0063BC  5012               	movf	fputs@i^0,w,c
  9717  0063BE  240D               	addwf	fputs@s^0,w,c
  9718  0063C0  6ED9               	movwf	fsr2l,c
  9719  0063C2  5013               	movf	(fputs@i+1)^0,w,c
  9720  0063C4  200E               	addwfc	(fputs@s+1)^0,w,c
  9721  0063C6  6EDA               	movwf	fsr2h,c
  9722  0063C8  50DF               	movf	indf2,w,c
  9723  0063CA  6E11               	movwf	fputs@c^0,c
  9724  0063CC  5011               	movf	fputs@c^0,w,c
  9725  0063CE  A4D8               	btfss	status,2,c
  9726  0063D0  EFEC  F031         	goto	u6151
  9727  0063D4  EFEE  F031         	goto	u6150
  9728  0063D8                     u6151:
  9729  0063D8  EFD3  F031         	goto	l7749
  9730  0063DC                     u6150:
  9731  0063DC  0012               	return		;funcret
  9732  0063DE                     __end_of_fputs:
  9733                           	callstack 0
  9734                           
  9735 ;; *************** function _fputc *****************
  9736 ;; Defined at:
  9737 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  c               2    3[COMRAM] int 
  9740 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  9741 ;;		 -> sprintf@f(6), 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  2    3[COMRAM] int 
  9746 ;; Registers used:
  9747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9753 ;;      Params:         4       0       0       0       0       0       0       0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9755 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9756 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9757 ;;Total ram usage:        9 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    3
  9760 ;; This function calls:
  9761 ;;		_putch
  9762 ;; This function is called by:
  9763 ;;		_pad
  9764 ;;		_vfpfcnvrt
  9765 ;;		_fputs
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text12
  9770  0055BA                     __ptext12:
  9771                           	callstack 0
  9772  0055BA                     _fputc:
  9773                           	callstack 24
  9774  0055BA  5006               	movf	fputc@fp^0,w,c
  9775  0055BC  1007               	iorwf	(fputc@fp+1)^0,w,c
  9776  0055BE  B4D8               	btfsc	status,2,c
  9777  0055C0  EFE4  F02A         	goto	u5681
  9778  0055C4  EFE6  F02A         	goto	u5680
  9779  0055C8                     u5681:
  9780  0055C8  EFEF  F02A         	goto	l7457
  9781  0055CC                     u5680:
  9782  0055CC  5006               	movf	fputc@fp^0,w,c
  9783  0055CE  1007               	iorwf	(fputc@fp+1)^0,w,c
  9784  0055D0  A4D8               	btfss	status,2,c
  9785  0055D2  EFED  F02A         	goto	u5691
  9786  0055D6  EFEF  F02A         	goto	u5690
  9787  0055DA                     u5691:
  9788  0055DA  EFF4  F02A         	goto	l7459
  9789  0055DE                     u5690:
  9790  0055DE                     l7457:
  9791  0055DE  5004               	movf	fputc@c^0,w,c
  9792  0055E0  EC45  F034         	call	_putch
  9793  0055E4  EF41  F02B         	goto	l2848
  9794  0055E8                     l7459:
  9795  0055E8  EE20 F004          	lfsr	2,4
  9796  0055EC  5006               	movf	fputc@fp^0,w,c
  9797  0055EE  26D9               	addwf	fsr2l,f,c
  9798  0055F0  5007               	movf	(fputc@fp+1)^0,w,c
  9799  0055F2  22DA               	addwfc	fsr2h,f,c
  9800  0055F4  50DE               	movf	postinc2,w,c
  9801  0055F6  10DE               	iorwf	postinc2,w,c
  9802  0055F8  B4D8               	btfsc	status,2,c
  9803  0055FA  EF01  F02B         	goto	u5701
  9804  0055FE  EF03  F02B         	goto	u5700
  9805  005602                     u5701:
  9806  005602  EF1E  F02B         	goto	l7463
  9807  005606                     u5700:
  9808  005606  EE20 F004          	lfsr	2,4
  9809  00560A  5006               	movf	fputc@fp^0,w,c
  9810  00560C  26D9               	addwf	fsr2l,f,c
  9811  00560E  5007               	movf	(fputc@fp+1)^0,w,c
  9812  005610  22DA               	addwfc	fsr2h,f,c
  9813  005612  EE10 F002          	lfsr	1,2
  9814  005616  5006               	movf	fputc@fp^0,w,c
  9815  005618  26E1               	addwf	fsr1l,f,c
  9816  00561A  5007               	movf	(fputc@fp+1)^0,w,c
  9817  00561C  22E2               	addwfc	fsr1h,f,c
  9818  00561E  50DE               	movf	postinc2,w,c
  9819  005620  5CE6               	subwf	postinc1,w,c
  9820  005622  50E6               	movf	postinc1,w,c
  9821  005624  0A80               	xorlw	128
  9822  005626  6E0C               	movwf	(??_fputc+4)^0,c
  9823  005628  50DE               	movf	postinc2,w,c
  9824  00562A  0A80               	xorlw	128
  9825  00562C  580C               	subwfb	(??_fputc+4)^0,w,c
  9826  00562E  B0D8               	btfsc	status,0,c
  9827  005630  EF1C  F02B         	goto	u5711
  9828  005634  EF1E  F02B         	goto	u5710
  9829  005638                     u5711:
  9830  005638  EF41  F02B         	goto	l2848
  9831  00563C                     u5710:
  9832  00563C                     l7463:
  9833  00563C  EE20 F002          	lfsr	2,2
  9834  005640  5006               	movf	fputc@fp^0,w,c
  9835  005642  26D9               	addwf	fsr2l,f,c
  9836  005644  5007               	movf	(fputc@fp+1)^0,w,c
  9837  005646  22DA               	addwfc	fsr2h,f,c
  9838  005648  CFDE F008          	movff	postinc2,??_fputc
  9839  00564C  CFDD F009          	movff	postdec2,??_fputc+1
  9840  005650  C006  FFD9         	movff	fputc@fp,fsr2l
  9841  005654  C007  FFDA         	movff	fputc@fp+1,fsr2h
  9842  005658  CFDE F00A          	movff	postinc2,??_fputc+2
  9843  00565C  CFDD F00B          	movff	postdec2,??_fputc+3
  9844  005660  5008               	movf	??_fputc^0,w,c
  9845  005662  240A               	addwf	(??_fputc+2)^0,w,c
  9846  005664  6ED9               	movwf	fsr2l,c
  9847  005666  5009               	movf	(??_fputc+1)^0,w,c
  9848  005668  200B               	addwfc	(??_fputc+3)^0,w,c
  9849  00566A  6EDA               	movwf	fsr2h,c
  9850  00566C  C004  FFDF         	movff	fputc@c,indf2
  9851  005670  EE20 F002          	lfsr	2,2
  9852  005674  5006               	movf	fputc@fp^0,w,c
  9853  005676  26D9               	addwf	fsr2l,f,c
  9854  005678  5007               	movf	(fputc@fp+1)^0,w,c
  9855  00567A  22DA               	addwfc	fsr2h,f,c
  9856  00567C  2ADE               	incf	postinc2,f,c
  9857  00567E  0E00               	movlw	0
  9858  005680  22DD               	addwfc	postdec2,f,c
  9859  005682                     l2848:
  9860  005682  0012               	return		;funcret
  9861  005684                     __end_of_fputc:
  9862                           	callstack 0
  9863                           
  9864 ;; *************** function _putch *****************
  9865 ;; Defined at:
  9866 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  c               1    wreg     unsigned char 
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;  c               1    0[COMRAM] unsigned char 
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  1    wreg      void 
  9873 ;; Registers used:
  9874 ;;		wreg
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0
  9881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9884 ;;Total ram usage:        0 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    2
  9887 ;; This function calls:
  9888 ;;		Nothing
  9889 ;; This function is called by:
  9890 ;;		_fputc
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text13
  9895  00688A                     __ptext13:
  9896                           	callstack 0
  9897  00688A                     _putch:
  9898                           	callstack 24
  9899  00688A  0012               	return		;funcret
  9900  00688C                     __end_of_putch:
  9901                           	callstack 0
  9902                           
  9903 ;; *************** function _floorf *****************
  9904 ;; Defined at:
  9905 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\floorf.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  x               4   48[COMRAM] float 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  u               4   64[COMRAM] struct .
  9910 ;;  m               4   58[COMRAM] unsigned long 
  9911 ;;  e               2   62[COMRAM] int 
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  4   48[COMRAM] float 
  9914 ;; Registers used:
  9915 ;;		wreg, status,2, status,0
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9921 ;;      Params:         4       0       0       0       0       0       0       0       0
  9922 ;;      Locals:        10       0       0       0       0       0       0       0       0
  9923 ;;      Temps:          6       0       0       0       0       0       0       0       0
  9924 ;;      Totals:        20       0       0       0       0       0       0       0       0
  9925 ;;Total ram usage:       20 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:    2
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_efgtoa
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text14
  9936  004466                     __ptext14:
  9937                           	callstack 0
  9938  004466                     _floorf:
  9939                           	callstack 24
  9940  004466  C148  F041         	movff	floorf@F527,floorf@u
  9941  00446A  C149  F042         	movff	floorf@F527+1,floorf@u+1
  9942  00446E  C14A  F043         	movff	floorf@F527+2,floorf@u+2
  9943  004472  C14B  F044         	movff	floorf@F527+3,floorf@u+3
  9944  004476  C031  F041         	movff	floorf@x,floorf@u
  9945  00447A  C032  F042         	movff	floorf@x+1,floorf@u+1
  9946  00447E  C033  F043         	movff	floorf@x+2,floorf@u+2
  9947  004482  C034  F044         	movff	floorf@x+3,floorf@u+3
  9948  004486  0E81               	movlw	129
  9949  004488  6E35               	movwf	??_floorf^0,c
  9950  00448A  0EFF               	movlw	255
  9951  00448C  6E36               	movwf	(??_floorf+1)^0,c
  9952  00448E  C041  F037         	movff	floorf@u,??_floorf+2
  9953  004492  C042  F038         	movff	floorf@u+1,??_floorf+3
  9954  004496  C043  F039         	movff	floorf@u+2,??_floorf+4
  9955  00449A  C044  F03A         	movff	floorf@u+3,??_floorf+5
  9956  00449E  0E18               	movlw	24
  9957  0044A0  EF57  F022         	goto	u7050
  9958  0044A4                     u7055:
  9959  0044A4  90D8               	bcf	status,0,c
  9960  0044A6  323A               	rrcf	(??_floorf+5)^0,f,c
  9961  0044A8  3239               	rrcf	(??_floorf+4)^0,f,c
  9962  0044AA  3238               	rrcf	(??_floorf+3)^0,f,c
  9963  0044AC  3237               	rrcf	(??_floorf+2)^0,f,c
  9964  0044AE                     u7050:
  9965  0044AE  2EE8               	decfsz	wreg,f,c
  9966  0044B0  EF52  F022         	goto	u7055
  9967  0044B4  5037               	movf	(??_floorf+2)^0,w,c
  9968  0044B6  2435               	addwf	??_floorf^0,w,c
  9969  0044B8  6E3F               	movwf	floorf@e^0,c
  9970  0044BA  0E00               	movlw	0
  9971  0044BC  2036               	addwfc	(??_floorf+1)^0,w,c
  9972  0044BE  6E40               	movwf	(floorf@e+1)^0,c
  9973  0044C0  BE40               	btfsc	(floorf@e+1)^0,7,c
  9974  0044C2  EF6C  F022         	goto	u7061
  9975  0044C6  5040               	movf	(floorf@e+1)^0,w,c
  9976  0044C8  E109               	bnz	u7060
  9977  0044CA  0E17               	movlw	23
  9978  0044CC  5C3F               	subwf	floorf@e^0,w,c
  9979  0044CE  A0D8               	btfss	status,0,c
  9980  0044D0  EF6C  F022         	goto	u7061
  9981  0044D4  EF6E  F022         	goto	u7060
  9982  0044D8                     u7061:
  9983  0044D8  EF78  F022         	goto	l8285
  9984  0044DC                     u7060:
  9985  0044DC                     l8283:
  9986  0044DC  C031  F031         	movff	floorf@x,?_floorf
  9987  0044E0  C032  F032         	movff	floorf@x+1,?_floorf+1
  9988  0044E4  C033  F033         	movff	floorf@x+2,?_floorf+2
  9989  0044E8  C034  F034         	movff	floorf@x+3,?_floorf+3
  9990  0044EC  EF3B  F023         	goto	l2823
  9991  0044F0                     l8285:
  9992  0044F0  BE40               	btfsc	(floorf@e+1)^0,7,c
  9993  0044F2  EF7D  F022         	goto	u7071
  9994  0044F6  EF7F  F022         	goto	u7070
  9995  0044FA                     u7071:
  9996  0044FA  EFEF  F022         	goto	l8295
  9997  0044FE                     u7070:
  9998  0044FE  C03F  F035         	movff	floorf@e,??_floorf
  9999  004502  0EFF               	movlw	255
 10000  004504  6E36               	movwf	(??_floorf+1)^0,c
 10001  004506  0EFF               	movlw	255
 10002  004508  6E37               	movwf	(??_floorf+2)^0,c
 10003  00450A  0E7F               	movlw	127
 10004  00450C  6E38               	movwf	(??_floorf+3)^0,c
 10005  00450E  0E00               	movlw	0
 10006  004510  6E39               	movwf	(??_floorf+4)^0,c
 10007  004512                     u7085:
 10008  004512  6635               	tstfsz	??_floorf^0,c
 10009  004514  EF8E  F022         	goto	u7086
 10010  004518  EF96  F022         	goto	u7087
 10011  00451C                     u7086:
 10012  00451C  3439               	rlcf	(??_floorf+4)^0,w,c
 10013  00451E  3239               	rrcf	(??_floorf+4)^0,f,c
 10014  004520  3238               	rrcf	(??_floorf+3)^0,f,c
 10015  004522  3237               	rrcf	(??_floorf+2)^0,f,c
 10016  004524  3236               	rrcf	(??_floorf+1)^0,f,c
 10017  004526  2E35               	decfsz	??_floorf^0,f,c
 10018  004528  EF89  F022         	goto	u7085
 10019  00452C                     u7087:
 10020  00452C  C036  F03B         	movff	??_floorf+1,floorf@m
 10021  004530  C037  F03C         	movff	??_floorf+2,floorf@m+1
 10022  004534  C038  F03D         	movff	??_floorf+3,floorf@m+2
 10023  004538  C039  F03E         	movff	??_floorf+4,floorf@m+3
 10024  00453C  503B               	movf	floorf@m^0,w,c
 10025  00453E  1441               	andwf	floorf@u^0,w,c
 10026  004540  6E35               	movwf	??_floorf^0,c
 10027  004542  503C               	movf	(floorf@m+1)^0,w,c
 10028  004544  1442               	andwf	(floorf@u+1)^0,w,c
 10029  004546  6E36               	movwf	(??_floorf+1)^0,c
 10030  004548  503D               	movf	(floorf@m+2)^0,w,c
 10031  00454A  1443               	andwf	(floorf@u+2)^0,w,c
 10032  00454C  6E37               	movwf	(??_floorf+2)^0,c
 10033  00454E  503E               	movf	(floorf@m+3)^0,w,c
 10034  004550  1444               	andwf	(floorf@u+3)^0,w,c
 10035  004552  6E38               	movwf	(??_floorf+3)^0,c
 10036  004554  5035               	movf	??_floorf^0,w,c
 10037  004556  1036               	iorwf	(??_floorf+1)^0,w,c
 10038  004558  1037               	iorwf	(??_floorf+2)^0,w,c
 10039  00455A  1038               	iorwf	(??_floorf+3)^0,w,c
 10040  00455C  A4D8               	btfss	status,2,c
 10041  00455E  EFB3  F022         	goto	u7091
 10042  004562  EFB5  F022         	goto	u7090
 10043  004566                     u7091:
 10044  004566  EFB7  F022         	goto	l8291
 10045  00456A                     u7090:
 10046  00456A  EF6E  F022         	goto	l8283
 10047  00456E                     l8291:
 10048  00456E  C041  F035         	movff	floorf@u,??_floorf
 10049  004572  C042  F036         	movff	floorf@u+1,??_floorf+1
 10050  004576  C043  F037         	movff	floorf@u+2,??_floorf+2
 10051  00457A  C044  F038         	movff	floorf@u+3,??_floorf+3
 10052  00457E  0E20               	movlw	32
 10053  004580  EFC7  F022         	goto	u7100
 10054  004584                     u7105:
 10055  004584  90D8               	bcf	status,0,c
 10056  004586  3238               	rrcf	(??_floorf+3)^0,f,c
 10057  004588  3237               	rrcf	(??_floorf+2)^0,f,c
 10058  00458A  3236               	rrcf	(??_floorf+1)^0,f,c
 10059  00458C  3235               	rrcf	??_floorf^0,f,c
 10060  00458E                     u7100:
 10061  00458E  2EE8               	decfsz	wreg,f,c
 10062  004590  EFC2  F022         	goto	u7105
 10063  004594  5035               	movf	??_floorf^0,w,c
 10064  004596  1036               	iorwf	(??_floorf+1)^0,w,c
 10065  004598  1037               	iorwf	(??_floorf+2)^0,w,c
 10066  00459A  1038               	iorwf	(??_floorf+3)^0,w,c
 10067  00459C  B4D8               	btfsc	status,2,c
 10068  00459E  EFD3  F022         	goto	u7111
 10069  0045A2  EFD5  F022         	goto	u7110
 10070  0045A6                     u7111:
 10071  0045A6  EFDD  F022         	goto	l2826
 10072  0045AA                     u7110:
 10073  0045AA  503B               	movf	floorf@m^0,w,c
 10074  0045AC  2641               	addwf	floorf@u^0,f,c
 10075  0045AE  503C               	movf	(floorf@m+1)^0,w,c
 10076  0045B0  2242               	addwfc	(floorf@u+1)^0,f,c
 10077  0045B2  503D               	movf	(floorf@m+2)^0,w,c
 10078  0045B4  2243               	addwfc	(floorf@u+2)^0,f,c
 10079  0045B6  503E               	movf	(floorf@m+3)^0,w,c
 10080  0045B8  2244               	addwfc	(floorf@u+3)^0,f,c
 10081  0045BA                     l2826:
 10082  0045BA  1C3B               	comf	floorf@m^0,w,c
 10083  0045BC  6E35               	movwf	??_floorf^0,c
 10084  0045BE  1C3C               	comf	(floorf@m+1)^0,w,c
 10085  0045C0  6E36               	movwf	(??_floorf+1)^0,c
 10086  0045C2  1C3D               	comf	(floorf@m+2)^0,w,c
 10087  0045C4  6E37               	movwf	(??_floorf+2)^0,c
 10088  0045C6  1C3E               	comf	(floorf@m+3)^0,w,c
 10089  0045C8  6E38               	movwf	(??_floorf+3)^0,c
 10090  0045CA  5035               	movf	??_floorf^0,w,c
 10091  0045CC  1641               	andwf	floorf@u^0,f,c
 10092  0045CE  5036               	movf	(??_floorf+1)^0,w,c
 10093  0045D0  1642               	andwf	(floorf@u+1)^0,f,c
 10094  0045D2  5037               	movf	(??_floorf+2)^0,w,c
 10095  0045D4  1643               	andwf	(floorf@u+2)^0,f,c
 10096  0045D6  5038               	movf	(??_floorf+3)^0,w,c
 10097  0045D8  1644               	andwf	(floorf@u+3)^0,f,c
 10098  0045DA  EF33  F023         	goto	l8303
 10099  0045DE                     l8295:
 10100  0045DE  C041  F035         	movff	floorf@u,??_floorf
 10101  0045E2  C042  F036         	movff	floorf@u+1,??_floorf+1
 10102  0045E6  C043  F037         	movff	floorf@u+2,??_floorf+2
 10103  0045EA  C044  F038         	movff	floorf@u+3,??_floorf+3
 10104  0045EE  0E20               	movlw	32
 10105  0045F0  EFFF  F022         	goto	u7120
 10106  0045F4                     u7125:
 10107  0045F4  90D8               	bcf	status,0,c
 10108  0045F6  3238               	rrcf	(??_floorf+3)^0,f,c
 10109  0045F8  3237               	rrcf	(??_floorf+2)^0,f,c
 10110  0045FA  3236               	rrcf	(??_floorf+1)^0,f,c
 10111  0045FC  3235               	rrcf	??_floorf^0,f,c
 10112  0045FE                     u7120:
 10113  0045FE  2EE8               	decfsz	wreg,f,c
 10114  004600  EFFA  F022         	goto	u7125
 10115  004604  5035               	movf	??_floorf^0,w,c
 10116  004606  1036               	iorwf	(??_floorf+1)^0,w,c
 10117  004608  1037               	iorwf	(??_floorf+2)^0,w,c
 10118  00460A  1038               	iorwf	(??_floorf+3)^0,w,c
 10119  00460C  A4D8               	btfss	status,2,c
 10120  00460E  EF0B  F023         	goto	u7131
 10121  004612  EF0D  F023         	goto	u7130
 10122  004616                     u7131:
 10123  004616  EF17  F023         	goto	l8299
 10124  00461A                     u7130:
 10125  00461A  0E00               	movlw	0
 10126  00461C  6E41               	movwf	floorf@u^0,c
 10127  00461E  0E00               	movlw	0
 10128  004620  6E42               	movwf	(floorf@u+1)^0,c
 10129  004622  0E00               	movlw	0
 10130  004624  6E43               	movwf	(floorf@u+2)^0,c
 10131  004626  0E00               	movlw	0
 10132  004628  6E44               	movwf	(floorf@u+3)^0,c
 10133  00462A  EF33  F023         	goto	l8303
 10134  00462E                     l8299:
 10135  00462E  90D8               	bcf	status,0,c
 10136  004630  3441               	rlcf	floorf@u^0,w,c
 10137  004632  6E35               	movwf	??_floorf^0,c
 10138  004634  3442               	rlcf	(floorf@u+1)^0,w,c
 10139  004636  6E36               	movwf	(??_floorf+1)^0,c
 10140  004638  3443               	rlcf	(floorf@u+2)^0,w,c
 10141  00463A  6E37               	movwf	(??_floorf+2)^0,c
 10142  00463C  3444               	rlcf	(floorf@u+3)^0,w,c
 10143  00463E  6E38               	movwf	(??_floorf+3)^0,c
 10144  004640  5035               	movf	??_floorf^0,w,c
 10145  004642  1036               	iorwf	(??_floorf+1)^0,w,c
 10146  004644  1037               	iorwf	(??_floorf+2)^0,w,c
 10147  004646  1038               	iorwf	(??_floorf+3)^0,w,c
 10148  004648  B4D8               	btfsc	status,2,c
 10149  00464A  EF29  F023         	goto	u7141
 10150  00464E  EF2B  F023         	goto	u7140
 10151  004652                     u7141:
 10152  004652  EF33  F023         	goto	l8303
 10153  004656                     u7140:
 10154  004656  0E00               	movlw	0
 10155  004658  6E41               	movwf	floorf@u^0,c
 10156  00465A  0E00               	movlw	0
 10157  00465C  6E42               	movwf	(floorf@u+1)^0,c
 10158  00465E  0E80               	movlw	128
 10159  004660  6E43               	movwf	(floorf@u+2)^0,c
 10160  004662  0EBF               	movlw	191
 10161  004664  6E44               	movwf	(floorf@u+3)^0,c
 10162  004666                     l8303:
 10163  004666  C041  F031         	movff	floorf@u,?_floorf
 10164  00466A  C042  F032         	movff	floorf@u+1,?_floorf+1
 10165  00466E  C043  F033         	movff	floorf@u+2,?_floorf+2
 10166  004672  C044  F034         	movff	floorf@u+3,?_floorf+3
 10167  004676                     l2823:
 10168  004676  0012               	return		;funcret
 10169  004678                     __end_of_floorf:
 10170                           	callstack 0
 10171                           
 10172 ;; *************** function ___flge *****************
 10173 ;; Defined at:
 10174 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flge.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  ff1             4   73[COMRAM] float 
 10177 ;;  ff2             4   77[COMRAM] float 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;		None               void
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10189 ;;      Params:         8       0       0       0       0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10191 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10192 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10193 ;;Total ram usage:       12 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    2
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_main
 10200 ;;		_efgtoa
 10201 ;;		_MPU6050_PID
 10202 ;;		_MPU6050_dmpGetYawPitchRoll
 10203 ;;		_roundf
 10204 ;;		_sqrtf
 10205 ;; This function uses a non-reentrant model
 10206 ;;
 10207                           
 10208                           	psect	text15
 10209  005120                     __ptext15:
 10210                           	callstack 0
 10211  005120                     ___flge:
 10212                           	callstack 24
 10213  005120  0E00               	movlw	0
 10214  005122  144A               	andwf	___flge@ff1^0,w,c
 10215  005124  6E52               	movwf	??___flge^0,c
 10216  005126  0E00               	movlw	0
 10217  005128  144B               	andwf	(___flge@ff1+1)^0,w,c
 10218  00512A  6E53               	movwf	(??___flge+1)^0,c
 10219  00512C  0E80               	movlw	128
 10220  00512E  144C               	andwf	(___flge@ff1+2)^0,w,c
 10221  005130  6E54               	movwf	(??___flge+2)^0,c
 10222  005132  0E7F               	movlw	127
 10223  005134  144D               	andwf	(___flge@ff1+3)^0,w,c
 10224  005136  6E55               	movwf	(??___flge+3)^0,c
 10225  005138  5052               	movf	??___flge^0,w,c
 10226  00513A  1053               	iorwf	(??___flge+1)^0,w,c
 10227  00513C  1054               	iorwf	(??___flge+2)^0,w,c
 10228  00513E  1055               	iorwf	(??___flge+3)^0,w,c
 10229  005140  A4D8               	btfss	status,2,c
 10230  005142  EFA5  F028         	goto	u6761
 10231  005146  EFA7  F028         	goto	u6760
 10232  00514A                     u6761:
 10233  00514A  EFAF  F028         	goto	l8151
 10234  00514E                     u6760:
 10235  00514E  0E00               	movlw	0
 10236  005150  6E4A               	movwf	___flge@ff1^0,c
 10237  005152  0E00               	movlw	0
 10238  005154  6E4B               	movwf	(___flge@ff1+1)^0,c
 10239  005156  0E00               	movlw	0
 10240  005158  6E4C               	movwf	(___flge@ff1+2)^0,c
 10241  00515A  0E00               	movlw	0
 10242  00515C  6E4D               	movwf	(___flge@ff1+3)^0,c
 10243  00515E                     l8151:
 10244  00515E  0E00               	movlw	0
 10245  005160  144E               	andwf	___flge@ff2^0,w,c
 10246  005162  6E52               	movwf	??___flge^0,c
 10247  005164  0E00               	movlw	0
 10248  005166  144F               	andwf	(___flge@ff2+1)^0,w,c
 10249  005168  6E53               	movwf	(??___flge+1)^0,c
 10250  00516A  0E80               	movlw	128
 10251  00516C  1450               	andwf	(___flge@ff2+2)^0,w,c
 10252  00516E  6E54               	movwf	(??___flge+2)^0,c
 10253  005170  0E7F               	movlw	127
 10254  005172  1451               	andwf	(___flge@ff2+3)^0,w,c
 10255  005174  6E55               	movwf	(??___flge+3)^0,c
 10256  005176  5052               	movf	??___flge^0,w,c
 10257  005178  1053               	iorwf	(??___flge+1)^0,w,c
 10258  00517A  1054               	iorwf	(??___flge+2)^0,w,c
 10259  00517C  1055               	iorwf	(??___flge+3)^0,w,c
 10260  00517E  A4D8               	btfss	status,2,c
 10261  005180  EFC4  F028         	goto	u6771
 10262  005184  EFC6  F028         	goto	u6770
 10263  005188                     u6771:
 10264  005188  EFCE  F028         	goto	l8155
 10265  00518C                     u6770:
 10266  00518C  0E00               	movlw	0
 10267  00518E  6E4E               	movwf	___flge@ff2^0,c
 10268  005190  0E00               	movlw	0
 10269  005192  6E4F               	movwf	(___flge@ff2+1)^0,c
 10270  005194  0E00               	movlw	0
 10271  005196  6E50               	movwf	(___flge@ff2+2)^0,c
 10272  005198  0E00               	movlw	0
 10273  00519A  6E51               	movwf	(___flge@ff2+3)^0,c
 10274  00519C                     l8155:
 10275  00519C  AE4D               	btfss	(___flge@ff1+3)^0,7,c
 10276  00519E  EFD3  F028         	goto	u6781
 10277  0051A2  EFD5  F028         	goto	u6780
 10278  0051A6                     u6781:
 10279  0051A6  EFDE  F028         	goto	l8159
 10280  0051AA                     u6780:
 10281  0051AA  6C4A               	negf	___flge@ff1^0,c
 10282  0051AC  1E4B               	comf	(___flge@ff1+1)^0,f,c
 10283  0051AE  B0D8               	btfsc	status,0,c
 10284  0051B0  2A4B               	incf	(___flge@ff1+1)^0,f,c
 10285  0051B2  1E4C               	comf	(___flge@ff1+2)^0,f,c
 10286  0051B4  B0D8               	btfsc	status,0,c
 10287  0051B6  2A4C               	incf	(___flge@ff1+2)^0,f,c
 10288  0051B8  0E80               	movlw	128
 10289  0051BA  564D               	subfwb	(___flge@ff1+3)^0,f,c
 10290  0051BC                     l8159:
 10291  0051BC  AE51               	btfss	(___flge@ff2+3)^0,7,c
 10292  0051BE  EFE3  F028         	goto	u6791
 10293  0051C2  EFE5  F028         	goto	u6790
 10294  0051C6                     u6791:
 10295  0051C6  EFEE  F028         	goto	l2087
 10296  0051CA                     u6790:
 10297  0051CA  6C4E               	negf	___flge@ff2^0,c
 10298  0051CC  1E4F               	comf	(___flge@ff2+1)^0,f,c
 10299  0051CE  B0D8               	btfsc	status,0,c
 10300  0051D0  2A4F               	incf	(___flge@ff2+1)^0,f,c
 10301  0051D2  1E50               	comf	(___flge@ff2+2)^0,f,c
 10302  0051D4  B0D8               	btfsc	status,0,c
 10303  0051D6  2A50               	incf	(___flge@ff2+2)^0,f,c
 10304  0051D8  0E80               	movlw	128
 10305  0051DA  5651               	subfwb	(___flge@ff2+3)^0,f,c
 10306  0051DC                     l2087:
 10307  0051DC  0E00               	movlw	0
 10308  0051DE  1A4A               	xorwf	___flge@ff1^0,f,c
 10309  0051E0  0E00               	movlw	0
 10310  0051E2  1A4B               	xorwf	(___flge@ff1+1)^0,f,c
 10311  0051E4  0E00               	movlw	0
 10312  0051E6  1A4C               	xorwf	(___flge@ff1+2)^0,f,c
 10313  0051E8  0E80               	movlw	128
 10314  0051EA  1A4D               	xorwf	(___flge@ff1+3)^0,f,c
 10315  0051EC  0E00               	movlw	0
 10316  0051EE  1A4E               	xorwf	___flge@ff2^0,f,c
 10317  0051F0  0E00               	movlw	0
 10318  0051F2  1A4F               	xorwf	(___flge@ff2+1)^0,f,c
 10319  0051F4  0E00               	movlw	0
 10320  0051F6  1A50               	xorwf	(___flge@ff2+2)^0,f,c
 10321  0051F8  0E80               	movlw	128
 10322  0051FA  1A51               	xorwf	(___flge@ff2+3)^0,f,c
 10323  0051FC  504E               	movf	___flge@ff2^0,w,c
 10324  0051FE  5C4A               	subwf	___flge@ff1^0,w,c
 10325  005200  504F               	movf	(___flge@ff2+1)^0,w,c
 10326  005202  584B               	subwfb	(___flge@ff1+1)^0,w,c
 10327  005204  5050               	movf	(___flge@ff2+2)^0,w,c
 10328  005206  584C               	subwfb	(___flge@ff1+2)^0,w,c
 10329  005208  5051               	movf	(___flge@ff2+3)^0,w,c
 10330  00520A  584D               	subwfb	(___flge@ff1+3)^0,w,c
 10331  00520C  B0D8               	btfsc	status,0,c
 10332  00520E  EF0B  F029         	goto	u6801
 10333  005212  EF0D  F029         	goto	u6800
 10334  005216                     u6801:
 10335  005216  EF10  F029         	goto	l8165
 10336  00521A                     u6800:
 10337  00521A  90D8               	bcf	status,0,c
 10338  00521C  EF11  F029         	goto	l2092
 10339  005220                     l8165:
 10340  005220  80D8               	bsf	status,0,c
 10341  005222                     l2092:
 10342  005222  0012               	return		;funcret
 10343  005224                     __end_of___flge:
 10344                           	callstack 0
 10345                           
 10346 ;; *************** function ___fleq *****************
 10347 ;; Defined at:
 10348 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fleq.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  ff1             4    3[COMRAM] float 
 10351 ;;  ff2             4    7[COMRAM] float 
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;		None
 10354 ;; Return value:  Size  Location     Type
 10355 ;;		None               void
 10356 ;; Registers used:
 10357 ;;		wreg, status,2, status,0
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10363 ;;      Params:         8       0       0       0       0       0       0       0       0
 10364 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10365 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10366 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10367 ;;Total ram usage:       12 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    2
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_efgtoa
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text16
 10378  005A48                     __ptext16:
 10379                           	callstack 0
 10380  005A48                     ___fleq:
 10381                           	callstack 24
 10382  005A48  0E00               	movlw	0
 10383  005A4A  1404               	andwf	___fleq@ff1^0,w,c
 10384  005A4C  6E0C               	movwf	??___fleq^0,c
 10385  005A4E  0E00               	movlw	0
 10386  005A50  1405               	andwf	(___fleq@ff1+1)^0,w,c
 10387  005A52  6E0D               	movwf	(??___fleq+1)^0,c
 10388  005A54  0E80               	movlw	128
 10389  005A56  1406               	andwf	(___fleq@ff1+2)^0,w,c
 10390  005A58  6E0E               	movwf	(??___fleq+2)^0,c
 10391  005A5A  0E7F               	movlw	127
 10392  005A5C  1407               	andwf	(___fleq@ff1+3)^0,w,c
 10393  005A5E  6E0F               	movwf	(??___fleq+3)^0,c
 10394  005A60  500C               	movf	??___fleq^0,w,c
 10395  005A62  100D               	iorwf	(??___fleq+1)^0,w,c
 10396  005A64  100E               	iorwf	(??___fleq+2)^0,w,c
 10397  005A66  100F               	iorwf	(??___fleq+3)^0,w,c
 10398  005A68  A4D8               	btfss	status,2,c
 10399  005A6A  EF39  F02D         	goto	u6731
 10400  005A6E  EF3B  F02D         	goto	u6730
 10401  005A72                     u6731:
 10402  005A72  EF43  F02D         	goto	l8135
 10403  005A76                     u6730:
 10404  005A76  0E00               	movlw	0
 10405  005A78  6E04               	movwf	___fleq@ff1^0,c
 10406  005A7A  0E00               	movlw	0
 10407  005A7C  6E05               	movwf	(___fleq@ff1+1)^0,c
 10408  005A7E  0E00               	movlw	0
 10409  005A80  6E06               	movwf	(___fleq@ff1+2)^0,c
 10410  005A82  0E00               	movlw	0
 10411  005A84  6E07               	movwf	(___fleq@ff1+3)^0,c
 10412  005A86                     l8135:
 10413  005A86  0E00               	movlw	0
 10414  005A88  1408               	andwf	___fleq@ff2^0,w,c
 10415  005A8A  6E0C               	movwf	??___fleq^0,c
 10416  005A8C  0E00               	movlw	0
 10417  005A8E  1409               	andwf	(___fleq@ff2+1)^0,w,c
 10418  005A90  6E0D               	movwf	(??___fleq+1)^0,c
 10419  005A92  0E80               	movlw	128
 10420  005A94  140A               	andwf	(___fleq@ff2+2)^0,w,c
 10421  005A96  6E0E               	movwf	(??___fleq+2)^0,c
 10422  005A98  0E7F               	movlw	127
 10423  005A9A  140B               	andwf	(___fleq@ff2+3)^0,w,c
 10424  005A9C  6E0F               	movwf	(??___fleq+3)^0,c
 10425  005A9E  500C               	movf	??___fleq^0,w,c
 10426  005AA0  100D               	iorwf	(??___fleq+1)^0,w,c
 10427  005AA2  100E               	iorwf	(??___fleq+2)^0,w,c
 10428  005AA4  100F               	iorwf	(??___fleq+3)^0,w,c
 10429  005AA6  A4D8               	btfss	status,2,c
 10430  005AA8  EF58  F02D         	goto	u6741
 10431  005AAC  EF5A  F02D         	goto	u6740
 10432  005AB0                     u6741:
 10433  005AB0  EF62  F02D         	goto	l8139
 10434  005AB4                     u6740:
 10435  005AB4  0E00               	movlw	0
 10436  005AB6  6E08               	movwf	___fleq@ff2^0,c
 10437  005AB8  0E00               	movlw	0
 10438  005ABA  6E09               	movwf	(___fleq@ff2+1)^0,c
 10439  005ABC  0E00               	movlw	0
 10440  005ABE  6E0A               	movwf	(___fleq@ff2+2)^0,c
 10441  005AC0  0E00               	movlw	0
 10442  005AC2  6E0B               	movwf	(___fleq@ff2+3)^0,c
 10443  005AC4                     l8139:
 10444  005AC4  5008               	movf	___fleq@ff2^0,w,c
 10445  005AC6  1804               	xorwf	___fleq@ff1^0,w,c
 10446  005AC8  E10F               	bnz	u6750
 10447  005ACA  5009               	movf	(___fleq@ff2+1)^0,w,c
 10448  005ACC  1805               	xorwf	(___fleq@ff1+1)^0,w,c
 10449  005ACE  E10C               	bnz	u6750
 10450  005AD0  500A               	movf	(___fleq@ff2+2)^0,w,c
 10451  005AD2  1806               	xorwf	(___fleq@ff1+2)^0,w,c
 10452  005AD4  E109               	bnz	u6750
 10453  005AD6  500B               	movf	(___fleq@ff2+3)^0,w,c
 10454  005AD8  1807               	xorwf	(___fleq@ff1+3)^0,w,c
 10455  005ADA  B4D8               	btfsc	status,2,c
 10456  005ADC  EF72  F02D         	goto	u6751
 10457  005AE0  EF74  F02D         	goto	u6750
 10458  005AE4                     u6751:
 10459  005AE4  EF77  F02D         	goto	l8143
 10460  005AE8                     u6750:
 10461  005AE8  90D8               	bcf	status,0,c
 10462  005AEA  EF78  F02D         	goto	l2081
 10463  005AEE                     l8143:
 10464  005AEE  80D8               	bsf	status,0,c
 10465  005AF0                     l2081:
 10466  005AF0  0012               	return		;funcret
 10467  005AF2                     __end_of___fleq:
 10468                           	callstack 0
 10469                           
 10470 ;; *************** function ___awmod *****************
 10471 ;; Defined at:
 10472 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  dividend        2    3[COMRAM] int 
 10475 ;;  divisor         2    5[COMRAM] int 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  sign            1    8[COMRAM] unsigned char 
 10478 ;;  counter         1    7[COMRAM] unsigned char 
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  2    3[COMRAM] int 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10488 ;;      Params:         4       0       0       0       0       0       0       0       0
 10489 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10491 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10492 ;;Total ram usage:        6 bytes
 10493 ;; Hardware stack levels used:    1
 10494 ;; Hardware stack levels required when called:    2
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_efgtoa
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text17
 10503  005998                     __ptext17:
 10504                           	callstack 0
 10505  005998                     ___awmod:
 10506                           	callstack 24
 10507  005998  0E00               	movlw	0
 10508  00599A  6E09               	movwf	___awmod@sign^0,c
 10509  00599C  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
 10510  00599E  EFD5  F02C         	goto	u6670
 10511  0059A2  EFD3  F02C         	goto	u6671
 10512  0059A6                     u6671:
 10513  0059A6  EFDB  F02C         	goto	l8103
 10514  0059AA                     u6670:
 10515  0059AA  6C04               	negf	___awmod@dividend^0,c
 10516  0059AC  1E05               	comf	(___awmod@dividend+1)^0,f,c
 10517  0059AE  B0D8               	btfsc	status,0,c
 10518  0059B0  2A05               	incf	(___awmod@dividend+1)^0,f,c
 10519  0059B2  0E01               	movlw	1
 10520  0059B4  6E09               	movwf	___awmod@sign^0,c
 10521  0059B6                     l8103:
 10522  0059B6  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
 10523  0059B8  EFE2  F02C         	goto	u6680
 10524  0059BC  EFE0  F02C         	goto	u6681
 10525  0059C0                     u6681:
 10526  0059C0  EFE6  F02C         	goto	l8107
 10527  0059C4                     u6680:
 10528  0059C4  6C06               	negf	___awmod@divisor^0,c
 10529  0059C6  1E07               	comf	(___awmod@divisor+1)^0,f,c
 10530  0059C8  B0D8               	btfsc	status,0,c
 10531  0059CA  2A07               	incf	(___awmod@divisor+1)^0,f,c
 10532  0059CC                     l8107:
 10533  0059CC  5006               	movf	___awmod@divisor^0,w,c
 10534  0059CE  1007               	iorwf	(___awmod@divisor+1)^0,w,c
 10535  0059D0  B4D8               	btfsc	status,2,c
 10536  0059D2  EFED  F02C         	goto	u6691
 10537  0059D6  EFEF  F02C         	goto	u6690
 10538  0059DA                     u6691:
 10539  0059DA  EF13  F02D         	goto	l8123
 10540  0059DE                     u6690:
 10541  0059DE  0E01               	movlw	1
 10542  0059E0  6E08               	movwf	___awmod@counter^0,c
 10543  0059E2  EFF7  F02C         	goto	l8113
 10544  0059E6                     l8111:
 10545  0059E6  90D8               	bcf	status,0,c
 10546  0059E8  3606               	rlcf	___awmod@divisor^0,f,c
 10547  0059EA  3607               	rlcf	(___awmod@divisor+1)^0,f,c
 10548  0059EC  2A08               	incf	___awmod@counter^0,f,c
 10549  0059EE                     l8113:
 10550  0059EE  AE07               	btfss	(___awmod@divisor+1)^0,7,c
 10551  0059F0  EFFC  F02C         	goto	u6701
 10552  0059F4  EFFE  F02C         	goto	u6700
 10553  0059F8                     u6701:
 10554  0059F8  EFF3  F02C         	goto	l8111
 10555  0059FC                     u6700:
 10556  0059FC                     l8115:
 10557  0059FC  5006               	movf	___awmod@divisor^0,w,c
 10558  0059FE  5C04               	subwf	___awmod@dividend^0,w,c
 10559  005A00  5007               	movf	(___awmod@divisor+1)^0,w,c
 10560  005A02  5805               	subwfb	(___awmod@dividend+1)^0,w,c
 10561  005A04  A0D8               	btfss	status,0,c
 10562  005A06  EF07  F02D         	goto	u6711
 10563  005A0A  EF09  F02D         	goto	u6710
 10564  005A0E                     u6711:
 10565  005A0E  EF0D  F02D         	goto	l8119
 10566  005A12                     u6710:
 10567  005A12  5006               	movf	___awmod@divisor^0,w,c
 10568  005A14  5E04               	subwf	___awmod@dividend^0,f,c
 10569  005A16  5007               	movf	(___awmod@divisor+1)^0,w,c
 10570  005A18  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
 10571  005A1A                     l8119:
 10572  005A1A  90D8               	bcf	status,0,c
 10573  005A1C  3207               	rrcf	(___awmod@divisor+1)^0,f,c
 10574  005A1E  3206               	rrcf	___awmod@divisor^0,f,c
 10575  005A20  2E08               	decfsz	___awmod@counter^0,f,c
 10576  005A22  EFFE  F02C         	goto	l8115
 10577  005A26                     l8123:
 10578  005A26  5009               	movf	___awmod@sign^0,w,c
 10579  005A28  B4D8               	btfsc	status,2,c
 10580  005A2A  EF19  F02D         	goto	u6721
 10581  005A2E  EF1B  F02D         	goto	u6720
 10582  005A32                     u6721:
 10583  005A32  EF1F  F02D         	goto	l8127
 10584  005A36                     u6720:
 10585  005A36  6C04               	negf	___awmod@dividend^0,c
 10586  005A38  1E05               	comf	(___awmod@dividend+1)^0,f,c
 10587  005A3A  B0D8               	btfsc	status,0,c
 10588  005A3C  2A05               	incf	(___awmod@dividend+1)^0,f,c
 10589  005A3E                     l8127:
 10590  005A3E  C004  F004         	movff	___awmod@dividend,?___awmod
 10591  005A42  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
 10592  005A46  0012               	return		;funcret
 10593  005A48                     __end_of___awmod:
 10594                           	callstack 0
 10595                           
 10596 ;; *************** function ___awdiv *****************
 10597 ;; Defined at:
 10598 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  dividend        2    3[COMRAM] int 
 10601 ;;  divisor         2    5[COMRAM] int 
 10602 ;; Auto vars:     Size  Location     Type
 10603 ;;  quotient        2    9[COMRAM] int 
 10604 ;;  sign            1    8[COMRAM] unsigned char 
 10605 ;;  counter         1    7[COMRAM] unsigned char 
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  2    3[COMRAM] int 
 10608 ;; Registers used:
 10609 ;;		wreg, status,2, status,0
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10615 ;;      Params:         4       0       0       0       0       0       0       0       0
 10616 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10618 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10619 ;;Total ram usage:        8 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:    2
 10622 ;; This function calls:
 10623 ;;		Nothing
 10624 ;; This function is called by:
 10625 ;;		_efgtoa
 10626 ;;		_MPU6050_CalibrateGyro
 10627 ;;		_MPU6050_CalibrateAccel
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text18
 10632  00574E                     __ptext18:
 10633                           	callstack 0
 10634  00574E                     ___awdiv:
 10635                           	callstack 24
 10636  00574E  0E00               	movlw	0
 10637  005750  6E09               	movwf	___awdiv@sign^0,c
 10638  005752  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
 10639  005754  EFB0  F02B         	goto	u6610
 10640  005758  EFAE  F02B         	goto	u6611
 10641  00575C                     u6611:
 10642  00575C  EFB6  F02B         	goto	l8059
 10643  005760                     u6610:
 10644  005760  6C06               	negf	___awdiv@divisor^0,c
 10645  005762  1E07               	comf	(___awdiv@divisor+1)^0,f,c
 10646  005764  B0D8               	btfsc	status,0,c
 10647  005766  2A07               	incf	(___awdiv@divisor+1)^0,f,c
 10648  005768  0E01               	movlw	1
 10649  00576A  6E09               	movwf	___awdiv@sign^0,c
 10650  00576C                     l8059:
 10651  00576C  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
 10652  00576E  EFBD  F02B         	goto	u6620
 10653  005772  EFBB  F02B         	goto	u6621
 10654  005776                     u6621:
 10655  005776  EFC3  F02B         	goto	l8065
 10656  00577A                     u6620:
 10657  00577A  6C04               	negf	___awdiv@dividend^0,c
 10658  00577C  1E05               	comf	(___awdiv@dividend+1)^0,f,c
 10659  00577E  B0D8               	btfsc	status,0,c
 10660  005780  2A05               	incf	(___awdiv@dividend+1)^0,f,c
 10661  005782  0E01               	movlw	1
 10662  005784  1A09               	xorwf	___awdiv@sign^0,f,c
 10663  005786                     l8065:
 10664  005786  0E00               	movlw	0
 10665  005788  6E0B               	movwf	(___awdiv@quotient+1)^0,c
 10666  00578A  0E00               	movlw	0
 10667  00578C  6E0A               	movwf	___awdiv@quotient^0,c
 10668  00578E  5006               	movf	___awdiv@divisor^0,w,c
 10669  005790  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
 10670  005792  B4D8               	btfsc	status,2,c
 10671  005794  EFCE  F02B         	goto	u6631
 10672  005798  EFD0  F02B         	goto	u6630
 10673  00579C                     u6631:
 10674  00579C  EFF8  F02B         	goto	l8087
 10675  0057A0                     u6630:
 10676  0057A0  0E01               	movlw	1
 10677  0057A2  6E08               	movwf	___awdiv@counter^0,c
 10678  0057A4  EFD8  F02B         	goto	l8073
 10679  0057A8                     l8071:
 10680  0057A8  90D8               	bcf	status,0,c
 10681  0057AA  3606               	rlcf	___awdiv@divisor^0,f,c
 10682  0057AC  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
 10683  0057AE  2A08               	incf	___awdiv@counter^0,f,c
 10684  0057B0                     l8073:
 10685  0057B0  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
 10686  0057B2  EFDD  F02B         	goto	u6641
 10687  0057B6  EFDF  F02B         	goto	u6640
 10688  0057BA                     u6641:
 10689  0057BA  EFD4  F02B         	goto	l8071
 10690  0057BE                     u6640:
 10691  0057BE                     l8075:
 10692  0057BE  90D8               	bcf	status,0,c
 10693  0057C0  360A               	rlcf	___awdiv@quotient^0,f,c
 10694  0057C2  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
 10695  0057C4  5006               	movf	___awdiv@divisor^0,w,c
 10696  0057C6  5C04               	subwf	___awdiv@dividend^0,w,c
 10697  0057C8  5007               	movf	(___awdiv@divisor+1)^0,w,c
 10698  0057CA  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
 10699  0057CC  A0D8               	btfss	status,0,c
 10700  0057CE  EFEB  F02B         	goto	u6651
 10701  0057D2  EFED  F02B         	goto	u6650
 10702  0057D6                     u6651:
 10703  0057D6  EFF2  F02B         	goto	l8083
 10704  0057DA                     u6650:
 10705  0057DA  5006               	movf	___awdiv@divisor^0,w,c
 10706  0057DC  5E04               	subwf	___awdiv@dividend^0,f,c
 10707  0057DE  5007               	movf	(___awdiv@divisor+1)^0,w,c
 10708  0057E0  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
 10709  0057E2  800A               	bsf	___awdiv@quotient^0,0,c
 10710  0057E4                     l8083:
 10711  0057E4  90D8               	bcf	status,0,c
 10712  0057E6  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
 10713  0057E8  3206               	rrcf	___awdiv@divisor^0,f,c
 10714  0057EA  2E08               	decfsz	___awdiv@counter^0,f,c
 10715  0057EC  EFDF  F02B         	goto	l8075
 10716  0057F0                     l8087:
 10717  0057F0  5009               	movf	___awdiv@sign^0,w,c
 10718  0057F2  B4D8               	btfsc	status,2,c
 10719  0057F4  EFFE  F02B         	goto	u6661
 10720  0057F8  EF00  F02C         	goto	u6660
 10721  0057FC                     u6661:
 10722  0057FC  EF04  F02C         	goto	l8091
 10723  005800                     u6660:
 10724  005800  6C0A               	negf	___awdiv@quotient^0,c
 10725  005802  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
 10726  005804  B0D8               	btfsc	status,0,c
 10727  005806  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
 10728  005808                     l8091:
 10729  005808  C00A  F004         	movff	___awdiv@quotient,?___awdiv
 10730  00580C  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
 10731  005810  0012               	return		;funcret
 10732  005812                     __end_of___awdiv:
 10733                           	callstack 0
 10734                           
 10735 ;; *************** function _i2c_init *****************
 10736 ;; Defined at:
 10737 ;;		line 3 in file "I2C.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;  freqK           2   16[COMRAM] const unsigned short 
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;		None
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  1    wreg      void 
 10744 ;; Registers used:
 10745 ;;		wreg, status,2, status,0, cstack
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10751 ;;      Params:         2       0       0       0       0       0       0       0       0
 10752 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10753 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10754 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10755 ;;Total ram usage:        6 bytes
 10756 ;; Hardware stack levels used:    1
 10757 ;; Hardware stack levels required when called:    3
 10758 ;; This function calls:
 10759 ;;		___lldiv
 10760 ;; This function is called by:
 10761 ;;		_main
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text19
 10766  005FF0                     __ptext19:
 10767                           	callstack 0
 10768  005FF0                     _i2c_init:
 10769                           	callstack 27
 10770  005FF0                     
 10771                           ;I2C.c: 3: void i2c_init(const uint16_t freqK);I2C.c: 4: {;I2C.c: 6:     TRISBbits.RB0 =
      +                           1;
 10772  005FF0  8093               	bsf	147,0,c	;volatile
 10773                           
 10774                           ;I2C.c: 7:     TRISBbits.RB1 = 1;
 10775  005FF2  8293               	bsf	147,1,c	;volatile
 10776  005FF4  C011  F008         	movff	i2c_init@freqK,___lldiv@divisor
 10777  005FF8  C012  F009         	movff	i2c_init@freqK+1,___lldiv@divisor+1
 10778  005FFC  6A0A               	clrf	(___lldiv@divisor+2)^0,c
 10779  005FFE  6A0B               	clrf	(___lldiv@divisor+3)^0,c
 10780  006000  0E00               	movlw	0
 10781  006002  6E04               	movwf	___lldiv@dividend^0,c
 10782  006004  0E1B               	movlw	27
 10783  006006  6E05               	movwf	(___lldiv@dividend+1)^0,c
 10784  006008  0EB7               	movlw	183
 10785  00600A  6E06               	movwf	(___lldiv@dividend+2)^0,c
 10786  00600C  0E00               	movlw	0
 10787  00600E  6E07               	movwf	(___lldiv@dividend+3)^0,c
 10788  006010  EC79  F02D         	call	___lldiv	;wreg free
 10789  006014  C004  F013         	movff	?___lldiv,_i2c_init$4518
 10790  006018  C005  F014         	movff	?___lldiv+1,_i2c_init$4518+1
 10791  00601C  C006  F015         	movff	?___lldiv+2,_i2c_init$4518+2
 10792  006020  C007  F016         	movff	?___lldiv+3,_i2c_init$4518+3
 10793  006024  C013  F004         	movff	_i2c_init$4518,___lldiv@dividend
 10794  006028  C014  F005         	movff	_i2c_init$4518+1,___lldiv@dividend+1
 10795  00602C  C015  F006         	movff	_i2c_init$4518+2,___lldiv@dividend+2
 10796  006030  C016  F007         	movff	_i2c_init$4518+3,___lldiv@dividend+3
 10797  006034  0EE8               	movlw	232
 10798  006036  6E08               	movwf	___lldiv@divisor^0,c
 10799  006038  0E03               	movlw	3
 10800  00603A  6E09               	movwf	(___lldiv@divisor+1)^0,c
 10801  00603C  0E00               	movlw	0
 10802  00603E  6E0A               	movwf	(___lldiv@divisor+2)^0,c
 10803  006040  0E00               	movlw	0
 10804  006042  6E0B               	movwf	(___lldiv@divisor+3)^0,c
 10805  006044  EC79  F02D         	call	___lldiv	;wreg free
 10806  006048  0404               	decf	?___lldiv^0,w,c
 10807  00604A  6EC8               	movwf	200,c	;volatile
 10808  00604C                     
 10809                           ;I2C.c: 10:     SSPCON1 = 0;
 10810  00604C  0E00               	movlw	0
 10811  00604E  6EC6               	movwf	198,c	;volatile
 10812  006050                     
 10813                           ;I2C.c: 11:     SSPCON2 = 0;
 10814  006050  0E00               	movlw	0
 10815  006052  6EC5               	movwf	197,c	;volatile
 10816  006054                     
 10817                           ;I2C.c: 14:     SSPSTAT = 0;
 10818  006054  0E00               	movlw	0
 10819  006056  6EC7               	movwf	199,c	;volatile
 10820  006058                     
 10821                           ;I2C.c: 17:     SSPCON1bits.SSPM3 = 1;
 10822  006058  86C6               	bsf	198,3,c	;volatile
 10823  00605A                     
 10824                           ;I2C.c: 18:     SSPCON1bits.SSPM2 = 0;
 10825  00605A  94C6               	bcf	198,2,c	;volatile
 10826  00605C                     
 10827                           ;I2C.c: 19:     SSPCON1bits.SSPM1 = 0;
 10828  00605C  92C6               	bcf	198,1,c	;volatile
 10829  00605E                     
 10830                           ;I2C.c: 20:     SSPCON1bits.SSPM0 = 0;
 10831  00605E  90C6               	bcf	198,0,c	;volatile
 10832  006060                     
 10833                           ;I2C.c: 22:     SSPCON1bits.SSPEN = 1;
 10834  006060  8AC6               	bsf	198,5,c	;volatile
 10835  006062  0012               	return		;funcret
 10836  006064                     __end_of_i2c_init:
 10837                           	callstack 0
 10838                           
 10839 ;; *************** function _controlReceive *****************
 10840 ;; Defined at:
 10841 ;;		line 101 in file "main.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;		None
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;		None
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  1    wreg      void 
 10848 ;; Registers used:
 10849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10855 ;;      Params:         0       0       0       0       0       0       0       0       0
 10856 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10857 ;;      Temps:          0       8       0       0       0       0       0       0       0
 10858 ;;      Totals:         0      12       0       0       0       0       0       0       0
 10859 ;;Total ram usage:       12 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; Hardware stack levels required when called:    3
 10862 ;; This function calls:
 10863 ;;		_USART_UART_readBuffer
 10864 ;;		___fladd
 10865 ;;		___fldiv
 10866 ;;		___flmul
 10867 ;;		___wmul
 10868 ;;		___xxtofl
 10869 ;;		_resetDisplacement
 10870 ;; This function is called by:
 10871 ;;		_main
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text20
 10876  0028AC                     __ptext20:
 10877                           	callstack 0
 10878  0028AC                     _controlReceive:
 10879                           	callstack 27
 10880  0028AC                     
 10881                           ;main.c: 103:     if( USART_UART_readBuffer(btRX, sizeof(btRX)) )
 10882  0028AC  0E7F               	movlw	low _btRX
 10883  0028AE  6E04               	movwf	USART_UART_readBuffer@buffer^0,c
 10884  0028B0  0E01               	movlw	high _btRX
 10885  0028B2  6E05               	movwf	(USART_UART_readBuffer@buffer+1)^0,c
 10886  0028B4  0E18               	movlw	24
 10887  0028B6  6E06               	movwf	USART_UART_readBuffer@size^0,c
 10888  0028B8  ECBC  F02F         	call	_USART_UART_readBuffer	;wreg free
 10889  0028BC  0900               	iorlw	0
 10890  0028BE  B4D8               	btfsc	status,2,c
 10891  0028C0  EF64  F014         	goto	u9191
 10892  0028C4  EF66  F014         	goto	u9190
 10893  0028C8                     u9191:
 10894  0028C8  EF69  F017         	goto	l1752
 10895  0028CC                     u9190:
 10896  0028CC                     
 10897                           ;main.c: 104:     {;main.c: 105:         if(btRX[0] == 'k')
 10898  0028CC  0E6B               	movlw	107
 10899  0028CE  0101               	movlb	1	; () banked
 10900  0028D0  197F               	xorwf	_btRX& (0+255),w,b
 10901  0028D2  A4D8               	btfss	status,2,c
 10902  0028D4  EF6E  F014         	goto	u9201
 10903  0028D8  EF70  F014         	goto	u9200
 10904  0028DC                     u9201:
 10905  0028DC  EFB9  F015         	goto	l9807
 10906  0028E0                     u9200:
 10907  0028E0                     
 10908                           ; BSR set to: 1
 10909                           ;main.c: 106:         {;main.c: 107:             if(btRX[1] == 'P')
 10910  0028E0  0E50               	movlw	80
 10911  0028E2  1980               	xorwf	(_btRX+1)& (0+255),w,b
 10912  0028E4  A4D8               	btfss	status,2,c
 10913  0028E6  EF77  F014         	goto	u9211
 10914  0028EA  EF79  F014         	goto	u9210
 10915  0028EE                     u9211:
 10916  0028EE  EFAC  F014         	goto	l9799
 10917  0028F2                     u9210:
 10918  0028F2                     
 10919                           ; BSR set to: 1
 10920                           ;main.c: 108:                 kP = (btRX[2]-0x30)*100+(btRX[3]-0x30)*10+(btRX[4]-0x30);
 10921  0028F2  0E30               	movlw	48
 10922  0028F4  0100               	movlb	0	; () banked
 10923  0028F6  6F60               	movwf	??_controlReceive& (0+255),b
 10924  0028F8  0EEB               	movlw	235
 10925  0028FA  6F61               	movwf	(??_controlReceive+1)& (0+255),b
 10926  0028FC  0101               	movlb	1	; () banked
 10927  0028FE  5181               	movf	(_btRX+2)& (0+255),w,b
 10928  002900  0D64               	mullw	100
 10929  002902  CFF3 F062          	movff	prodl,??_controlReceive+2
 10930  002906  CFF4 F063          	movff	prodh,??_controlReceive+3
 10931  00290A  5182               	movf	(_btRX+3)& (0+255),w,b
 10932  00290C  0D0A               	mullw	10
 10933  00290E  50F3               	movf	243,w,c
 10934  002910  0100               	movlb	0	; () banked
 10935  002912  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 10936  002914  50F4               	movf	244,w,c
 10937  002916  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 10938  002918  0101               	movlb	1	; () banked
 10939  00291A  5183               	movf	(_btRX+4)& (0+255),w,b
 10940  00291C  0100               	movlb	0	; () banked
 10941  00291E  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 10942  002920  0E00               	movlw	0
 10943  002922  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 10944  002924  5160               	movf	??_controlReceive& (0+255),w,b
 10945  002926  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 10946  002928  5161               	movf	(??_controlReceive+1)& (0+255),w,b
 10947  00292A  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 10948  00292C  C062  F00A         	movff	??_controlReceive+2,___xxtofl@val
 10949  002930  C063  F00B         	movff	??_controlReceive+3,___xxtofl@val+1
 10950  002934  0E00               	movlw	0
 10951  002936  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 10952  002938  0EFF               	movlw	-1
 10953  00293A  6E0C               	movwf	(___xxtofl@val+2)^0,c
 10954  00293C  6E0D               	movwf	(___xxtofl@val+3)^0,c
 10955  00293E  0E01               	movlw	1
 10956  002940  EC18  F025         	call	___xxtofl
 10957  002944  C00A  F1F6         	movff	?___xxtofl,_kP
 10958  002948  C00B  F1F7         	movff	?___xxtofl+1,_kP+1
 10959  00294C  C00C  F1F8         	movff	?___xxtofl+2,_kP+2
 10960  002950  C00D  F1F9         	movff	?___xxtofl+3,_kP+3
 10961  002954  EF69  F017         	goto	l1752
 10962  002958                     l9799:
 10963                           
 10964                           ; BSR set to: 1
 10965  002958  0E49               	movlw	73
 10966  00295A  1980               	xorwf	(_btRX+1)& (0+255),w,b
 10967  00295C  A4D8               	btfss	status,2,c
 10968  00295E  EFB3  F014         	goto	u9221
 10969  002962  EFB5  F014         	goto	u9220
 10970  002966                     u9221:
 10971  002966  EFF4  F014         	goto	l9803
 10972  00296A                     u9220:
 10973  00296A                     
 10974                           ; BSR set to: 1
 10975                           ;main.c: 110:                 kI = ((btRX[2]-0x30)*100+(btRX[3]-0x30)*10)*dt;
 10976  00296A  0E60               	movlw	96
 10977  00296C  0100               	movlb	0	; () banked
 10978  00296E  6F60               	movwf	??_controlReceive& (0+255),b
 10979  002970  0EEB               	movlw	235
 10980  002972  6F61               	movwf	(??_controlReceive+1)& (0+255),b
 10981  002974  0101               	movlb	1	; () banked
 10982  002976  5181               	movf	(_btRX+2)& (0+255),w,b
 10983  002978  0D64               	mullw	100
 10984  00297A  CFF3 F062          	movff	prodl,??_controlReceive+2
 10985  00297E  CFF4 F063          	movff	prodh,??_controlReceive+3
 10986  002982  5182               	movf	(_btRX+3)& (0+255),w,b
 10987  002984  0D0A               	mullw	10
 10988  002986  50F3               	movf	243,w,c
 10989  002988  0100               	movlb	0	; () banked
 10990  00298A  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 10991  00298C  50F4               	movf	244,w,c
 10992  00298E  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 10993  002990  5160               	movf	??_controlReceive& (0+255),w,b
 10994  002992  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 10995  002994  5161               	movf	(??_controlReceive+1)& (0+255),w,b
 10996  002996  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 10997  002998  C062  F00A         	movff	??_controlReceive+2,___xxtofl@val
 10998  00299C  C063  F00B         	movff	??_controlReceive+3,___xxtofl@val+1
 10999  0029A0  0E00               	movlw	0
 11000  0029A2  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 11001  0029A4  0EFF               	movlw	-1
 11002  0029A6  6E0C               	movwf	(___xxtofl@val+2)^0,c
 11003  0029A8  6E0D               	movwf	(___xxtofl@val+3)^0,c
 11004  0029AA  0E01               	movlw	1
 11005  0029AC  EC18  F025         	call	___xxtofl
 11006  0029B0  C00A  F031         	movff	?___xxtofl,___flmul@b
 11007  0029B4  C00B  F032         	movff	?___xxtofl+1,___flmul@b+1
 11008  0029B8  C00C  F033         	movff	?___xxtofl+2,___flmul@b+2
 11009  0029BC  C00D  F034         	movff	?___xxtofl+3,___flmul@b+3
 11010  0029C0  C168  F035         	movff	_dt,___flmul@a
 11011  0029C4  C169  F036         	movff	_dt+1,___flmul@a+1
 11012  0029C8  C16A  F037         	movff	_dt+2,___flmul@a+2
 11013  0029CC  C16B  F038         	movff	_dt+3,___flmul@a+3
 11014  0029D0  ECCA  F019         	call	___flmul	;wreg free
 11015  0029D4  C031  F1F2         	movff	?___flmul,_kI
 11016  0029D8  C032  F1F3         	movff	?___flmul+1,_kI+1
 11017  0029DC  C033  F1F4         	movff	?___flmul+2,_kI+2
 11018  0029E0  C034  F1F5         	movff	?___flmul+3,_kI+3
 11019  0029E4  EF69  F017         	goto	l1752
 11020  0029E8                     l9803:
 11021                           
 11022                           ; BSR set to: 1
 11023  0029E8  0E44               	movlw	68
 11024  0029EA  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11025  0029EC  A4D8               	btfss	status,2,c
 11026  0029EE  EFFB  F014         	goto	u9231
 11027  0029F2  EFFD  F014         	goto	u9230
 11028  0029F6                     u9231:
 11029  0029F6  EFB7  F015         	goto	l1725
 11030  0029FA                     u9230:
 11031  0029FA                     
 11032                           ; BSR set to: 1
 11033                           ;main.c: 112:                 kD = ((btRX[2]-0x30)*1+(btRX[3]-0x30)*0.1+(btRX[4]-0x30)*0
      +                          .01)/dt;
 11034  0029FA  0ECD               	movlw	205
 11035  0029FC  6E35               	movwf	___flmul@a^0,c
 11036  0029FE  0ECC               	movlw	204
 11037  002A00  6E36               	movwf	(___flmul@a+1)^0,c
 11038  002A02  0ECC               	movlw	204
 11039  002A04  6E37               	movwf	(___flmul@a+2)^0,c
 11040  002A06  0E3D               	movlw	61
 11041  002A08  6E38               	movwf	(___flmul@a+3)^0,c
 11042  002A0A  0ED0               	movlw	208
 11043  002A0C  0100               	movlb	0	; () banked
 11044  002A0E  6F60               	movwf	??_controlReceive& (0+255),b
 11045  002A10  0EFF               	movlw	255
 11046  002A12  6F61               	movwf	(??_controlReceive+1)& (0+255),b
 11047  002A14  0101               	movlb	1	; () banked
 11048  002A16  5182               	movf	(_btRX+3)& (0+255),w,b
 11049  002A18  0100               	movlb	0	; () banked
 11050  002A1A  6F62               	movwf	(??_controlReceive+2)& (0+255),b
 11051  002A1C  6B63               	clrf	(??_controlReceive+3)& (0+255),b
 11052  002A1E  5160               	movf	??_controlReceive& (0+255),w,b
 11053  002A20  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 11054  002A22  5161               	movf	(??_controlReceive+1)& (0+255),w,b
 11055  002A24  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 11056  002A26  C062  F00A         	movff	??_controlReceive+2,___xxtofl@val
 11057  002A2A  C063  F00B         	movff	??_controlReceive+3,___xxtofl@val+1
 11058  002A2E  0E00               	movlw	0
 11059  002A30  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 11060  002A32  0EFF               	movlw	-1
 11061  002A34  6E0C               	movwf	(___xxtofl@val+2)^0,c
 11062  002A36  6E0D               	movwf	(___xxtofl@val+3)^0,c
 11063  002A38  0E01               	movlw	1
 11064  002A3A  EC18  F025         	call	___xxtofl
 11065  002A3E  C00A  F031         	movff	?___xxtofl,___flmul@b
 11066  002A42  C00B  F032         	movff	?___xxtofl+1,___flmul@b+1
 11067  002A46  C00C  F033         	movff	?___xxtofl+2,___flmul@b+2
 11068  002A4A  C00D  F034         	movff	?___xxtofl+3,___flmul@b+3
 11069  002A4E  ECCA  F019         	call	___flmul	;wreg free
 11070  002A52  C031  F04E         	movff	?___flmul,___fladd@a
 11071  002A56  C032  F04F         	movff	?___flmul+1,___fladd@a+1
 11072  002A5A  C033  F050         	movff	?___flmul+2,___fladd@a+2
 11073  002A5E  C034  F051         	movff	?___flmul+3,___fladd@a+3
 11074  002A62  0ED0               	movlw	208
 11075  002A64  0100               	movlb	0	; () banked
 11076  002A66  6F64               	movwf	(??_controlReceive+4)& (0+255),b
 11077  002A68  0EFF               	movlw	255
 11078  002A6A  6F65               	movwf	(??_controlReceive+5)& (0+255),b
 11079  002A6C  0101               	movlb	1	; () banked
 11080  002A6E  5181               	movf	(_btRX+2)& (0+255),w,b
 11081  002A70  0100               	movlb	0	; () banked
 11082  002A72  6F66               	movwf	(??_controlReceive+6)& (0+255),b
 11083  002A74  6B67               	clrf	(??_controlReceive+7)& (0+255),b
 11084  002A76  5164               	movf	(??_controlReceive+4)& (0+255),w,b
 11085  002A78  2766               	addwf	(??_controlReceive+6)& (0+255),f,b
 11086  002A7A  5165               	movf	(??_controlReceive+5)& (0+255),w,b
 11087  002A7C  2367               	addwfc	(??_controlReceive+7)& (0+255),f,b
 11088  002A7E  C066  F00A         	movff	??_controlReceive+6,___xxtofl@val
 11089  002A82  C067  F00B         	movff	??_controlReceive+7,___xxtofl@val+1
 11090  002A86  0E00               	movlw	0
 11091  002A88  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 11092  002A8A  0EFF               	movlw	-1
 11093  002A8C  6E0C               	movwf	(___xxtofl@val+2)^0,c
 11094  002A8E  6E0D               	movwf	(___xxtofl@val+3)^0,c
 11095  002A90  0E01               	movlw	1
 11096  002A92  EC18  F025         	call	___xxtofl
 11097  002A96  C00A  F04A         	movff	?___xxtofl,___fladd@b
 11098  002A9A  C00B  F04B         	movff	?___xxtofl+1,___fladd@b+1
 11099  002A9E  C00C  F04C         	movff	?___xxtofl+2,___fladd@b+2
 11100  002AA2  C00D  F04D         	movff	?___xxtofl+3,___fladd@b+3
 11101  002AA6  EC6A  F017         	call	___fladd	;wreg free
 11102  002AAA  C04A  F068         	movff	?___fladd,_controlReceive$4554
 11103  002AAE  C04B  F069         	movff	?___fladd+1,_controlReceive$4554+1
 11104  002AB2  C04C  F06A         	movff	?___fladd+2,_controlReceive$4554+2
 11105  002AB6  C04D  F06B         	movff	?___fladd+3,_controlReceive$4554+3
 11106                           
 11107                           ;main.c: 112:                 kD = ((btRX[2]-0x30)*1+(btRX[3]-0x30)*0.1+(btRX[4]-0x30)*0
      +                          .01)/dt;
 11108  002ABA  0E0A               	movlw	10
 11109  002ABC  6E35               	movwf	___flmul@a^0,c
 11110  002ABE  0ED7               	movlw	215
 11111  002AC0  6E36               	movwf	(___flmul@a+1)^0,c
 11112  002AC2  0E23               	movlw	35
 11113  002AC4  6E37               	movwf	(___flmul@a+2)^0,c
 11114  002AC6  0E3C               	movlw	60
 11115  002AC8  6E38               	movwf	(___flmul@a+3)^0,c
 11116  002ACA  0ED0               	movlw	208
 11117  002ACC  0100               	movlb	0	; () banked
 11118  002ACE  6F60               	movwf	??_controlReceive& (0+255),b
 11119  002AD0  0EFF               	movlw	255
 11120  002AD2  6F61               	movwf	(??_controlReceive+1)& (0+255),b
 11121  002AD4  0101               	movlb	1	; () banked
 11122  002AD6  5183               	movf	(_btRX+4)& (0+255),w,b
 11123  002AD8  0100               	movlb	0	; () banked
 11124  002ADA  6F62               	movwf	(??_controlReceive+2)& (0+255),b
 11125  002ADC  6B63               	clrf	(??_controlReceive+3)& (0+255),b
 11126  002ADE  5160               	movf	??_controlReceive& (0+255),w,b
 11127  002AE0  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 11128  002AE2  5161               	movf	(??_controlReceive+1)& (0+255),w,b
 11129  002AE4  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 11130  002AE6  C062  F00A         	movff	??_controlReceive+2,___xxtofl@val
 11131  002AEA  C063  F00B         	movff	??_controlReceive+3,___xxtofl@val+1
 11132  002AEE  0E00               	movlw	0
 11133  002AF0  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 11134  002AF2  0EFF               	movlw	-1
 11135  002AF4  6E0C               	movwf	(___xxtofl@val+2)^0,c
 11136  002AF6  6E0D               	movwf	(___xxtofl@val+3)^0,c
 11137  002AF8  0E01               	movlw	1
 11138  002AFA  EC18  F025         	call	___xxtofl
 11139  002AFE  C00A  F031         	movff	?___xxtofl,___flmul@b
 11140  002B02  C00B  F032         	movff	?___xxtofl+1,___flmul@b+1
 11141  002B06  C00C  F033         	movff	?___xxtofl+2,___flmul@b+2
 11142  002B0A  C00D  F034         	movff	?___xxtofl+3,___flmul@b+3
 11143  002B0E  ECCA  F019         	call	___flmul	;wreg free
 11144  002B12  C031  F04E         	movff	?___flmul,___fladd@a
 11145  002B16  C032  F04F         	movff	?___flmul+1,___fladd@a+1
 11146  002B1A  C033  F050         	movff	?___flmul+2,___fladd@a+2
 11147  002B1E  C034  F051         	movff	?___flmul+3,___fladd@a+3
 11148  002B22  C068  F04A         	movff	_controlReceive$4554,___fladd@b
 11149  002B26  C069  F04B         	movff	_controlReceive$4554+1,___fladd@b+1
 11150  002B2A  C06A  F04C         	movff	_controlReceive$4554+2,___fladd@b+2
 11151  002B2E  C06B  F04D         	movff	_controlReceive$4554+3,___fladd@b+3
 11152  002B32  EC6A  F017         	call	___fladd	;wreg free
 11153  002B36  C04A  F018         	movff	?___fladd,___fldiv@b
 11154  002B3A  C04B  F019         	movff	?___fladd+1,___fldiv@b+1
 11155  002B3E  C04C  F01A         	movff	?___fladd+2,___fldiv@b+2
 11156  002B42  C04D  F01B         	movff	?___fladd+3,___fldiv@b+3
 11157  002B46  C168  F01C         	movff	_dt,___fldiv@a
 11158  002B4A  C169  F01D         	movff	_dt+1,___fldiv@a+1
 11159  002B4E  C16A  F01E         	movff	_dt+2,___fldiv@a+2
 11160  002B52  C16B  F01F         	movff	_dt+3,___fldiv@a+3
 11161  002B56  ECDF  F01B         	call	___fldiv	;wreg free
 11162  002B5A  C018  F1EE         	movff	?___fldiv,_kD
 11163  002B5E  C019  F1EF         	movff	?___fldiv+1,_kD+1
 11164  002B62  C01A  F1F0         	movff	?___fldiv+2,_kD+2
 11165  002B66  C01B  F1F1         	movff	?___fldiv+3,_kD+3
 11166  002B6A  EF69  F017         	goto	l1752
 11167  002B6E                     l1725:
 11168  002B6E  EF69  F017         	goto	l1752
 11169  002B72                     l9807:
 11170                           
 11171                           ; BSR set to: 1
 11172  002B72  0E64               	movlw	100
 11173  002B74  197F               	xorwf	_btRX& (0+255),w,b
 11174  002B76  A4D8               	btfss	status,2,c
 11175  002B78  EFC0  F015         	goto	u9241
 11176  002B7C  EFC2  F015         	goto	u9240
 11177  002B80                     u9241:
 11178  002B80  EF75  F016         	goto	l9841
 11179  002B84                     u9240:
 11180  002B84                     
 11181                           ; BSR set to: 1
 11182                           ;main.c: 115:         {;main.c: 116:             if(btRX[1] == 'Z')
 11183  002B84  0E5A               	movlw	90
 11184  002B86  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11185  002B88  A4D8               	btfss	status,2,c
 11186  002B8A  EFC9  F015         	goto	u9251
 11187  002B8E  EFCB  F015         	goto	u9250
 11188  002B92                     u9251:
 11189  002B92  EFE7  F015         	goto	l9813
 11190  002B96                     u9250:
 11191  002B96                     
 11192                           ; BSR set to: 1
 11193                           ;main.c: 117:                 turning_speed = (btRX[2]-0x30)*100+(btRX[3]-0x30)*10+(btRX
      +                          [4]-0x30);
 11194  002B96  5181               	movf	(_btRX+2)& (0+255),w,b
 11195  002B98  0D64               	mullw	100
 11196  002B9A  CFF3 F060          	movff	prodl,??_controlReceive
 11197  002B9E  CFF4 F061          	movff	prodh,??_controlReceive+1
 11198  002BA2  5182               	movf	(_btRX+3)& (0+255),w,b
 11199  002BA4  0D0A               	mullw	10
 11200  002BA6  50F3               	movf	243,w,c
 11201  002BA8  0100               	movlb	0	; () banked
 11202  002BAA  2760               	addwf	??_controlReceive& (0+255),f,b
 11203  002BAC  50F4               	movf	244,w,c
 11204  002BAE  2361               	addwfc	(??_controlReceive+1)& (0+255),f,b
 11205  002BB0  0101               	movlb	1	; () banked
 11206  002BB2  5183               	movf	(_btRX+4)& (0+255),w,b
 11207  002BB4  0100               	movlb	0	; () banked
 11208  002BB6  2760               	addwf	??_controlReceive& (0+255),f,b
 11209  002BB8  0E00               	movlw	0
 11210  002BBA  2361               	addwfc	(??_controlReceive+1)& (0+255),f,b
 11211  002BBC  0E30               	movlw	48
 11212  002BBE  2560               	addwf	??_controlReceive& (0+255),w,b
 11213  002BC0  0101               	movlb	1	; () banked
 11214  002BC2  6FFA               	movwf	_turning_speed& (0+255),b
 11215  002BC4  0EEB               	movlw	235
 11216  002BC6  0100               	movlb	0	; () banked
 11217  002BC8  2161               	addwfc	(??_controlReceive+1)& (0+255),w,b
 11218  002BCA  0101               	movlb	1	; () banked
 11219  002BCC  6FFB               	movwf	(_turning_speed+1)& (0+255),b
 11220  002BCE                     l9813:
 11221                           
 11222                           ; BSR set to: 1
 11223                           ;main.c: 118:             if(btRX[1] == 'S')
 11224  002BCE  0E53               	movlw	83
 11225  002BD0  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11226  002BD2  A4D8               	btfss	status,2,c
 11227  002BD4  EFEE  F015         	goto	u9261
 11228  002BD8  EFF0  F015         	goto	u9260
 11229  002BDC                     u9261:
 11230  002BDC  EF00  F016         	goto	l9817
 11231  002BE0                     u9260:
 11232  002BE0                     
 11233                           ; BSR set to: 1
 11234                           ;main.c: 119:             {;main.c: 120:                 direction = 0;
 11235  002BE0  0E00               	movlw	0
 11236  002BE2  6F7E               	movwf	_direction& (0+255),b
 11237                           
 11238                           ;main.c: 121:                 brake = 1;
 11239  002BE4  0E01               	movlw	1
 11240  002BE6  0100               	movlb	0	; () banked
 11241  002BE8  6FFA               	movwf	_brake& (0+255),b
 11242                           
 11243                           ;main.c: 122:                 setPoint = 0;
 11244  002BEA  0E00               	movlw	0
 11245  002BEC  0101               	movlb	1	; () banked
 11246  002BEE  6F70               	movwf	_setPoint& (0+255),b
 11247  002BF0  0E00               	movlw	0
 11248  002BF2  6F71               	movwf	(_setPoint+1)& (0+255),b
 11249  002BF4  0E00               	movlw	0
 11250  002BF6  6F72               	movwf	(_setPoint+2)& (0+255),b
 11251  002BF8  0E00               	movlw	0
 11252  002BFA  6F73               	movwf	(_setPoint+3)& (0+255),b
 11253                           
 11254                           ;main.c: 123:             }
 11255  002BFC  EF69  F017         	goto	l1752
 11256  002C00                     l9817:
 11257                           
 11258                           ; BSR set to: 1
 11259  002C00  0E46               	movlw	70
 11260  002C02  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11261  002C04  A4D8               	btfss	status,2,c
 11262  002C06  EF07  F016         	goto	u9271
 11263  002C0A  EF09  F016         	goto	u9270
 11264  002C0E                     u9271:
 11265  002C0E  EF15  F016         	goto	l9821
 11266  002C12                     u9270:
 11267  002C12                     
 11268                           ; BSR set to: 1
 11269                           ;main.c: 125:                 setPoint = 6;
 11270  002C12  0E00               	movlw	0
 11271  002C14  6F70               	movwf	_setPoint& (0+255),b
 11272  002C16  0E00               	movlw	0
 11273  002C18  6F71               	movwf	(_setPoint+1)& (0+255),b
 11274  002C1A  0EC0               	movlw	192
 11275  002C1C  6F72               	movwf	(_setPoint+2)& (0+255),b
 11276  002C1E  0E40               	movlw	64
 11277  002C20  6F73               	movwf	(_setPoint+3)& (0+255),b
 11278                           
 11279                           ;main.c: 126:                 direction = 0;
 11280  002C22  0E00               	movlw	0
 11281  002C24  6F7E               	movwf	_direction& (0+255),b
 11282                           
 11283                           ;main.c: 127:             }
 11284  002C26  EF69  F017         	goto	l1752
 11285  002C2A                     l9821:
 11286                           
 11287                           ; BSR set to: 1
 11288  002C2A  0E52               	movlw	82
 11289  002C2C  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11290  002C2E  A4D8               	btfss	status,2,c
 11291  002C30  EF1C  F016         	goto	u9281
 11292  002C34  EF1E  F016         	goto	u9280
 11293  002C38                     u9281:
 11294  002C38  EF2A  F016         	goto	l9825
 11295  002C3C                     u9280:
 11296  002C3C                     
 11297                           ; BSR set to: 1
 11298                           ;main.c: 129:             {;main.c: 130:                 setPoint = -8;
 11299  002C3C  0E00               	movlw	0
 11300  002C3E  6F70               	movwf	_setPoint& (0+255),b
 11301  002C40  0E00               	movlw	0
 11302  002C42  6F71               	movwf	(_setPoint+1)& (0+255),b
 11303  002C44  0E00               	movlw	0
 11304  002C46  6F72               	movwf	(_setPoint+2)& (0+255),b
 11305  002C48  0EC1               	movlw	193
 11306  002C4A  6F73               	movwf	(_setPoint+3)& (0+255),b
 11307                           
 11308                           ;main.c: 131:                 direction = 0;
 11309  002C4C  0E00               	movlw	0
 11310  002C4E  6F7E               	movwf	_direction& (0+255),b
 11311                           
 11312                           ;main.c: 132:             }
 11313  002C50  EF69  F017         	goto	l1752
 11314  002C54                     l9825:
 11315                           
 11316                           ; BSR set to: 1
 11317  002C54  0E44               	movlw	68
 11318  002C56  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11319  002C58  A4D8               	btfss	status,2,c
 11320  002C5A  EF31  F016         	goto	u9291
 11321  002C5E  EF33  F016         	goto	u9290
 11322  002C62                     u9291:
 11323  002C62  EF3F  F016         	goto	l9829
 11324  002C66                     u9290:
 11325  002C66                     
 11326                           ; BSR set to: 1
 11327                           ;main.c: 134:             {;main.c: 135:                 direction = 1;
 11328  002C66  0E01               	movlw	1
 11329  002C68  6F7E               	movwf	_direction& (0+255),b
 11330                           
 11331                           ;main.c: 136:                 setPoint = 0;
 11332  002C6A  0E00               	movlw	0
 11333  002C6C  6F70               	movwf	_setPoint& (0+255),b
 11334  002C6E  0E00               	movlw	0
 11335  002C70  6F71               	movwf	(_setPoint+1)& (0+255),b
 11336  002C72  0E00               	movlw	0
 11337  002C74  6F72               	movwf	(_setPoint+2)& (0+255),b
 11338  002C76  0E00               	movlw	0
 11339  002C78  6F73               	movwf	(_setPoint+3)& (0+255),b
 11340                           
 11341                           ;main.c: 137:             }
 11342  002C7A  EF69  F017         	goto	l1752
 11343  002C7E                     l9829:
 11344                           
 11345                           ; BSR set to: 1
 11346  002C7E  0E45               	movlw	69
 11347  002C80  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11348  002C82  A4D8               	btfss	status,2,c
 11349  002C84  EF46  F016         	goto	u9301
 11350  002C88  EF48  F016         	goto	u9300
 11351  002C8C                     u9301:
 11352  002C8C  EF54  F016         	goto	l9833
 11353  002C90                     u9300:
 11354  002C90                     
 11355                           ; BSR set to: 1
 11356                           ;main.c: 139:             {;main.c: 140:                 direction = 2;
 11357  002C90  0E02               	movlw	2
 11358  002C92  6F7E               	movwf	_direction& (0+255),b
 11359                           
 11360                           ;main.c: 141:                 setPoint = 0;
 11361  002C94  0E00               	movlw	0
 11362  002C96  6F70               	movwf	_setPoint& (0+255),b
 11363  002C98  0E00               	movlw	0
 11364  002C9A  6F71               	movwf	(_setPoint+1)& (0+255),b
 11365  002C9C  0E00               	movlw	0
 11366  002C9E  6F72               	movwf	(_setPoint+2)& (0+255),b
 11367  002CA0  0E00               	movlw	0
 11368  002CA2  6F73               	movwf	(_setPoint+3)& (0+255),b
 11369                           
 11370                           ;main.c: 142:             }
 11371  002CA4  EF69  F017         	goto	l1752
 11372  002CA8                     l9833:
 11373                           
 11374                           ; BSR set to: 1
 11375  002CA8  0E48               	movlw	72
 11376  002CAA  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11377  002CAC  A4D8               	btfss	status,2,c
 11378  002CAE  EF5B  F016         	goto	u9311
 11379  002CB2  EF5D  F016         	goto	u9310
 11380  002CB6                     u9311:
 11381  002CB6  EF69  F017         	goto	l1752
 11382  002CBA                     u9310:
 11383  002CBA                     
 11384                           ; BSR set to: 1
 11385                           ;main.c: 144:             {;main.c: 145:                 hold_pos = hold_pos ? 0:1;
 11386  002CBA  0100               	movlb	0	; () banked
 11387  002CBC  51FB               	movf	_hold_pos& (0+255),w,b
 11388  002CBE  B4D8               	btfsc	status,2,c
 11389  002CC0  EF64  F016         	goto	u9321
 11390  002CC4  EF67  F016         	goto	u9320
 11391  002CC8                     u9321:
 11392  002CC8  0E01               	movlw	1
 11393  002CCA  EF68  F016         	goto	u9330
 11394  002CCE                     u9320:
 11395  002CCE  0E00               	movlw	0
 11396  002CD0                     u9330:
 11397  002CD0  6FFB               	movwf	_hold_pos& (0+255),b
 11398  002CD2                     
 11399                           ; BSR set to: 0
 11400                           ;main.c: 146:                 if(hold_pos == 1) resetDisplacement();
 11401  002CD2  05FB               	decf	_hold_pos& (0+255),w,b
 11402  002CD4  A4D8               	btfss	status,2,c
 11403  002CD6  EF6F  F016         	goto	u9341
 11404  002CDA  EF71  F016         	goto	u9340
 11405  002CDE                     u9341:
 11406  002CDE  EFB7  F015         	goto	l1725
 11407  002CE2                     u9340:
 11408  002CE2                     
 11409                           ; BSR set to: 0
 11410  002CE2  EC09  F02C         	call	_resetDisplacement	;wreg free
 11411  002CE6  EF69  F017         	goto	l1752
 11412  002CEA                     l9841:
 11413                           
 11414                           ; BSR set to: 1
 11415  002CEA  0E73               	movlw	115
 11416  002CEC  197F               	xorwf	_btRX& (0+255),w,b
 11417  002CEE  A4D8               	btfss	status,2,c
 11418  002CF0  EF7C  F016         	goto	u9351
 11419  002CF4  EF7E  F016         	goto	u9350
 11420  002CF8                     u9351:
 11421  002CF8  EFEB  F016         	goto	l9851
 11422  002CFC                     u9350:
 11423  002CFC                     
 11424                           ; BSR set to: 1
 11425                           ;main.c: 150:         {;main.c: 151:             if(btRX[1] == 'P')
 11426  002CFC  0E50               	movlw	80
 11427  002CFE  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11428  002D00  A4D8               	btfss	status,2,c
 11429  002D02  EF85  F016         	goto	u9361
 11430  002D06  EF87  F016         	goto	u9360
 11431  002D0A                     u9361:
 11432  002D0A  EFB0  F016         	goto	l9847
 11433  002D0E                     u9360:
 11434  002D0E                     
 11435                           ; BSR set to: 1
 11436                           ;main.c: 152:                 setPoint = (btRX[2]-0x30)*10+(btRX[3]-0x30);
 11437  002D0E  0EF0               	movlw	240
 11438  002D10  0100               	movlb	0	; () banked
 11439  002D12  6F60               	movwf	??_controlReceive& (0+255),b
 11440  002D14  0EFD               	movlw	253
 11441  002D16  6F61               	movwf	(??_controlReceive+1)& (0+255),b
 11442  002D18  0101               	movlb	1	; () banked
 11443  002D1A  5181               	movf	(_btRX+2)& (0+255),w,b
 11444  002D1C  0D0A               	mullw	10
 11445  002D1E  CFF3 F062          	movff	prodl,??_controlReceive+2
 11446  002D22  CFF4 F063          	movff	prodh,??_controlReceive+3
 11447  002D26  5182               	movf	(_btRX+3)& (0+255),w,b
 11448  002D28  0100               	movlb	0	; () banked
 11449  002D2A  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 11450  002D2C  0E00               	movlw	0
 11451  002D2E  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 11452  002D30  5160               	movf	??_controlReceive& (0+255),w,b
 11453  002D32  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 11454  002D34  5161               	movf	(??_controlReceive+1)& (0+255),w,b
 11455  002D36  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 11456  002D38  C062  F00A         	movff	??_controlReceive+2,___xxtofl@val
 11457  002D3C  C063  F00B         	movff	??_controlReceive+3,___xxtofl@val+1
 11458  002D40  0E00               	movlw	0
 11459  002D42  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 11460  002D44  0EFF               	movlw	-1
 11461  002D46  6E0C               	movwf	(___xxtofl@val+2)^0,c
 11462  002D48  6E0D               	movwf	(___xxtofl@val+3)^0,c
 11463  002D4A  0E01               	movlw	1
 11464  002D4C  EC18  F025         	call	___xxtofl
 11465  002D50  C00A  F170         	movff	?___xxtofl,_setPoint
 11466  002D54  C00B  F171         	movff	?___xxtofl+1,_setPoint+1
 11467  002D58  C00C  F172         	movff	?___xxtofl+2,_setPoint+2
 11468  002D5C  C00D  F173         	movff	?___xxtofl+3,_setPoint+3
 11469  002D60                     l9847:
 11470                           
 11471                           ;main.c: 153:             if(btRX[1] == 'N')
 11472  002D60  0E4E               	movlw	78
 11473  002D62  0101               	movlb	1	; () banked
 11474  002D64  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11475  002D66  A4D8               	btfss	status,2,c
 11476  002D68  EFB8  F016         	goto	u9371
 11477  002D6C  EFBA  F016         	goto	u9370
 11478  002D70                     u9371:
 11479  002D70  EF69  F017         	goto	l1752
 11480  002D74                     u9370:
 11481  002D74                     
 11482                           ; BSR set to: 1
 11483                           ;main.c: 154:                 setPoint = -(btRX[2]-0x30)*10+(btRX[3]-0x30);
 11484  002D74  0EB0               	movlw	176
 11485  002D76  0100               	movlb	0	; () banked
 11486  002D78  6F60               	movwf	??_controlReceive& (0+255),b
 11487  002D7A  0E01               	movlw	1
 11488  002D7C  6F61               	movwf	(??_controlReceive+1)& (0+255),b
 11489  002D7E  C181  F004         	movff	_btRX+2,___wmul@multiplier
 11490  002D82  6A05               	clrf	(___wmul@multiplier+1)^0,c
 11491  002D84  0EFF               	movlw	255
 11492  002D86  6E07               	movwf	(___wmul@multiplicand+1)^0,c
 11493  002D88  0EF6               	movlw	246
 11494  002D8A  6E06               	movwf	___wmul@multiplicand^0,c
 11495  002D8C  ECBC  F032         	call	___wmul	;wreg free
 11496  002D90  0101               	movlb	1	; () banked
 11497  002D92  5182               	movf	(_btRX+3)& (0+255),w,b
 11498  002D94  0100               	movlb	0	; () banked
 11499  002D96  6F62               	movwf	(??_controlReceive+2)& (0+255),b
 11500  002D98  6B63               	clrf	(??_controlReceive+3)& (0+255),b
 11501  002D9A  5004               	movf	?___wmul^0,w,c
 11502  002D9C  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 11503  002D9E  5005               	movf	(?___wmul+1)^0,w,c
 11504  002DA0  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 11505  002DA2  5160               	movf	??_controlReceive& (0+255),w,b
 11506  002DA4  2762               	addwf	(??_controlReceive+2)& (0+255),f,b
 11507  002DA6  5161               	movf	(??_controlReceive+1)& (0+255),w,b
 11508  002DA8  2363               	addwfc	(??_controlReceive+3)& (0+255),f,b
 11509  002DAA  C062  F00A         	movff	??_controlReceive+2,___xxtofl@val
 11510  002DAE  C063  F00B         	movff	??_controlReceive+3,___xxtofl@val+1
 11511  002DB2  0E00               	movlw	0
 11512  002DB4  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 11513  002DB6  0EFF               	movlw	-1
 11514  002DB8  6E0C               	movwf	(___xxtofl@val+2)^0,c
 11515  002DBA  6E0D               	movwf	(___xxtofl@val+3)^0,c
 11516  002DBC  0E01               	movlw	1
 11517  002DBE  EC18  F025         	call	___xxtofl
 11518  002DC2  C00A  F170         	movff	?___xxtofl,_setPoint
 11519  002DC6  C00B  F171         	movff	?___xxtofl+1,_setPoint+1
 11520  002DCA  C00C  F172         	movff	?___xxtofl+2,_setPoint+2
 11521  002DCE  C00D  F173         	movff	?___xxtofl+3,_setPoint+3
 11522  002DD2  EF69  F017         	goto	l1752
 11523  002DD6                     l9851:
 11524                           
 11525                           ; BSR set to: 1
 11526  002DD6  0E69               	movlw	105
 11527  002DD8  197F               	xorwf	_btRX& (0+255),w,b
 11528  002DDA  A4D8               	btfss	status,2,c
 11529  002DDC  EFF2  F016         	goto	u9381
 11530  002DE0  EFF4  F016         	goto	u9380
 11531  002DE4                     u9381:
 11532  002DE4  EF0B  F017         	goto	l9857
 11533  002DE8                     u9380:
 11534  002DE8                     
 11535                           ; BSR set to: 1
 11536  002DE8  0E4D               	movlw	77
 11537  002DEA  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11538  002DEC  A4D8               	btfss	status,2,c
 11539  002DEE  EFFB  F016         	goto	u9391
 11540  002DF2  EFFD  F016         	goto	u9390
 11541  002DF6                     u9391:
 11542  002DF6  EF0B  F017         	goto	l9857
 11543  002DFA                     u9390:
 11544  002DFA                     
 11545                           ; BSR set to: 1
 11546                           ;main.c: 157:             mInv = !mInv;
 11547  002DFA  0100               	movlb	0	; () banked
 11548  002DFC  51FC               	movf	_mInv& (0+255),w,b
 11549  002DFE  B4D8               	btfsc	status,2,c
 11550  002E00  EF04  F017         	goto	u9401
 11551  002E04  EF07  F017         	goto	u9400
 11552  002E08                     u9401:
 11553  002E08  0E01               	movlw	1
 11554  002E0A  EF08  F017         	goto	u9410
 11555  002E0E                     u9400:
 11556  002E0E  0E00               	movlw	0
 11557  002E10                     u9410:
 11558  002E10  6FFC               	movwf	_mInv& (0+255),b
 11559  002E12  EF69  F017         	goto	l1752
 11560  002E16                     l9857:
 11561                           
 11562                           ; BSR set to: 1
 11563  002E16  0E70               	movlw	112
 11564  002E18  197F               	xorwf	_btRX& (0+255),w,b
 11565  002E1A  A4D8               	btfss	status,2,c
 11566  002E1C  EF12  F017         	goto	u9421
 11567  002E20  EF14  F017         	goto	u9420
 11568  002E24                     u9421:
 11569  002E24  EF3B  F017         	goto	l9863
 11570  002E28                     u9420:
 11571  002E28                     
 11572                           ; BSR set to: 1
 11573  002E28  0E4D               	movlw	77
 11574  002E2A  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11575  002E2C  A4D8               	btfss	status,2,c
 11576  002E2E  EF1B  F017         	goto	u9431
 11577  002E32  EF1D  F017         	goto	u9430
 11578  002E36                     u9431:
 11579  002E36  EF3B  F017         	goto	l9863
 11580  002E3A                     u9430:
 11581  002E3A                     
 11582                           ; BSR set to: 1
 11583                           ;main.c: 159:             mOutLimite = (btRX[2]-0x30)*100+(btRX[3]-0x30)*10+(btRX[4]-0x3
      +                          0);
 11584  002E3A  5181               	movf	(_btRX+2)& (0+255),w,b
 11585  002E3C  0D64               	mullw	100
 11586  002E3E  CFF3 F060          	movff	prodl,??_controlReceive
 11587  002E42  CFF4 F061          	movff	prodh,??_controlReceive+1
 11588  002E46  5182               	movf	(_btRX+3)& (0+255),w,b
 11589  002E48  0D0A               	mullw	10
 11590  002E4A  50F3               	movf	243,w,c
 11591  002E4C  0100               	movlb	0	; () banked
 11592  002E4E  2760               	addwf	??_controlReceive& (0+255),f,b
 11593  002E50  50F4               	movf	244,w,c
 11594  002E52  2361               	addwfc	(??_controlReceive+1)& (0+255),f,b
 11595  002E54  0101               	movlb	1	; () banked
 11596  002E56  5183               	movf	(_btRX+4)& (0+255),w,b
 11597  002E58  0100               	movlb	0	; () banked
 11598  002E5A  2760               	addwf	??_controlReceive& (0+255),f,b
 11599  002E5C  0E00               	movlw	0
 11600  002E5E  2361               	addwfc	(??_controlReceive+1)& (0+255),f,b
 11601  002E60  0E30               	movlw	48
 11602  002E62  2560               	addwf	??_controlReceive& (0+255),w,b
 11603  002E64  0101               	movlb	1	; () banked
 11604  002E66  6FFC               	movwf	_mOutLimite& (0+255),b
 11605  002E68  0EEB               	movlw	235
 11606  002E6A  0100               	movlb	0	; () banked
 11607  002E6C  2161               	addwfc	(??_controlReceive+1)& (0+255),w,b
 11608  002E6E  0101               	movlb	1	; () banked
 11609  002E70  6FFD               	movwf	(_mOutLimite+1)& (0+255),b
 11610  002E72  EF69  F017         	goto	l1752
 11611  002E76                     l9863:
 11612                           
 11613                           ; BSR set to: 1
 11614  002E76  0E6F               	movlw	111
 11615  002E78  197F               	xorwf	_btRX& (0+255),w,b
 11616  002E7A  A4D8               	btfss	status,2,c
 11617  002E7C  EF42  F017         	goto	u9441
 11618  002E80  EF44  F017         	goto	u9440
 11619  002E84                     u9441:
 11620  002E84  EF69  F017         	goto	l1752
 11621  002E88                     u9440:
 11622  002E88                     
 11623                           ; BSR set to: 1
 11624  002E88  0E4D               	movlw	77
 11625  002E8A  1980               	xorwf	(_btRX+1)& (0+255),w,b
 11626  002E8C  A4D8               	btfss	status,2,c
 11627  002E8E  EF4B  F017         	goto	u9451
 11628  002E92  EF4D  F017         	goto	u9450
 11629  002E96                     u9451:
 11630  002E96  EF69  F017         	goto	l1752
 11631  002E9A                     u9450:
 11632  002E9A                     
 11633                           ; BSR set to: 1
 11634                           ;main.c: 161:             mOffset = (btRX[2]-0x30)*100+(btRX[3]-0x30)*10+(btRX[4]-0x30);
 11635  002E9A  5181               	movf	(_btRX+2)& (0+255),w,b
 11636  002E9C  0D64               	mullw	100
 11637  002E9E  CFF3 F060          	movff	prodl,??_controlReceive
 11638  002EA2  CFF4 F061          	movff	prodh,??_controlReceive+1
 11639  002EA6  5182               	movf	(_btRX+3)& (0+255),w,b
 11640  002EA8  0D0A               	mullw	10
 11641  002EAA  50F3               	movf	243,w,c
 11642  002EAC  0100               	movlb	0	; () banked
 11643  002EAE  2760               	addwf	??_controlReceive& (0+255),f,b
 11644  002EB0  50F4               	movf	244,w,c
 11645  002EB2  2361               	addwfc	(??_controlReceive+1)& (0+255),f,b
 11646  002EB4  0101               	movlb	1	; () banked
 11647  002EB6  5183               	movf	(_btRX+4)& (0+255),w,b
 11648  002EB8  0100               	movlb	0	; () banked
 11649  002EBA  2760               	addwf	??_controlReceive& (0+255),f,b
 11650  002EBC  0E00               	movlw	0
 11651  002EBE  2361               	addwfc	(??_controlReceive+1)& (0+255),f,b
 11652  002EC0  0E30               	movlw	48
 11653  002EC2  2560               	addwf	??_controlReceive& (0+255),w,b
 11654  002EC4  0101               	movlb	1	; () banked
 11655  002EC6  6F7A               	movwf	_mOffset& (0+255),b
 11656  002EC8  0EEB               	movlw	235
 11657  002ECA  0100               	movlb	0	; () banked
 11658  002ECC  2161               	addwfc	(??_controlReceive+1)& (0+255),w,b
 11659  002ECE  0101               	movlb	1	; () banked
 11660  002ED0  6F7B               	movwf	(_mOffset+1)& (0+255),b
 11661  002ED2                     l1752:
 11662  002ED2  0012               	return		;funcret
 11663  002ED4                     __end_of_controlReceive:
 11664                           	callstack 0
 11665                           
 11666 ;; *************** function _resetDisplacement *****************
 11667 ;; Defined at:
 11668 ;;		line 85 in file "main.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;		None
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;		None
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      void 
 11675 ;; Registers used:
 11676 ;;		wreg, status,2
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11682 ;;      Params:         0       0       0       0       0       0       0       0       0
 11683 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11684 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11685 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11686 ;;Total ram usage:        0 bytes
 11687 ;; Hardware stack levels used:    1
 11688 ;; Hardware stack levels required when called:    2
 11689 ;; This function calls:
 11690 ;;		Nothing
 11691 ;; This function is called by:
 11692 ;;		_controlReceive
 11693 ;;		_main
 11694 ;; This function uses a non-reentrant model
 11695 ;;
 11696                           
 11697                           	psect	text21
 11698  005812                     __ptext21:
 11699                           	callstack 0
 11700  005812                     _resetDisplacement:
 11701                           	callstack 28
 11702  005812                     
 11703                           ;main.c: 87:     calcAA.x = 0;
 11704  005812  0E00               	movlw	0
 11705  005814  0101               	movlb	1	; () banked
 11706  005816  6F00               	movwf	_calcAA& (0+255),b
 11707  005818  0E00               	movlw	0
 11708  00581A  6F01               	movwf	(_calcAA+1)& (0+255),b
 11709  00581C  0E00               	movlw	0
 11710  00581E  6F02               	movwf	(_calcAA+2)& (0+255),b
 11711  005820  0E00               	movlw	0
 11712  005822  6F03               	movwf	(_calcAA+3)& (0+255),b
 11713                           
 11714                           ;main.c: 88:     calcAA.y = 0;
 11715  005824  0E00               	movlw	0
 11716  005826  6F04               	movwf	(_calcAA+4)& (0+255),b
 11717  005828  0E00               	movlw	0
 11718  00582A  6F05               	movwf	(_calcAA+5)& (0+255),b
 11719  00582C  0E00               	movlw	0
 11720  00582E  6F06               	movwf	(_calcAA+6)& (0+255),b
 11721  005830  0E00               	movlw	0
 11722  005832  6F07               	movwf	(_calcAA+7)& (0+255),b
 11723                           
 11724                           ;main.c: 89:     lastAA.x = 0;
 11725  005834  0E00               	movlw	0
 11726  005836  6F0C               	movwf	_lastAA& (0+255),b
 11727  005838  0E00               	movlw	0
 11728  00583A  6F0D               	movwf	(_lastAA+1)& (0+255),b
 11729  00583C  0E00               	movlw	0
 11730  00583E  6F0E               	movwf	(_lastAA+2)& (0+255),b
 11731  005840  0E00               	movlw	0
 11732  005842  6F0F               	movwf	(_lastAA+3)& (0+255),b
 11733                           
 11734                           ;main.c: 90:     lastAA.y = 0;
 11735  005844  0E00               	movlw	0
 11736  005846  6F10               	movwf	(_lastAA+4)& (0+255),b
 11737  005848  0E00               	movlw	0
 11738  00584A  6F11               	movwf	(_lastAA+5)& (0+255),b
 11739  00584C  0E00               	movlw	0
 11740  00584E  6F12               	movwf	(_lastAA+6)& (0+255),b
 11741  005850  0E00               	movlw	0
 11742  005852  6F13               	movwf	(_lastAA+7)& (0+255),b
 11743                           
 11744                           ;main.c: 91:     speed.x = 0;
 11745  005854  0E00               	movlw	0
 11746  005856  6F3C               	movwf	_speed& (0+255),b
 11747  005858  0E00               	movlw	0
 11748  00585A  6F3D               	movwf	(_speed+1)& (0+255),b
 11749  00585C  0E00               	movlw	0
 11750  00585E  6F3E               	movwf	(_speed+2)& (0+255),b
 11751  005860  0E00               	movlw	0
 11752  005862  6F3F               	movwf	(_speed+3)& (0+255),b
 11753                           
 11754                           ;main.c: 92:     speed.y = 0;
 11755  005864  0E00               	movlw	0
 11756  005866  6F40               	movwf	(_speed+4)& (0+255),b
 11757  005868  0E00               	movlw	0
 11758  00586A  6F41               	movwf	(_speed+5)& (0+255),b
 11759  00586C  0E00               	movlw	0
 11760  00586E  6F42               	movwf	(_speed+6)& (0+255),b
 11761  005870  0E00               	movlw	0
 11762  005872  6F43               	movwf	(_speed+7)& (0+255),b
 11763                           
 11764                           ;main.c: 93:     lastSpeed.x = 0;
 11765  005874  0E00               	movlw	0
 11766  005876  6F30               	movwf	_lastSpeed& (0+255),b
 11767  005878  0E00               	movlw	0
 11768  00587A  6F31               	movwf	(_lastSpeed+1)& (0+255),b
 11769  00587C  0E00               	movlw	0
 11770  00587E  6F32               	movwf	(_lastSpeed+2)& (0+255),b
 11771  005880  0E00               	movlw	0
 11772  005882  6F33               	movwf	(_lastSpeed+3)& (0+255),b
 11773                           
 11774                           ;main.c: 94:     lastSpeed.y = 0;
 11775  005884  0E00               	movlw	0
 11776  005886  6F34               	movwf	(_lastSpeed+4)& (0+255),b
 11777  005888  0E00               	movlw	0
 11778  00588A  6F35               	movwf	(_lastSpeed+5)& (0+255),b
 11779  00588C  0E00               	movlw	0
 11780  00588E  6F36               	movwf	(_lastSpeed+6)& (0+255),b
 11781  005890  0E00               	movlw	0
 11782  005892  6F37               	movwf	(_lastSpeed+7)& (0+255),b
 11783                           
 11784                           ;main.c: 95:     displacement.y = 0;
 11785  005894  0E00               	movlw	0
 11786  005896  6F28               	movwf	(_displacement+4)& (0+255),b
 11787  005898  0E00               	movlw	0
 11788  00589A  6F29               	movwf	(_displacement+5)& (0+255),b
 11789  00589C  0E00               	movlw	0
 11790  00589E  6F2A               	movwf	(_displacement+6)& (0+255),b
 11791  0058A0  0E00               	movlw	0
 11792  0058A2  6F2B               	movwf	(_displacement+7)& (0+255),b
 11793                           
 11794                           ;main.c: 96:     displacement.x = 0;
 11795  0058A4  0E00               	movlw	0
 11796  0058A6  6F24               	movwf	_displacement& (0+255),b
 11797  0058A8  0E00               	movlw	0
 11798  0058AA  6F25               	movwf	(_displacement+1)& (0+255),b
 11799  0058AC  0E00               	movlw	0
 11800  0058AE  6F26               	movwf	(_displacement+2)& (0+255),b
 11801  0058B0  0E00               	movlw	0
 11802  0058B2  6F27               	movwf	(_displacement+3)& (0+255),b
 11803                           
 11804                           ;main.c: 97:     lastDisplacement.x = 0;
 11805  0058B4  0E00               	movlw	0
 11806  0058B6  6F18               	movwf	_lastDisplacement& (0+255),b
 11807  0058B8  0E00               	movlw	0
 11808  0058BA  6F19               	movwf	(_lastDisplacement+1)& (0+255),b
 11809  0058BC  0E00               	movlw	0
 11810  0058BE  6F1A               	movwf	(_lastDisplacement+2)& (0+255),b
 11811  0058C0  0E00               	movlw	0
 11812  0058C2  6F1B               	movwf	(_lastDisplacement+3)& (0+255),b
 11813                           
 11814                           ;main.c: 98:     lastDisplacement.y = 0;
 11815  0058C4  0E00               	movlw	0
 11816  0058C6  6F1C               	movwf	(_lastDisplacement+4)& (0+255),b
 11817  0058C8  0E00               	movlw	0
 11818  0058CA  6F1D               	movwf	(_lastDisplacement+5)& (0+255),b
 11819  0058CC  0E00               	movlw	0
 11820  0058CE  6F1E               	movwf	(_lastDisplacement+6)& (0+255),b
 11821  0058D0  0E00               	movlw	0
 11822  0058D2  6F1F               	movwf	(_lastDisplacement+7)& (0+255),b
 11823  0058D4                     
 11824                           ; BSR set to: 1
 11825  0058D4  0012               	return		;funcret
 11826  0058D6                     __end_of_resetDisplacement:
 11827                           	callstack 0
 11828                           
 11829 ;; *************** function ___wmul *****************
 11830 ;; Defined at:
 11831 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
 11832 ;; Parameters:    Size  Location     Type
 11833 ;;  multiplier      2    3[COMRAM] unsigned int 
 11834 ;;  multiplicand    2    5[COMRAM] unsigned int 
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;  product         2    7[COMRAM] unsigned int 
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  2    3[COMRAM] unsigned int 
 11839 ;; Registers used:
 11840 ;;		wreg, status,2, status,0, prodl, prodh
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11846 ;;      Params:         4       0       0       0       0       0       0       0       0
 11847 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11849 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11850 ;;Total ram usage:        6 bytes
 11851 ;; Hardware stack levels used:    1
 11852 ;; Hardware stack levels required when called:    2
 11853 ;; This function calls:
 11854 ;;		Nothing
 11855 ;; This function is called by:
 11856 ;;		_controlReceive
 11857 ;;		_main
 11858 ;;		_I2Cdev_readWords
 11859 ;;		_MPU6050_CalibrateGyro
 11860 ;;		_MPU6050_CalibrateAccel
 11861 ;;		_getMagnitudeVI
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           	psect	text22
 11866  006578                     __ptext22:
 11867                           	callstack 0
 11868  006578                     ___wmul:
 11869                           	callstack 27
 11870  006578  5004               	movf	___wmul@multiplier^0,w,c
 11871  00657A  0206               	mulwf	___wmul@multiplicand^0,c
 11872  00657C  CFF3 F008          	movff	prodl,___wmul@product
 11873  006580  CFF4 F009          	movff	prodh,___wmul@product+1
 11874  006584  5004               	movf	___wmul@multiplier^0,w,c
 11875  006586  0207               	mulwf	(___wmul@multiplicand+1)^0,c
 11876  006588  50F3               	movf	243,w,c
 11877  00658A  2609               	addwf	(___wmul@product+1)^0,f,c
 11878  00658C  5005               	movf	(___wmul@multiplier+1)^0,w,c
 11879  00658E  0206               	mulwf	___wmul@multiplicand^0,c
 11880  006590  50F3               	movf	243,w,c
 11881  006592  2609               	addwf	(___wmul@product+1)^0,f,c
 11882  006594  C008  F004         	movff	___wmul@product,?___wmul
 11883  006598  C009  F005         	movff	___wmul@product+1,?___wmul+1
 11884  00659C  0012               	return		;funcret
 11885  00659E                     __end_of___wmul:
 11886                           	callstack 0
 11887                           
 11888 ;; *************** function _USART_UART_readBuffer *****************
 11889 ;; Defined at:
 11890 ;;		line 76 in file "./USART.h"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;  buffer          2    3[COMRAM] PTR unsigned char 
 11893 ;;		 -> btRX(24), 
 11894 ;;  size            1    5[COMRAM] unsigned char 
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;  i               1    7[COMRAM] unsigned char 
 11897 ;; Return value:  Size  Location     Type
 11898 ;;                  1    wreg      unsigned char 
 11899 ;; Registers used:
 11900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11906 ;;      Params:         3       0       0       0       0       0       0       0       0
 11907 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11908 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11909 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11910 ;;Total ram usage:        5 bytes
 11911 ;; Hardware stack levels used:    1
 11912 ;; Hardware stack levels required when called:    2
 11913 ;; This function calls:
 11914 ;;		Nothing
 11915 ;; This function is called by:
 11916 ;;		_controlReceive
 11917 ;;		_USART_UART_readString
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           
 11921                           	psect	text23
 11922  005F78                     __ptext23:
 11923                           	callstack 0
 11924  005F78                     _USART_UART_readBuffer:
 11925                           	callstack 27
 11926  005F78                     
 11927                           ;./USART.h: 76: const uint8_t USART_UART_readBuffer(uint8_t* buffer, uint8_t size);./USA
      +                          RT.h: 77: {;./USART.h: 78:     if(!Ubuff.avaliable) return 0;
 11928  005F78  0102               	movlb	2	; () banked
 11929  005F7A  5119               	movf	(_Ubuff+25)& (0+255),w,b
 11930  005F7C  A4D8               	btfss	status,2,c
 11931  005F7E  EFC3  F02F         	goto	u8611
 11932  005F82  EFC5  F02F         	goto	u8610
 11933  005F86                     u8611:
 11934  005F86  EFC8  F02F         	goto	l9349
 11935  005F8A                     u8610:
 11936  005F8A                     
 11937                           ; BSR set to: 2
 11938  005F8A  0E00               	movlw	0
 11939  005F8C  EFF7  F02F         	goto	l1614
 11940  005F90                     l9349:
 11941                           
 11942                           ; BSR set to: 2
 11943                           ;./USART.h: 79:     uint8_t i;;./USART.h: 80:     for(i = 0;Ubuff.buff[i] != 0x0A && i <
      +                           size; i++) buffer[i] = Ubuff.buff[i];
 11944  005F90  0E00               	movlw	0
 11945  005F92  6E08               	movwf	USART_UART_readBuffer@i^0,c
 11946  005F94  EFDB  F02F         	goto	l9355
 11947  005F98                     l9351:
 11948  005F98  0E00               	movlw	low _Ubuff
 11949  005F9A  2408               	addwf	USART_UART_readBuffer@i^0,w,c
 11950  005F9C  6ED9               	movwf	fsr2l,c
 11951  005F9E  6ADA               	clrf	fsr2h,c
 11952  005FA0  0E02               	movlw	high _Ubuff
 11953  005FA2  22DA               	addwfc	fsr2h,f,c
 11954  005FA4  5008               	movf	USART_UART_readBuffer@i^0,w,c
 11955  005FA6  2404               	addwf	USART_UART_readBuffer@buffer^0,w,c
 11956  005FA8  6EE1               	movwf	fsr1l,c
 11957  005FAA  0E00               	movlw	0
 11958  005FAC  2005               	addwfc	(USART_UART_readBuffer@buffer+1)^0,w,c
 11959  005FAE  6EE2               	movwf	fsr1h,c
 11960  005FB0  CFDF FFE7          	movff	indf2,indf1
 11961  005FB4  2A08               	incf	USART_UART_readBuffer@i^0,f,c
 11962  005FB6                     l9355:
 11963  005FB6  0E00               	movlw	low _Ubuff
 11964  005FB8  2408               	addwf	USART_UART_readBuffer@i^0,w,c
 11965  005FBA  6ED9               	movwf	fsr2l,c
 11966  005FBC  6ADA               	clrf	fsr2h,c
 11967  005FBE  0E02               	movlw	high _Ubuff
 11968  005FC0  22DA               	addwfc	fsr2h,f,c
 11969  005FC2  0E0A               	movlw	10
 11970  005FC4  18DE               	xorwf	postinc2,w,c
 11971  005FC6  B4D8               	btfsc	status,2,c
 11972  005FC8  EFE8  F02F         	goto	u8621
 11973  005FCC  EFEA  F02F         	goto	u8620
 11974  005FD0                     u8621:
 11975  005FD0  EFF3  F02F         	goto	l9359
 11976  005FD4                     u8620:
 11977  005FD4  5006               	movf	USART_UART_readBuffer@size^0,w,c
 11978  005FD6  5C08               	subwf	USART_UART_readBuffer@i^0,w,c
 11979  005FD8  A0D8               	btfss	status,0,c
 11980  005FDA  EFF1  F02F         	goto	u8631
 11981  005FDE  EFF3  F02F         	goto	u8630
 11982  005FE2                     u8631:
 11983  005FE2  EFCC  F02F         	goto	l9351
 11984  005FE6                     u8630:
 11985  005FE6                     l9359:
 11986                           
 11987                           ;./USART.h: 81:     Ubuff.avaliable = 0;
 11988  005FE6  0E00               	movlw	0
 11989  005FE8  0102               	movlb	2	; () banked
 11990  005FEA  6F19               	movwf	(_Ubuff+25)& (0+255),b
 11991                           
 11992                           ;./USART.h: 82:     return i;
 11993  005FEC  5008               	movf	USART_UART_readBuffer@i^0,w,c
 11994  005FEE                     l1614:
 11995                           
 11996                           ; BSR set to: 2
 11997  005FEE  0012               	return		;funcret
 11998  005FF0                     __end_of_USART_UART_readBuffer:
 11999                           	callstack 0
 12000                           
 12001 ;; *************** function _USART_UART_transmitString *****************
 12002 ;; Defined at:
 12003 ;;		line 47 in file "./USART.h"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;  data            2    4[COMRAM] PTR unsigned char 
 12006 ;;		 -> text(64), STR_8(17), STR_7(23), STR_6(27), 
 12007 ;;		 -> STR_5(21), STR_4(27), STR_3(31), STR_2(31), 
 12008 ;;		 -> STR_1(29), 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;		None
 12011 ;; Return value:  Size  Location     Type
 12012 ;;                  1    wreg      void 
 12013 ;; Registers used:
 12014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12020 ;;      Params:         2       0       0       0       0       0       0       0       0
 12021 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12022 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12023 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12024 ;;Total ram usage:        2 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:    3
 12027 ;; This function calls:
 12028 ;;		_USART_UART_transmitByte
 12029 ;; This function is called by:
 12030 ;;		_main
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text24
 12035  00618A                     __ptext24:
 12036                           	callstack 0
 12037  00618A                     _USART_UART_transmitString:
 12038                           	callstack 27
 12039  00618A                     
 12040                           ;./USART.h: 47: void USART_UART_transmitString(char* data);./USART.h: 48: {;./USART.h: 4
      +                          9:     while(*data) USART_UART_transmitByte(*data++);
 12041  00618A  EFDB  F030         	goto	l9769
 12042  00618E                     l9765:
 12043  00618E  C005  FFF6         	movff	USART_UART_transmitString@data,tblptrl
 12044  006192  C006  FFF7         	movff	USART_UART_transmitString@data+1,tblptrh
 12045  006196  6AF8               	clrf	tblptru,c
 12046  006198  0E07               	movlw	(high __ramtop+-1)
 12047  00619A  64F7               	cpfsgt	tblptrh,c
 12048  00619C  D003               	bra	u9127
 12049  00619E  0008               	tblrd		*
 12050  0061A0  50F5               	movf	tablat,w,c
 12051  0061A2  D005               	bra	u9120
 12052  0061A4                     u9127:
 12053  0061A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 12054  0061A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 12055  0061AC  50EF               	movf	indf0,w,c
 12056  0061AE                     u9120:
 12057  0061AE  ECD0  F033         	call	_USART_UART_transmitByte
 12058  0061B2  4A05               	infsnz	USART_UART_transmitString@data^0,f,c
 12059  0061B4  2A06               	incf	(USART_UART_transmitString@data+1)^0,f,c
 12060  0061B6                     l9769:
 12061  0061B6  C005  FFF6         	movff	USART_UART_transmitString@data,tblptrl
 12062  0061BA  C006  FFF7         	movff	USART_UART_transmitString@data+1,tblptrh
 12063  0061BE  6AF8               	clrf	tblptru,c
 12064  0061C0  0E07               	movlw	(high __ramtop+-1)
 12065  0061C2  64F7               	cpfsgt	tblptrh,c
 12066  0061C4  D003               	bra	u9137
 12067  0061C6  0008               	tblrd		*
 12068  0061C8  50F5               	movf	tablat,w,c
 12069  0061CA  D005               	bra	u9130
 12070  0061CC                     u9137:
 12071  0061CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 12072  0061D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 12073  0061D4  50EF               	movf	indf0,w,c
 12074  0061D6                     u9130:
 12075  0061D6  0900               	iorlw	0
 12076  0061D8  A4D8               	btfss	status,2,c
 12077  0061DA  EFF1  F030         	goto	u9141
 12078  0061DE  EFF3  F030         	goto	u9140
 12079  0061E2                     u9141:
 12080  0061E2  EFC7  F030         	goto	l9765
 12081  0061E6                     u9140:
 12082  0061E6  0012               	return		;funcret
 12083  0061E8                     __end_of_USART_UART_transmitString:
 12084                           	callstack 0
 12085                           
 12086 ;; *************** function _USART_UART_transmitByte *****************
 12087 ;; Defined at:
 12088 ;;		line 40 in file "./USART.h"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;  data            1    wreg     const unsigned char 
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;  data            1    3[COMRAM] const unsigned char 
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      void 
 12095 ;; Registers used:
 12096 ;;		wreg
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12102 ;;      Params:         0       0       0       0       0       0       0       0       0
 12103 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12104 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12105 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12106 ;;Total ram usage:        1 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:    2
 12109 ;; This function calls:
 12110 ;;		Nothing
 12111 ;; This function is called by:
 12112 ;;		_USART_UART_transmitString
 12113 ;;		_USART_UART_transmitBytes
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           	psect	text25
 12118  0067A0                     __ptext25:
 12119                           	callstack 0
 12120  0067A0                     _USART_UART_transmitByte:
 12121                           	callstack 27
 12122                           
 12123                           ;incstack = 0
 12124                           ;USART_UART_transmitByte@data stored from wreg
 12125  0067A0  6E04               	movwf	USART_UART_transmitByte@data^0,c
 12126  0067A2                     
 12127                           ;./USART.h: 40: void USART_UART_transmitByte(const char data);./USART.h: 41: {;./USART.h
      +                          : 42:     TXEN = 1;
 12128  0067A2  8AAC               	bsf	4012,5,c	;volatile
 12129  0067A4                     l1587:
 12130  0067A4  A89E               	btfss	3998,4,c	;volatile
 12131  0067A6  EFD7  F033         	goto	u8601
 12132  0067AA  EFD9  F033         	goto	u8600
 12133  0067AE                     u8601:
 12134  0067AE  EFD2  F033         	goto	l1587
 12135  0067B2                     u8600:
 12136  0067B2                     
 12137                           ;./USART.h: 44:     TXREG = data;
 12138  0067B2  C004  FFAD         	movff	USART_UART_transmitByte@data,4013	;volatile
 12139  0067B6  0012               	return		;funcret
 12140  0067B8                     __end_of_USART_UART_transmitByte:
 12141                           	callstack 0
 12142                           
 12143 ;; *************** function _USART_UART_init *****************
 12144 ;; Defined at:
 12145 ;;		line 29 in file "./USART.h"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;  rate            4   20[COMRAM] const unsigned long 
 12148 ;;  fastMode        1   24[COMRAM] unsigned char 
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;		None
 12151 ;; Return value:  Size  Location     Type
 12152 ;;                  1    wreg      void 
 12153 ;; Registers used:
 12154 ;;		wreg, status,2, status,0, cstack
 12155 ;; Tracked objects:
 12156 ;;		On entry : 0/0
 12157 ;;		On exit  : 0/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12160 ;;      Params:         5       0       0       0       0       0       0       0       0
 12161 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12162 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12163 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12164 ;;Total ram usage:        5 bytes
 12165 ;; Hardware stack levels used:    1
 12166 ;; Hardware stack levels required when called:    4
 12167 ;; This function calls:
 12168 ;;		_USART_setBaudRate
 12169 ;; This function is called by:
 12170 ;;		_main
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           	psect	text26
 12175  006526                     __ptext26:
 12176                           	callstack 0
 12177  006526                     _USART_UART_init:
 12178                           	callstack 26
 12179  006526                     
 12180                           ;./USART.h: 29: void USART_UART_init(const uint32_t rate, uint8_t fastMode);./USART.h: 3
      +                          0: {;./USART.h: 31:     TRISCbits.RC7 = 1;
 12181  006526  8E94               	bsf	148,7,c	;volatile
 12182                           
 12183                           ;./USART.h: 32:     TRISCbits.RC6 = 1;
 12184  006528  8C94               	bsf	148,6,c	;volatile
 12185                           
 12186                           ;./USART.h: 33:     TXSTAbits.BRGH = fastMode;
 12187  00652A  B019               	btfsc	USART_UART_init@fastMode^0,0,c
 12188  00652C  D002               	bra	u9115
 12189  00652E  94AC               	bcf	172,2,c	;volatile
 12190  006530  D001               	bra	u9116
 12191  006532                     u9115:
 12192  006532  84AC               	bsf	172,2,c	;volatile
 12193  006534                     u9116:
 12194  006534                     
 12195                           ;./USART.h: 34:     USART_setBaudRate(rate);
 12196  006534  C015  F011         	movff	USART_UART_init@rate,USART_setBaudRate@rate
 12197  006538  C016  F012         	movff	USART_UART_init@rate+1,USART_setBaudRate@rate+1
 12198  00653C  C017  F013         	movff	USART_UART_init@rate+2,USART_setBaudRate@rate+2
 12199  006540  C018  F014         	movff	USART_UART_init@rate+3,USART_setBaudRate@rate+3
 12200  006544  EC32  F030         	call	_USART_setBaudRate	;wreg free
 12201  006548                     
 12202                           ;./USART.h: 35:     TXSTAbits.SYNC = 0;
 12203  006548  98AC               	bcf	172,4,c	;volatile
 12204  00654A                     
 12205                           ;./USART.h: 36:     RCSTAbits.SPEN = 1;
 12206  00654A  8EAB               	bsf	171,7,c	;volatile
 12207  00654C                     
 12208                           ;./USART.h: 37:     CREN = 1;
 12209  00654C  88AB               	bsf	4011,4,c	;volatile
 12210  00654E  0012               	return		;funcret
 12211  006550                     __end_of_USART_UART_init:
 12212                           	callstack 0
 12213                           
 12214 ;; *************** function _USART_setBaudRate *****************
 12215 ;; Defined at:
 12216 ;;		line 21 in file "./USART.h"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;  rate            4   16[COMRAM] const unsigned long 
 12219 ;; Auto vars:     Size  Location     Type
 12220 ;;		None
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1    wreg      void 
 12223 ;; Registers used:
 12224 ;;		wreg, status,2, status,0, cstack
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/0
 12227 ;;		On exit  : 0/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12230 ;;      Params:         4       0       0       0       0       0       0       0       0
 12231 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12233 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12234 ;;Total ram usage:        4 bytes
 12235 ;; Hardware stack levels used:    1
 12236 ;; Hardware stack levels required when called:    3
 12237 ;; This function calls:
 12238 ;;		___lldiv
 12239 ;; This function is called by:
 12240 ;;		_USART_UART_init
 12241 ;; This function uses a non-reentrant model
 12242 ;;
 12243                           
 12244                           	psect	text27
 12245  006064                     __ptext27:
 12246                           	callstack 0
 12247  006064                     _USART_setBaudRate:
 12248                           	callstack 26
 12249  006064                     
 12250                           ;./USART.h: 21: __attribute__((inline)) void USART_setBaudRate(const uint32_t rate);./US
      +                          ART.h: 22: {;./USART.h: 23:     if(TXSTAbits.BRGH)
 12251  006064  A4AC               	btfss	172,2,c	;volatile
 12252  006066  EF37  F030         	goto	u8591
 12253  00606A  EF39  F030         	goto	u8590
 12254  00606E                     u8591:
 12255  00606E  EF4F  F030         	goto	l9337
 12256  006072                     u8590:
 12257  006072  0EC0               	movlw	192
 12258  006074  6E04               	movwf	___lldiv@dividend^0,c
 12259  006076  0EC6               	movlw	198
 12260  006078  6E05               	movwf	(___lldiv@dividend+1)^0,c
 12261  00607A  0E2D               	movlw	45
 12262  00607C  6E06               	movwf	(___lldiv@dividend+2)^0,c
 12263  00607E  0E00               	movlw	0
 12264  006080  6E07               	movwf	(___lldiv@dividend+3)^0,c
 12265  006082  C011  F008         	movff	USART_setBaudRate@rate,___lldiv@divisor
 12266  006086  C012  F009         	movff	USART_setBaudRate@rate+1,___lldiv@divisor+1
 12267  00608A  C013  F00A         	movff	USART_setBaudRate@rate+2,___lldiv@divisor+2
 12268  00608E  C014  F00B         	movff	USART_setBaudRate@rate+3,___lldiv@divisor+3
 12269  006092  EC79  F02D         	call	___lldiv	;wreg free
 12270  006096  0404               	decf	?___lldiv^0,w,c
 12271  006098  6EAF               	movwf	175,c	;volatile
 12272  00609A  EF63  F030         	goto	l1581
 12273  00609E                     l9337:
 12274  00609E  0EB0               	movlw	176
 12275  0060A0  6E04               	movwf	___lldiv@dividend^0,c
 12276  0060A2  0E71               	movlw	113
 12277  0060A4  6E05               	movwf	(___lldiv@dividend+1)^0,c
 12278  0060A6  0E0B               	movlw	11
 12279  0060A8  6E06               	movwf	(___lldiv@dividend+2)^0,c
 12280  0060AA  0E00               	movlw	0
 12281  0060AC  6E07               	movwf	(___lldiv@dividend+3)^0,c
 12282  0060AE  C011  F008         	movff	USART_setBaudRate@rate,___lldiv@divisor
 12283  0060B2  C012  F009         	movff	USART_setBaudRate@rate+1,___lldiv@divisor+1
 12284  0060B6  C013  F00A         	movff	USART_setBaudRate@rate+2,___lldiv@divisor+2
 12285  0060BA  C014  F00B         	movff	USART_setBaudRate@rate+3,___lldiv@divisor+3
 12286  0060BE  EC79  F02D         	call	___lldiv	;wreg free
 12287  0060C2  0404               	decf	?___lldiv^0,w,c
 12288  0060C4  6EAF               	movwf	175,c	;volatile
 12289  0060C6                     l1581:
 12290  0060C6  0012               	return		;funcret
 12291  0060C8                     __end_of_USART_setBaudRate:
 12292                           	callstack 0
 12293                           
 12294 ;; *************** function ___lldiv *****************
 12295 ;; Defined at:
 12296 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\__lldiv.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;  dividend        4    3[COMRAM] unsigned long 
 12299 ;;  divisor         4    7[COMRAM] unsigned long 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;  quotient        4   11[COMRAM] unsigned long 
 12302 ;;  counter         1   15[COMRAM] unsigned char 
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  4    3[COMRAM] unsigned long 
 12305 ;; Registers used:
 12306 ;;		wreg, status,2, status,0
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12312 ;;      Params:         8       0       0       0       0       0       0       0       0
 12313 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12314 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12315 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12316 ;;Total ram usage:       13 bytes
 12317 ;; Hardware stack levels used:    1
 12318 ;; Hardware stack levels required when called:    2
 12319 ;; This function calls:
 12320 ;;		Nothing
 12321 ;; This function is called by:
 12322 ;;		_i2c_init
 12323 ;;		_USART_setBaudRate
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text28
 12328  005AF2                     __ptext28:
 12329                           	callstack 0
 12330  005AF2                     ___lldiv:
 12331                           	callstack 27
 12332  005AF2  0E00               	movlw	0
 12333  005AF4  6E0C               	movwf	___lldiv@quotient^0,c
 12334  005AF6  0E00               	movlw	0
 12335  005AF8  6E0D               	movwf	(___lldiv@quotient+1)^0,c
 12336  005AFA  0E00               	movlw	0
 12337  005AFC  6E0E               	movwf	(___lldiv@quotient+2)^0,c
 12338  005AFE  0E00               	movlw	0
 12339  005B00  6E0F               	movwf	(___lldiv@quotient+3)^0,c
 12340  005B02  5008               	movf	___lldiv@divisor^0,w,c
 12341  005B04  1009               	iorwf	(___lldiv@divisor+1)^0,w,c
 12342  005B06  100A               	iorwf	(___lldiv@divisor+2)^0,w,c
 12343  005B08  100B               	iorwf	(___lldiv@divisor+3)^0,w,c
 12344  005B0A  B4D8               	btfsc	status,2,c
 12345  005B0C  EF8A  F02D         	goto	u8061
 12346  005B10  EF8C  F02D         	goto	u8060
 12347  005B14                     u8061:
 12348  005B14  EFC2  F02D         	goto	l1849
 12349  005B18                     u8060:
 12350  005B18  0E01               	movlw	1
 12351  005B1A  6E10               	movwf	___lldiv@counter^0,c
 12352  005B1C  EF96  F02D         	goto	l8817
 12353  005B20                     l8815:
 12354  005B20  90D8               	bcf	status,0,c
 12355  005B22  3608               	rlcf	___lldiv@divisor^0,f,c
 12356  005B24  3609               	rlcf	(___lldiv@divisor+1)^0,f,c
 12357  005B26  360A               	rlcf	(___lldiv@divisor+2)^0,f,c
 12358  005B28  360B               	rlcf	(___lldiv@divisor+3)^0,f,c
 12359  005B2A  2A10               	incf	___lldiv@counter^0,f,c
 12360  005B2C                     l8817:
 12361  005B2C  AE0B               	btfss	(___lldiv@divisor+3)^0,7,c
 12362  005B2E  EF9B  F02D         	goto	u8071
 12363  005B32  EF9D  F02D         	goto	u8070
 12364  005B36                     u8071:
 12365  005B36  EF90  F02D         	goto	l8815
 12366  005B3A                     u8070:
 12367  005B3A                     l8819:
 12368  005B3A  90D8               	bcf	status,0,c
 12369  005B3C  360C               	rlcf	___lldiv@quotient^0,f,c
 12370  005B3E  360D               	rlcf	(___lldiv@quotient+1)^0,f,c
 12371  005B40  360E               	rlcf	(___lldiv@quotient+2)^0,f,c
 12372  005B42  360F               	rlcf	(___lldiv@quotient+3)^0,f,c
 12373  005B44  5008               	movf	___lldiv@divisor^0,w,c
 12374  005B46  5C04               	subwf	___lldiv@dividend^0,w,c
 12375  005B48  5009               	movf	(___lldiv@divisor+1)^0,w,c
 12376  005B4A  5805               	subwfb	(___lldiv@dividend+1)^0,w,c
 12377  005B4C  500A               	movf	(___lldiv@divisor+2)^0,w,c
 12378  005B4E  5806               	subwfb	(___lldiv@dividend+2)^0,w,c
 12379  005B50  500B               	movf	(___lldiv@divisor+3)^0,w,c
 12380  005B52  5807               	subwfb	(___lldiv@dividend+3)^0,w,c
 12381  005B54  A0D8               	btfss	status,0,c
 12382  005B56  EFAF  F02D         	goto	u8081
 12383  005B5A  EFB1  F02D         	goto	u8080
 12384  005B5E                     u8081:
 12385  005B5E  EFBA  F02D         	goto	l8827
 12386  005B62                     u8080:
 12387  005B62  5008               	movf	___lldiv@divisor^0,w,c
 12388  005B64  5E04               	subwf	___lldiv@dividend^0,f,c
 12389  005B66  5009               	movf	(___lldiv@divisor+1)^0,w,c
 12390  005B68  5A05               	subwfb	(___lldiv@dividend+1)^0,f,c
 12391  005B6A  500A               	movf	(___lldiv@divisor+2)^0,w,c
 12392  005B6C  5A06               	subwfb	(___lldiv@dividend+2)^0,f,c
 12393  005B6E  500B               	movf	(___lldiv@divisor+3)^0,w,c
 12394  005B70  5A07               	subwfb	(___lldiv@dividend+3)^0,f,c
 12395  005B72  800C               	bsf	___lldiv@quotient^0,0,c
 12396  005B74                     l8827:
 12397  005B74  90D8               	bcf	status,0,c
 12398  005B76  320B               	rrcf	(___lldiv@divisor+3)^0,f,c
 12399  005B78  320A               	rrcf	(___lldiv@divisor+2)^0,f,c
 12400  005B7A  3209               	rrcf	(___lldiv@divisor+1)^0,f,c
 12401  005B7C  3208               	rrcf	___lldiv@divisor^0,f,c
 12402  005B7E  2E10               	decfsz	___lldiv@counter^0,f,c
 12403  005B80  EF9D  F02D         	goto	l8819
 12404  005B84                     l1849:
 12405  005B84  C00C  F004         	movff	___lldiv@quotient,?___lldiv
 12406  005B88  C00D  F005         	movff	___lldiv@quotient+1,?___lldiv+1
 12407  005B8C  C00E  F006         	movff	___lldiv@quotient+2,?___lldiv+2
 12408  005B90  C00F  F007         	movff	___lldiv@quotient+3,?___lldiv+3
 12409  005B94  0012               	return		;funcret
 12410  005B96                     __end_of___lldiv:
 12411                           	callstack 0
 12412                           
 12413 ;; *************** function _MPU6050_testConnection *****************
 12414 ;; Defined at:
 12415 ;;		line 79 in file "MPU6050.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;		None
 12418 ;; Auto vars:     Size  Location     Type
 12419 ;;		None
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  1    wreg      _Bool 
 12422 ;; Registers used:
 12423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12429 ;;      Params:         0       0       0       0       0       0       0       0       0
 12430 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12431 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12432 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12433 ;;Total ram usage:        0 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; Hardware stack levels required when called:    7
 12436 ;; This function calls:
 12437 ;;		_MPU6050_getDeviceID
 12438 ;; This function is called by:
 12439 ;;		_main
 12440 ;; This function uses a non-reentrant model
 12441 ;;
 12442                           
 12443                           	psect	text29
 12444  0066EA                     __ptext29:
 12445                           	callstack 0
 12446  0066EA                     _MPU6050_testConnection:
 12447                           	callstack 23
 12448  0066EA                     
 12449                           ;MPU6050.c: 80:     return MPU6050_getDeviceID() == 0x34;
 12450  0066EA  EC07  F033         	call	_MPU6050_getDeviceID	;wreg free
 12451  0066EE  0A34               	xorlw	52
 12452  0066F0  B4D8               	btfsc	status,2,c
 12453  0066F2  EF7D  F033         	goto	u8781
 12454  0066F6  EF80  F033         	goto	u8780
 12455  0066FA                     u8781:
 12456  0066FA  0E01               	movlw	1
 12457  0066FC  EF81  F033         	goto	u8790
 12458  006700                     u8780:
 12459  006700  0E00               	movlw	0
 12460  006702                     u8790:
 12461  006702  0012               	return		;funcret
 12462  006704                     __end_of_MPU6050_testConnection:
 12463                           	callstack 0
 12464                           
 12465 ;; *************** function _MPU6050_getDeviceID *****************
 12466 ;; Defined at:
 12467 ;;		line 2747 in file "MPU6050.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;		None
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      unsigned char 
 12474 ;; Registers used:
 12475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12481 ;;      Params:         0       0       0       0       0       0       0       0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12484 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12485 ;;Total ram usage:        0 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:    6
 12488 ;; This function calls:
 12489 ;;		_I2Cdev_readBits
 12490 ;; This function is called by:
 12491 ;;		_MPU6050_testConnection
 12492 ;;		_MPU6050_PID
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           	psect	text30
 12497  00660E                     __ptext30:
 12498                           	callstack 0
 12499  00660E                     _MPU6050_getDeviceID:
 12500                           	callstack 23
 12501  00660E                     
 12502                           ;MPU6050.c: 2748:     I2Cdev_readBits(mpu6050.devAddr, 0x75, 6, 6, mpu6050.buffer);
 12503  00660E  0E75               	movlw	117
 12504  006610  6E15               	movwf	I2Cdev_readBits@regAddr^0,c
 12505  006612  0E06               	movlw	6
 12506  006614  6E16               	movwf	I2Cdev_readBits@bitStart^0,c
 12507  006616  0E06               	movlw	6
 12508  006618  6E17               	movwf	I2Cdev_readBits@length^0,c
 12509  00661A  0E98               	movlw	low (_mpu6050+1)
 12510  00661C  6E18               	movwf	I2Cdev_readBits@data^0,c
 12511  00661E  0E01               	movlw	high (_mpu6050+1)
 12512  006620  6E19               	movwf	(I2Cdev_readBits@data+1)^0,c
 12513  006622  0101               	movlb	1	; () banked
 12514  006624  5197               	movf	_mpu6050& (0+255),w,b
 12515  006626  ECF7  F02E         	call	_I2Cdev_readBits
 12516  00662A                     
 12517                           ;MPU6050.c: 2749:     return mpu6050.buffer[0];
 12518  00662A  0101               	movlb	1	; () banked
 12519  00662C  5198               	movf	(_mpu6050+1)& (0+255),w,b
 12520  00662E                     
 12521                           ; BSR set to: 1
 12522  00662E  0012               	return		;funcret
 12523  006630                     __end_of_MPU6050_getDeviceID:
 12524                           	callstack 0
 12525                           
 12526 ;; *************** function _I2Cdev_readBits *****************
 12527 ;; Defined at:
 12528 ;;		line 251 in file "I2Cdev.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;  devAddr         1    wreg     unsigned char 
 12531 ;;  regAddr         1   20[COMRAM] unsigned char 
 12532 ;;  bitStart        1   21[COMRAM] unsigned char 
 12533 ;;  length          1   22[COMRAM] unsigned char 
 12534 ;;  data            2   23[COMRAM] PTR unsigned char 
 12535 ;;		 -> mpu6050(15), 
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;  devAddr         1   29[COMRAM] unsigned char 
 12538 ;;  mask            1   30[COMRAM] unsigned char 
 12539 ;;  b               1   31[COMRAM] unsigned char 
 12540 ;;  count           1   28[COMRAM] unsigned char 
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  1    wreg      char 
 12543 ;; Registers used:
 12544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12550 ;;      Params:         5       0       0       0       0       0       0       0       0
 12551 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12552 ;;      Temps:          3       0       0       0       0       0       0       0       0
 12553 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12554 ;;Total ram usage:       12 bytes
 12555 ;; Hardware stack levels used:    1
 12556 ;; Hardware stack levels required when called:    5
 12557 ;; This function calls:
 12558 ;;		_I2Cdev_readByte
 12559 ;; This function is called by:
 12560 ;;		_MPU6050_getDeviceID
 12561 ;;		_MPU6050_getExternalFrameSync
 12562 ;;		_MPU6050_getDLPFMode
 12563 ;;		_MPU6050_getFullScaleGyroRange
 12564 ;;		_MPU6050_getFullScaleAccelRange
 12565 ;;		_MPU6050_getDHPFMode
 12566 ;;		_MPU6050_getMasterClockSpeed
 12567 ;;		_MPU6050_getSlaveDataLength
 12568 ;;		_MPU6050_getSlave4MasterDelay
 12569 ;;		_MPU6050_getAccelerometerPowerOnDelay
 12570 ;;		_MPU6050_getFreefallDetectionCounterDecrement
 12571 ;;		_MPU6050_getMotionDetectionCounterDecrement
 12572 ;;		_MPU6050_getClockSource
 12573 ;;		_MPU6050_getWakeFrequency
 12574 ;;		_MPU6050_getXGyroOffsetTC
 12575 ;;		_MPU6050_getYGyroOffsetTC
 12576 ;;		_MPU6050_getZGyroOffsetTC
 12577 ;; This function uses a non-reentrant model
 12578 ;;
 12579                           
 12580                           	psect	text31
 12581  005DEE                     __ptext31:
 12582                           	callstack 0
 12583  005DEE                     _I2Cdev_readBits:
 12584                           	callstack 23
 12585                           
 12586                           ; BSR set to: 1
 12587                           ;incstack = 0
 12588                           ;I2Cdev_readBits@devAddr stored from wreg
 12589  005DEE  6E1E               	movwf	I2Cdev_readBits@devAddr^0,c
 12590  005DF0                     
 12591                           ;I2Cdev.c: 257:     uint8_t count, b;;I2Cdev.c: 258:     if ((count = I2Cdev_readByte(de
      +                          vAddr, regAddr, &b)) != 0) {
 12592  005DF0  C015  F011         	movff	I2Cdev_readBits@regAddr,I2Cdev_readByte@regAddr
 12593  005DF4  0E20               	movlw	low I2Cdev_readBits@b
 12594  005DF6  6E12               	movwf	I2Cdev_readByte@data^0,c
 12595  005DF8  0E00               	movlw	high I2Cdev_readBits@b
 12596  005DFA  6E13               	movwf	(I2Cdev_readByte@data+1)^0,c
 12597  005DFC  501E               	movf	I2Cdev_readBits@devAddr^0,w,c
 12598  005DFE  ECB6  F033         	call	_I2Cdev_readByte
 12599  005E02  6E1D               	movwf	I2Cdev_readBits@count^0,c
 12600  005E04  501D               	movf	I2Cdev_readBits@count^0,w,c
 12601  005E06  B4D8               	btfsc	status,2,c
 12602  005E08  EF08  F02F         	goto	u7831
 12603  005E0C  EF0A  F02F         	goto	u7830
 12604  005E10                     u7831:
 12605  005E10  EF3D  F02F         	goto	l277
 12606  005E14                     u7830:
 12607  005E14                     
 12608                           ;I2Cdev.c: 259:         uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
 12609  005E14  5017               	movf	I2Cdev_readBits@length^0,w,c
 12610  005E16  5C16               	subwf	I2Cdev_readBits@bitStart^0,w,c
 12611  005E18  6E1A               	movwf	??_I2Cdev_readBits^0,c
 12612  005E1A  0E01               	movlw	1
 12613  005E1C  261A               	addwf	??_I2Cdev_readBits^0,f,c
 12614  005E1E  C017  F01B         	movff	I2Cdev_readBits@length,??_I2Cdev_readBits+1
 12615  005E22  0E01               	movlw	1
 12616  005E24  6E1C               	movwf	(??_I2Cdev_readBits+2)^0,c
 12617  005E26  2A1B               	incf	(??_I2Cdev_readBits+1)^0,f,c
 12618  005E28  EF18  F02F         	goto	u7844
 12619  005E2C                     u7845:
 12620  005E2C  90D8               	bcf	status,0,c
 12621  005E2E  361C               	rlcf	(??_I2Cdev_readBits+2)^0,f,c
 12622  005E30                     u7844:
 12623  005E30  2E1B               	decfsz	(??_I2Cdev_readBits+1)^0,f,c
 12624  005E32  EF16  F02F         	goto	u7845
 12625  005E36  0EFF               	movlw	255
 12626  005E38  261C               	addwf	(??_I2Cdev_readBits+2)^0,f,c
 12627  005E3A  2A1A               	incf	??_I2Cdev_readBits^0,f,c
 12628  005E3C  EF22  F02F         	goto	u7854
 12629  005E40                     u7855:
 12630  005E40  90D8               	bcf	status,0,c
 12631  005E42  361C               	rlcf	(??_I2Cdev_readBits+2)^0,f,c
 12632  005E44                     u7854:
 12633  005E44  2E1A               	decfsz	??_I2Cdev_readBits^0,f,c
 12634  005E46  EF20  F02F         	goto	u7855
 12635  005E4A  501C               	movf	(??_I2Cdev_readBits+2)^0,w,c
 12636  005E4C  6E1F               	movwf	I2Cdev_readBits@mask^0,c
 12637                           
 12638                           ;I2Cdev.c: 260:         b &= mask;
 12639  005E4E  501F               	movf	I2Cdev_readBits@mask^0,w,c
 12640  005E50  1620               	andwf	I2Cdev_readBits@b^0,f,c
 12641                           
 12642                           ;I2Cdev.c: 261:         b >>= (bitStart - length + 1);
 12643  005E52  5017               	movf	I2Cdev_readBits@length^0,w,c
 12644  005E54  5C16               	subwf	I2Cdev_readBits@bitStart^0,w,c
 12645  005E56  6E1A               	movwf	??_I2Cdev_readBits^0,c
 12646  005E58  0E01               	movlw	1
 12647  005E5A  261A               	addwf	??_I2Cdev_readBits^0,f,c
 12648  005E5C  281A               	incf	??_I2Cdev_readBits^0,w,c
 12649  005E5E  6E1B               	movwf	(??_I2Cdev_readBits+1)^0,c
 12650  005E60  EF34  F02F         	goto	u7860
 12651  005E64                     u7865:
 12652  005E64  90D8               	bcf	status,0,c
 12653  005E66  3220               	rrcf	I2Cdev_readBits@b^0,f,c
 12654  005E68                     u7860:
 12655  005E68  2E1B               	decfsz	(??_I2Cdev_readBits+1)^0,f,c
 12656  005E6A  EF32  F02F         	goto	u7865
 12657  005E6E                     
 12658                           ;I2Cdev.c: 262:         *data = b;
 12659  005E6E  C018  FFD9         	movff	I2Cdev_readBits@data,fsr2l
 12660  005E72  C019  FFDA         	movff	I2Cdev_readBits@data+1,fsr2h
 12661  005E76  C020  FFDF         	movff	I2Cdev_readBits@b,indf2
 12662  005E7A                     l277:
 12663  005E7A  0012               	return		;funcret
 12664  005E7C                     __end_of_I2Cdev_readBits:
 12665                           	callstack 0
 12666                           
 12667 ;; *************** function _MPU6050_initialize *****************
 12668 ;; Defined at:
 12669 ;;		line 68 in file "MPU6050.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;		None
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;		None
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  1    wreg      void 
 12676 ;; Registers used:
 12677 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12678 ;; Tracked objects:
 12679 ;;		On entry : 0/0
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12683 ;;      Params:         0       0       0       0       0       0       0       0       0
 12684 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12686 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12687 ;;Total ram usage:        0 bytes
 12688 ;; Hardware stack levels used:    1
 12689 ;; Hardware stack levels required when called:    7
 12690 ;; This function calls:
 12691 ;;		_MPU6050_setClockSource
 12692 ;;		_MPU6050_setFullScaleAccelRange
 12693 ;;		_MPU6050_setFullScaleGyroRange
 12694 ;;		_MPU6050_setSleepEnabled
 12695 ;; This function is called by:
 12696 ;;		_main
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text32
 12701  006704                     __ptext32:
 12702                           	callstack 0
 12703  006704                     _MPU6050_initialize:
 12704                           	callstack 23
 12705  006704                     
 12706                           ;MPU6050.c: 69:     MPU6050_setClockSource(0x01);
 12707  006704  0E01               	movlw	1
 12708  006706  EC67  F033         	call	_MPU6050_setClockSource
 12709                           
 12710                           ;MPU6050.c: 70:     MPU6050_setFullScaleGyroRange(0x00);
 12711  00670A  0E00               	movlw	0
 12712  00670C  EC4B  F033         	call	_MPU6050_setFullScaleGyroRange
 12713                           
 12714                           ;MPU6050.c: 71:     MPU6050_setFullScaleAccelRange(0x00);
 12715  006710  0E00               	movlw	0
 12716  006712  EC59  F033         	call	_MPU6050_setFullScaleAccelRange
 12717                           
 12718                           ;MPU6050.c: 72:     MPU6050_setSleepEnabled(0);
 12719  006716  0E00               	movlw	0
 12720  006718  ECDC  F033         	call	_MPU6050_setSleepEnabled
 12721  00671C  0012               	return		;funcret
 12722  00671E                     __end_of_MPU6050_initialize:
 12723                           	callstack 0
 12724                           
 12725 ;; *************** function _MPU6050_setSleepEnabled *****************
 12726 ;; Defined at:
 12727 ;;		line 2388 in file "MPU6050.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  enabled         1    wreg     _Bool 
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;  enabled         1   32[COMRAM] _Bool 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  1    wreg      void 
 12734 ;; Registers used:
 12735 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12741 ;;      Params:         0       0       0       0       0       0       0       0       0
 12742 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12744 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12745 ;;Total ram usage:        1 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    6
 12748 ;; This function calls:
 12749 ;;		_I2Cdev_writeBit
 12750 ;; This function is called by:
 12751 ;;		_MPU6050_initialize
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           	psect	text33
 12756  0067B8                     __ptext33:
 12757                           	callstack 0
 12758  0067B8                     _MPU6050_setSleepEnabled:
 12759                           	callstack 23
 12760                           
 12761                           ;incstack = 0
 12762                           ;MPU6050_setSleepEnabled@enabled stored from wreg
 12763  0067B8  6E21               	movwf	MPU6050_setSleepEnabled@enabled^0,c
 12764  0067BA                     
 12765                           ;MPU6050.c: 2389:     I2Cdev_writeBit(mpu6050.devAddr, 0x6B, 6, enabled);
 12766  0067BA  0E6B               	movlw	107
 12767  0067BC  6E15               	movwf	I2Cdev_writeBit@regAddr^0,c
 12768  0067BE  0E06               	movlw	6
 12769  0067C0  6E16               	movwf	I2Cdev_writeBit@bitNum^0,c
 12770  0067C2  C021  F017         	movff	MPU6050_setSleepEnabled@enabled,I2Cdev_writeBit@data
 12771  0067C6  0101               	movlb	1	; () banked
 12772  0067C8  5197               	movf	_mpu6050& (0+255),w,b
 12773  0067CA  ECAE  F02E         	call	_I2Cdev_writeBit
 12774  0067CE  0012               	return		;funcret
 12775  0067D0                     __end_of_MPU6050_setSleepEnabled:
 12776                           	callstack 0
 12777                           
 12778 ;; *************** function _MPU6050_setFullScaleGyroRange *****************
 12779 ;; Defined at:
 12780 ;;		line 257 in file "MPU6050.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;  range           1    wreg     unsigned char 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;  range           1   30[COMRAM] unsigned char 
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  1    wreg      void 
 12787 ;; Registers used:
 12788 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12794 ;;      Params:         0       0       0       0       0       0       0       0       0
 12795 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12796 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12797 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12798 ;;Total ram usage:        1 bytes
 12799 ;; Hardware stack levels used:    1
 12800 ;; Hardware stack levels required when called:    6
 12801 ;; This function calls:
 12802 ;;		_I2Cdev_writeBits
 12803 ;; This function is called by:
 12804 ;;		_MPU6050_initialize
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           	psect	text34
 12809  006696                     __ptext34:
 12810                           	callstack 0
 12811  006696                     _MPU6050_setFullScaleGyroRange:
 12812                           	callstack 23
 12813                           
 12814                           ;incstack = 0
 12815                           ;MPU6050_setFullScaleGyroRange@range stored from wreg
 12816  006696  6E1F               	movwf	MPU6050_setFullScaleGyroRange@range^0,c
 12817  006698                     
 12818                           ;MPU6050.c: 258:     I2Cdev_writeBits(mpu6050.devAddr, 0x1B, 4, 2, range);
 12819  006698  0E1B               	movlw	27
 12820  00669A  6E15               	movwf	I2Cdev_writeBits@regAddr^0,c
 12821  00669C  0E04               	movlw	4
 12822  00669E  6E16               	movwf	I2Cdev_writeBits@bitStart^0,c
 12823  0066A0  0E02               	movlw	2
 12824  0066A2  6E17               	movwf	I2Cdev_writeBits@length^0,c
 12825  0066A4  C01F  F018         	movff	MPU6050_setFullScaleGyroRange@range,I2Cdev_writeBits@data
 12826  0066A8  0101               	movlb	1	; () banked
 12827  0066AA  5197               	movf	_mpu6050& (0+255),w,b
 12828  0066AC  EC18  F02E         	call	_I2Cdev_writeBits
 12829  0066B0  0012               	return		;funcret
 12830  0066B2                     __end_of_MPU6050_setFullScaleGyroRange:
 12831                           	callstack 0
 12832                           
 12833 ;; *************** function _MPU6050_setFullScaleAccelRange *****************
 12834 ;; Defined at:
 12835 ;;		line 333 in file "MPU6050.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;  range           1    wreg     unsigned char 
 12838 ;; Auto vars:     Size  Location     Type
 12839 ;;  range           1   30[COMRAM] unsigned char 
 12840 ;; Return value:  Size  Location     Type
 12841 ;;                  1    wreg      void 
 12842 ;; Registers used:
 12843 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12844 ;; Tracked objects:
 12845 ;;		On entry : 0/0
 12846 ;;		On exit  : 0/0
 12847 ;;		Unchanged: 0/0
 12848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12849 ;;      Params:         0       0       0       0       0       0       0       0       0
 12850 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12851 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12852 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12853 ;;Total ram usage:        1 bytes
 12854 ;; Hardware stack levels used:    1
 12855 ;; Hardware stack levels required when called:    6
 12856 ;; This function calls:
 12857 ;;		_I2Cdev_writeBits
 12858 ;; This function is called by:
 12859 ;;		_MPU6050_initialize
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           	psect	text35
 12864  0066B2                     __ptext35:
 12865                           	callstack 0
 12866  0066B2                     _MPU6050_setFullScaleAccelRange:
 12867                           	callstack 23
 12868                           
 12869                           ;incstack = 0
 12870                           ;MPU6050_setFullScaleAccelRange@range stored from wreg
 12871  0066B2  6E1F               	movwf	MPU6050_setFullScaleAccelRange@range^0,c
 12872  0066B4                     
 12873                           ;MPU6050.c: 334:     I2Cdev_writeBits(mpu6050.devAddr, 0x1C, 4, 2, range);
 12874  0066B4  0E1C               	movlw	28
 12875  0066B6  6E15               	movwf	I2Cdev_writeBits@regAddr^0,c
 12876  0066B8  0E04               	movlw	4
 12877  0066BA  6E16               	movwf	I2Cdev_writeBits@bitStart^0,c
 12878  0066BC  0E02               	movlw	2
 12879  0066BE  6E17               	movwf	I2Cdev_writeBits@length^0,c
 12880  0066C0  C01F  F018         	movff	MPU6050_setFullScaleAccelRange@range,I2Cdev_writeBits@data
 12881  0066C4  0101               	movlb	1	; () banked
 12882  0066C6  5197               	movf	_mpu6050& (0+255),w,b
 12883  0066C8  EC18  F02E         	call	_I2Cdev_writeBits
 12884  0066CC  0012               	return		;funcret
 12885  0066CE                     __end_of_MPU6050_setFullScaleAccelRange:
 12886                           	callstack 0
 12887                           
 12888 ;; *************** function _MPU6050_setClockSource *****************
 12889 ;; Defined at:
 12890 ;;		line 2481 in file "MPU6050.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;  source          1    wreg     unsigned char 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;  source          1   30[COMRAM] unsigned char 
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12904 ;;      Params:         0       0       0       0       0       0       0       0       0
 12905 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12907 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12908 ;;Total ram usage:        1 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:    6
 12911 ;; This function calls:
 12912 ;;		_I2Cdev_writeBits
 12913 ;; This function is called by:
 12914 ;;		_MPU6050_initialize
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text36
 12919  0066CE                     __ptext36:
 12920                           	callstack 0
 12921  0066CE                     _MPU6050_setClockSource:
 12922                           	callstack 23
 12923                           
 12924                           ;incstack = 0
 12925                           ;MPU6050_setClockSource@source stored from wreg
 12926  0066CE  6E1F               	movwf	MPU6050_setClockSource@source^0,c
 12927  0066D0                     
 12928                           ;MPU6050.c: 2482:     I2Cdev_writeBits(mpu6050.devAddr, 0x6B, 2, 3, source);
 12929  0066D0  0E6B               	movlw	107
 12930  0066D2  6E15               	movwf	I2Cdev_writeBits@regAddr^0,c
 12931  0066D4  0E02               	movlw	2
 12932  0066D6  6E16               	movwf	I2Cdev_writeBits@bitStart^0,c
 12933  0066D8  0E03               	movlw	3
 12934  0066DA  6E17               	movwf	I2Cdev_writeBits@length^0,c
 12935  0066DC  C01F  F018         	movff	MPU6050_setClockSource@source,I2Cdev_writeBits@data
 12936  0066E0  0101               	movlb	1	; () banked
 12937  0066E2  5197               	movf	_mpu6050& (0+255),w,b
 12938  0066E4  EC18  F02E         	call	_I2Cdev_writeBits
 12939  0066E8  0012               	return		;funcret
 12940  0066EA                     __end_of_MPU6050_setClockSource:
 12941                           	callstack 0
 12942                           
 12943 ;; *************** function _MPU6050_getIntStatus *****************
 12944 ;; Defined at:
 12945 ;;		line 1633 in file "MPU6050.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;		None
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;		None
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  1    wreg      unsigned char 
 12952 ;; Registers used:
 12953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12959 ;;      Params:         0       0       0       0       0       0       0       0       0
 12960 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12961 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12962 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12963 ;;Total ram usage:        0 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:    5
 12966 ;; This function calls:
 12967 ;;		_I2Cdev_readByte
 12968 ;; This function is called by:
 12969 ;;		_main
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           	psect	text37
 12974  00671E                     __ptext37:
 12975                           	callstack 0
 12976  00671E                     _MPU6050_getIntStatus:
 12977                           	callstack 25
 12978  00671E                     
 12979                           ;MPU6050.c: 1634:     I2Cdev_readByte(mpu6050.devAddr, 0x3A, mpu6050.buffer);
 12980  00671E  0E3A               	movlw	58
 12981  006720  6E11               	movwf	I2Cdev_readByte@regAddr^0,c
 12982  006722  0E98               	movlw	low (_mpu6050+1)
 12983  006724  6E12               	movwf	I2Cdev_readByte@data^0,c
 12984  006726  0E01               	movlw	high (_mpu6050+1)
 12985  006728  6E13               	movwf	(I2Cdev_readByte@data+1)^0,c
 12986  00672A  0101               	movlb	1	; () banked
 12987  00672C  5197               	movf	_mpu6050& (0+255),w,b
 12988  00672E  ECB6  F033         	call	_I2Cdev_readByte
 12989  006732                     
 12990                           ;MPU6050.c: 1635:     return mpu6050.buffer[0];
 12991  006732  0101               	movlb	1	; () banked
 12992  006734  5198               	movf	(_mpu6050+1)& (0+255),w,b
 12993  006736                     
 12994                           ; BSR set to: 1
 12995  006736  0012               	return		;funcret
 12996  006738                     __end_of_MPU6050_getIntStatus:
 12997                           	callstack 0
 12998                           
 12999 ;; *************** function _MPU6050_dmpInitialize *****************
 13000 ;; Defined at:
 13001 ;;		line 356 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;		None
 13004 ;; Auto vars:     Size  Location     Type
 13005 ;;  ival            2    0        unsigned short 
 13006 ;;  val             1   80[COMRAM] unsigned char 
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  1    wreg      unsigned char 
 13009 ;; Registers used:
 13010 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13016 ;;      Params:         0       0       0       0       0       0       0       0       0
 13017 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13018 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13019 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13020 ;;Total ram usage:        3 bytes
 13021 ;; Hardware stack levels used:    1
 13022 ;; Hardware stack levels required when called:    8
 13023 ;; This function calls:
 13024 ;;		_I2Cdev_writeBit
 13025 ;;		_I2Cdev_writeBits
 13026 ;;		_I2Cdev_writeByte
 13027 ;;		_I2Cdev_writeWord
 13028 ;;		_MPU6050_setDMPEnabled
 13029 ;;		_MPU6050_writeProgMemoryBlock
 13030 ;; This function is called by:
 13031 ;;		_main
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           	psect	text38
 13036  004D74                     __ptext38:
 13037                           	callstack 0
 13038  004D74                     _MPU6050_dmpInitialize:
 13039                           	callstack 22
 13040  004D74                     
 13041                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 357:  uint8_t val;;./MPU6050_6Axis_MotionApps_V6_12
      +                          .h: 358:  uint16_t ival;;./MPU6050_6Axis_MotionApps_V6_12.h: 360:  I2Cdev_writeBit(mpu60
      +                          50.devAddr,0x6B, 7, (val = 1));
 13042  004D74  0E6B               	movlw	107
 13043  004D76  6E15               	movwf	I2Cdev_writeBit@regAddr^0,c
 13044  004D78  0E07               	movlw	7
 13045  004D7A  6E16               	movwf	I2Cdev_writeBit@bitNum^0,c
 13046  004D7C  0E01               	movlw	1
 13047  004D7E  6E51               	movwf	MPU6050_dmpInitialize@val^0,c
 13048  004D80  C051  F017         	movff	MPU6050_dmpInitialize@val,I2Cdev_writeBit@data
 13049  004D84  0101               	movlb	1	; () banked
 13050  004D86  5197               	movf	_mpu6050& (0+255),w,b
 13051  004D88  ECAE  F02E         	call	_I2Cdev_writeBit
 13052  004D8C                     
 13053                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 361:  _delay((unsigned long)((100)*(_X_FREQ/4000.0)
      +                          ));
 13054  004D8C  0E07               	movlw	7
 13055  004D8E  6E50               	movwf	(??_MPU6050_dmpInitialize+1)^0,c
 13056  004D90  0E17               	movlw	23
 13057  004D92  6E4F               	movwf	??_MPU6050_dmpInitialize^0,c
 13058  004D94  0E6A               	movlw	106
 13059  004D96                     u12147:
 13060  004D96  2EE8               	decfsz	wreg,f,c
 13061  004D98  D7FE               	bra	u12147
 13062  004D9A  2E4F               	decfsz	??_MPU6050_dmpInitialize^0,f,c
 13063  004D9C  D7FC               	bra	u12147
 13064  004D9E  2E50               	decfsz	(??_MPU6050_dmpInitialize+1)^0,f,c
 13065  004DA0  D7FA               	bra	u12147
 13066  004DA2  D000               	nop2	
 13067  004DA4                     
 13068                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 362:  I2Cdev_writeBits(mpu6050.devAddr,0x6A, 2, 3, 
      +                          (val = 0b111));
 13069  004DA4  0E6A               	movlw	106
 13070  004DA6  6E15               	movwf	I2Cdev_writeBits@regAddr^0,c
 13071  004DA8  0E02               	movlw	2
 13072  004DAA  6E16               	movwf	I2Cdev_writeBits@bitStart^0,c
 13073  004DAC  0E03               	movlw	3
 13074  004DAE  6E17               	movwf	I2Cdev_writeBits@length^0,c
 13075  004DB0  0E07               	movlw	7
 13076  004DB2  6E51               	movwf	MPU6050_dmpInitialize@val^0,c
 13077  004DB4  C051  F018         	movff	MPU6050_dmpInitialize@val,I2Cdev_writeBits@data
 13078  004DB8  0101               	movlb	1	; () banked
 13079  004DBA  5197               	movf	_mpu6050& (0+255),w,b
 13080  004DBC  EC18  F02E         	call	_I2Cdev_writeBits
 13081                           
 13082                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 363:  _delay((unsigned long)((100)*(_X_FREQ/4000.0)
      +                          ));
 13083  004DC0  0E07               	movlw	7
 13084  004DC2  6E50               	movwf	(??_MPU6050_dmpInitialize+1)^0,c
 13085  004DC4  0E17               	movlw	23
 13086  004DC6  6E4F               	movwf	??_MPU6050_dmpInitialize^0,c
 13087  004DC8  0E6A               	movlw	106
 13088  004DCA                     u12157:
 13089  004DCA  2EE8               	decfsz	wreg,f,c
 13090  004DCC  D7FE               	bra	u12157
 13091  004DCE  2E4F               	decfsz	??_MPU6050_dmpInitialize^0,f,c
 13092  004DD0  D7FC               	bra	u12157
 13093  004DD2  2E50               	decfsz	(??_MPU6050_dmpInitialize+1)^0,f,c
 13094  004DD4  D7FA               	bra	u12157
 13095  004DD6  D000               	nop2	
 13096  004DD8                     
 13097                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 364:  I2Cdev_writeByte(mpu6050.devAddr,0x6B, 0x01);
 13098  004DD8  0E6B               	movlw	107
 13099  004DDA  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13100  004DDC  0E01               	movlw	1
 13101  004DDE  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13102  004DE0  0101               	movlb	1	; () banked
 13103  004DE2  5197               	movf	_mpu6050& (0+255),w,b
 13104  004DE4  ECA9  F033         	call	_I2Cdev_writeByte
 13105  004DE8                     
 13106                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 365:  I2Cdev_writeByte(mpu6050.devAddr,0x38, 0x00);
 13107  004DE8  0E38               	movlw	56
 13108  004DEA  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13109  004DEC  0E00               	movlw	0
 13110  004DEE  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13111  004DF0  0101               	movlb	1	; () banked
 13112  004DF2  5197               	movf	_mpu6050& (0+255),w,b
 13113  004DF4  ECA9  F033         	call	_I2Cdev_writeByte
 13114  004DF8                     
 13115                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 366:  I2Cdev_writeByte(mpu6050.devAddr,0x23, 0x00);
 13116  004DF8  0E23               	movlw	35
 13117  004DFA  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13118  004DFC  0E00               	movlw	0
 13119  004DFE  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13120  004E00  0101               	movlb	1	; () banked
 13121  004E02  5197               	movf	_mpu6050& (0+255),w,b
 13122  004E04  ECA9  F033         	call	_I2Cdev_writeByte
 13123  004E08                     
 13124                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 367:  I2Cdev_writeByte(mpu6050.devAddr,0x1C, 0x00);
 13125  004E08  0E1C               	movlw	28
 13126  004E0A  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13127  004E0C  0E00               	movlw	0
 13128  004E0E  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13129  004E10  0101               	movlb	1	; () banked
 13130  004E12  5197               	movf	_mpu6050& (0+255),w,b
 13131  004E14  ECA9  F033         	call	_I2Cdev_writeByte
 13132  004E18                     
 13133                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 368:  I2Cdev_writeByte(mpu6050.devAddr,0x37, 0x80);
 13134  004E18  0E37               	movlw	55
 13135  004E1A  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13136  004E1C  0E80               	movlw	128
 13137  004E1E  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13138  004E20  0101               	movlb	1	; () banked
 13139  004E22  5197               	movf	_mpu6050& (0+255),w,b
 13140  004E24  ECA9  F033         	call	_I2Cdev_writeByte
 13141  004E28                     
 13142                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 369:  I2Cdev_writeByte(mpu6050.devAddr,0x6B, 0x01);
 13143  004E28  0E6B               	movlw	107
 13144  004E2A  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13145  004E2C  0E01               	movlw	1
 13146  004E2E  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13147  004E30  0101               	movlb	1	; () banked
 13148  004E32  5197               	movf	_mpu6050& (0+255),w,b
 13149  004E34  ECA9  F033         	call	_I2Cdev_writeByte
 13150  004E38                     
 13151                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 370:  I2Cdev_writeByte(mpu6050.devAddr,0x19, 0x04);
 13152  004E38  0E19               	movlw	25
 13153  004E3A  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13154  004E3C  0E04               	movlw	4
 13155  004E3E  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13156  004E40  0101               	movlb	1	; () banked
 13157  004E42  5197               	movf	_mpu6050& (0+255),w,b
 13158  004E44  ECA9  F033         	call	_I2Cdev_writeByte
 13159  004E48                     
 13160                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 371:  I2Cdev_writeByte(mpu6050.devAddr,0x1A, 0x01);
 13161  004E48  0E1A               	movlw	26
 13162  004E4A  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13163  004E4C  0E01               	movlw	1
 13164  004E4E  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13165  004E50  0101               	movlb	1	; () banked
 13166  004E52  5197               	movf	_mpu6050& (0+255),w,b
 13167  004E54  ECA9  F033         	call	_I2Cdev_writeByte
 13168  004E58                     
 13169                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 372:  if (!MPU6050_writeProgMemoryBlock(dmpMemory, 
      +                          3062, 0,0, 1)) return 0;
 13170  004E58  0E0D               	movlw	low _dmpMemory
 13171  004E5A  6E48               	movwf	MPU6050_writeProgMemoryBlock@data^0,c
 13172  004E5C  0E73               	movlw	high _dmpMemory
 13173  004E5E  6E49               	movwf	(MPU6050_writeProgMemoryBlock@data+1)^0,c
 13174  004E60  0E0B               	movlw	11
 13175  004E62  6E4B               	movwf	(MPU6050_writeProgMemoryBlock@dataSize+1)^0,c
 13176  004E64  0EF6               	movlw	246
 13177  004E66  6E4A               	movwf	MPU6050_writeProgMemoryBlock@dataSize^0,c
 13178  004E68  0E00               	movlw	0
 13179  004E6A  6E4C               	movwf	MPU6050_writeProgMemoryBlock@bank^0,c
 13180  004E6C  0E00               	movlw	0
 13181  004E6E  6E4D               	movwf	MPU6050_writeProgMemoryBlock@address^0,c
 13182  004E70  0E01               	movlw	1
 13183  004E72  6E4E               	movwf	MPU6050_writeProgMemoryBlock@verify^0,c
 13184  004E74  ECCF  F032         	call	_MPU6050_writeProgMemoryBlock	;wreg free
 13185  004E78  0900               	iorlw	0
 13186  004E7A  A4D8               	btfss	status,2,c
 13187  004E7C  EF42  F027         	goto	u9081
 13188  004E80  EF44  F027         	goto	u9080
 13189  004E84                     u9081:
 13190  004E84  EF47  F027         	goto	l9695
 13191  004E88                     u9080:
 13192  004E88  0E00               	movlw	0
 13193  004E8A  EF7C  F027         	goto	l1494
 13194  004E8E                     l9695:
 13195                           
 13196                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 373:  I2Cdev_writeWord(mpu6050.devAddr, 0x70, 0x040
      +                          0);
 13197  004E8E  0E70               	movlw	112
 13198  004E90  6E0F               	movwf	I2Cdev_writeWord@regAddr^0,c
 13199  004E92  0E04               	movlw	4
 13200  004E94  6E11               	movwf	(I2Cdev_writeWord@data+1)^0,c
 13201  004E96  0E00               	movlw	0
 13202  004E98  6E10               	movwf	I2Cdev_writeWord@data^0,c
 13203  004E9A  0101               	movlb	1	; () banked
 13204  004E9C  5197               	movf	_mpu6050& (0+255),w,b
 13205  004E9E  EC9C  F033         	call	_I2Cdev_writeWord
 13206  004EA2                     
 13207                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 374:  I2Cdev_writeByte(mpu6050.devAddr, 0x1B, 0x18)
      +                          ;
 13208  004EA2  0E1B               	movlw	27
 13209  004EA4  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13210  004EA6  0E18               	movlw	24
 13211  004EA8  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13212  004EAA  0101               	movlb	1	; () banked
 13213  004EAC  5197               	movf	_mpu6050& (0+255),w,b
 13214  004EAE  ECA9  F033         	call	_I2Cdev_writeByte
 13215  004EB2                     
 13216                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 375:  I2Cdev_writeByte(mpu6050.devAddr, 0x6A, 0xC0)
      +                          ;
 13217  004EB2  0E6A               	movlw	106
 13218  004EB4  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13219  004EB6  0EC0               	movlw	192
 13220  004EB8  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13221  004EBA  0101               	movlb	1	; () banked
 13222  004EBC  5197               	movf	_mpu6050& (0+255),w,b
 13223  004EBE  ECA9  F033         	call	_I2Cdev_writeByte
 13224  004EC2                     
 13225                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 376:  I2Cdev_writeByte(mpu6050.devAddr, 0x38, 0x02)
      +                          ;
 13226  004EC2  0E38               	movlw	56
 13227  004EC4  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13228  004EC6  0E02               	movlw	2
 13229  004EC8  6E0E               	movwf	I2Cdev_writeByte@data^0,c
 13230  004ECA  0101               	movlb	1	; () banked
 13231  004ECC  5197               	movf	_mpu6050& (0+255),w,b
 13232  004ECE  ECA9  F033         	call	_I2Cdev_writeByte
 13233  004ED2                     
 13234                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 377:  I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 2, 1);
 13235  004ED2  0E6A               	movlw	106
 13236  004ED4  6E15               	movwf	I2Cdev_writeBit@regAddr^0,c
 13237  004ED6  0E02               	movlw	2
 13238  004ED8  6E16               	movwf	I2Cdev_writeBit@bitNum^0,c
 13239  004EDA  0E01               	movlw	1
 13240  004EDC  6E17               	movwf	I2Cdev_writeBit@data^0,c
 13241  004EDE  0101               	movlb	1	; () banked
 13242  004EE0  5197               	movf	_mpu6050& (0+255),w,b
 13243  004EE2  ECAE  F02E         	call	_I2Cdev_writeBit
 13244  004EE6                     
 13245                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 379:     MPU6050_setDMPEnabled(0);
 13246  004EE6  0E00               	movlw	0
 13247  004EE8  ECE8  F033         	call	_MPU6050_setDMPEnabled
 13248  004EEC                     
 13249                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 385:  dmpPacketSize = 28;
 13250  004EEC  0E00               	movlw	0
 13251  004EEE  0100               	movlb	0	; () banked
 13252  004EF0  6FF7               	movwf	(_dmpPacketSize+1)& (0+255),b
 13253  004EF2  0E1C               	movlw	28
 13254  004EF4  6FF6               	movwf	_dmpPacketSize& (0+255),b
 13255  004EF6                     
 13256                           ; BSR set to: 0
 13257                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 386:  return 1;
 13258  004EF6  0E01               	movlw	1
 13259  004EF8                     l1494:
 13260  004EF8  0012               	return		;funcret
 13261  004EFA                     __end_of_MPU6050_dmpInitialize:
 13262                           	callstack 0
 13263                           
 13264 ;; *************** function _MPU6050_writeProgMemoryBlock *****************
 13265 ;; Defined at:
 13266 ;;		line 3096 in file "MPU6050.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;  data            2   71[COMRAM] PTR const unsigned char 
 13269 ;;		 -> dmpMemory(3062), MPU6050_writeDMPConfigurationSet@mlc(16), 
 13270 ;;  dataSize        2   73[COMRAM] unsigned short 
 13271 ;;  bank            1   75[COMRAM] unsigned char 
 13272 ;;  address         1   76[COMRAM] unsigned char 
 13273 ;;  verify          1   77[COMRAM] _Bool 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;		None
 13276 ;; Return value:  Size  Location     Type
 13277 ;;                  1    wreg      _Bool 
 13278 ;; Registers used:
 13279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13280 ;; Tracked objects:
 13281 ;;		On entry : 0/0
 13282 ;;		On exit  : 0/0
 13283 ;;		Unchanged: 0/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13285 ;;      Params:         7       0       0       0       0       0       0       0       0
 13286 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13287 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13288 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13289 ;;Total ram usage:        7 bytes
 13290 ;; Hardware stack levels used:    1
 13291 ;; Hardware stack levels required when called:    7
 13292 ;; This function calls:
 13293 ;;		_MPU6050_writeMemoryBlock
 13294 ;; This function is called by:
 13295 ;;		_MPU6050_dmpInitialize
 13296 ;;		_MPU6050_writeDMPConfigurationSet
 13297 ;; This function uses a non-reentrant model
 13298 ;;
 13299                           
 13300                           	psect	text39
 13301  00659E                     __ptext39:
 13302                           	callstack 0
 13303  00659E                     _MPU6050_writeProgMemoryBlock:
 13304                           	callstack 22
 13305  00659E                     
 13306                           ;MPU6050.c: 3097:     return MPU6050_writeMemoryBlock(data, dataSize, bank, address, ver
      +                          ify, 1);
 13307  00659E  C048  F013         	movff	MPU6050_writeProgMemoryBlock@data,MPU6050_writeMemoryBlock@data
 13308  0065A2  C049  F014         	movff	MPU6050_writeProgMemoryBlock@data+1,MPU6050_writeMemoryBlock@data+1
 13309  0065A6  C04A  F015         	movff	MPU6050_writeProgMemoryBlock@dataSize,MPU6050_writeMemoryBlock@dataSize
 13310  0065AA  C04B  F016         	movff	MPU6050_writeProgMemoryBlock@dataSize+1,MPU6050_writeMemoryBlock@dataSize+1
 13311  0065AE  C04C  F017         	movff	MPU6050_writeProgMemoryBlock@bank,MPU6050_writeMemoryBlock@bank
 13312  0065B2  C04D  F018         	movff	MPU6050_writeProgMemoryBlock@address,MPU6050_writeMemoryBlock@address
 13313  0065B6  C04E  F019         	movff	MPU6050_writeProgMemoryBlock@verify,MPU6050_writeMemoryBlock@verify
 13314  0065BA  0E01               	movlw	1
 13315  0065BC  6E1A               	movwf	MPU6050_writeMemoryBlock@useProgMem^0,c
 13316  0065BE  EC0A  F021         	call	_MPU6050_writeMemoryBlock	;wreg free
 13317  0065C2  0012               	return		;funcret
 13318  0065C4                     __end_of_MPU6050_writeProgMemoryBlock:
 13319                           	callstack 0
 13320                           
 13321 ;; *************** function _MPU6050_writeMemoryBlock *****************
 13322 ;; Defined at:
 13323 ;;		line 3017 in file "MPU6050.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;  data            2   18[COMRAM] PTR const unsigned char 
 13326 ;;		 -> dmpMemory(3062), MPU6050_writeDMPConfigurationSet@mlc(16), 
 13327 ;;  dataSize        2   20[COMRAM] unsigned short 
 13328 ;;  bank            1   22[COMRAM] unsigned char 
 13329 ;;  address         1   23[COMRAM] unsigned char 
 13330 ;;  verify          1   24[COMRAM] _Bool 
 13331 ;;  useProgMem      1   25[COMRAM] _Bool 
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  mlc2           16   47[COMRAM] unsigned char [16]
 13334 ;;  mlc1           16   31[COMRAM] unsigned char [16]
 13335 ;;  i               2   68[COMRAM] unsigned short 
 13336 ;;  progBuffer      2   65[COMRAM] PTR unsigned char 
 13337 ;;		 -> dmpMemory(3062), MPU6050_writeDMPConfigurationSet@mlc(16), MPU6050_writeMemoryBlock@mlc2(16), 
 13338 ;;  verifyBuffer    2   63[COMRAM] PTR unsigned char 
 13339 ;;		 -> MPU6050_writeMemoryBlock@mlc1(16), 
 13340 ;;  chunkSize       1   70[COMRAM] unsigned char 
 13341 ;;  j               1   67[COMRAM] unsigned char 
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  1    wreg      _Bool 
 13344 ;; Registers used:
 13345 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13351 ;;      Params:         8       0       0       0       0       0       0       0       0
 13352 ;;      Locals:        40       0       0       0       0       0       0       0       0
 13353 ;;      Temps:          5       0       0       0       0       0       0       0       0
 13354 ;;      Totals:        53       0       0       0       0       0       0       0       0
 13355 ;;Total ram usage:       53 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; Hardware stack levels required when called:    6
 13358 ;; This function calls:
 13359 ;;		_I2Cdev_readBytes
 13360 ;;		_I2Cdev_writeBytes
 13361 ;;		_MPU6050_setMemoryBank
 13362 ;;		_MPU6050_setMemoryStartAddress
 13363 ;;		_memcmp
 13364 ;; This function is called by:
 13365 ;;		_MPU6050_writeProgMemoryBlock
 13366 ;; This function uses a non-reentrant model
 13367 ;;
 13368                           
 13369                           	psect	text40
 13370  004214                     __ptext40:
 13371                           	callstack 0
 13372  004214                     _MPU6050_writeMemoryBlock:
 13373                           	callstack 22
 13374  004214                     
 13375                           ;MPU6050.c: 3018:     MPU6050_setMemoryBank(bank, 0, 0);
 13376  004214  0E00               	movlw	0
 13377  004216  6E10               	movwf	MPU6050_setMemoryBank@prefetchEnabled^0,c
 13378  004218  0E00               	movlw	0
 13379  00421A  6E11               	movwf	MPU6050_setMemoryBank@userBank^0,c
 13380  00421C  5017               	movf	MPU6050_writeMemoryBlock@bank^0,w,c
 13381  00421E  ECEF  F031         	call	_MPU6050_setMemoryBank
 13382                           
 13383                           ;MPU6050.c: 3019:     MPU6050_setMemoryStartAddress(address);
 13384  004222  5018               	movf	MPU6050_writeMemoryBlock@address^0,w,c
 13385  004224  EC21  F034         	call	_MPU6050_setMemoryStartAddress
 13386  004228                     
 13387                           ;MPU6050.c: 3021:     uint8_t mlc1[16];;MPU6050.c: 3022:     uint8_t mlc2[16];;MPU6050.c
      +                          : 3024:     uint8_t chunkSize;;MPU6050.c: 3025:     uint8_t *verifyBuffer;;MPU6050.c: 30
      +                          26:     uint8_t *progBuffer;;MPU6050.c: 3027:     uint16_t i;;MPU6050.c: 3028:     uint8
      +                          _t j;;MPU6050.c: 3029:     if (verify) verifyBuffer = mlc1;
 13388  004228  5019               	movf	MPU6050_writeMemoryBlock@verify^0,w,c
 13389  00422A  B4D8               	btfsc	status,2,c
 13390  00422C  EF1A  F021         	goto	u7921
 13391  004230  EF1C  F021         	goto	u7920
 13392  004234                     u7921:
 13393  004234  EF20  F021         	goto	l8751
 13394  004238                     u7920:
 13395  004238  0E20               	movlw	low MPU6050_writeMemoryBlock@mlc1
 13396  00423A  6E40               	movwf	MPU6050_writeMemoryBlock@verifyBuffer^0,c
 13397  00423C  0E00               	movlw	high MPU6050_writeMemoryBlock@mlc1
 13398  00423E  6E41               	movwf	(MPU6050_writeMemoryBlock@verifyBuffer+1)^0,c
 13399  004240                     l8751:
 13400                           
 13401                           ;MPU6050.c: 3030:     if (useProgMem) progBuffer = mlc2;
 13402  004240  501A               	movf	MPU6050_writeMemoryBlock@useProgMem^0,w,c
 13403  004242  B4D8               	btfsc	status,2,c
 13404  004244  EF26  F021         	goto	u7931
 13405  004248  EF28  F021         	goto	u7930
 13406  00424C                     u7931:
 13407  00424C  EF2C  F021         	goto	l8755
 13408  004250                     u7930:
 13409  004250  0E30               	movlw	low MPU6050_writeMemoryBlock@mlc2
 13410  004252  6E42               	movwf	MPU6050_writeMemoryBlock@progBuffer^0,c
 13411  004254  0E00               	movlw	high MPU6050_writeMemoryBlock@mlc2
 13412  004256  6E43               	movwf	(MPU6050_writeMemoryBlock@progBuffer+1)^0,c
 13413  004258                     l8755:
 13414                           
 13415                           ;MPU6050.c: 3031:     for (i = 0; i < dataSize;) {
 13416  004258  0E00               	movlw	0
 13417  00425A  6E46               	movwf	(MPU6050_writeMemoryBlock@i+1)^0,c
 13418  00425C  0E00               	movlw	0
 13419  00425E  6E45               	movwf	MPU6050_writeMemoryBlock@i^0,c
 13420  004260  EF26  F022         	goto	l8803
 13421  004264                     l8757:
 13422                           
 13423                           ;MPU6050.c: 3033:         chunkSize = 16;
 13424  004264  0E10               	movlw	16
 13425  004266  6E47               	movwf	MPU6050_writeMemoryBlock@chunkSize^0,c
 13426  004268                     
 13427                           ;MPU6050.c: 3036:         if (i + chunkSize > dataSize) chunkSize = dataSize - i;
 13428  004268  0E10               	movlw	16
 13429  00426A  2445               	addwf	MPU6050_writeMemoryBlock@i^0,w,c
 13430  00426C  6E1B               	movwf	??_MPU6050_writeMemoryBlock^0,c
 13431  00426E  0E00               	movlw	0
 13432  004270  2046               	addwfc	(MPU6050_writeMemoryBlock@i+1)^0,w,c
 13433  004272  6E1C               	movwf	(??_MPU6050_writeMemoryBlock+1)^0,c
 13434  004274  501B               	movf	??_MPU6050_writeMemoryBlock^0,w,c
 13435  004276  5C15               	subwf	MPU6050_writeMemoryBlock@dataSize^0,w,c
 13436  004278  501C               	movf	(??_MPU6050_writeMemoryBlock+1)^0,w,c
 13437  00427A  5816               	subwfb	(MPU6050_writeMemoryBlock@dataSize+1)^0,w,c
 13438  00427C  B0D8               	btfsc	status,0,c
 13439  00427E  EF43  F021         	goto	u7941
 13440  004282  EF45  F021         	goto	u7940
 13441  004286                     u7941:
 13442  004286  EF48  F021         	goto	l1186
 13443  00428A                     u7940:
 13444  00428A  5045               	movf	MPU6050_writeMemoryBlock@i^0,w,c
 13445  00428C  5C15               	subwf	MPU6050_writeMemoryBlock@dataSize^0,w,c
 13446  00428E  6E47               	movwf	MPU6050_writeMemoryBlock@chunkSize^0,c
 13447  004290                     l1186:
 13448                           
 13449                           ;MPU6050.c: 3039:         if (chunkSize > 256 - address) chunkSize = 256 - address;
 13450  004290  5047               	movf	MPU6050_writeMemoryBlock@chunkSize^0,w,c
 13451  004292  6E1B               	movwf	??_MPU6050_writeMemoryBlock^0,c
 13452  004294  6A1C               	clrf	(??_MPU6050_writeMemoryBlock+1)^0,c
 13453  004296  0E00               	movlw	0
 13454  004298  6E1D               	movwf	(??_MPU6050_writeMemoryBlock+2)^0,c
 13455  00429A  0E01               	movlw	1
 13456  00429C  6E1E               	movwf	(??_MPU6050_writeMemoryBlock+3)^0,c
 13457  00429E  5018               	movf	MPU6050_writeMemoryBlock@address^0,w,c
 13458  0042A0  5E1D               	subwf	(??_MPU6050_writeMemoryBlock+2)^0,f,c
 13459  0042A2  0E00               	movlw	0
 13460  0042A4  5A1E               	subwfb	(??_MPU6050_writeMemoryBlock+3)^0,f,c
 13461  0042A6  501B               	movf	??_MPU6050_writeMemoryBlock^0,w,c
 13462  0042A8  5C1D               	subwf	(??_MPU6050_writeMemoryBlock+2)^0,w,c
 13463  0042AA  501E               	movf	(??_MPU6050_writeMemoryBlock+3)^0,w,c
 13464  0042AC  0A80               	xorlw	128
 13465  0042AE  6E1F               	movwf	(??_MPU6050_writeMemoryBlock+4)^0,c
 13466  0042B0  501C               	movf	(??_MPU6050_writeMemoryBlock+1)^0,w,c
 13467  0042B2  0A80               	xorlw	128
 13468  0042B4  581F               	subwfb	(??_MPU6050_writeMemoryBlock+4)^0,w,c
 13469  0042B6  B0D8               	btfsc	status,0,c
 13470  0042B8  EF60  F021         	goto	u7951
 13471  0042BC  EF62  F021         	goto	u7950
 13472  0042C0                     u7951:
 13473  0042C0  EF65  F021         	goto	l8765
 13474  0042C4                     u7950:
 13475  0042C4  5018               	movf	MPU6050_writeMemoryBlock@address^0,w,c
 13476  0042C6  0800               	sublw	0
 13477  0042C8  6E47               	movwf	MPU6050_writeMemoryBlock@chunkSize^0,c
 13478  0042CA                     l8765:
 13479                           
 13480                           ;MPU6050.c: 3041:         if (useProgMem) {
 13481  0042CA  501A               	movf	MPU6050_writeMemoryBlock@useProgMem^0,w,c
 13482  0042CC  B4D8               	btfsc	status,2,c
 13483  0042CE  EF6B  F021         	goto	u7961
 13484  0042D2  EF6D  F021         	goto	u7960
 13485  0042D6                     u7961:
 13486  0042D6  EFB0  F021         	goto	l8775
 13487  0042DA                     u7960:
 13488  0042DA                     
 13489                           ;MPU6050.c: 3043:             for (j = 0; j < chunkSize; j++) progBuffer[j] = (*(data + 
      +                          i + j));
 13490  0042DA  0E00               	movlw	0
 13491  0042DC  6E44               	movwf	MPU6050_writeMemoryBlock@j^0,c
 13492  0042DE  EFA5  F021         	goto	l8773
 13493  0042E2                     l8769:
 13494  0042E2  5044               	movf	MPU6050_writeMemoryBlock@j^0,w,c
 13495  0042E4  2413               	addwf	MPU6050_writeMemoryBlock@data^0,w,c
 13496  0042E6  6E1B               	movwf	??_MPU6050_writeMemoryBlock^0,c
 13497  0042E8  0E00               	movlw	0
 13498  0042EA  2014               	addwfc	(MPU6050_writeMemoryBlock@data+1)^0,w,c
 13499  0042EC  6E1C               	movwf	(??_MPU6050_writeMemoryBlock+1)^0,c
 13500  0042EE  5045               	movf	MPU6050_writeMemoryBlock@i^0,w,c
 13501  0042F0  261B               	addwf	??_MPU6050_writeMemoryBlock^0,f,c
 13502  0042F2  5046               	movf	(MPU6050_writeMemoryBlock@i+1)^0,w,c
 13503  0042F4  221C               	addwfc	(??_MPU6050_writeMemoryBlock+1)^0,f,c
 13504  0042F6  C01B  FFF6         	movff	??_MPU6050_writeMemoryBlock,tblptrl
 13505  0042FA  C01C  FFF7         	movff	??_MPU6050_writeMemoryBlock+1,tblptrh
 13506  0042FE  6AF8               	clrf	tblptru,c
 13507  004300  0E07               	movlw	(high __ramtop+-1)
 13508  004302  64F7               	cpfsgt	tblptrh,c
 13509  004304  D003               	bra	u7977
 13510  004306  0008               	tblrd		*
 13511  004308  50F5               	movf	tablat,w,c
 13512  00430A  D005               	bra	u7970
 13513  00430C                     u7977:
 13514  00430C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13515  004310  CFF7 FFEA          	movff	tblptrh,fsr0h
 13516  004314  50EF               	movf	indf0,w,c
 13517  004316                     u7970:
 13518  004316  6E1D               	movwf	(??_MPU6050_writeMemoryBlock+2)^0,c
 13519  004318  5044               	movf	MPU6050_writeMemoryBlock@j^0,w,c
 13520  00431A  2442               	addwf	MPU6050_writeMemoryBlock@progBuffer^0,w,c
 13521  00431C  6E1E               	movwf	(??_MPU6050_writeMemoryBlock+3)^0,c
 13522  00431E  0E00               	movlw	0
 13523  004320  2043               	addwfc	(MPU6050_writeMemoryBlock@progBuffer+1)^0,w,c
 13524  004322  6E1F               	movwf	(??_MPU6050_writeMemoryBlock+4)^0,c
 13525  004324  C01E  FFF6         	movff	??_MPU6050_writeMemoryBlock+3,tblptrl
 13526  004328  C01F  FFF7         	movff	??_MPU6050_writeMemoryBlock+4,tblptrh
 13527  00432C  6AF8               	clrf	tblptru,c
 13528  00432E  0E07               	movlw	(high __ramtop+-1)
 13529  004330  64F7               	cpfsgt	tblptrh,c
 13530  004332  D004               	bra	u7987
 13531  004334  C01D  FFF5         	movff	??_MPU6050_writeMemoryBlock+2,tablat
 13532  004338  000C               	tblwt		*
 13533  00433A  D006               	bra	u7980
 13534  00433C                     u7987:
 13535  00433C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13536  004340  CFF7 FFEA          	movff	tblptrh,fsr0h
 13537  004344  C01D  FFEF         	movff	??_MPU6050_writeMemoryBlock+2,indf0
 13538  004348                     u7980:
 13539  004348  2A44               	incf	MPU6050_writeMemoryBlock@j^0,f,c
 13540  00434A                     l8773:
 13541  00434A  5047               	movf	MPU6050_writeMemoryBlock@chunkSize^0,w,c
 13542  00434C  5C44               	subwf	MPU6050_writeMemoryBlock@j^0,w,c
 13543  00434E  A0D8               	btfss	status,0,c
 13544  004350  EFAC  F021         	goto	u7991
 13545  004354  EFAE  F021         	goto	u7990
 13546  004358                     u7991:
 13547  004358  EF71  F021         	goto	l8769
 13548  00435C                     u7990:
 13549  00435C  EFB6  F021         	goto	l8777
 13550  004360                     l8775:
 13551                           
 13552                           ;MPU6050.c: 3046:             progBuffer = (uint8_t *)data + i;
 13553  004360  5045               	movf	MPU6050_writeMemoryBlock@i^0,w,c
 13554  004362  2413               	addwf	MPU6050_writeMemoryBlock@data^0,w,c
 13555  004364  6E42               	movwf	MPU6050_writeMemoryBlock@progBuffer^0,c
 13556  004366  5046               	movf	(MPU6050_writeMemoryBlock@i+1)^0,w,c
 13557  004368  2014               	addwfc	(MPU6050_writeMemoryBlock@data+1)^0,w,c
 13558  00436A  6E43               	movwf	(MPU6050_writeMemoryBlock@progBuffer+1)^0,c
 13559  00436C                     l8777:
 13560                           
 13561                           ;MPU6050.c: 3049:         I2Cdev_writeBytes(mpu6050.devAddr, 0x6F, chunkSize, progBuffer
      +                          );
 13562  00436C  0E6F               	movlw	111
 13563  00436E  6E05               	movwf	I2Cdev_writeBytes@regAddr^0,c
 13564  004370  C047  F006         	movff	MPU6050_writeMemoryBlock@chunkSize,I2Cdev_writeBytes@length
 13565  004374  C042  F007         	movff	MPU6050_writeMemoryBlock@progBuffer,I2Cdev_writeBytes@data
 13566  004378  C043  F008         	movff	MPU6050_writeMemoryBlock@progBuffer+1,I2Cdev_writeBytes@data+1
 13567  00437C  0101               	movlb	1	; () banked
 13568  00437E  5197               	movf	_mpu6050& (0+255),w,b
 13569  004380  EC7E  F02F         	call	_I2Cdev_writeBytes
 13570  004384                     
 13571                           ;MPU6050.c: 3052:         if (verify && verifyBuffer) {
 13572  004384  5019               	movf	MPU6050_writeMemoryBlock@verify^0,w,c
 13573  004386  B4D8               	btfsc	status,2,c
 13574  004388  EFC8  F021         	goto	u8001
 13575  00438C  EFCA  F021         	goto	u8000
 13576  004390                     u8001:
 13577  004390  EF02  F022         	goto	l8793
 13578  004394                     u8000:
 13579  004394  5040               	movf	MPU6050_writeMemoryBlock@verifyBuffer^0,w,c
 13580  004396  1041               	iorwf	(MPU6050_writeMemoryBlock@verifyBuffer+1)^0,w,c
 13581  004398  B4D8               	btfsc	status,2,c
 13582  00439A  EFD1  F021         	goto	u8011
 13583  00439E  EFD3  F021         	goto	u8010
 13584  0043A2                     u8011:
 13585  0043A2  EF02  F022         	goto	l8793
 13586  0043A6                     u8010:
 13587  0043A6                     
 13588                           ;MPU6050.c: 3053:             MPU6050_setMemoryBank(bank, 0, 0);
 13589  0043A6  0E00               	movlw	0
 13590  0043A8  6E10               	movwf	MPU6050_setMemoryBank@prefetchEnabled^0,c
 13591  0043AA  0E00               	movlw	0
 13592  0043AC  6E11               	movwf	MPU6050_setMemoryBank@userBank^0,c
 13593  0043AE  5017               	movf	MPU6050_writeMemoryBlock@bank^0,w,c
 13594  0043B0  ECEF  F031         	call	_MPU6050_setMemoryBank
 13595                           
 13596                           ;MPU6050.c: 3054:             MPU6050_setMemoryStartAddress(address);
 13597  0043B4  5018               	movf	MPU6050_writeMemoryBlock@address^0,w,c
 13598  0043B6  EC21  F034         	call	_MPU6050_setMemoryStartAddress
 13599  0043BA                     
 13600                           ;MPU6050.c: 3055:             I2Cdev_readBytes(mpu6050.devAddr, 0x6F, chunkSize, verifyB
      +                          uffer);
 13601  0043BA  0E6F               	movlw	111
 13602  0043BC  6E05               	movwf	I2Cdev_readBytes@regAddr^0,c
 13603  0043BE  C047  F006         	movff	MPU6050_writeMemoryBlock@chunkSize,I2Cdev_readBytes@length
 13604  0043C2  C040  F007         	movff	MPU6050_writeMemoryBlock@verifyBuffer,I2Cdev_readBytes@data
 13605  0043C6  C041  F008         	movff	MPU6050_writeMemoryBlock@verifyBuffer+1,I2Cdev_readBytes@data+1
 13606  0043CA  0101               	movlb	1	; () banked
 13607  0043CC  5197               	movf	_mpu6050& (0+255),w,b
 13608  0043CE  EC91  F029         	call	_I2Cdev_readBytes
 13609  0043D2                     
 13610                           ;MPU6050.c: 3056:             if (memcmp(progBuffer, verifyBuffer, chunkSize) != 0) {
 13611  0043D2  C042  F004         	movff	MPU6050_writeMemoryBlock@progBuffer,memcmp@vl
 13612  0043D6  C043  F005         	movff	MPU6050_writeMemoryBlock@progBuffer+1,memcmp@vl+1
 13613  0043DA  C040  F006         	movff	MPU6050_writeMemoryBlock@verifyBuffer,memcmp@vr
 13614  0043DE  C041  F007         	movff	MPU6050_writeMemoryBlock@verifyBuffer+1,memcmp@vr+1
 13615  0043E2  C047  F008         	movff	MPU6050_writeMemoryBlock@chunkSize,memcmp@n
 13616  0043E6  6A09               	clrf	(memcmp@n+1)^0,c
 13617  0043E8  EC42  F02B         	call	_memcmp	;wreg free
 13618  0043EC  5004               	movf	?_memcmp^0,w,c
 13619  0043EE  1005               	iorwf	(?_memcmp+1)^0,w,c
 13620  0043F0  B4D8               	btfsc	status,2,c
 13621  0043F2  EFFD  F021         	goto	u8021
 13622  0043F6  EFFF  F021         	goto	u8020
 13623  0043FA                     u8021:
 13624  0043FA  EF02  F022         	goto	l8793
 13625  0043FE                     u8020:
 13626  0043FE                     
 13627                           ;MPU6050.c: 3076:                 return 0;
 13628  0043FE  0E00               	movlw	0
 13629  004400  EF32  F022         	goto	l1195
 13630  004404                     l8793:
 13631                           
 13632                           ;MPU6050.c: 3081:         i += chunkSize;
 13633  004404  5047               	movf	MPU6050_writeMemoryBlock@chunkSize^0,w,c
 13634  004406  2645               	addwf	MPU6050_writeMemoryBlock@i^0,f,c
 13635  004408  0E00               	movlw	0
 13636  00440A  2246               	addwfc	(MPU6050_writeMemoryBlock@i+1)^0,f,c
 13637                           
 13638                           ;MPU6050.c: 3084:         address += chunkSize;
 13639  00440C  5047               	movf	MPU6050_writeMemoryBlock@chunkSize^0,w,c
 13640  00440E  2618               	addwf	MPU6050_writeMemoryBlock@address^0,f,c
 13641                           
 13642                           ;MPU6050.c: 3087:         if (i < dataSize) {
 13643  004410  5015               	movf	MPU6050_writeMemoryBlock@dataSize^0,w,c
 13644  004412  5C45               	subwf	MPU6050_writeMemoryBlock@i^0,w,c
 13645  004414  5016               	movf	(MPU6050_writeMemoryBlock@dataSize+1)^0,w,c
 13646  004416  5846               	subwfb	(MPU6050_writeMemoryBlock@i+1)^0,w,c
 13647  004418  B0D8               	btfsc	status,0,c
 13648  00441A  EF11  F022         	goto	u8031
 13649  00441E  EF13  F022         	goto	u8030
 13650  004422                     u8031:
 13651  004422  EF26  F022         	goto	l8803
 13652  004426                     u8030:
 13653  004426                     
 13654                           ;MPU6050.c: 3088:             if (address == 0) bank++;
 13655  004426  5018               	movf	MPU6050_writeMemoryBlock@address^0,w,c
 13656  004428  A4D8               	btfss	status,2,c
 13657  00442A  EF19  F022         	goto	u8041
 13658  00442E  EF1B  F022         	goto	u8040
 13659  004432                     u8041:
 13660  004432  EF1C  F022         	goto	l8799
 13661  004436                     u8040:
 13662  004436  2A17               	incf	MPU6050_writeMemoryBlock@bank^0,f,c
 13663  004438                     l8799:
 13664                           
 13665                           ;MPU6050.c: 3089:             MPU6050_setMemoryBank(bank, 0, 0);
 13666  004438  0E00               	movlw	0
 13667  00443A  6E10               	movwf	MPU6050_setMemoryBank@prefetchEnabled^0,c
 13668  00443C  0E00               	movlw	0
 13669  00443E  6E11               	movwf	MPU6050_setMemoryBank@userBank^0,c
 13670  004440  5017               	movf	MPU6050_writeMemoryBlock@bank^0,w,c
 13671  004442  ECEF  F031         	call	_MPU6050_setMemoryBank
 13672  004446                     
 13673                           ;MPU6050.c: 3090:             MPU6050_setMemoryStartAddress(address);
 13674  004446  5018               	movf	MPU6050_writeMemoryBlock@address^0,w,c
 13675  004448  EC21  F034         	call	_MPU6050_setMemoryStartAddress
 13676  00444C                     l8803:
 13677  00444C  5015               	movf	MPU6050_writeMemoryBlock@dataSize^0,w,c
 13678  00444E  5C45               	subwf	MPU6050_writeMemoryBlock@i^0,w,c
 13679  004450  5016               	movf	(MPU6050_writeMemoryBlock@dataSize+1)^0,w,c
 13680  004452  5846               	subwfb	(MPU6050_writeMemoryBlock@i+1)^0,w,c
 13681  004454  A0D8               	btfss	status,0,c
 13682  004456  EF2F  F022         	goto	u8051
 13683  00445A  EF31  F022         	goto	u8050
 13684  00445E                     u8051:
 13685  00445E  EF32  F021         	goto	l8757
 13686  004462                     u8050:
 13687  004462                     
 13688                           ;MPU6050.c: 3093:     return 1;
 13689  004462  0E01               	movlw	1
 13690  004464                     l1195:
 13691  004464  0012               	return		;funcret
 13692  004466                     __end_of_MPU6050_writeMemoryBlock:
 13693                           	callstack 0
 13694                           
 13695 ;; *************** function _memcmp *****************
 13696 ;; Defined at:
 13697 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\memcmp.c"
 13698 ;; Parameters:    Size  Location     Type
 13699 ;;  vl              2    3[COMRAM] PTR const void 
 13700 ;;		 -> dmpMemory(3062), MPU6050_writeDMPConfigurationSet@mlc(16), MPU6050_writeMemoryBlock@mlc2(16), 
 13701 ;;  vr              2    5[COMRAM] PTR const void 
 13702 ;;		 -> MPU6050_writeMemoryBlock@mlc1(16), 
 13703 ;;  n               2    7[COMRAM] unsigned int 
 13704 ;; Auto vars:     Size  Location     Type
 13705 ;;  r               2   13[COMRAM] PTR const unsigned char 
 13706 ;;		 -> MPU6050_writeMemoryBlock@mlc1(16), 
 13707 ;;  l               2   11[COMRAM] PTR const unsigned char 
 13708 ;;		 -> dmpMemory(3062), MPU6050_writeDMPConfigurationSet@mlc(16), MPU6050_writeMemoryBlock@mlc2(16), 
 13709 ;; Return value:  Size  Location     Type
 13710 ;;                  2    3[COMRAM] int 
 13711 ;; Registers used:
 13712 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13713 ;; Tracked objects:
 13714 ;;		On entry : 0/0
 13715 ;;		On exit  : 0/0
 13716 ;;		Unchanged: 0/0
 13717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13718 ;;      Params:         6       0       0       0       0       0       0       0       0
 13719 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13720 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13721 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13722 ;;Total ram usage:       12 bytes
 13723 ;; Hardware stack levels used:    1
 13724 ;; Hardware stack levels required when called:    2
 13725 ;; This function calls:
 13726 ;;		Nothing
 13727 ;; This function is called by:
 13728 ;;		_MPU6050_writeMemoryBlock
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           	psect	text41
 13733  005684                     __ptext41:
 13734                           	callstack 0
 13735  005684                     _memcmp:
 13736                           	callstack 25
 13737  005684  C004  F00C         	movff	memcmp@vl,memcmp@l
 13738  005688  C005  F00D         	movff	memcmp@vl+1,memcmp@l+1
 13739  00568C  C006  F00E         	movff	memcmp@vr,memcmp@r
 13740  005690  C007  F00F         	movff	memcmp@vr+1,memcmp@r+1
 13741  005694  EF53  F02B         	goto	l8339
 13742  005698                     l8337:
 13743  005698  0608               	decf	memcmp@n^0,f,c
 13744  00569A  A0D8               	btfss	status,0,c
 13745  00569C  0609               	decf	(memcmp@n+1)^0,f,c
 13746  00569E  4A0C               	infsnz	memcmp@l^0,f,c
 13747  0056A0  2A0D               	incf	(memcmp@l+1)^0,f,c
 13748  0056A2  4A0E               	infsnz	memcmp@r^0,f,c
 13749  0056A4  2A0F               	incf	(memcmp@r+1)^0,f,c
 13750  0056A6                     l8339:
 13751  0056A6  5008               	movf	memcmp@n^0,w,c
 13752  0056A8  1009               	iorwf	(memcmp@n+1)^0,w,c
 13753  0056AA  B4D8               	btfsc	status,2,c
 13754  0056AC  EF5A  F02B         	goto	u7201
 13755  0056B0  EF5C  F02B         	goto	u7200
 13756  0056B4                     u7201:
 13757  0056B4  EF7A  F02B         	goto	l8343
 13758  0056B8                     u7200:
 13759  0056B8  C00E  FFD9         	movff	memcmp@r,fsr2l
 13760  0056BC  C00F  FFDA         	movff	memcmp@r+1,fsr2h
 13761  0056C0  50DF               	movf	indf2,w,c
 13762  0056C2  6E0A               	movwf	??_memcmp^0,c
 13763  0056C4  C00C  FFF6         	movff	memcmp@l,tblptrl
 13764  0056C8  C00D  FFF7         	movff	memcmp@l+1,tblptrh
 13765  0056CC  6AF8               	clrf	tblptru,c
 13766  0056CE  0E07               	movlw	(high __ramtop+-1)
 13767  0056D0  64F7               	cpfsgt	tblptrh,c
 13768  0056D2  D003               	bra	u7217
 13769  0056D4  0008               	tblrd		*
 13770  0056D6  50F5               	movf	tablat,w,c
 13771  0056D8  D005               	bra	u7215
 13772  0056DA                     u7217:
 13773  0056DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13774  0056DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13775  0056E2  50EF               	movf	indf0,w,c
 13776  0056E4                     u7215:
 13777  0056E4  180A               	xorwf	??_memcmp^0,w,c
 13778  0056E6  B4D8               	btfsc	status,2,c
 13779  0056E8  EF78  F02B         	goto	u7211
 13780  0056EC  EF7A  F02B         	goto	u7210
 13781  0056F0                     u7211:
 13782  0056F0  EF4C  F02B         	goto	l8337
 13783  0056F4                     u7210:
 13784  0056F4                     l8343:
 13785  0056F4  5008               	movf	memcmp@n^0,w,c
 13786  0056F6  1009               	iorwf	(memcmp@n+1)^0,w,c
 13787  0056F8  A4D8               	btfss	status,2,c
 13788  0056FA  EF81  F02B         	goto	u7221
 13789  0056FE  EF83  F02B         	goto	u7220
 13790  005702                     u7221:
 13791  005702  EF89  F02B         	goto	l8347
 13792  005706                     u7220:
 13793  005706  0E00               	movlw	0
 13794  005708  6E05               	movwf	(?_memcmp+1)^0,c
 13795  00570A  0E00               	movlw	0
 13796  00570C  6E04               	movwf	?_memcmp^0,c
 13797  00570E  EFA6  F02B         	goto	l2654
 13798  005712                     l8347:
 13799  005712  C00C  FFF6         	movff	memcmp@l,tblptrl
 13800  005716  C00D  FFF7         	movff	memcmp@l+1,tblptrh
 13801  00571A  6AF8               	clrf	tblptru,c
 13802  00571C  0E07               	movlw	(high __ramtop+-1)
 13803  00571E  64F7               	cpfsgt	tblptrh,c
 13804  005720  D003               	bra	u7237
 13805  005722  0008               	tblrd		*
 13806  005724  50F5               	movf	tablat,w,c
 13807  005726  D005               	bra	u7230
 13808  005728                     u7237:
 13809  005728  CFF6 FFE9          	movff	tblptrl,fsr0l
 13810  00572C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13811  005730  50EF               	movf	indf0,w,c
 13812  005732                     u7230:
 13813  005732  6E0A               	movwf	??_memcmp^0,c
 13814  005734  C00E  FFD9         	movff	memcmp@r,fsr2l
 13815  005738  C00F  FFDA         	movff	memcmp@r+1,fsr2h
 13816  00573C  50DF               	movf	indf2,w,c
 13817  00573E  6E0B               	movwf	(??_memcmp+1)^0,c
 13818  005740  500B               	movf	(??_memcmp+1)^0,w,c
 13819  005742  5C0A               	subwf	??_memcmp^0,w,c
 13820  005744  6E04               	movwf	?_memcmp^0,c
 13821  005746  6A05               	clrf	(?_memcmp+1)^0,c
 13822  005748  A0D8               	btfss	status,0,c
 13823  00574A  0605               	decf	(?_memcmp+1)^0,f,c
 13824  00574C                     l2654:
 13825  00574C  0012               	return		;funcret
 13826  00574E                     __end_of_memcmp:
 13827                           	callstack 0
 13828                           
 13829 ;; *************** function _MPU6050_setMemoryStartAddress *****************
 13830 ;; Defined at:
 13831 ;;		line 2972 in file "MPU6050.c"
 13832 ;; Parameters:    Size  Location     Type
 13833 ;;  address         1    wreg     unsigned char 
 13834 ;; Auto vars:     Size  Location     Type
 13835 ;;  address         1   15[COMRAM] unsigned char 
 13836 ;; Return value:  Size  Location     Type
 13837 ;;                  1    wreg      void 
 13838 ;; Registers used:
 13839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13840 ;; Tracked objects:
 13841 ;;		On entry : 0/0
 13842 ;;		On exit  : 0/0
 13843 ;;		Unchanged: 0/0
 13844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13845 ;;      Params:         0       0       0       0       0       0       0       0       0
 13846 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13847 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13848 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13849 ;;Total ram usage:        1 bytes
 13850 ;; Hardware stack levels used:    1
 13851 ;; Hardware stack levels required when called:    5
 13852 ;; This function calls:
 13853 ;;		_I2Cdev_writeByte
 13854 ;; This function is called by:
 13855 ;;		_MPU6050_writeMemoryBlock
 13856 ;;		_MPU6050_readMemoryBlock
 13857 ;; This function uses a non-reentrant model
 13858 ;;
 13859                           
 13860                           	psect	text42
 13861  006842                     __ptext42:
 13862                           	callstack 0
 13863  006842                     _MPU6050_setMemoryStartAddress:
 13864                           	callstack 22
 13865                           
 13866                           ;incstack = 0
 13867                           ;MPU6050_setMemoryStartAddress@address stored from wreg
 13868  006842  6E10               	movwf	MPU6050_setMemoryStartAddress@address^0,c
 13869  006844                     
 13870                           ;MPU6050.c: 2973:     I2Cdev_writeByte(mpu6050.devAddr, 0x6E, address);
 13871  006844  0E6E               	movlw	110
 13872  006846  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13873  006848  C010  F00E         	movff	MPU6050_setMemoryStartAddress@address,I2Cdev_writeByte@data
 13874  00684C  0101               	movlb	1	; () banked
 13875  00684E  5197               	movf	_mpu6050& (0+255),w,b
 13876  006850  ECA9  F033         	call	_I2Cdev_writeByte
 13877  006854  0012               	return		;funcret
 13878  006856                     __end_of_MPU6050_setMemoryStartAddress:
 13879                           	callstack 0
 13880                           
 13881 ;; *************** function _MPU6050_setMemoryBank *****************
 13882 ;; Defined at:
 13883 ;;		line 2963 in file "MPU6050.c"
 13884 ;; Parameters:    Size  Location     Type
 13885 ;;  bank            1    wreg     unsigned char 
 13886 ;;  prefetchEnab    1   15[COMRAM] _Bool 
 13887 ;;  userBank        1   16[COMRAM] _Bool 
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;  bank            1   17[COMRAM] unsigned char 
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  1    wreg      void 
 13892 ;; Registers used:
 13893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13899 ;;      Params:         2       0       0       0       0       0       0       0       0
 13900 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13902 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13903 ;;Total ram usage:        3 bytes
 13904 ;; Hardware stack levels used:    1
 13905 ;; Hardware stack levels required when called:    5
 13906 ;; This function calls:
 13907 ;;		_I2Cdev_writeByte
 13908 ;; This function is called by:
 13909 ;;		_MPU6050_writeMemoryBlock
 13910 ;;		_MPU6050_readMemoryBlock
 13911 ;; This function uses a non-reentrant model
 13912 ;;
 13913                           
 13914                           	psect	text43
 13915  0063DE                     __ptext43:
 13916                           	callstack 0
 13917  0063DE                     _MPU6050_setMemoryBank:
 13918                           	callstack 22
 13919                           
 13920                           ;incstack = 0
 13921                           ;MPU6050_setMemoryBank@bank stored from wreg
 13922  0063DE  6E12               	movwf	MPU6050_setMemoryBank@bank^0,c
 13923  0063E0                     
 13924                           ;MPU6050.c: 2964:     bank &= 0x1F;
 13925  0063E0  0E1F               	movlw	31
 13926  0063E2  1612               	andwf	MPU6050_setMemoryBank@bank^0,f,c
 13927  0063E4                     
 13928                           ;MPU6050.c: 2965:     if (userBank) bank |= 0x20;
 13929  0063E4  5011               	movf	MPU6050_setMemoryBank@userBank^0,w,c
 13930  0063E6  B4D8               	btfsc	status,2,c
 13931  0063E8  EFF8  F031         	goto	u7181
 13932  0063EC  EFFA  F031         	goto	u7180
 13933  0063F0                     u7181:
 13934  0063F0  EFFB  F031         	goto	l8327
 13935  0063F4                     u7180:
 13936  0063F4  8A12               	bsf	MPU6050_setMemoryBank@bank^0,5,c
 13937  0063F6                     l8327:
 13938                           
 13939                           ;MPU6050.c: 2966:     if (prefetchEnabled) bank |= 0x40;
 13940  0063F6  5010               	movf	MPU6050_setMemoryBank@prefetchEnabled^0,w,c
 13941  0063F8  B4D8               	btfsc	status,2,c
 13942  0063FA  EF01  F032         	goto	u7191
 13943  0063FE  EF03  F032         	goto	u7190
 13944  006402                     u7191:
 13945  006402  EF04  F032         	goto	l8331
 13946  006406                     u7190:
 13947  006406  8C12               	bsf	MPU6050_setMemoryBank@bank^0,6,c
 13948  006408                     l8331:
 13949                           
 13950                           ;MPU6050.c: 2967:     I2Cdev_writeByte(mpu6050.devAddr, 0x6D, bank);
 13951  006408  0E6D               	movlw	109
 13952  00640A  6E0D               	movwf	I2Cdev_writeByte@regAddr^0,c
 13953  00640C  C012  F00E         	movff	MPU6050_setMemoryBank@bank,I2Cdev_writeByte@data
 13954  006410  0101               	movlb	1	; () banked
 13955  006412  5197               	movf	_mpu6050& (0+255),w,b
 13956  006414  ECA9  F033         	call	_I2Cdev_writeByte
 13957  006418  0012               	return		;funcret
 13958  00641A                     __end_of_MPU6050_setMemoryBank:
 13959                           	callstack 0
 13960                           
 13961 ;; *************** function _MPU6050_setDMPEnabled *****************
 13962 ;; Defined at:
 13963 ;;		line 2954 in file "MPU6050.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;  enabled         1    wreg     _Bool 
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;  enabled         1   32[COMRAM] _Bool 
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  1    wreg      void 
 13970 ;; Registers used:
 13971 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13977 ;;      Params:         0       0       0       0       0       0       0       0       0
 13978 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13979 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13980 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13981 ;;Total ram usage:        1 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; Hardware stack levels required when called:    6
 13984 ;; This function calls:
 13985 ;;		_I2Cdev_writeBit
 13986 ;; This function is called by:
 13987 ;;		_MPU6050_dmpInitialize
 13988 ;;		_main
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           	psect	text44
 13993  0067D0                     __ptext44:
 13994                           	callstack 0
 13995  0067D0                     _MPU6050_setDMPEnabled:
 13996                           	callstack 24
 13997                           
 13998                           ;incstack = 0
 13999                           ;MPU6050_setDMPEnabled@enabled stored from wreg
 14000  0067D0  6E21               	movwf	MPU6050_setDMPEnabled@enabled^0,c
 14001  0067D2                     
 14002                           ;MPU6050.c: 2955:     I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 7, enabled);
 14003  0067D2  0E6A               	movlw	106
 14004  0067D4  6E15               	movwf	I2Cdev_writeBit@regAddr^0,c
 14005  0067D6  0E07               	movlw	7
 14006  0067D8  6E16               	movwf	I2Cdev_writeBit@bitNum^0,c
 14007  0067DA  C021  F017         	movff	MPU6050_setDMPEnabled@enabled,I2Cdev_writeBit@data
 14008  0067DE  0101               	movlb	1	; () banked
 14009  0067E0  5197               	movf	_mpu6050& (0+255),w,b
 14010  0067E2  ECAE  F02E         	call	_I2Cdev_writeBit
 14011  0067E6  0012               	return		;funcret
 14012  0067E8                     __end_of_MPU6050_setDMPEnabled:
 14013                           	callstack 0
 14014                           
 14015 ;; *************** function _I2Cdev_writeWord *****************
 14016 ;; Defined at:
 14017 ;;		line 378 in file "I2Cdev.c"
 14018 ;; Parameters:    Size  Location     Type
 14019 ;;  devAddr         1    wreg     unsigned char 
 14020 ;;  regAddr         1   14[COMRAM] unsigned char 
 14021 ;;  data            2   15[COMRAM] unsigned short 
 14022 ;; Auto vars:     Size  Location     Type
 14023 ;;  devAddr         1   17[COMRAM] unsigned char 
 14024 ;; Return value:  Size  Location     Type
 14025 ;;                  1    wreg      _Bool 
 14026 ;; Registers used:
 14027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14028 ;; Tracked objects:
 14029 ;;		On entry : 0/0
 14030 ;;		On exit  : 0/0
 14031 ;;		Unchanged: 0/0
 14032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14033 ;;      Params:         3       0       0       0       0       0       0       0       0
 14034 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14035 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14036 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14037 ;;Total ram usage:        4 bytes
 14038 ;; Hardware stack levels used:    1
 14039 ;; Hardware stack levels required when called:    4
 14040 ;; This function calls:
 14041 ;;		_I2Cdev_writeWords
 14042 ;; This function is called by:
 14043 ;;		_MPU6050_dmpInitialize
 14044 ;;		_I2Cdev_writeBitW
 14045 ;;		_I2Cdev_writeBitsW
 14046 ;;		_MPU6050_setXAccelOffset
 14047 ;;		_MPU6050_setYAccelOffset
 14048 ;;		_MPU6050_setZAccelOffset
 14049 ;;		_MPU6050_setXGyroOffset
 14050 ;;		_MPU6050_setYGyroOffset
 14051 ;;		_MPU6050_setZGyroOffset
 14052 ;; This function uses a non-reentrant model
 14053 ;;
 14054                           
 14055                           	psect	text45
 14056  006738                     __ptext45:
 14057                           	callstack 0
 14058  006738                     _I2Cdev_writeWord:
 14059                           	callstack 25
 14060                           
 14061                           ;incstack = 0
 14062                           ;I2Cdev_writeWord@devAddr stored from wreg
 14063  006738  6E12               	movwf	I2Cdev_writeWord@devAddr^0,c
 14064  00673A                     
 14065                           ;I2Cdev.c: 379:     return I2Cdev_writeWords(devAddr, regAddr, 1, &data);
 14066  00673A  C00F  F005         	movff	I2Cdev_writeWord@regAddr,I2Cdev_writeWords@regAddr
 14067  00673E  0E01               	movlw	1
 14068  006740  6E06               	movwf	I2Cdev_writeWords@length^0,c
 14069  006742  0E10               	movlw	low I2Cdev_writeWord@data
 14070  006744  6E07               	movwf	I2Cdev_writeWords@data^0,c
 14071  006746  0E00               	movlw	high I2Cdev_writeWord@data
 14072  006748  6E08               	movwf	(I2Cdev_writeWords@data+1)^0,c
 14073  00674A  5012               	movf	I2Cdev_writeWord@devAddr^0,w,c
 14074  00674C  ECCB  F02D         	call	_I2Cdev_writeWords
 14075  006750  0012               	return		;funcret
 14076  006752                     __end_of_I2Cdev_writeWord:
 14077                           	callstack 0
 14078                           
 14079 ;; *************** function _I2Cdev_writeWords *****************
 14080 ;; Defined at:
 14081 ;;		line 342 in file "I2Cdev.c"
 14082 ;; Parameters:    Size  Location     Type
 14083 ;;  devAddr         1    wreg     unsigned char 
 14084 ;;  regAddr         1    4[COMRAM] unsigned char 
 14085 ;;  length          1    5[COMRAM] unsigned char 
 14086 ;;  data            2    6[COMRAM] PTR unsigned short 
 14087 ;;		 -> MPU6050_PID@Data(2), I2Cdev_writeWord@data(2), 
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;  devAddr         1   12[COMRAM] unsigned char 
 14090 ;;  i               1   13[COMRAM] unsigned char 
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      _Bool 
 14093 ;; Registers used:
 14094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14095 ;; Tracked objects:
 14096 ;;		On entry : 0/0
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14100 ;;      Params:         4       0       0       0       0       0       0       0       0
 14101 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14102 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14103 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14104 ;;Total ram usage:       10 bytes
 14105 ;; Hardware stack levels used:    1
 14106 ;; Hardware stack levels required when called:    3
 14107 ;; This function calls:
 14108 ;;		_IdleI2C
 14109 ;;		_StartI2C
 14110 ;;		_StopI2C
 14111 ;;		_WriteI2C
 14112 ;; This function is called by:
 14113 ;;		_I2Cdev_writeWord
 14114 ;;		_MPU6050_PID
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text46
 14119  005B96                     __ptext46:
 14120                           	callstack 0
 14121  005B96                     _I2Cdev_writeWords:
 14122                           	callstack 25
 14123                           
 14124                           ;incstack = 0
 14125                           ;I2Cdev_writeWords@devAddr stored from wreg
 14126  005B96  6E0D               	movwf	I2Cdev_writeWords@devAddr^0,c
 14127  005B98                     
 14128                           ;I2Cdev.c: 344:     IdleI2C();
 14129  005B98  ECF4  F033         	call	_IdleI2C	;wreg free
 14130  005B9C                     
 14131                           ;I2Cdev.c: 345:     StartI2C();
 14132  005B9C  EC29  F033         	call	_StartI2C	;wreg free
 14133  005BA0                     
 14134                           ;I2Cdev.c: 348:     IdleI2C();
 14135  005BA0  ECF4  F033         	call	_IdleI2C	;wreg free
 14136  005BA4                     
 14137                           ;I2Cdev.c: 349:     WriteI2C(devAddr << 1 | 0x00);
 14138  005BA4  500D               	movf	I2Cdev_writeWords@devAddr^0,w,c
 14139  005BA6  240D               	addwf	I2Cdev_writeWords@devAddr^0,w,c
 14140  005BA8  ECE2  F032         	call	_WriteI2C
 14141  005BAC                     
 14142                           ;I2Cdev.c: 352:     IdleI2C();
 14143  005BAC  ECF4  F033         	call	_IdleI2C	;wreg free
 14144  005BB0                     
 14145                           ;I2Cdev.c: 353:     WriteI2C(regAddr);
 14146  005BB0  5005               	movf	I2Cdev_writeWords@regAddr^0,w,c
 14147  005BB2  ECE2  F032         	call	_WriteI2C
 14148                           
 14149                           ;I2Cdev.c: 355:     for (uint8_t i = 0; i < length; i++) {
 14150  005BB6  0E00               	movlw	0
 14151  005BB8  6E0E               	movwf	I2Cdev_writeWords@i^0,c
 14152  005BBA  EF09  F02E         	goto	l8715
 14153  005BBE                     l8707:
 14154                           
 14155                           ;I2Cdev.c: 357:         IdleI2C();
 14156  005BBE  ECF4  F033         	call	_IdleI2C	;wreg free
 14157  005BC2                     
 14158                           ;I2Cdev.c: 358:         WriteI2C(data[i] >> 8);
 14159  005BC2  500E               	movf	I2Cdev_writeWords@i^0,w,c
 14160  005BC4  0D02               	mullw	2
 14161  005BC6  CFF3 F009          	movff	prodl,??_I2Cdev_writeWords
 14162  005BCA  CFF4 F00A          	movff	prodh,??_I2Cdev_writeWords+1
 14163  005BCE  5009               	movf	??_I2Cdev_writeWords^0,w,c
 14164  005BD0  2407               	addwf	I2Cdev_writeWords@data^0,w,c
 14165  005BD2  6ED9               	movwf	fsr2l,c
 14166  005BD4  500A               	movf	(??_I2Cdev_writeWords+1)^0,w,c
 14167  005BD6  2008               	addwfc	(I2Cdev_writeWords@data+1)^0,w,c
 14168  005BD8  6EDA               	movwf	fsr2h,c
 14169  005BDA  CFDE F00B          	movff	postinc2,??_I2Cdev_writeWords+2
 14170  005BDE  CFDD F00C          	movff	postdec2,??_I2Cdev_writeWords+3
 14171  005BE2  C00C  F00B         	movff	??_I2Cdev_writeWords+3,??_I2Cdev_writeWords+2
 14172  005BE6  6A0C               	clrf	(??_I2Cdev_writeWords+3)^0,c
 14173  005BE8  500B               	movf	(??_I2Cdev_writeWords+2)^0,w,c
 14174  005BEA  ECE2  F032         	call	_WriteI2C
 14175  005BEE                     
 14176                           ;I2Cdev.c: 361:         IdleI2C();
 14177  005BEE  ECF4  F033         	call	_IdleI2C	;wreg free
 14178                           
 14179                           ;I2Cdev.c: 362:         WriteI2C(data[i] & 0xFF);
 14180  005BF2  500E               	movf	I2Cdev_writeWords@i^0,w,c
 14181  005BF4  0D02               	mullw	2
 14182  005BF6  CFF3 F009          	movff	prodl,??_I2Cdev_writeWords
 14183  005BFA  CFF4 F00A          	movff	prodh,??_I2Cdev_writeWords+1
 14184  005BFE  5009               	movf	??_I2Cdev_writeWords^0,w,c
 14185  005C00  2407               	addwf	I2Cdev_writeWords@data^0,w,c
 14186  005C02  6ED9               	movwf	fsr2l,c
 14187  005C04  500A               	movf	(??_I2Cdev_writeWords+1)^0,w,c
 14188  005C06  2008               	addwfc	(I2Cdev_writeWords@data+1)^0,w,c
 14189  005C08  6EDA               	movwf	fsr2h,c
 14190  005C0A  50DF               	movf	indf2,w,c
 14191  005C0C  ECE2  F032         	call	_WriteI2C
 14192  005C10                     
 14193                           ;I2Cdev.c: 363:     }
 14194  005C10  2A0E               	incf	I2Cdev_writeWords@i^0,f,c
 14195  005C12                     l8715:
 14196  005C12  5006               	movf	I2Cdev_writeWords@length^0,w,c
 14197  005C14  5C0E               	subwf	I2Cdev_writeWords@i^0,w,c
 14198  005C16  A0D8               	btfss	status,0,c
 14199  005C18  EF10  F02E         	goto	u7871
 14200  005C1C  EF12  F02E         	goto	u7870
 14201  005C20                     u7871:
 14202  005C20  EFDF  F02D         	goto	l8707
 14203  005C24                     u7870:
 14204  005C24                     
 14205                           ;I2Cdev.c: 366:     IdleI2C();
 14206  005C24  ECF4  F033         	call	_IdleI2C	;wreg free
 14207  005C28                     
 14208                           ;I2Cdev.c: 367:     StopI2C();
 14209  005C28  EC18  F033         	call	_StopI2C	;wreg free
 14210  005C2C                     
 14211                           ;I2Cdev.c: 369:     return 1;
 14212  005C2C  0E01               	movlw	1
 14213  005C2E  0012               	return		;funcret
 14214  005C30                     __end_of_I2Cdev_writeWords:
 14215                           	callstack 0
 14216                           
 14217 ;; *************** function _I2Cdev_writeBits *****************
 14218 ;; Defined at:
 14219 ;;		line 418 in file "I2Cdev.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  devAddr         1    wreg     unsigned char 
 14222 ;;  regAddr         1   20[COMRAM] unsigned char 
 14223 ;;  bitStart        1   21[COMRAM] unsigned char 
 14224 ;;  length          1   22[COMRAM] unsigned char 
 14225 ;;  data            1   23[COMRAM] unsigned char 
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;  devAddr         1   27[COMRAM] unsigned char 
 14228 ;;  mask            1   28[COMRAM] unsigned char 
 14229 ;;  b               1   29[COMRAM] unsigned char 
 14230 ;; Return value:  Size  Location     Type
 14231 ;;                  1    wreg      _Bool 
 14232 ;; Registers used:
 14233 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14234 ;; Tracked objects:
 14235 ;;		On entry : 0/0
 14236 ;;		On exit  : 0/0
 14237 ;;		Unchanged: 0/0
 14238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14239 ;;      Params:         4       0       0       0       0       0       0       0       0
 14240 ;;      Locals:         3       0       0       0       0       0       0       0       0
 14241 ;;      Temps:          3       0       0       0       0       0       0       0       0
 14242 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14243 ;;Total ram usage:       10 bytes
 14244 ;; Hardware stack levels used:    1
 14245 ;; Hardware stack levels required when called:    5
 14246 ;; This function calls:
 14247 ;;		_I2Cdev_readByte
 14248 ;;		_I2Cdev_writeByte
 14249 ;; This function is called by:
 14250 ;;		_MPU6050_setFullScaleGyroRange
 14251 ;;		_MPU6050_setFullScaleAccelRange
 14252 ;;		_MPU6050_setClockSource
 14253 ;;		_MPU6050_dmpInitialize
 14254 ;;		_MPU6050_setExternalFrameSync
 14255 ;;		_MPU6050_setDLPFMode
 14256 ;;		_MPU6050_setDHPFMode
 14257 ;;		_MPU6050_setMasterClockSpeed
 14258 ;;		_MPU6050_setSlaveDataLength
 14259 ;;		_MPU6050_setSlave4MasterDelay
 14260 ;;		_MPU6050_setAccelerometerPowerOnDelay
 14261 ;;		_MPU6050_setFreefallDetectionCounterDecrement
 14262 ;;		_MPU6050_setMotionDetectionCounterDecrement
 14263 ;;		_MPU6050_setWakeFrequency
 14264 ;;		_MPU6050_setDeviceID
 14265 ;;		_MPU6050_setXGyroOffsetTC
 14266 ;;		_MPU6050_setYGyroOffsetTC
 14267 ;;		_MPU6050_setZGyroOffsetTC
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text47
 14272  005C30                     __ptext47:
 14273                           	callstack 0
 14274  005C30                     _I2Cdev_writeBits:
 14275                           	callstack 23
 14276                           
 14277                           ;incstack = 0
 14278                           ;I2Cdev_writeBits@devAddr stored from wreg
 14279  005C30  6E1C               	movwf	I2Cdev_writeBits@devAddr^0,c
 14280  005C32                     
 14281                           ;I2Cdev.c: 426:     uint8_t b;;I2Cdev.c: 427:     if (I2Cdev_readByte(devAddr, regAddr, 
      +                          &b) != 0) {
 14282  005C32  C015  F011         	movff	I2Cdev_writeBits@regAddr,I2Cdev_readByte@regAddr
 14283  005C36  0E1E               	movlw	low I2Cdev_writeBits@b
 14284  005C38  6E12               	movwf	I2Cdev_readByte@data^0,c
 14285  005C3A  0E00               	movlw	high I2Cdev_writeBits@b
 14286  005C3C  6E13               	movwf	(I2Cdev_readByte@data+1)^0,c
 14287  005C3E  501C               	movf	I2Cdev_writeBits@devAddr^0,w,c
 14288  005C40  ECB6  F033         	call	_I2Cdev_readByte
 14289  005C44  0900               	iorlw	0
 14290  005C46  B4D8               	btfsc	status,2,c
 14291  005C48  EF28  F02E         	goto	u7881
 14292  005C4C  EF2A  F02E         	goto	u7880
 14293  005C50                     u7881:
 14294  005C50  EF63  F02E         	goto	l317
 14295  005C54                     u7880:
 14296  005C54                     
 14297                           ;I2Cdev.c: 428:         uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
 14298  005C54  5017               	movf	I2Cdev_writeBits@length^0,w,c
 14299  005C56  5C16               	subwf	I2Cdev_writeBits@bitStart^0,w,c
 14300  005C58  6E19               	movwf	??_I2Cdev_writeBits^0,c
 14301  005C5A  0E01               	movlw	1
 14302  005C5C  2619               	addwf	??_I2Cdev_writeBits^0,f,c
 14303  005C5E  C017  F01A         	movff	I2Cdev_writeBits@length,??_I2Cdev_writeBits+1
 14304  005C62  0E01               	movlw	1
 14305  005C64  6E1B               	movwf	(??_I2Cdev_writeBits+2)^0,c
 14306  005C66  2A1A               	incf	(??_I2Cdev_writeBits+1)^0,f,c
 14307  005C68  EF38  F02E         	goto	u7894
 14308  005C6C                     u7895:
 14309  005C6C  90D8               	bcf	status,0,c
 14310  005C6E  361B               	rlcf	(??_I2Cdev_writeBits+2)^0,f,c
 14311  005C70                     u7894:
 14312  005C70  2E1A               	decfsz	(??_I2Cdev_writeBits+1)^0,f,c
 14313  005C72  EF36  F02E         	goto	u7895
 14314  005C76  0EFF               	movlw	255
 14315  005C78  261B               	addwf	(??_I2Cdev_writeBits+2)^0,f,c
 14316  005C7A  2A19               	incf	??_I2Cdev_writeBits^0,f,c
 14317  005C7C  EF42  F02E         	goto	u7904
 14318  005C80                     u7905:
 14319  005C80  90D8               	bcf	status,0,c
 14320  005C82  361B               	rlcf	(??_I2Cdev_writeBits+2)^0,f,c
 14321  005C84                     u7904:
 14322  005C84  2E19               	decfsz	??_I2Cdev_writeBits^0,f,c
 14323  005C86  EF40  F02E         	goto	u7905
 14324  005C8A  501B               	movf	(??_I2Cdev_writeBits+2)^0,w,c
 14325  005C8C  6E1D               	movwf	I2Cdev_writeBits@mask^0,c
 14326                           
 14327                           ;I2Cdev.c: 429:         data <<= (bitStart - length + 1);
 14328  005C8E  5017               	movf	I2Cdev_writeBits@length^0,w,c
 14329  005C90  5C16               	subwf	I2Cdev_writeBits@bitStart^0,w,c
 14330  005C92  6E19               	movwf	??_I2Cdev_writeBits^0,c
 14331  005C94  0E01               	movlw	1
 14332  005C96  2619               	addwf	??_I2Cdev_writeBits^0,f,c
 14333  005C98  2819               	incf	??_I2Cdev_writeBits^0,w,c
 14334  005C9A  6E1A               	movwf	(??_I2Cdev_writeBits+1)^0,c
 14335  005C9C  EF52  F02E         	goto	u7910
 14336  005CA0                     u7915:
 14337  005CA0  90D8               	bcf	status,0,c
 14338  005CA2  3618               	rlcf	I2Cdev_writeBits@data^0,f,c
 14339  005CA4                     u7910:
 14340  005CA4  2E1A               	decfsz	(??_I2Cdev_writeBits+1)^0,f,c
 14341  005CA6  EF50  F02E         	goto	u7915
 14342                           
 14343                           ;I2Cdev.c: 430:         data &= mask;
 14344  005CAA  501D               	movf	I2Cdev_writeBits@mask^0,w,c
 14345  005CAC  1618               	andwf	I2Cdev_writeBits@data^0,f,c
 14346                           
 14347                           ;I2Cdev.c: 431:         b &= ~(mask);
 14348  005CAE  501D               	movf	I2Cdev_writeBits@mask^0,w,c
 14349  005CB0  0AFF               	xorlw	255
 14350  005CB2  161E               	andwf	I2Cdev_writeBits@b^0,f,c
 14351                           
 14352                           ;I2Cdev.c: 432:         b |= data;
 14353  005CB4  5018               	movf	I2Cdev_writeBits@data^0,w,c
 14354  005CB6  121E               	iorwf	I2Cdev_writeBits@b^0,f,c
 14355  005CB8                     
 14356                           ;I2Cdev.c: 433:         return I2Cdev_writeByte(devAddr, regAddr, b);;	Return value of _
      +                          I2Cdev_writeBits is never used
 14357  005CB8  C015  F00D         	movff	I2Cdev_writeBits@regAddr,I2Cdev_writeByte@regAddr
 14358  005CBC  C01E  F00E         	movff	I2Cdev_writeBits@b,I2Cdev_writeByte@data
 14359  005CC0  501C               	movf	I2Cdev_writeBits@devAddr^0,w,c
 14360  005CC2  ECA9  F033         	call	_I2Cdev_writeByte
 14361  005CC6                     l317:
 14362  005CC6  0012               	return		;funcret
 14363  005CC8                     __end_of_I2Cdev_writeBits:
 14364                           	callstack 0
 14365                           
 14366 ;; *************** function _MPU6050_dmpGetRoll *****************
 14367 ;; Defined at:
 14368 ;;		line 590 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 14369 ;; Parameters:    Size  Location     Type
 14370 ;;  data            2  122[BANK0 ] PTR float 
 14371 ;;		 -> ypr(12), 
 14372 ;;  q               2  124[BANK0 ] PTR struct .
 14373 ;;		 -> q(16), 
 14374 ;;  gravity         2  126[BANK0 ] PTR struct .
 14375 ;;		 -> gravity(12), 
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;		None
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  1    wreg      void 
 14380 ;; Registers used:
 14381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14387 ;;      Params:         0       6       0       0       0       0       0       0       0
 14388 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14389 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14390 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14391 ;;Total ram usage:        6 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    6
 14394 ;; This function calls:
 14395 ;;		_atan2f
 14396 ;; This function is called by:
 14397 ;;		_main
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401                           	psect	text48
 14402  0061E8                     __ptext48:
 14403                           	callstack 0
 14404  0061E8                     _MPU6050_dmpGetRoll:
 14405                           	callstack 24
 14406  0061E8                     
 14407                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 590: void MPU6050_dmpGetRoll(float *data, Quaternio
      +                          n *q, VectorFloat *gravity);./MPU6050_6Axis_MotionApps_V6_12.h: 591: {;./MPU6050_6Axis_M
      +                          otionApps_V6_12.h: 592:     data[2] = atan2f(gravity -> y,gravity -> z);
 14408  0061E8  0100               	movlb	0	; () banked
 14409  0061EA  EE20 F004          	lfsr	2,4
 14410  0061EE  51DE               	movf	MPU6050_dmpGetRoll@gravity& (0+255),w,b
 14411  0061F0  26D9               	addwf	fsr2l,f,c
 14412  0061F2  51DF               	movf	(MPU6050_dmpGetRoll@gravity+1)& (0+255),w,b
 14413  0061F4  22DA               	addwfc	fsr2h,f,c
 14414  0061F6  CFDE F0A2          	movff	postinc2,atan2f@y
 14415  0061FA  CFDE F0A3          	movff	postinc2,atan2f@y+1
 14416  0061FE  CFDE F0A4          	movff	postinc2,atan2f@y+2
 14417  006202  CFDE F0A5          	movff	postinc2,atan2f@y+3
 14418  006206  EE20 F008          	lfsr	2,8
 14419  00620A  51DE               	movf	MPU6050_dmpGetRoll@gravity& (0+255),w,b
 14420  00620C  26D9               	addwf	fsr2l,f,c
 14421  00620E  51DF               	movf	(MPU6050_dmpGetRoll@gravity+1)& (0+255),w,b
 14422  006210  22DA               	addwfc	fsr2h,f,c
 14423  006212  CFDE F0A6          	movff	postinc2,atan2f@x
 14424  006216  CFDE F0A7          	movff	postinc2,atan2f@x+1
 14425  00621A  CFDE F0A8          	movff	postinc2,atan2f@x+2
 14426  00621E  CFDE F0A9          	movff	postinc2,atan2f@x+3
 14427  006222  ECD5  F010         	call	_atan2f	;wreg free
 14428  006226  0100               	movlb	0	; () banked
 14429  006228  EE20 F008          	lfsr	2,8
 14430  00622C  51DA               	movf	MPU6050_dmpGetRoll@data& (0+255),w,b
 14431  00622E  26D9               	addwf	fsr2l,f,c
 14432  006230  51DB               	movf	(MPU6050_dmpGetRoll@data+1)& (0+255),w,b
 14433  006232  22DA               	addwfc	fsr2h,f,c
 14434  006234  C0A2  FFDE         	movff	?_atan2f,postinc2
 14435  006238  C0A3  FFDE         	movff	?_atan2f+1,postinc2
 14436  00623C  C0A4  FFDE         	movff	?_atan2f+2,postinc2
 14437  006240  C0A5  FFDE         	movff	?_atan2f+3,postinc2
 14438  006244                     
 14439                           ; BSR set to: 0
 14440  006244  0012               	return		;funcret
 14441  006246                     __end_of_MPU6050_dmpGetRoll:
 14442                           	callstack 0
 14443                           
 14444 ;; *************** function _atan2f *****************
 14445 ;; Defined at:
 14446 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atan2f.c"
 14447 ;; Parameters:    Size  Location     Type
 14448 ;;  y               4   66[BANK0 ] float 
 14449 ;;  x               4   70[BANK0 ] float 
 14450 ;; Auto vars:     Size  Location     Type
 14451 ;;  m               4  118[BANK0 ] unsigned long 
 14452 ;;  iy              4  114[BANK0 ] unsigned long 
 14453 ;;  ix              4  110[BANK0 ] unsigned long 
 14454 ;;  z               4  106[BANK0 ] float 
 14455 ;;  __xc8_float_    4  102[BANK0 ] struct .
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  4   66[BANK0 ] float 
 14458 ;; Registers used:
 14459 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/0
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14465 ;;      Params:         0       8       0       0       0       0       0       0       0
 14466 ;;      Locals:         0      32       0       0       0       0       0       0       0
 14467 ;;      Temps:          0      16       0       0       0       0       0       0       0
 14468 ;;      Totals:         0      56       0       0       0       0       0       0       0
 14469 ;;Total ram usage:       56 bytes
 14470 ;; Hardware stack levels used:    1
 14471 ;; Hardware stack levels required when called:    5
 14472 ;; This function calls:
 14473 ;;		___fladd
 14474 ;;		___fldiv
 14475 ;;		___flneg
 14476 ;;		___flsub
 14477 ;;		___fpclassifyf
 14478 ;;		_atanf
 14479 ;;		_fabsf
 14480 ;; This function is called by:
 14481 ;;		_MPU6050_dmpGetRoll
 14482 ;;		_MPU6050_dmpGetEuler
 14483 ;;		_MPU6050_dmpGetYawPitchRoll
 14484 ;; This function uses a non-reentrant model
 14485 ;;
 14486                           
 14487                           	psect	text49
 14488  0021AA                     __ptext49:
 14489                           	callstack 0
 14490  0021AA                     _atan2f:
 14491                           	callstack 24
 14492  0021AA  C0A6  F004         	movff	atan2f@x,___fpclassifyf@x
 14493  0021AE  C0A7  F005         	movff	atan2f@x+1,___fpclassifyf@x+1
 14494  0021B2  C0A8  F006         	movff	atan2f@x+2,___fpclassifyf@x+2
 14495  0021B6  C0A9  F007         	movff	atan2f@x+3,___fpclassifyf@x+3
 14496  0021BA  EC12  F029         	call	___fpclassifyf	;wreg free
 14497  0021BE  5004               	movf	?___fpclassifyf^0,w,c
 14498  0021C0  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
 14499  0021C2  B4D8               	btfsc	status,2,c
 14500  0021C4  EFE6  F010         	goto	u8441
 14501  0021C8  EFE8  F010         	goto	u8440
 14502  0021CC                     u8441:
 14503  0021CC  EFFB  F010         	goto	l9141
 14504  0021D0                     u8440:
 14505  0021D0  C0A2  F004         	movff	atan2f@y,___fpclassifyf@x
 14506  0021D4  C0A3  F005         	movff	atan2f@y+1,___fpclassifyf@x+1
 14507  0021D8  C0A4  F006         	movff	atan2f@y+2,___fpclassifyf@x+2
 14508  0021DC  C0A5  F007         	movff	atan2f@y+3,___fpclassifyf@x+3
 14509  0021E0  EC12  F029         	call	___fpclassifyf	;wreg free
 14510  0021E4  5004               	movf	?___fpclassifyf^0,w,c
 14511  0021E6  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
 14512  0021E8  A4D8               	btfss	status,2,c
 14513  0021EA  EFF9  F010         	goto	u8451
 14514  0021EE  EFFB  F010         	goto	u8450
 14515  0021F2                     u8451:
 14516  0021F2  EF17  F011         	goto	l2544
 14517  0021F6                     u8450:
 14518  0021F6                     l9141:
 14519  0021F6  C0A6  F04A         	movff	atan2f@x,___fladd@b
 14520  0021FA  C0A7  F04B         	movff	atan2f@x+1,___fladd@b+1
 14521  0021FE  C0A8  F04C         	movff	atan2f@x+2,___fladd@b+2
 14522  002202  C0A9  F04D         	movff	atan2f@x+3,___fladd@b+3
 14523  002206  C0A2  F04E         	movff	atan2f@y,___fladd@a
 14524  00220A  C0A3  F04F         	movff	atan2f@y+1,___fladd@a+1
 14525  00220E  C0A4  F050         	movff	atan2f@y+2,___fladd@a+2
 14526  002212  C0A5  F051         	movff	atan2f@y+3,___fladd@a+3
 14527  002216  EC6A  F017         	call	___fladd	;wreg free
 14528  00221A  C04A  F0A2         	movff	?___fladd,?_atan2f
 14529  00221E  C04B  F0A3         	movff	?___fladd+1,?_atan2f+1
 14530  002222  C04C  F0A4         	movff	?___fladd+2,?_atan2f+2
 14531  002226  C04D  F0A5         	movff	?___fladd+3,?_atan2f+3
 14532  00222A  EF55  F014         	goto	l2543
 14533  00222E                     l2544:
 14534  00222E  C0A6  F0C6         	movff	atan2f@x,atan2f@__xc8_float_word
 14535  002232  C0A7  F0C7         	movff	atan2f@x+1,atan2f@__xc8_float_word+1
 14536  002236  C0A8  F0C8         	movff	atan2f@x+2,atan2f@__xc8_float_word+2
 14537  00223A  C0A9  F0C9         	movff	atan2f@x+3,atan2f@__xc8_float_word+3
 14538  00223E  C0C6  F0CE         	movff	atan2f@__xc8_float_word,atan2f@ix
 14539  002242  C0C7  F0CF         	movff	atan2f@__xc8_float_word+1,atan2f@ix+1
 14540  002246  C0C8  F0D0         	movff	atan2f@__xc8_float_word+2,atan2f@ix+2
 14541  00224A  C0C9  F0D1         	movff	atan2f@__xc8_float_word+3,atan2f@ix+3
 14542  00224E  C0A2  F0C6         	movff	atan2f@y,atan2f@__xc8_float_word
 14543  002252  C0A3  F0C7         	movff	atan2f@y+1,atan2f@__xc8_float_word+1
 14544  002256  C0A4  F0C8         	movff	atan2f@y+2,atan2f@__xc8_float_word+2
 14545  00225A  C0A5  F0C9         	movff	atan2f@y+3,atan2f@__xc8_float_word+3
 14546  00225E  C0C6  F0D2         	movff	atan2f@__xc8_float_word,atan2f@iy
 14547  002262  C0C7  F0D3         	movff	atan2f@__xc8_float_word+1,atan2f@iy+1
 14548  002266  C0C8  F0D4         	movff	atan2f@__xc8_float_word+2,atan2f@iy+2
 14549  00226A  C0C9  F0D5         	movff	atan2f@__xc8_float_word+3,atan2f@iy+3
 14550  00226E  0E80               	movlw	128
 14551  002270  0100               	movlb	0	; () banked
 14552  002272  19D0               	xorwf	(atan2f@ix+2)& (0+255),w,b
 14553  002274  E109               	bnz	u8461
 14554  002276  0E3F               	movlw	63
 14555  002278  19D1               	xorwf	(atan2f@ix+3)& (0+255),w,b
 14556  00227A  11CE               	iorwf	atan2f@ix& (0+255),w,b
 14557  00227C  11CF               	iorwf	(atan2f@ix+1)& (0+255),w,b
 14558  00227E  A4D8               	btfss	status,2,c
 14559  002280  EF44  F011         	goto	u8461
 14560  002284  EF46  F011         	goto	u8460
 14561  002288                     u8461:
 14562  002288  EF5A  F011         	goto	l9151
 14563  00228C                     u8460:
 14564  00228C                     
 14565                           ; BSR set to: 0
 14566  00228C  C0A2  F068         	movff	atan2f@y,atanf@x
 14567  002290  C0A3  F069         	movff	atan2f@y+1,atanf@x+1
 14568  002294  C0A4  F06A         	movff	atan2f@y+2,atanf@x+2
 14569  002298  C0A5  F06B         	movff	atan2f@y+3,atanf@x+3
 14570  00229C  ECBF  F00C         	call	_atanf	;wreg free
 14571  0022A0  C068  F0A2         	movff	?_atanf,?_atan2f
 14572  0022A4  C069  F0A3         	movff	?_atanf+1,?_atan2f+1
 14573  0022A8  C06A  F0A4         	movff	?_atanf+2,?_atan2f+2
 14574  0022AC  C06B  F0A5         	movff	?_atanf+3,?_atan2f+3
 14575  0022B0  EF55  F014         	goto	l2543
 14576  0022B4                     l9151:
 14577                           
 14578                           ; BSR set to: 0
 14579  0022B4  C0CE  F0AA         	movff	atan2f@ix,??_atan2f
 14580  0022B8  C0CF  F0AB         	movff	atan2f@ix+1,??_atan2f+1
 14581  0022BC  C0D0  F0AC         	movff	atan2f@ix+2,??_atan2f+2
 14582  0022C0  C0D1  F0AD         	movff	atan2f@ix+3,??_atan2f+3
 14583  0022C4  0E1F               	movlw	31
 14584  0022C6  EF6A  F011         	goto	u8470
 14585  0022CA                     u8475:
 14586  0022CA  90D8               	bcf	status,0,c
 14587  0022CC  33AD               	rrcf	(??_atan2f+3)& (0+255),f,b
 14588  0022CE  33AC               	rrcf	(??_atan2f+2)& (0+255),f,b
 14589  0022D0  33AB               	rrcf	(??_atan2f+1)& (0+255),f,b
 14590  0022D2  33AA               	rrcf	??_atan2f& (0+255),f,b
 14591  0022D4                     u8470:
 14592  0022D4  2EE8               	decfsz	wreg,f,c
 14593  0022D6  EF65  F011         	goto	u8475
 14594  0022DA  0E02               	movlw	2
 14595  0022DC  15AA               	andwf	??_atan2f& (0+255),w,b
 14596  0022DE  6FAE               	movwf	(??_atan2f+4)& (0+255),b
 14597  0022E0  0E00               	movlw	0
 14598  0022E2  15AB               	andwf	(??_atan2f+1)& (0+255),w,b
 14599  0022E4  6FAF               	movwf	(??_atan2f+5)& (0+255),b
 14600  0022E6  0E00               	movlw	0
 14601  0022E8  15AC               	andwf	(??_atan2f+2)& (0+255),w,b
 14602  0022EA  6FB0               	movwf	(??_atan2f+6)& (0+255),b
 14603  0022EC  0E00               	movlw	0
 14604  0022EE  15AD               	andwf	(??_atan2f+3)& (0+255),w,b
 14605  0022F0  6FB1               	movwf	(??_atan2f+7)& (0+255),b
 14606  0022F2  C0D2  F0B2         	movff	atan2f@iy,??_atan2f+8
 14607  0022F6  C0D3  F0B3         	movff	atan2f@iy+1,??_atan2f+9
 14608  0022FA  C0D4  F0B4         	movff	atan2f@iy+2,??_atan2f+10
 14609  0022FE  C0D5  F0B5         	movff	atan2f@iy+3,??_atan2f+11
 14610  002302  0E20               	movlw	32
 14611  002304  EF89  F011         	goto	u8480
 14612  002308                     u8485:
 14613  002308  90D8               	bcf	status,0,c
 14614  00230A  33B5               	rrcf	(??_atan2f+11)& (0+255),f,b
 14615  00230C  33B4               	rrcf	(??_atan2f+10)& (0+255),f,b
 14616  00230E  33B3               	rrcf	(??_atan2f+9)& (0+255),f,b
 14617  002310  33B2               	rrcf	(??_atan2f+8)& (0+255),f,b
 14618  002312                     u8480:
 14619  002312  2EE8               	decfsz	wreg,f,c
 14620  002314  EF84  F011         	goto	u8485
 14621  002318  0E01               	movlw	1
 14622  00231A  15B2               	andwf	(??_atan2f+8)& (0+255),w,b
 14623  00231C  6FB6               	movwf	(??_atan2f+12)& (0+255),b
 14624  00231E  0E00               	movlw	0
 14625  002320  15B3               	andwf	(??_atan2f+9)& (0+255),w,b
 14626  002322  6FB7               	movwf	(??_atan2f+13)& (0+255),b
 14627  002324  0E00               	movlw	0
 14628  002326  15B4               	andwf	(??_atan2f+10)& (0+255),w,b
 14629  002328  6FB8               	movwf	(??_atan2f+14)& (0+255),b
 14630  00232A  0E00               	movlw	0
 14631  00232C  15B5               	andwf	(??_atan2f+11)& (0+255),w,b
 14632  00232E  6FB9               	movwf	(??_atan2f+15)& (0+255),b
 14633  002330  51AE               	movf	(??_atan2f+4)& (0+255),w,b
 14634  002332  11B6               	iorwf	(??_atan2f+12)& (0+255),w,b
 14635  002334  6FD6               	movwf	atan2f@m& (0+255),b
 14636  002336  51AF               	movf	(??_atan2f+5)& (0+255),w,b
 14637  002338  11B7               	iorwf	(??_atan2f+13)& (0+255),w,b
 14638  00233A  6FD7               	movwf	(atan2f@m+1)& (0+255),b
 14639  00233C  51B0               	movf	(??_atan2f+6)& (0+255),w,b
 14640  00233E  11B8               	iorwf	(??_atan2f+14)& (0+255),w,b
 14641  002340  6FD8               	movwf	(atan2f@m+2)& (0+255),b
 14642  002342  51B1               	movf	(??_atan2f+7)& (0+255),w,b
 14643  002344  11B9               	iorwf	(??_atan2f+15)& (0+255),w,b
 14644  002346  6FD9               	movwf	(atan2f@m+3)& (0+255),b
 14645  002348                     
 14646                           ; BSR set to: 0
 14647  002348  9FD1               	bcf	(atan2f@ix+3)& (0+255),7,b
 14648  00234A                     
 14649                           ; BSR set to: 0
 14650  00234A  9FD5               	bcf	(atan2f@iy+3)& (0+255),7,b
 14651  00234C  51D2               	movf	atan2f@iy& (0+255),w,b
 14652  00234E  11D3               	iorwf	(atan2f@iy+1)& (0+255),w,b
 14653  002350  11D4               	iorwf	(atan2f@iy+2)& (0+255),w,b
 14654  002352  11D5               	iorwf	(atan2f@iy+3)& (0+255),w,b
 14655  002354  A4D8               	btfss	status,2,c
 14656  002356  EFAF  F011         	goto	u8491
 14657  00235A  EFB1  F011         	goto	u8490
 14658  00235E                     u8491:
 14659  00235E  EF01  F012         	goto	l9171
 14660  002362                     u8490:
 14661  002362  EFD1  F011         	goto	l9169
 14662  002366                     l2552:
 14663                           
 14664                           ; BSR set to: 0
 14665  002366  C0A2  F0A2         	movff	atan2f@y,?_atan2f
 14666  00236A  C0A3  F0A3         	movff	atan2f@y+1,?_atan2f+1
 14667  00236E  C0A4  F0A4         	movff	atan2f@y+2,?_atan2f+2
 14668  002372  C0A5  F0A5         	movff	atan2f@y+3,?_atan2f+3
 14669  002376  EF55  F014         	goto	l2543
 14670  00237A                     l9159:
 14671                           
 14672                           ; BSR set to: 0
 14673  00237A  0EDB               	movlw	219
 14674  00237C  6FA2               	movwf	?_atan2f& (0+255),b
 14675  00237E  0E0F               	movlw	15
 14676  002380  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14677  002382  0E49               	movlw	73
 14678  002384  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14679  002386  0E40               	movlw	64
 14680  002388  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14681  00238A  EF55  F014         	goto	l2543
 14682  00238E                     l9163:
 14683                           
 14684                           ; BSR set to: 0
 14685  00238E  0EDB               	movlw	219
 14686  002390  6FA2               	movwf	?_atan2f& (0+255),b
 14687  002392  0E0F               	movlw	15
 14688  002394  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14689  002396  0E49               	movlw	73
 14690  002398  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14691  00239A  0EC0               	movlw	192
 14692  00239C  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14693  00239E  EF55  F014         	goto	l2543
 14694  0023A2                     l9169:
 14695                           
 14696                           ; BSR set to: 0
 14697  0023A2  C0D6  F0AA         	movff	atan2f@m,??_atan2f
 14698  0023A6  C0D7  F0AB         	movff	atan2f@m+1,??_atan2f+1
 14699  0023AA  C0D8  F0AC         	movff	atan2f@m+2,??_atan2f+2
 14700  0023AE  C0D9  F0AD         	movff	atan2f@m+3,??_atan2f+3
 14701                           
 14702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14703                           ; Switch size 1, requested type "simple"
 14704                           ; Number of cases is 1, Range of values is 0 to 0
 14705                           ; switch strategies available:
 14706                           ; Name         Instructions Cycles
 14707                           ; simple_byte            4     3 (average)
 14708                           ;	Chosen strategy is simple_byte
 14709  0023B2  51AD               	movf	(??_atan2f+3)& (0+255),w,b
 14710  0023B4  0A00               	xorlw	0	; case 0
 14711  0023B6  B4D8               	btfsc	status,2,c
 14712  0023B8  EFFA  F011         	goto	l13271
 14713  0023BC  EF01  F012         	goto	l9171
 14714  0023C0                     l13269:
 14715                           
 14716                           ; BSR set to: 0
 14717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14718                           ; Switch size 1, requested type "simple"
 14719                           ; Number of cases is 1, Range of values is 0 to 0
 14720                           ; switch strategies available:
 14721                           ; Name         Instructions Cycles
 14722                           ; simple_byte            4     3 (average)
 14723                           ;	Chosen strategy is simple_byte
 14724  0023C0  51AB               	movf	(??_atan2f+1)& (0+255),w,b
 14725  0023C2  0A00               	xorlw	0	; case 0
 14726  0023C4  B4D8               	btfsc	status,2,c
 14727  0023C6  EFE7  F011         	goto	l13273
 14728  0023CA  EF01  F012         	goto	l9171
 14729  0023CE                     l13273:
 14730                           
 14731                           ; BSR set to: 0
 14732                           ; Switch size 1, requested type "simple"
 14733                           ; Number of cases is 4, Range of values is 0 to 3
 14734                           ; switch strategies available:
 14735                           ; Name         Instructions Cycles
 14736                           ; simple_byte           13     7 (average)
 14737                           ;	Chosen strategy is simple_byte
 14738  0023CE  51AA               	movf	??_atan2f& (0+255),w,b
 14739  0023D0  0A00               	xorlw	0	; case 0
 14740  0023D2  B4D8               	btfsc	status,2,c
 14741  0023D4  EFB3  F011         	goto	l2552
 14742  0023D8  0A01               	xorlw	1	; case 1
 14743  0023DA  B4D8               	btfsc	status,2,c
 14744  0023DC  EFB3  F011         	goto	l2552
 14745  0023E0  0A03               	xorlw	3	; case 2
 14746  0023E2  B4D8               	btfsc	status,2,c
 14747  0023E4  EFBD  F011         	goto	l9159
 14748  0023E8  0A01               	xorlw	1	; case 3
 14749  0023EA  B4D8               	btfsc	status,2,c
 14750  0023EC  EFC7  F011         	goto	l9163
 14751  0023F0  EF01  F012         	goto	l9171
 14752  0023F4                     l13271:
 14753                           
 14754                           ; BSR set to: 0
 14755                           ; Switch size 1, requested type "simple"
 14756                           ; Number of cases is 1, Range of values is 0 to 0
 14757                           ; switch strategies available:
 14758                           ; Name         Instructions Cycles
 14759                           ; simple_byte            4     3 (average)
 14760                           ;	Chosen strategy is simple_byte
 14761  0023F4  51AC               	movf	(??_atan2f+2)& (0+255),w,b
 14762  0023F6  0A00               	xorlw	0	; case 0
 14763  0023F8  B4D8               	btfsc	status,2,c
 14764  0023FA  EFE0  F011         	goto	l13269
 14765  0023FE  EF01  F012         	goto	l9171
 14766  002402                     l9171:
 14767                           
 14768                           ; BSR set to: 0
 14769  002402  51CE               	movf	atan2f@ix& (0+255),w,b
 14770  002404  11CF               	iorwf	(atan2f@ix+1)& (0+255),w,b
 14771  002406  11D0               	iorwf	(atan2f@ix+2)& (0+255),w,b
 14772  002408  11D1               	iorwf	(atan2f@ix+3)& (0+255),w,b
 14773  00240A  A4D8               	btfss	status,2,c
 14774  00240C  EF0A  F012         	goto	u8501
 14775  002410  EF0C  F012         	goto	u8500
 14776  002414                     u8501:
 14777  002414  EF27  F012         	goto	l9181
 14778  002418                     u8500:
 14779  002418                     
 14780                           ; BSR set to: 0
 14781  002418  B1D6               	btfsc	atan2f@m& (0+255),0,b
 14782  00241A  EF11  F012         	goto	u8511
 14783  00241E  EF13  F012         	goto	u8510
 14784  002422                     u8511:
 14785  002422  EF1D  F012         	goto	l9177
 14786  002426                     u8510:
 14787  002426                     
 14788                           ; BSR set to: 0
 14789  002426  0EDB               	movlw	219
 14790  002428  6FA2               	movwf	?_atan2f& (0+255),b
 14791  00242A  0E0F               	movlw	15
 14792  00242C  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14793  00242E  0EC9               	movlw	201
 14794  002430  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14795  002432  0E3F               	movlw	63
 14796  002434  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14797  002436  EF55  F014         	goto	l2543
 14798  00243A                     l9177:
 14799                           
 14800                           ; BSR set to: 0
 14801  00243A  0EDB               	movlw	219
 14802  00243C  6FA2               	movwf	?_atan2f& (0+255),b
 14803  00243E  0E0F               	movlw	15
 14804  002440  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14805  002442  0EC9               	movlw	201
 14806  002444  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14807  002446  0EBF               	movlw	191
 14808  002448  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14809  00244A  EF55  F014         	goto	l2543
 14810  00244E                     l9181:
 14811                           
 14812                           ; BSR set to: 0
 14813  00244E  0E80               	movlw	128
 14814  002450  19D0               	xorwf	(atan2f@ix+2)& (0+255),w,b
 14815  002452  E109               	bnz	u8521
 14816  002454  0E7F               	movlw	127
 14817  002456  19D1               	xorwf	(atan2f@ix+3)& (0+255),w,b
 14818  002458  11CE               	iorwf	atan2f@ix& (0+255),w,b
 14819  00245A  11CF               	iorwf	(atan2f@ix+1)& (0+255),w,b
 14820  00245C  A4D8               	btfss	status,2,c
 14821  00245E  EF33  F012         	goto	u8521
 14822  002462  EF35  F012         	goto	u8520
 14823  002466                     u8521:
 14824  002466  EFF5  F012         	goto	l9227
 14825  00246A                     u8520:
 14826  00246A                     
 14827                           ; BSR set to: 0
 14828  00246A  0E80               	movlw	128
 14829  00246C  19D4               	xorwf	(atan2f@iy+2)& (0+255),w,b
 14830  00246E  E109               	bnz	u8531
 14831  002470  0E7F               	movlw	127
 14832  002472  19D5               	xorwf	(atan2f@iy+3)& (0+255),w,b
 14833  002474  11D2               	iorwf	atan2f@iy& (0+255),w,b
 14834  002476  11D3               	iorwf	(atan2f@iy+1)& (0+255),w,b
 14835  002478  A4D8               	btfss	status,2,c
 14836  00247A  EF41  F012         	goto	u8531
 14837  00247E  EF43  F012         	goto	u8530
 14838  002482                     u8531:
 14839  002482  EFC5  F012         	goto	l9225
 14840  002486                     u8530:
 14841  002486  EF6D  F012         	goto	l9205
 14842  00248A                     l9187:
 14843                           
 14844                           ; BSR set to: 0
 14845  00248A  0EDB               	movlw	219
 14846  00248C  6FA2               	movwf	?_atan2f& (0+255),b
 14847  00248E  0E0F               	movlw	15
 14848  002490  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14849  002492  0E49               	movlw	73
 14850  002494  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14851  002496  0E3F               	movlw	63
 14852  002498  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14853  00249A  EF55  F014         	goto	l2543
 14854  00249E                     l9191:
 14855                           
 14856                           ; BSR set to: 0
 14857  00249E  0EDB               	movlw	219
 14858  0024A0  6FA2               	movwf	?_atan2f& (0+255),b
 14859  0024A2  0E0F               	movlw	15
 14860  0024A4  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14861  0024A6  0E49               	movlw	73
 14862  0024A8  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14863  0024AA  0EBF               	movlw	191
 14864  0024AC  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14865  0024AE  EF55  F014         	goto	l2543
 14866  0024B2                     l9195:
 14867                           
 14868                           ; BSR set to: 0
 14869  0024B2  0EE4               	movlw	228
 14870  0024B4  6FA2               	movwf	?_atan2f& (0+255),b
 14871  0024B6  0ECB               	movlw	203
 14872  0024B8  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14873  0024BA  0E16               	movlw	22
 14874  0024BC  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14875  0024BE  0E40               	movlw	64
 14876  0024C0  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14877  0024C2  EF55  F014         	goto	l2543
 14878  0024C6                     l9199:
 14879                           
 14880                           ; BSR set to: 0
 14881  0024C6  0EE4               	movlw	228
 14882  0024C8  6FA2               	movwf	?_atan2f& (0+255),b
 14883  0024CA  0ECB               	movlw	203
 14884  0024CC  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14885  0024CE  0E16               	movlw	22
 14886  0024D0  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14887  0024D2  0EC0               	movlw	192
 14888  0024D4  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14889  0024D6  EF55  F014         	goto	l2543
 14890  0024DA                     l9205:
 14891                           
 14892                           ; BSR set to: 0
 14893  0024DA  C0D6  F0AA         	movff	atan2f@m,??_atan2f
 14894  0024DE  C0D7  F0AB         	movff	atan2f@m+1,??_atan2f+1
 14895  0024E2  C0D8  F0AC         	movff	atan2f@m+2,??_atan2f+2
 14896  0024E6  C0D9  F0AD         	movff	atan2f@m+3,??_atan2f+3
 14897                           
 14898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14899                           ; Switch size 1, requested type "simple"
 14900                           ; Number of cases is 1, Range of values is 0 to 0
 14901                           ; switch strategies available:
 14902                           ; Name         Instructions Cycles
 14903                           ; simple_byte            4     3 (average)
 14904                           ;	Chosen strategy is simple_byte
 14905  0024EA  51AD               	movf	(??_atan2f+3)& (0+255),w,b
 14906  0024EC  0A00               	xorlw	0	; case 0
 14907  0024EE  B4D8               	btfsc	status,2,c
 14908  0024F0  EF96  F012         	goto	l13277
 14909  0024F4  EFF5  F012         	goto	l9227
 14910  0024F8                     l13275:
 14911                           
 14912                           ; BSR set to: 0
 14913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14914                           ; Switch size 1, requested type "simple"
 14915                           ; Number of cases is 1, Range of values is 0 to 0
 14916                           ; switch strategies available:
 14917                           ; Name         Instructions Cycles
 14918                           ; simple_byte            4     3 (average)
 14919                           ;	Chosen strategy is simple_byte
 14920  0024F8  51AB               	movf	(??_atan2f+1)& (0+255),w,b
 14921  0024FA  0A00               	xorlw	0	; case 0
 14922  0024FC  B4D8               	btfsc	status,2,c
 14923  0024FE  EF83  F012         	goto	l13279
 14924  002502  EFF5  F012         	goto	l9227
 14925  002506                     l13279:
 14926                           
 14927                           ; BSR set to: 0
 14928                           ; Switch size 1, requested type "simple"
 14929                           ; Number of cases is 4, Range of values is 0 to 3
 14930                           ; switch strategies available:
 14931                           ; Name         Instructions Cycles
 14932                           ; simple_byte           13     7 (average)
 14933                           ;	Chosen strategy is simple_byte
 14934  002506  51AA               	movf	??_atan2f& (0+255),w,b
 14935  002508  0A00               	xorlw	0	; case 0
 14936  00250A  B4D8               	btfsc	status,2,c
 14937  00250C  EF45  F012         	goto	l9187
 14938  002510  0A01               	xorlw	1	; case 1
 14939  002512  B4D8               	btfsc	status,2,c
 14940  002514  EF4F  F012         	goto	l9191
 14941  002518  0A03               	xorlw	3	; case 2
 14942  00251A  B4D8               	btfsc	status,2,c
 14943  00251C  EF59  F012         	goto	l9195
 14944  002520  0A01               	xorlw	1	; case 3
 14945  002522  B4D8               	btfsc	status,2,c
 14946  002524  EF63  F012         	goto	l9199
 14947  002528  EFF5  F012         	goto	l9227
 14948  00252C                     l13277:
 14949                           
 14950                           ; BSR set to: 0
 14951                           ; Switch size 1, requested type "simple"
 14952                           ; Number of cases is 1, Range of values is 0 to 0
 14953                           ; switch strategies available:
 14954                           ; Name         Instructions Cycles
 14955                           ; simple_byte            4     3 (average)
 14956                           ;	Chosen strategy is simple_byte
 14957  00252C  51AC               	movf	(??_atan2f+2)& (0+255),w,b
 14958  00252E  0A00               	xorlw	0	; case 0
 14959  002530  B4D8               	btfsc	status,2,c
 14960  002532  EF7C  F012         	goto	l13275
 14961  002536  EFF5  F012         	goto	l9227
 14962  00253A                     l9207:
 14963                           
 14964                           ; BSR set to: 0
 14965  00253A  0E00               	movlw	0
 14966  00253C  6FA2               	movwf	?_atan2f& (0+255),b
 14967  00253E  0E00               	movlw	0
 14968  002540  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14969  002542  0E00               	movlw	0
 14970  002544  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14971  002546  0E00               	movlw	0
 14972  002548  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14973  00254A  EF55  F014         	goto	l2543
 14974  00254E                     l9211:
 14975                           
 14976                           ; BSR set to: 0
 14977  00254E  0E00               	movlw	0
 14978  002550  6FA2               	movwf	?_atan2f& (0+255),b
 14979  002552  0E00               	movlw	0
 14980  002554  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14981  002556  0E00               	movlw	0
 14982  002558  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14983  00255A  0E80               	movlw	128
 14984  00255C  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14985  00255E  EF55  F014         	goto	l2543
 14986  002562                     l9215:
 14987                           
 14988                           ; BSR set to: 0
 14989  002562  0EDB               	movlw	219
 14990  002564  6FA2               	movwf	?_atan2f& (0+255),b
 14991  002566  0E0F               	movlw	15
 14992  002568  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 14993  00256A  0E49               	movlw	73
 14994  00256C  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 14995  00256E  0E40               	movlw	64
 14996  002570  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 14997  002572  EF55  F014         	goto	l2543
 14998  002576                     l9219:
 14999                           
 15000                           ; BSR set to: 0
 15001  002576  0EDB               	movlw	219
 15002  002578  6FA2               	movwf	?_atan2f& (0+255),b
 15003  00257A  0E0F               	movlw	15
 15004  00257C  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 15005  00257E  0E49               	movlw	73
 15006  002580  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 15007  002582  0EC0               	movlw	192
 15008  002584  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 15009  002586  EF55  F014         	goto	l2543
 15010  00258A                     l9225:
 15011                           
 15012                           ; BSR set to: 0
 15013  00258A  C0D6  F0AA         	movff	atan2f@m,??_atan2f
 15014  00258E  C0D7  F0AB         	movff	atan2f@m+1,??_atan2f+1
 15015  002592  C0D8  F0AC         	movff	atan2f@m+2,??_atan2f+2
 15016  002596  C0D9  F0AD         	movff	atan2f@m+3,??_atan2f+3
 15017                           
 15018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15019                           ; Switch size 1, requested type "simple"
 15020                           ; Number of cases is 1, Range of values is 0 to 0
 15021                           ; switch strategies available:
 15022                           ; Name         Instructions Cycles
 15023                           ; simple_byte            4     3 (average)
 15024                           ;	Chosen strategy is simple_byte
 15025  00259A  51AD               	movf	(??_atan2f+3)& (0+255),w,b
 15026  00259C  0A00               	xorlw	0	; case 0
 15027  00259E  B4D8               	btfsc	status,2,c
 15028  0025A0  EFEE  F012         	goto	l13283
 15029  0025A4  EFF5  F012         	goto	l9227
 15030  0025A8                     l13281:
 15031                           
 15032                           ; BSR set to: 0
 15033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15034                           ; Switch size 1, requested type "simple"
 15035                           ; Number of cases is 1, Range of values is 0 to 0
 15036                           ; switch strategies available:
 15037                           ; Name         Instructions Cycles
 15038                           ; simple_byte            4     3 (average)
 15039                           ;	Chosen strategy is simple_byte
 15040  0025A8  51AB               	movf	(??_atan2f+1)& (0+255),w,b
 15041  0025AA  0A00               	xorlw	0	; case 0
 15042  0025AC  B4D8               	btfsc	status,2,c
 15043  0025AE  EFDB  F012         	goto	l13285
 15044  0025B2  EFF5  F012         	goto	l9227
 15045  0025B6                     l13285:
 15046                           
 15047                           ; BSR set to: 0
 15048                           ; Switch size 1, requested type "simple"
 15049                           ; Number of cases is 4, Range of values is 0 to 3
 15050                           ; switch strategies available:
 15051                           ; Name         Instructions Cycles
 15052                           ; simple_byte           13     7 (average)
 15053                           ;	Chosen strategy is simple_byte
 15054  0025B6  51AA               	movf	??_atan2f& (0+255),w,b
 15055  0025B8  0A00               	xorlw	0	; case 0
 15056  0025BA  B4D8               	btfsc	status,2,c
 15057  0025BC  EF9D  F012         	goto	l9207
 15058  0025C0  0A01               	xorlw	1	; case 1
 15059  0025C2  B4D8               	btfsc	status,2,c
 15060  0025C4  EFA7  F012         	goto	l9211
 15061  0025C8  0A03               	xorlw	3	; case 2
 15062  0025CA  B4D8               	btfsc	status,2,c
 15063  0025CC  EFB1  F012         	goto	l9215
 15064  0025D0  0A01               	xorlw	1	; case 3
 15065  0025D2  B4D8               	btfsc	status,2,c
 15066  0025D4  EFBB  F012         	goto	l9219
 15067  0025D8  EFF5  F012         	goto	l9227
 15068  0025DC                     l13283:
 15069                           
 15070                           ; BSR set to: 0
 15071                           ; Switch size 1, requested type "simple"
 15072                           ; Number of cases is 1, Range of values is 0 to 0
 15073                           ; switch strategies available:
 15074                           ; Name         Instructions Cycles
 15075                           ; simple_byte            4     3 (average)
 15076                           ;	Chosen strategy is simple_byte
 15077  0025DC  51AC               	movf	(??_atan2f+2)& (0+255),w,b
 15078  0025DE  0A00               	xorlw	0	; case 0
 15079  0025E0  B4D8               	btfsc	status,2,c
 15080  0025E2  EFD4  F012         	goto	l13281
 15081  0025E6  EFF5  F012         	goto	l9227
 15082  0025EA                     l9227:
 15083                           
 15084                           ; BSR set to: 0
 15085  0025EA  0E00               	movlw	0
 15086  0025EC  25CE               	addwf	atan2f@ix& (0+255),w,b
 15087  0025EE  6FAA               	movwf	??_atan2f& (0+255),b
 15088  0025F0  0E00               	movlw	0
 15089  0025F2  21CF               	addwfc	(atan2f@ix+1)& (0+255),w,b
 15090  0025F4  6FAB               	movwf	(??_atan2f+1)& (0+255),b
 15091  0025F6  0E00               	movlw	0
 15092  0025F8  21D0               	addwfc	(atan2f@ix+2)& (0+255),w,b
 15093  0025FA  6FAC               	movwf	(??_atan2f+2)& (0+255),b
 15094  0025FC  0E0D               	movlw	13
 15095  0025FE  21D1               	addwfc	(atan2f@ix+3)& (0+255),w,b
 15096  002600  6FAD               	movwf	(??_atan2f+3)& (0+255),b
 15097  002602  51D2               	movf	atan2f@iy& (0+255),w,b
 15098  002604  5DAA               	subwf	??_atan2f& (0+255),w,b
 15099  002606  51D3               	movf	(atan2f@iy+1)& (0+255),w,b
 15100  002608  59AB               	subwfb	(??_atan2f+1)& (0+255),w,b
 15101  00260A  51D4               	movf	(atan2f@iy+2)& (0+255),w,b
 15102  00260C  59AC               	subwfb	(??_atan2f+2)& (0+255),w,b
 15103  00260E  51D5               	movf	(atan2f@iy+3)& (0+255),w,b
 15104  002610  59AD               	subwfb	(??_atan2f+3)& (0+255),w,b
 15105  002612  A0D8               	btfss	status,0,c
 15106  002614  EF0E  F013         	goto	u8541
 15107  002618  EF10  F013         	goto	u8540
 15108  00261C                     u8541:
 15109  00261C  EF1E  F013         	goto	l2578
 15110  002620                     u8540:
 15111  002620                     
 15112                           ; BSR set to: 0
 15113  002620  0E80               	movlw	128
 15114  002622  19D4               	xorwf	(atan2f@iy+2)& (0+255),w,b
 15115  002624  E109               	bnz	u8551
 15116  002626  0E7F               	movlw	127
 15117  002628  19D5               	xorwf	(atan2f@iy+3)& (0+255),w,b
 15118  00262A  11D2               	iorwf	atan2f@iy& (0+255),w,b
 15119  00262C  11D3               	iorwf	(atan2f@iy+1)& (0+255),w,b
 15120  00262E  A4D8               	btfss	status,2,c
 15121  002630  EF1C  F013         	goto	u8551
 15122  002634  EF1E  F013         	goto	u8550
 15123  002638                     u8551:
 15124  002638  EF39  F013         	goto	l2576
 15125  00263C                     u8550:
 15126  00263C                     l2578:
 15127                           
 15128                           ; BSR set to: 0
 15129  00263C  B1D6               	btfsc	atan2f@m& (0+255),0,b
 15130  00263E  EF23  F013         	goto	u8561
 15131  002642  EF25  F013         	goto	u8560
 15132  002646                     u8561:
 15133  002646  EF2F  F013         	goto	l9233
 15134  00264A                     u8560:
 15135  00264A                     
 15136                           ; BSR set to: 0
 15137  00264A  0EDB               	movlw	219
 15138  00264C  6FA2               	movwf	?_atan2f& (0+255),b
 15139  00264E  0E0F               	movlw	15
 15140  002650  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 15141  002652  0EC9               	movlw	201
 15142  002654  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 15143  002656  0E3F               	movlw	63
 15144  002658  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 15145  00265A  EF55  F014         	goto	l2543
 15146  00265E                     l9233:
 15147                           
 15148                           ; BSR set to: 0
 15149  00265E  0EDB               	movlw	219
 15150  002660  6FA2               	movwf	?_atan2f& (0+255),b
 15151  002662  0E0F               	movlw	15
 15152  002664  6FA3               	movwf	(?_atan2f+1)& (0+255),b
 15153  002666  0EC9               	movlw	201
 15154  002668  6FA4               	movwf	(?_atan2f+2)& (0+255),b
 15155  00266A  0EBF               	movlw	191
 15156  00266C  6FA5               	movwf	(?_atan2f+3)& (0+255),b
 15157  00266E  EF55  F014         	goto	l2543
 15158  002672                     l2576:
 15159                           
 15160                           ; BSR set to: 0
 15161  002672  A3D6               	btfss	atan2f@m& (0+255),1,b
 15162  002674  EF3E  F013         	goto	u8571
 15163  002678  EF40  F013         	goto	u8570
 15164  00267C                     u8571:
 15165  00267C  EF65  F013         	goto	l9241
 15166  002680                     u8570:
 15167  002680                     
 15168                           ; BSR set to: 0
 15169  002680  0E00               	movlw	0
 15170  002682  25D2               	addwf	atan2f@iy& (0+255),w,b
 15171  002684  6FAA               	movwf	??_atan2f& (0+255),b
 15172  002686  0E00               	movlw	0
 15173  002688  21D3               	addwfc	(atan2f@iy+1)& (0+255),w,b
 15174  00268A  6FAB               	movwf	(??_atan2f+1)& (0+255),b
 15175  00268C  0E00               	movlw	0
 15176  00268E  21D4               	addwfc	(atan2f@iy+2)& (0+255),w,b
 15177  002690  6FAC               	movwf	(??_atan2f+2)& (0+255),b
 15178  002692  0E0D               	movlw	13
 15179  002694  21D5               	addwfc	(atan2f@iy+3)& (0+255),w,b
 15180  002696  6FAD               	movwf	(??_atan2f+3)& (0+255),b
 15181  002698  51CE               	movf	atan2f@ix& (0+255),w,b
 15182  00269A  5DAA               	subwf	??_atan2f& (0+255),w,b
 15183  00269C  51CF               	movf	(atan2f@ix+1)& (0+255),w,b
 15184  00269E  59AB               	subwfb	(??_atan2f+1)& (0+255),w,b
 15185  0026A0  51D0               	movf	(atan2f@ix+2)& (0+255),w,b
 15186  0026A2  59AC               	subwfb	(??_atan2f+2)& (0+255),w,b
 15187  0026A4  51D1               	movf	(atan2f@ix+3)& (0+255),w,b
 15188  0026A6  59AD               	subwfb	(??_atan2f+3)& (0+255),w,b
 15189  0026A8  B0D8               	btfsc	status,0,c
 15190  0026AA  EF59  F013         	goto	u8581
 15191  0026AE  EF5B  F013         	goto	u8580
 15192  0026B2                     u8581:
 15193  0026B2  EF65  F013         	goto	l9241
 15194  0026B6                     u8580:
 15195  0026B6                     
 15196                           ; BSR set to: 0
 15197  0026B6  0E00               	movlw	0
 15198  0026B8  6FCA               	movwf	atan2f@z& (0+255),b
 15199  0026BA  0E00               	movlw	0
 15200  0026BC  6FCB               	movwf	(atan2f@z+1)& (0+255),b
 15201  0026BE  0E00               	movlw	0
 15202  0026C0  6FCC               	movwf	(atan2f@z+2)& (0+255),b
 15203  0026C2  0E00               	movlw	0
 15204  0026C4  6FCD               	movwf	(atan2f@z+3)& (0+255),b
 15205  0026C6  EF28  F014         	goto	l9259
 15206  0026CA                     l9241:
 15207                           
 15208                           ; BSR set to: 0
 15209  0026CA  C0A2  F018         	movff	atan2f@y,___fldiv@b
 15210  0026CE  C0A3  F019         	movff	atan2f@y+1,___fldiv@b+1
 15211  0026D2  C0A4  F01A         	movff	atan2f@y+2,___fldiv@b+2
 15212  0026D6  C0A5  F01B         	movff	atan2f@y+3,___fldiv@b+3
 15213  0026DA  C0A6  F01C         	movff	atan2f@x,___fldiv@a
 15214  0026DE  C0A7  F01D         	movff	atan2f@x+1,___fldiv@a+1
 15215  0026E2  C0A8  F01E         	movff	atan2f@x+2,___fldiv@a+2
 15216  0026E6  C0A9  F01F         	movff	atan2f@x+3,___fldiv@a+3
 15217  0026EA  ECDF  F01B         	call	___fldiv	;wreg free
 15218  0026EE  C018  F031         	movff	?___fldiv,fabsf@x
 15219  0026F2  C019  F032         	movff	?___fldiv+1,fabsf@x+1
 15220  0026F6  C01A  F033         	movff	?___fldiv+2,fabsf@x+2
 15221  0026FA  C01B  F034         	movff	?___fldiv+3,fabsf@x+3
 15222  0026FE  EC60  F032         	call	_fabsf	;wreg free
 15223  002702  C031  F0BA         	movff	?_fabsf,_atan2f$4565
 15224  002706  C032  F0BB         	movff	?_fabsf+1,_atan2f$4565+1
 15225  00270A  C033  F0BC         	movff	?_fabsf+2,_atan2f$4565+2
 15226  00270E  C034  F0BD         	movff	?_fabsf+3,_atan2f$4565+3
 15227  002712  C0BA  F068         	movff	_atan2f$4565,atanf@x
 15228  002716  C0BB  F069         	movff	_atan2f$4565+1,atanf@x+1
 15229  00271A  C0BC  F06A         	movff	_atan2f$4565+2,atanf@x+2
 15230  00271E  C0BD  F06B         	movff	_atan2f$4565+3,atanf@x+3
 15231  002722  ECBF  F00C         	call	_atanf	;wreg free
 15232  002726  C068  F0CA         	movff	?_atanf,atan2f@z
 15233  00272A  C069  F0CB         	movff	?_atanf+1,atan2f@z+1
 15234  00272E  C06A  F0CC         	movff	?_atanf+2,atan2f@z+2
 15235  002732  C06B  F0CD         	movff	?_atanf+3,atan2f@z+3
 15236  002736  EF28  F014         	goto	l9259
 15237  00273A                     l2586:
 15238                           
 15239                           ; BSR set to: 0
 15240  00273A  C0CA  F0A2         	movff	atan2f@z,?_atan2f
 15241  00273E  C0CB  F0A3         	movff	atan2f@z+1,?_atan2f+1
 15242  002742  C0CC  F0A4         	movff	atan2f@z+2,?_atan2f+2
 15243  002746  C0CD  F0A5         	movff	atan2f@z+3,?_atan2f+3
 15244  00274A  EF55  F014         	goto	l2543
 15245  00274E                     l9245:
 15246                           
 15247                           ; BSR set to: 0
 15248  00274E  C0CA  F004         	movff	atan2f@z,___flneg@f1
 15249  002752  C0CB  F005         	movff	atan2f@z+1,___flneg@f1+1
 15250  002756  C0CC  F006         	movff	atan2f@z+2,___flneg@f1+2
 15251  00275A  C0CD  F007         	movff	atan2f@z+3,___flneg@f1+3
 15252  00275E  EC29  F032         	call	___flneg	;wreg free
 15253  002762  C004  F0A2         	movff	?___flneg,?_atan2f
 15254  002766  C005  F0A3         	movff	?___flneg+1,?_atan2f+1
 15255  00276A  C006  F0A4         	movff	?___flneg+2,?_atan2f+2
 15256  00276E  C007  F0A5         	movff	?___flneg+3,?_atan2f+3
 15257  002772  EF55  F014         	goto	l2543
 15258  002776                     l9249:
 15259                           
 15260                           ; BSR set to: 0
 15261  002776  0E2E               	movlw	46
 15262  002778  6E4E               	movwf	___fladd@a^0,c
 15263  00277A  0EBD               	movlw	189
 15264  00277C  6E4F               	movwf	(___fladd@a+1)^0,c
 15265  00277E  0EBB               	movlw	187
 15266  002780  6E50               	movwf	(___fladd@a+2)^0,c
 15267  002782  0E33               	movlw	51
 15268  002784  6E51               	movwf	(___fladd@a+3)^0,c
 15269  002786  C0CA  F04A         	movff	atan2f@z,___fladd@b
 15270  00278A  C0CB  F04B         	movff	atan2f@z+1,___fladd@b+1
 15271  00278E  C0CC  F04C         	movff	atan2f@z+2,___fladd@b+2
 15272  002792  C0CD  F04D         	movff	atan2f@z+3,___fladd@b+3
 15273  002796  EC6A  F017         	call	___fladd	;wreg free
 15274  00279A  C04A  F0BE         	movff	?___fladd,_atan2f$4566
 15275  00279E  C04B  F0BF         	movff	?___fladd+1,_atan2f$4566+1
 15276  0027A2  C04C  F0C0         	movff	?___fladd+2,_atan2f$4566+2
 15277  0027A6  C04D  F0C1         	movff	?___fladd+3,_atan2f$4566+3
 15278  0027AA  0EDB               	movlw	219
 15279  0027AC  0100               	movlb	0	; () banked
 15280  0027AE  6F60               	movwf	___flsub@b& (0+255),b
 15281  0027B0  0E0F               	movlw	15
 15282  0027B2  6F61               	movwf	(___flsub@b+1)& (0+255),b
 15283  0027B4  0E49               	movlw	73
 15284  0027B6  6F62               	movwf	(___flsub@b+2)& (0+255),b
 15285  0027B8  0E40               	movlw	64
 15286  0027BA  6F63               	movwf	(___flsub@b+3)& (0+255),b
 15287  0027BC  C0BE  F064         	movff	_atan2f$4566,___flsub@a
 15288  0027C0  C0BF  F065         	movff	_atan2f$4566+1,___flsub@a+1
 15289  0027C4  C0C0  F066         	movff	_atan2f$4566+2,___flsub@a+2
 15290  0027C8  C0C1  F067         	movff	_atan2f$4566+3,___flsub@a+3
 15291  0027CC  ECA9  F031         	call	___flsub	;wreg free
 15292  0027D0  C060  F0A2         	movff	?___flsub,?_atan2f
 15293  0027D4  C061  F0A3         	movff	?___flsub+1,?_atan2f+1
 15294  0027D8  C062  F0A4         	movff	?___flsub+2,?_atan2f+2
 15295  0027DC  C063  F0A5         	movff	?___flsub+3,?_atan2f+3
 15296  0027E0  EF55  F014         	goto	l2543
 15297  0027E4                     l9253:
 15298                           
 15299                           ; BSR set to: 0
 15300  0027E4  0E2E               	movlw	46
 15301  0027E6  6E4E               	movwf	___fladd@a^0,c
 15302  0027E8  0EBD               	movlw	189
 15303  0027EA  6E4F               	movwf	(___fladd@a+1)^0,c
 15304  0027EC  0EBB               	movlw	187
 15305  0027EE  6E50               	movwf	(___fladd@a+2)^0,c
 15306  0027F0  0E33               	movlw	51
 15307  0027F2  6E51               	movwf	(___fladd@a+3)^0,c
 15308  0027F4  C0CA  F04A         	movff	atan2f@z,___fladd@b
 15309  0027F8  C0CB  F04B         	movff	atan2f@z+1,___fladd@b+1
 15310  0027FC  C0CC  F04C         	movff	atan2f@z+2,___fladd@b+2
 15311  002800  C0CD  F04D         	movff	atan2f@z+3,___fladd@b+3
 15312  002804  EC6A  F017         	call	___fladd	;wreg free
 15313  002808  C04A  F0C2         	movff	?___fladd,_atan2f$4567
 15314  00280C  C04B  F0C3         	movff	?___fladd+1,_atan2f$4567+1
 15315  002810  C04C  F0C4         	movff	?___fladd+2,_atan2f$4567+2
 15316  002814  C04D  F0C5         	movff	?___fladd+3,_atan2f$4567+3
 15317  002818  C0C2  F04A         	movff	_atan2f$4567,___fladd@b
 15318  00281C  C0C3  F04B         	movff	_atan2f$4567+1,___fladd@b+1
 15319  002820  C0C4  F04C         	movff	_atan2f$4567+2,___fladd@b+2
 15320  002824  C0C5  F04D         	movff	_atan2f$4567+3,___fladd@b+3
 15321  002828  0EDB               	movlw	219
 15322  00282A  6E4E               	movwf	___fladd@a^0,c
 15323  00282C  0E0F               	movlw	15
 15324  00282E  6E4F               	movwf	(___fladd@a+1)^0,c
 15325  002830  0E49               	movlw	73
 15326  002832  6E50               	movwf	(___fladd@a+2)^0,c
 15327  002834  0EC0               	movlw	192
 15328  002836  6E51               	movwf	(___fladd@a+3)^0,c
 15329  002838  EC6A  F017         	call	___fladd	;wreg free
 15330  00283C  C04A  F0A2         	movff	?___fladd,?_atan2f
 15331  002840  C04B  F0A3         	movff	?___fladd+1,?_atan2f+1
 15332  002844  C04C  F0A4         	movff	?___fladd+2,?_atan2f+2
 15333  002848  C04D  F0A5         	movff	?___fladd+3,?_atan2f+3
 15334  00284C  EF55  F014         	goto	l2543
 15335  002850                     l9259:
 15336  002850  C0D6  F0AA         	movff	atan2f@m,??_atan2f
 15337  002854  C0D7  F0AB         	movff	atan2f@m+1,??_atan2f+1
 15338  002858  C0D8  F0AC         	movff	atan2f@m+2,??_atan2f+2
 15339  00285C  C0D9  F0AD         	movff	atan2f@m+3,??_atan2f+3
 15340                           
 15341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15342                           ; Switch size 1, requested type "simple"
 15343                           ; Number of cases is 1, Range of values is 0 to 0
 15344                           ; switch strategies available:
 15345                           ; Name         Instructions Cycles
 15346                           ; simple_byte            4     3 (average)
 15347                           ;	Chosen strategy is simple_byte
 15348  002860  0100               	movlb	0	; () banked
 15349  002862  51AD               	movf	(??_atan2f+3)& (0+255),w,b
 15350  002864  0A00               	xorlw	0	; case 0
 15351  002866  B4D8               	btfsc	status,2,c
 15352  002868  EF4E  F014         	goto	l13289
 15353  00286C  EFF2  F013         	goto	l9253
 15354  002870                     l13287:
 15355                           
 15356                           ; BSR set to: 0
 15357                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15358                           ; Switch size 1, requested type "simple"
 15359                           ; Number of cases is 1, Range of values is 0 to 0
 15360                           ; switch strategies available:
 15361                           ; Name         Instructions Cycles
 15362                           ; simple_byte            4     3 (average)
 15363                           ;	Chosen strategy is simple_byte
 15364  002870  51AB               	movf	(??_atan2f+1)& (0+255),w,b
 15365  002872  0A00               	xorlw	0	; case 0
 15366  002874  B4D8               	btfsc	status,2,c
 15367  002876  EF3F  F014         	goto	l13291
 15368  00287A  EFF2  F013         	goto	l9253
 15369  00287E                     l13291:
 15370                           
 15371                           ; BSR set to: 0
 15372                           ; Switch size 1, requested type "simple"
 15373                           ; Number of cases is 3, Range of values is 0 to 2
 15374                           ; switch strategies available:
 15375                           ; Name         Instructions Cycles
 15376                           ; simple_byte           10     6 (average)
 15377                           ;	Chosen strategy is simple_byte
 15378  00287E  51AA               	movf	??_atan2f& (0+255),w,b
 15379  002880  0A00               	xorlw	0	; case 0
 15380  002882  B4D8               	btfsc	status,2,c
 15381  002884  EF9D  F013         	goto	l2586
 15382  002888  0A01               	xorlw	1	; case 1
 15383  00288A  B4D8               	btfsc	status,2,c
 15384  00288C  EFA7  F013         	goto	l9245
 15385  002890  0A03               	xorlw	3	; case 2
 15386  002892  B4D8               	btfsc	status,2,c
 15387  002894  EFBB  F013         	goto	l9249
 15388  002898  EFF2  F013         	goto	l9253
 15389  00289C                     l13289:
 15390                           
 15391                           ; BSR set to: 0
 15392                           ; Switch size 1, requested type "simple"
 15393                           ; Number of cases is 1, Range of values is 0 to 0
 15394                           ; switch strategies available:
 15395                           ; Name         Instructions Cycles
 15396                           ; simple_byte            4     3 (average)
 15397                           ;	Chosen strategy is simple_byte
 15398  00289C  51AC               	movf	(??_atan2f+2)& (0+255),w,b
 15399  00289E  0A00               	xorlw	0	; case 0
 15400  0028A0  B4D8               	btfsc	status,2,c
 15401  0028A2  EF38  F014         	goto	l13287
 15402  0028A6  EFF2  F013         	goto	l9253
 15403  0028AA                     l2543:
 15404  0028AA  0012               	return		;funcret
 15405  0028AC                     __end_of_atan2f:
 15406                           	callstack 0
 15407                           
 15408 ;; *************** function _atanf *****************
 15409 ;; Defined at:
 15410 ;;		line 41 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atanf.c"
 15411 ;; Parameters:    Size  Location     Type
 15412 ;;  x               4    8[BANK0 ] float 
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;  ix              4   62[BANK0 ] unsigned long 
 15415 ;;  z               4   58[BANK0 ] float 
 15416 ;;  w               4   52[BANK0 ] float 
 15417 ;;  sign            4   40[BANK0 ] unsigned long 
 15418 ;;  s2              4   36[BANK0 ] float 
 15419 ;;  s1              4   32[BANK0 ] float 
 15420 ;;  __xc8_float_    4   16[BANK0 ] struct .
 15421 ;;  id              2   56[BANK0 ] int 
 15422 ;; Return value:  Size  Location     Type
 15423 ;;                  4    8[BANK0 ] float 
 15424 ;; Registers used:
 15425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15426 ;; Tracked objects:
 15427 ;;		On entry : 0/0
 15428 ;;		On exit  : 0/0
 15429 ;;		Unchanged: 0/0
 15430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15431 ;;      Params:         0       4       0       0       0       0       0       0       0
 15432 ;;      Locals:         0      50       0       0       0       0       0       0       0
 15433 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15434 ;;      Totals:         0      58       0       0       0       0       0       0       0
 15435 ;;Total ram usage:       58 bytes
 15436 ;; Hardware stack levels used:    1
 15437 ;; Hardware stack levels required when called:    4
 15438 ;; This function calls:
 15439 ;;		___fladd
 15440 ;;		___fldiv
 15441 ;;		___flmul
 15442 ;;		___flneg
 15443 ;;		___flsub
 15444 ;;		___fpclassifyf
 15445 ;;		_fabsf
 15446 ;; This function is called by:
 15447 ;;		_atan2f
 15448 ;; This function uses a non-reentrant model
 15449 ;;
 15450                           
 15451                           	psect	text50
 15452  00197E                     __ptext50:
 15453                           	callstack 0
 15454  00197E                     _atanf:
 15455                           	callstack 24
 15456  00197E  C068  F070         	movff	atanf@x,atanf@__xc8_float_word
 15457  001982  C069  F071         	movff	atanf@x+1,atanf@__xc8_float_word+1
 15458  001986  C06A  F072         	movff	atanf@x+2,atanf@__xc8_float_word+2
 15459  00198A  C06B  F073         	movff	atanf@x+3,atanf@__xc8_float_word+3
 15460  00198E  C070  F09E         	movff	atanf@__xc8_float_word,atanf@ix
 15461  001992  C071  F09F         	movff	atanf@__xc8_float_word+1,atanf@ix+1
 15462  001996  C072  F0A0         	movff	atanf@__xc8_float_word+2,atanf@ix+2
 15463  00199A  C073  F0A1         	movff	atanf@__xc8_float_word+3,atanf@ix+3
 15464  00199E  C09E  F06C         	movff	atanf@ix,??_atanf
 15465  0019A2  C09F  F06D         	movff	atanf@ix+1,??_atanf+1
 15466  0019A6  C0A0  F06E         	movff	atanf@ix+2,??_atanf+2
 15467  0019AA  C0A1  F06F         	movff	atanf@ix+3,??_atanf+3
 15468  0019AE  0E20               	movlw	32
 15469  0019B0  EFE0  F00C         	goto	u8090
 15470  0019B4                     u8095:
 15471  0019B4  0100               	movlb	0	; () banked
 15472  0019B6  90D8               	bcf	status,0,c
 15473  0019B8  336F               	rrcf	(??_atanf+3)& (0+255),f,b
 15474  0019BA  336E               	rrcf	(??_atanf+2)& (0+255),f,b
 15475  0019BC  336D               	rrcf	(??_atanf+1)& (0+255),f,b
 15476  0019BE  336C               	rrcf	??_atanf& (0+255),f,b
 15477  0019C0                     u8090:
 15478  0019C0  2EE8               	decfsz	wreg,f,c
 15479  0019C2  EFDA  F00C         	goto	u8095
 15480  0019C6  C06C  F088         	movff	??_atanf,atanf@sign
 15481  0019CA  C06D  F089         	movff	??_atanf+1,atanf@sign+1
 15482  0019CE  C06E  F08A         	movff	??_atanf+2,atanf@sign+2
 15483  0019D2  C06F  F08B         	movff	??_atanf+3,atanf@sign+3
 15484  0019D6                     
 15485                           ; BSR set to: 0
 15486  0019D6  9FA1               	bcf	(atanf@ix+3)& (0+255),7,b
 15487  0019D8                     
 15488                           ; BSR set to: 0
 15489  0019D8  0E80               	movlw	128
 15490  0019DA  5DA0               	subwf	(atanf@ix+2)& (0+255),w,b
 15491  0019DC  0E4C               	movlw	76
 15492  0019DE  59A1               	subwfb	(atanf@ix+3)& (0+255),w,b
 15493  0019E0  A0D8               	btfss	status,0,c
 15494  0019E2  EFF5  F00C         	goto	u8101
 15495  0019E6  EFF7  F00C         	goto	u8100
 15496  0019EA                     u8101:
 15497  0019EA  EF60  F00D         	goto	l8851
 15498  0019EE                     u8100:
 15499  0019EE                     
 15500                           ; BSR set to: 0
 15501  0019EE  C068  F004         	movff	atanf@x,___fpclassifyf@x
 15502  0019F2  C069  F005         	movff	atanf@x+1,___fpclassifyf@x+1
 15503  0019F6  C06A  F006         	movff	atanf@x+2,___fpclassifyf@x+2
 15504  0019FA  C06B  F007         	movff	atanf@x+3,___fpclassifyf@x+3
 15505  0019FE  EC12  F029         	call	___fpclassifyf	;wreg free
 15506  001A02  5004               	movf	?___fpclassifyf^0,w,c
 15507  001A04  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
 15508  001A06  A4D8               	btfss	status,2,c
 15509  001A08  EF08  F00D         	goto	u8111
 15510  001A0C  EF0A  F00D         	goto	u8110
 15511  001A10                     u8111:
 15512  001A10  EF14  F00D         	goto	l8841
 15513  001A14                     u8110:
 15514  001A14                     l8839:
 15515  001A14  C068  F068         	movff	atanf@x,?_atanf
 15516  001A18  C069  F069         	movff	atanf@x+1,?_atanf+1
 15517  001A1C  C06A  F06A         	movff	atanf@x+2,?_atanf+2
 15518  001A20  C06B  F06B         	movff	atanf@x+3,?_atanf+3
 15519  001A24  EFD4  F010         	goto	l2618
 15520  001A28                     l8841:
 15521  001A28  0EDD               	movlw	low (_atanhi+12)
 15522  001A2A  6EF6               	movwf	tblptrl,c
 15523  001A2C  0E72               	movlw	high (_atanhi+12)
 15524  001A2E  6EF7               	movwf	tblptrh,c
 15525  001A30                     	if	0	;tblptru may be non-zero
 15526  001A30                     	endif
 15527  001A30                     	if	0	;tblptru may be non-zero
 15528  001A30                     	endif
 15529  001A30  0009               	tblrd		*+
 15530  001A32  CFF5 F04A          	movff	tablat,___fladd@b
 15531  001A36  0009               	tblrd		*+
 15532  001A38  CFF5 F04B          	movff	tablat,___fladd@b+1
 15533  001A3C  0009               	tblrd		*+
 15534  001A3E  CFF5 F04C          	movff	tablat,___fladd@b+2
 15535  001A42  000A               	tblrd		*-
 15536  001A44  CFF5 F04D          	movff	tablat,___fladd@b+3
 15537  001A48  0E00               	movlw	0
 15538  001A4A  6E4E               	movwf	___fladd@a^0,c
 15539  001A4C  0E00               	movlw	0
 15540  001A4E  6E4F               	movwf	(___fladd@a+1)^0,c
 15541  001A50  0E80               	movlw	128
 15542  001A52  6E50               	movwf	(___fladd@a+2)^0,c
 15543  001A54  0E03               	movlw	3
 15544  001A56  6E51               	movwf	(___fladd@a+3)^0,c
 15545  001A58  EC6A  F017         	call	___fladd	;wreg free
 15546  001A5C  C04A  F09A         	movff	?___fladd,atanf@z
 15547  001A60  C04B  F09B         	movff	?___fladd+1,atanf@z+1
 15548  001A64  C04C  F09C         	movff	?___fladd+2,atanf@z+2
 15549  001A68  C04D  F09D         	movff	?___fladd+3,atanf@z+3
 15550  001A6C  0100               	movlb	0	; () banked
 15551  001A6E  5188               	movf	atanf@sign& (0+255),w,b
 15552  001A70  1189               	iorwf	(atanf@sign+1)& (0+255),w,b
 15553  001A72  118A               	iorwf	(atanf@sign+2)& (0+255),w,b
 15554  001A74  118B               	iorwf	(atanf@sign+3)& (0+255),w,b
 15555  001A76  A4D8               	btfss	status,2,c
 15556  001A78  EF40  F00D         	goto	u8121
 15557  001A7C  EF42  F00D         	goto	u8120
 15558  001A80                     u8121:
 15559  001A80  EF4C  F00D         	goto	l8847
 15560  001A84                     u8120:
 15561  001A84                     l8845:
 15562                           
 15563                           ; BSR set to: 0
 15564  001A84  C09A  F068         	movff	atanf@z,?_atanf
 15565  001A88  C09B  F069         	movff	atanf@z+1,?_atanf+1
 15566  001A8C  C09C  F06A         	movff	atanf@z+2,?_atanf+2
 15567  001A90  C09D  F06B         	movff	atanf@z+3,?_atanf+3
 15568  001A94  EFD4  F010         	goto	l2618
 15569  001A98                     l8847:
 15570                           
 15571                           ; BSR set to: 0
 15572  001A98  C09A  F004         	movff	atanf@z,___flneg@f1
 15573  001A9C  C09B  F005         	movff	atanf@z+1,___flneg@f1+1
 15574  001AA0  C09C  F006         	movff	atanf@z+2,___flneg@f1+2
 15575  001AA4  C09D  F007         	movff	atanf@z+3,___flneg@f1+3
 15576  001AA8  EC29  F032         	call	___flneg	;wreg free
 15577  001AAC  C004  F068         	movff	?___flneg,?_atanf
 15578  001AB0  C005  F069         	movff	?___flneg+1,?_atanf+1
 15579  001AB4  C006  F06A         	movff	?___flneg+2,?_atanf+2
 15580  001AB8  C007  F06B         	movff	?___flneg+3,?_atanf+3
 15581  001ABC  EFD4  F010         	goto	l2618
 15582  001AC0                     l8851:
 15583                           
 15584                           ; BSR set to: 0
 15585  001AC0  0EE0               	movlw	224
 15586  001AC2  5DA0               	subwf	(atanf@ix+2)& (0+255),w,b
 15587  001AC4  0E3E               	movlw	62
 15588  001AC6  59A1               	subwfb	(atanf@ix+3)& (0+255),w,b
 15589  001AC8  B0D8               	btfsc	status,0,c
 15590  001ACA  EF69  F00D         	goto	u8131
 15591  001ACE  EF6B  F00D         	goto	u8130
 15592  001AD2                     u8131:
 15593  001AD2  EF7C  F00D         	goto	l8857
 15594  001AD6                     u8130:
 15595  001AD6                     
 15596                           ; BSR set to: 0
 15597  001AD6  0E80               	movlw	128
 15598  001AD8  5DA0               	subwf	(atanf@ix+2)& (0+255),w,b
 15599  001ADA  0E39               	movlw	57
 15600  001ADC  59A1               	subwfb	(atanf@ix+3)& (0+255),w,b
 15601  001ADE  B0D8               	btfsc	status,0,c
 15602  001AE0  EF74  F00D         	goto	u8141
 15603  001AE4  EF76  F00D         	goto	u8140
 15604  001AE8                     u8141:
 15605  001AE8  EF78  F00D         	goto	l2624
 15606  001AEC                     u8140:
 15607  001AEC  EF0A  F00D         	goto	l8839
 15608  001AF0                     l2624:
 15609                           
 15610                           ; BSR set to: 0
 15611  001AF0  6998               	setf	atanf@id& (0+255),b
 15612  001AF2  6999               	setf	(atanf@id+1)& (0+255),b
 15613  001AF4  EFBE  F00E         	goto	l8881
 15614  001AF8                     l8857:
 15615                           
 15616                           ; BSR set to: 0
 15617  001AF8  C068  F031         	movff	atanf@x,fabsf@x
 15618  001AFC  C069  F032         	movff	atanf@x+1,fabsf@x+1
 15619  001B00  C06A  F033         	movff	atanf@x+2,fabsf@x+2
 15620  001B04  C06B  F034         	movff	atanf@x+3,fabsf@x+3
 15621  001B08  EC60  F032         	call	_fabsf	;wreg free
 15622  001B0C  C031  F068         	movff	?_fabsf,atanf@x
 15623  001B10  C032  F069         	movff	?_fabsf+1,atanf@x+1
 15624  001B14  C033  F06A         	movff	?_fabsf+2,atanf@x+2
 15625  001B18  C034  F06B         	movff	?_fabsf+3,atanf@x+3
 15626  001B1C  0E98               	movlw	152
 15627  001B1E  0100               	movlb	0	; () banked
 15628  001B20  5DA0               	subwf	(atanf@ix+2)& (0+255),w,b
 15629  001B22  0E3F               	movlw	63
 15630  001B24  59A1               	subwfb	(atanf@ix+3)& (0+255),w,b
 15631  001B26  B0D8               	btfsc	status,0,c
 15632  001B28  EF98  F00D         	goto	u8151
 15633  001B2C  EF9A  F00D         	goto	u8150
 15634  001B30                     u8151:
 15635  001B30  EF3F  F00E         	goto	l8871
 15636  001B34                     u8150:
 15637  001B34                     
 15638                           ; BSR set to: 0
 15639  001B34  0E30               	movlw	48
 15640  001B36  5DA0               	subwf	(atanf@ix+2)& (0+255),w,b
 15641  001B38  0E3F               	movlw	63
 15642  001B3A  59A1               	subwfb	(atanf@ix+3)& (0+255),w,b
 15643  001B3C  B0D8               	btfsc	status,0,c
 15644  001B3E  EFA3  F00D         	goto	u8161
 15645  001B42  EFA5  F00D         	goto	u8160
 15646  001B46                     u8161:
 15647  001B46  EFFB  F00D         	goto	l8867
 15648  001B4A                     u8160:
 15649  001B4A                     
 15650                           ; BSR set to: 0
 15651  001B4A  0E00               	movlw	0
 15652  001B4C  6F99               	movwf	(atanf@id+1)& (0+255),b
 15653  001B4E  0E00               	movlw	0
 15654  001B50  6F98               	movwf	atanf@id& (0+255),b
 15655  001B52                     
 15656                           ; BSR set to: 0
 15657  001B52  0E00               	movlw	0
 15658  001B54  6E4E               	movwf	___fladd@a^0,c
 15659  001B56  0E00               	movlw	0
 15660  001B58  6E4F               	movwf	(___fladd@a+1)^0,c
 15661  001B5A  0E80               	movlw	128
 15662  001B5C  6E50               	movwf	(___fladd@a+2)^0,c
 15663  001B5E  0EBF               	movlw	191
 15664  001B60  6E51               	movwf	(___fladd@a+3)^0,c
 15665  001B62  0E00               	movlw	0
 15666  001B64  6E35               	movwf	___flmul@a^0,c
 15667  001B66  0E00               	movlw	0
 15668  001B68  6E36               	movwf	(___flmul@a+1)^0,c
 15669  001B6A  0E00               	movlw	0
 15670  001B6C  6E37               	movwf	(___flmul@a+2)^0,c
 15671  001B6E  0E40               	movlw	64
 15672  001B70  6E38               	movwf	(___flmul@a+3)^0,c
 15673  001B72  C068  F031         	movff	atanf@x,___flmul@b
 15674  001B76  C069  F032         	movff	atanf@x+1,___flmul@b+1
 15675  001B7A  C06A  F033         	movff	atanf@x+2,___flmul@b+2
 15676  001B7E  C06B  F034         	movff	atanf@x+3,___flmul@b+3
 15677  001B82  ECCA  F019         	call	___flmul	;wreg free
 15678  001B86  C031  F04A         	movff	?___flmul,___fladd@b
 15679  001B8A  C032  F04B         	movff	?___flmul+1,___fladd@b+1
 15680  001B8E  C033  F04C         	movff	?___flmul+2,___fladd@b+2
 15681  001B92  C034  F04D         	movff	?___flmul+3,___fladd@b+3
 15682  001B96  EC6A  F017         	call	___fladd	;wreg free
 15683  001B9A  C04A  F018         	movff	?___fladd,___fldiv@b
 15684  001B9E  C04B  F019         	movff	?___fladd+1,___fldiv@b+1
 15685  001BA2  C04C  F01A         	movff	?___fladd+2,___fldiv@b+2
 15686  001BA6  C04D  F01B         	movff	?___fladd+3,___fldiv@b+3
 15687  001BAA  0E00               	movlw	0
 15688  001BAC  6E4E               	movwf	___fladd@a^0,c
 15689  001BAE  0E00               	movlw	0
 15690  001BB0  6E4F               	movwf	(___fladd@a+1)^0,c
 15691  001BB2  0E00               	movlw	0
 15692  001BB4  6E50               	movwf	(___fladd@a+2)^0,c
 15693  001BB6  0E40               	movlw	64
 15694  001BB8  6E51               	movwf	(___fladd@a+3)^0,c
 15695  001BBA  C068  F04A         	movff	atanf@x,___fladd@b
 15696  001BBE  C069  F04B         	movff	atanf@x+1,___fladd@b+1
 15697  001BC2  C06A  F04C         	movff	atanf@x+2,___fladd@b+2
 15698  001BC6  C06B  F04D         	movff	atanf@x+3,___fladd@b+3
 15699  001BCA  EC6A  F017         	call	___fladd	;wreg free
 15700  001BCE  C04A  F01C         	movff	?___fladd,___fldiv@a
 15701  001BD2  C04B  F01D         	movff	?___fladd+1,___fldiv@a+1
 15702  001BD6  C04C  F01E         	movff	?___fladd+2,___fldiv@a+2
 15703  001BDA  C04D  F01F         	movff	?___fladd+3,___fldiv@a+3
 15704  001BDE  ECDF  F01B         	call	___fldiv	;wreg free
 15705  001BE2  C018  F068         	movff	?___fldiv,atanf@x
 15706  001BE6  C019  F069         	movff	?___fldiv+1,atanf@x+1
 15707  001BEA  C01A  F06A         	movff	?___fldiv+2,atanf@x+2
 15708  001BEE  C01B  F06B         	movff	?___fldiv+3,atanf@x+3
 15709  001BF2  EFBE  F00E         	goto	l8881
 15710  001BF6                     l8867:
 15711                           
 15712                           ; BSR set to: 0
 15713  001BF6  0E00               	movlw	0
 15714  001BF8  6F99               	movwf	(atanf@id+1)& (0+255),b
 15715  001BFA  0E01               	movlw	1
 15716  001BFC  6F98               	movwf	atanf@id& (0+255),b
 15717  001BFE                     
 15718                           ; BSR set to: 0
 15719  001BFE  0E00               	movlw	0
 15720  001C00  6E4E               	movwf	___fladd@a^0,c
 15721  001C02  0E00               	movlw	0
 15722  001C04  6E4F               	movwf	(___fladd@a+1)^0,c
 15723  001C06  0E80               	movlw	128
 15724  001C08  6E50               	movwf	(___fladd@a+2)^0,c
 15725  001C0A  0EBF               	movlw	191
 15726  001C0C  6E51               	movwf	(___fladd@a+3)^0,c
 15727  001C0E  C068  F04A         	movff	atanf@x,___fladd@b
 15728  001C12  C069  F04B         	movff	atanf@x+1,___fladd@b+1
 15729  001C16  C06A  F04C         	movff	atanf@x+2,___fladd@b+2
 15730  001C1A  C06B  F04D         	movff	atanf@x+3,___fladd@b+3
 15731  001C1E  EC6A  F017         	call	___fladd	;wreg free
 15732  001C22  C04A  F018         	movff	?___fladd,___fldiv@b
 15733  001C26  C04B  F019         	movff	?___fladd+1,___fldiv@b+1
 15734  001C2A  C04C  F01A         	movff	?___fladd+2,___fldiv@b+2
 15735  001C2E  C04D  F01B         	movff	?___fladd+3,___fldiv@b+3
 15736  001C32  0E00               	movlw	0
 15737  001C34  6E4E               	movwf	___fladd@a^0,c
 15738  001C36  0E00               	movlw	0
 15739  001C38  6E4F               	movwf	(___fladd@a+1)^0,c
 15740  001C3A  0E80               	movlw	128
 15741  001C3C  6E50               	movwf	(___fladd@a+2)^0,c
 15742  001C3E  0E3F               	movlw	63
 15743  001C40  6E51               	movwf	(___fladd@a+3)^0,c
 15744  001C42  C068  F04A         	movff	atanf@x,___fladd@b
 15745  001C46  C069  F04B         	movff	atanf@x+1,___fladd@b+1
 15746  001C4A  C06A  F04C         	movff	atanf@x+2,___fladd@b+2
 15747  001C4E  C06B  F04D         	movff	atanf@x+3,___fladd@b+3
 15748  001C52  EC6A  F017         	call	___fladd	;wreg free
 15749  001C56  C04A  F01C         	movff	?___fladd,___fldiv@a
 15750  001C5A  C04B  F01D         	movff	?___fladd+1,___fldiv@a+1
 15751  001C5E  C04C  F01E         	movff	?___fladd+2,___fldiv@a+2
 15752  001C62  C04D  F01F         	movff	?___fladd+3,___fldiv@a+3
 15753  001C66  ECDF  F01B         	call	___fldiv	;wreg free
 15754  001C6A  C018  F068         	movff	?___fldiv,atanf@x
 15755  001C6E  C019  F069         	movff	?___fldiv+1,atanf@x+1
 15756  001C72  C01A  F06A         	movff	?___fldiv+2,atanf@x+2
 15757  001C76  C01B  F06B         	movff	?___fldiv+3,atanf@x+3
 15758  001C7A  EFBE  F00E         	goto	l8881
 15759  001C7E                     l8871:
 15760                           
 15761                           ; BSR set to: 0
 15762  001C7E  0E1C               	movlw	28
 15763  001C80  5DA0               	subwf	(atanf@ix+2)& (0+255),w,b
 15764  001C82  0E40               	movlw	64
 15765  001C84  59A1               	subwfb	(atanf@ix+3)& (0+255),w,b
 15766  001C86  B0D8               	btfsc	status,0,c
 15767  001C88  EF48  F00E         	goto	u8171
 15768  001C8C  EF4A  F00E         	goto	u8170
 15769  001C90                     u8171:
 15770  001C90  EFA0  F00E         	goto	l8877
 15771  001C94                     u8170:
 15772  001C94                     
 15773                           ; BSR set to: 0
 15774  001C94  0E00               	movlw	0
 15775  001C96  6F99               	movwf	(atanf@id+1)& (0+255),b
 15776  001C98  0E02               	movlw	2
 15777  001C9A  6F98               	movwf	atanf@id& (0+255),b
 15778  001C9C                     
 15779                           ; BSR set to: 0
 15780  001C9C  0E00               	movlw	0
 15781  001C9E  6E4E               	movwf	___fladd@a^0,c
 15782  001CA0  0E00               	movlw	0
 15783  001CA2  6E4F               	movwf	(___fladd@a+1)^0,c
 15784  001CA4  0EC0               	movlw	192
 15785  001CA6  6E50               	movwf	(___fladd@a+2)^0,c
 15786  001CA8  0EBF               	movlw	191
 15787  001CAA  6E51               	movwf	(___fladd@a+3)^0,c
 15788  001CAC  C068  F04A         	movff	atanf@x,___fladd@b
 15789  001CB0  C069  F04B         	movff	atanf@x+1,___fladd@b+1
 15790  001CB4  C06A  F04C         	movff	atanf@x+2,___fladd@b+2
 15791  001CB8  C06B  F04D         	movff	atanf@x+3,___fladd@b+3
 15792  001CBC  EC6A  F017         	call	___fladd	;wreg free
 15793  001CC0  C04A  F018         	movff	?___fladd,___fldiv@b
 15794  001CC4  C04B  F019         	movff	?___fladd+1,___fldiv@b+1
 15795  001CC8  C04C  F01A         	movff	?___fladd+2,___fldiv@b+2
 15796  001CCC  C04D  F01B         	movff	?___fladd+3,___fldiv@b+3
 15797  001CD0  0E00               	movlw	0
 15798  001CD2  6E4E               	movwf	___fladd@a^0,c
 15799  001CD4  0E00               	movlw	0
 15800  001CD6  6E4F               	movwf	(___fladd@a+1)^0,c
 15801  001CD8  0E80               	movlw	128
 15802  001CDA  6E50               	movwf	(___fladd@a+2)^0,c
 15803  001CDC  0E3F               	movlw	63
 15804  001CDE  6E51               	movwf	(___fladd@a+3)^0,c
 15805  001CE0  0E00               	movlw	0
 15806  001CE2  6E35               	movwf	___flmul@a^0,c
 15807  001CE4  0E00               	movlw	0
 15808  001CE6  6E36               	movwf	(___flmul@a+1)^0,c
 15809  001CE8  0EC0               	movlw	192
 15810  001CEA  6E37               	movwf	(___flmul@a+2)^0,c
 15811  001CEC  0E3F               	movlw	63
 15812  001CEE  6E38               	movwf	(___flmul@a+3)^0,c
 15813  001CF0  C068  F031         	movff	atanf@x,___flmul@b
 15814  001CF4  C069  F032         	movff	atanf@x+1,___flmul@b+1
 15815  001CF8  C06A  F033         	movff	atanf@x+2,___flmul@b+2
 15816  001CFC  C06B  F034         	movff	atanf@x+3,___flmul@b+3
 15817  001D00  ECCA  F019         	call	___flmul	;wreg free
 15818  001D04  C031  F04A         	movff	?___flmul,___fladd@b
 15819  001D08  C032  F04B         	movff	?___flmul+1,___fladd@b+1
 15820  001D0C  C033  F04C         	movff	?___flmul+2,___fladd@b+2
 15821  001D10  C034  F04D         	movff	?___flmul+3,___fladd@b+3
 15822  001D14  EC6A  F017         	call	___fladd	;wreg free
 15823  001D18  C04A  F01C         	movff	?___fladd,___fldiv@a
 15824  001D1C  C04B  F01D         	movff	?___fladd+1,___fldiv@a+1
 15825  001D20  C04C  F01E         	movff	?___fladd+2,___fldiv@a+2
 15826  001D24  C04D  F01F         	movff	?___fladd+3,___fldiv@a+3
 15827  001D28  ECDF  F01B         	call	___fldiv	;wreg free
 15828  001D2C  C018  F068         	movff	?___fldiv,atanf@x
 15829  001D30  C019  F069         	movff	?___fldiv+1,atanf@x+1
 15830  001D34  C01A  F06A         	movff	?___fldiv+2,atanf@x+2
 15831  001D38  C01B  F06B         	movff	?___fldiv+3,atanf@x+3
 15832  001D3C  EFBE  F00E         	goto	l8881
 15833  001D40                     l8877:
 15834                           
 15835                           ; BSR set to: 0
 15836  001D40  0E00               	movlw	0
 15837  001D42  6F99               	movwf	(atanf@id+1)& (0+255),b
 15838  001D44  0E03               	movlw	3
 15839  001D46  6F98               	movwf	atanf@id& (0+255),b
 15840  001D48                     
 15841                           ; BSR set to: 0
 15842  001D48  0E00               	movlw	0
 15843  001D4A  6E18               	movwf	___fldiv@b^0,c
 15844  001D4C  0E00               	movlw	0
 15845  001D4E  6E19               	movwf	(___fldiv@b+1)^0,c
 15846  001D50  0E80               	movlw	128
 15847  001D52  6E1A               	movwf	(___fldiv@b+2)^0,c
 15848  001D54  0EBF               	movlw	191
 15849  001D56  6E1B               	movwf	(___fldiv@b+3)^0,c
 15850  001D58  C068  F01C         	movff	atanf@x,___fldiv@a
 15851  001D5C  C069  F01D         	movff	atanf@x+1,___fldiv@a+1
 15852  001D60  C06A  F01E         	movff	atanf@x+2,___fldiv@a+2
 15853  001D64  C06B  F01F         	movff	atanf@x+3,___fldiv@a+3
 15854  001D68  ECDF  F01B         	call	___fldiv	;wreg free
 15855  001D6C  C018  F068         	movff	?___fldiv,atanf@x
 15856  001D70  C019  F069         	movff	?___fldiv+1,atanf@x+1
 15857  001D74  C01A  F06A         	movff	?___fldiv+2,atanf@x+2
 15858  001D78  C01B  F06B         	movff	?___fldiv+3,atanf@x+3
 15859  001D7C                     l8881:
 15860  001D7C  C068  F031         	movff	atanf@x,___flmul@b
 15861  001D80  C069  F032         	movff	atanf@x+1,___flmul@b+1
 15862  001D84  C06A  F033         	movff	atanf@x+2,___flmul@b+2
 15863  001D88  C06B  F034         	movff	atanf@x+3,___flmul@b+3
 15864  001D8C  C068  F035         	movff	atanf@x,___flmul@a
 15865  001D90  C069  F036         	movff	atanf@x+1,___flmul@a+1
 15866  001D94  C06A  F037         	movff	atanf@x+2,___flmul@a+2
 15867  001D98  C06B  F038         	movff	atanf@x+3,___flmul@a+3
 15868  001D9C  ECCA  F019         	call	___flmul	;wreg free
 15869  001DA0  C031  F09A         	movff	?___flmul,atanf@z
 15870  001DA4  C032  F09B         	movff	?___flmul+1,atanf@z+1
 15871  001DA8  C033  F09C         	movff	?___flmul+2,atanf@z+2
 15872  001DAC  C034  F09D         	movff	?___flmul+3,atanf@z+3
 15873  001DB0  C09A  F031         	movff	atanf@z,___flmul@b
 15874  001DB4  C09B  F032         	movff	atanf@z+1,___flmul@b+1
 15875  001DB8  C09C  F033         	movff	atanf@z+2,___flmul@b+2
 15876  001DBC  C09D  F034         	movff	atanf@z+3,___flmul@b+3
 15877  001DC0  C09A  F035         	movff	atanf@z,___flmul@a
 15878  001DC4  C09B  F036         	movff	atanf@z+1,___flmul@a+1
 15879  001DC8  C09C  F037         	movff	atanf@z+2,___flmul@a+2
 15880  001DCC  C09D  F038         	movff	atanf@z+3,___flmul@a+3
 15881  001DD0  ECCA  F019         	call	___flmul	;wreg free
 15882  001DD4  C031  F094         	movff	?___flmul,atanf@w
 15883  001DD8  C032  F095         	movff	?___flmul+1,atanf@w+1
 15884  001DDC  C033  F096         	movff	?___flmul+2,atanf@w+2
 15885  001DE0  C034  F097         	movff	?___flmul+3,atanf@w+3
 15886  001DE4  0EB5               	movlw	low (_aT+8)
 15887  001DE6  6EF6               	movwf	tblptrl,c
 15888  001DE8  0E72               	movlw	high (_aT+8)
 15889  001DEA  6EF7               	movwf	tblptrh,c
 15890  001DEC                     	if	0	;tblptru may be non-zero
 15891  001DEC                     	endif
 15892  001DEC                     	if	0	;tblptru may be non-zero
 15893  001DEC                     	endif
 15894  001DEC  0009               	tblrd		*+
 15895  001DEE  CFF5 F04E          	movff	tablat,___fladd@a
 15896  001DF2  0009               	tblrd		*+
 15897  001DF4  CFF5 F04F          	movff	tablat,___fladd@a+1
 15898  001DF8  0009               	tblrd		*+
 15899  001DFA  CFF5 F050          	movff	tablat,___fladd@a+2
 15900  001DFE  000A               	tblrd		*-
 15901  001E00  CFF5 F051          	movff	tablat,___fladd@a+3
 15902  001E04  C094  F035         	movff	atanf@w,___flmul@a
 15903  001E08  C095  F036         	movff	atanf@w+1,___flmul@a+1
 15904  001E0C  C096  F037         	movff	atanf@w+2,___flmul@a+2
 15905  001E10  C097  F038         	movff	atanf@w+3,___flmul@a+3
 15906  001E14  0EBD               	movlw	low (_aT+16)
 15907  001E16  6EF6               	movwf	tblptrl,c
 15908  001E18  0E72               	movlw	high (_aT+16)
 15909  001E1A  6EF7               	movwf	tblptrh,c
 15910  001E1C                     	if	0	;tblptru may be non-zero
 15911  001E1C                     	endif
 15912  001E1C                     	if	0	;tblptru may be non-zero
 15913  001E1C                     	endif
 15914  001E1C  0009               	tblrd		*+
 15915  001E1E  CFF5 F031          	movff	tablat,___flmul@b
 15916  001E22  0009               	tblrd		*+
 15917  001E24  CFF5 F032          	movff	tablat,___flmul@b+1
 15918  001E28  0009               	tblrd		*+
 15919  001E2A  CFF5 F033          	movff	tablat,___flmul@b+2
 15920  001E2E  000A               	tblrd		*-
 15921  001E30  CFF5 F034          	movff	tablat,___flmul@b+3
 15922  001E34  ECCA  F019         	call	___flmul	;wreg free
 15923  001E38  C031  F04A         	movff	?___flmul,___fladd@b
 15924  001E3C  C032  F04B         	movff	?___flmul+1,___fladd@b+1
 15925  001E40  C033  F04C         	movff	?___flmul+2,___fladd@b+2
 15926  001E44  C034  F04D         	movff	?___flmul+3,___fladd@b+3
 15927  001E48  EC6A  F017         	call	___fladd	;wreg free
 15928  001E4C  C04A  F08C         	movff	?___fladd,_atanf$4568
 15929  001E50  C04B  F08D         	movff	?___fladd+1,_atanf$4568+1
 15930  001E54  C04C  F08E         	movff	?___fladd+2,_atanf$4568+2
 15931  001E58  C04D  F08F         	movff	?___fladd+3,_atanf$4568+3
 15932  001E5C  0EAD               	movlw	low _aT
 15933  001E5E  6EF6               	movwf	tblptrl,c
 15934  001E60                     	if	1	;There is more than 1 active tblptr byte
 15935  001E60  0E72               	movlw	high _aT
 15936  001E62  6EF7               	movwf	tblptrh,c
 15937  001E64                     	endif
 15938  001E64                     	if	0	;There are less than 3 active tblptr bytes
 15939  001E64                     	endif
 15940  001E64  0009               	tblrd		*+
 15941  001E66  CFF5 F04E          	movff	tablat,___fladd@a
 15942  001E6A  0009               	tblrd		*+
 15943  001E6C  CFF5 F04F          	movff	tablat,___fladd@a+1
 15944  001E70  0009               	tblrd		*+
 15945  001E72  CFF5 F050          	movff	tablat,___fladd@a+2
 15946  001E76  000A               	tblrd		*-
 15947  001E78  CFF5 F051          	movff	tablat,___fladd@a+3
 15948  001E7C  C094  F035         	movff	atanf@w,___flmul@a
 15949  001E80  C095  F036         	movff	atanf@w+1,___flmul@a+1
 15950  001E84  C096  F037         	movff	atanf@w+2,___flmul@a+2
 15951  001E88  C097  F038         	movff	atanf@w+3,___flmul@a+3
 15952  001E8C  C08C  F031         	movff	_atanf$4568,___flmul@b
 15953  001E90  C08D  F032         	movff	_atanf$4568+1,___flmul@b+1
 15954  001E94  C08E  F033         	movff	_atanf$4568+2,___flmul@b+2
 15955  001E98  C08F  F034         	movff	_atanf$4568+3,___flmul@b+3
 15956  001E9C  ECCA  F019         	call	___flmul	;wreg free
 15957  001EA0  C031  F04A         	movff	?___flmul,___fladd@b
 15958  001EA4  C032  F04B         	movff	?___flmul+1,___fladd@b+1
 15959  001EA8  C033  F04C         	movff	?___flmul+2,___fladd@b+2
 15960  001EAC  C034  F04D         	movff	?___flmul+3,___fladd@b+3
 15961  001EB0  EC6A  F017         	call	___fladd	;wreg free
 15962  001EB4  C04A  F074         	movff	?___fladd,_atanf$4569
 15963  001EB8  C04B  F075         	movff	?___fladd+1,_atanf$4569+1
 15964  001EBC  C04C  F076         	movff	?___fladd+2,_atanf$4569+2
 15965  001EC0  C04D  F077         	movff	?___fladd+3,_atanf$4569+3
 15966  001EC4  C074  F031         	movff	_atanf$4569,___flmul@b
 15967  001EC8  C075  F032         	movff	_atanf$4569+1,___flmul@b+1
 15968  001ECC  C076  F033         	movff	_atanf$4569+2,___flmul@b+2
 15969  001ED0  C077  F034         	movff	_atanf$4569+3,___flmul@b+3
 15970  001ED4  C09A  F035         	movff	atanf@z,___flmul@a
 15971  001ED8  C09B  F036         	movff	atanf@z+1,___flmul@a+1
 15972  001EDC  C09C  F037         	movff	atanf@z+2,___flmul@a+2
 15973  001EE0  C09D  F038         	movff	atanf@z+3,___flmul@a+3
 15974  001EE4  ECCA  F019         	call	___flmul	;wreg free
 15975  001EE8  C031  F080         	movff	?___flmul,atanf@s1
 15976  001EEC  C032  F081         	movff	?___flmul+1,atanf@s1+1
 15977  001EF0  C033  F082         	movff	?___flmul+2,atanf@s1+2
 15978  001EF4  C034  F083         	movff	?___flmul+3,atanf@s1+3
 15979  001EF8  0EB1               	movlw	low (_aT+4)
 15980  001EFA  6EF6               	movwf	tblptrl,c
 15981  001EFC  0E72               	movlw	high (_aT+4)
 15982  001EFE  6EF7               	movwf	tblptrh,c
 15983  001F00                     	if	0	;tblptru may be non-zero
 15984  001F00                     	endif
 15985  001F00                     	if	0	;tblptru may be non-zero
 15986  001F00                     	endif
 15987  001F00  0009               	tblrd		*+
 15988  001F02  CFF5 F04E          	movff	tablat,___fladd@a
 15989  001F06  0009               	tblrd		*+
 15990  001F08  CFF5 F04F          	movff	tablat,___fladd@a+1
 15991  001F0C  0009               	tblrd		*+
 15992  001F0E  CFF5 F050          	movff	tablat,___fladd@a+2
 15993  001F12  000A               	tblrd		*-
 15994  001F14  CFF5 F051          	movff	tablat,___fladd@a+3
 15995  001F18  C094  F035         	movff	atanf@w,___flmul@a
 15996  001F1C  C095  F036         	movff	atanf@w+1,___flmul@a+1
 15997  001F20  C096  F037         	movff	atanf@w+2,___flmul@a+2
 15998  001F24  C097  F038         	movff	atanf@w+3,___flmul@a+3
 15999  001F28  0EB9               	movlw	low (_aT+12)
 16000  001F2A  6EF6               	movwf	tblptrl,c
 16001  001F2C  0E72               	movlw	high (_aT+12)
 16002  001F2E  6EF7               	movwf	tblptrh,c
 16003  001F30                     	if	0	;tblptru may be non-zero
 16004  001F30                     	endif
 16005  001F30                     	if	0	;tblptru may be non-zero
 16006  001F30                     	endif
 16007  001F30  0009               	tblrd		*+
 16008  001F32  CFF5 F031          	movff	tablat,___flmul@b
 16009  001F36  0009               	tblrd		*+
 16010  001F38  CFF5 F032          	movff	tablat,___flmul@b+1
 16011  001F3C  0009               	tblrd		*+
 16012  001F3E  CFF5 F033          	movff	tablat,___flmul@b+2
 16013  001F42  000A               	tblrd		*-
 16014  001F44  CFF5 F034          	movff	tablat,___flmul@b+3
 16015  001F48  ECCA  F019         	call	___flmul	;wreg free
 16016  001F4C  C031  F04A         	movff	?___flmul,___fladd@b
 16017  001F50  C032  F04B         	movff	?___flmul+1,___fladd@b+1
 16018  001F54  C033  F04C         	movff	?___flmul+2,___fladd@b+2
 16019  001F58  C034  F04D         	movff	?___flmul+3,___fladd@b+3
 16020  001F5C  EC6A  F017         	call	___fladd	;wreg free
 16021  001F60  C04A  F08C         	movff	?___fladd,_atanf$4568
 16022  001F64  C04B  F08D         	movff	?___fladd+1,_atanf$4568+1
 16023  001F68  C04C  F08E         	movff	?___fladd+2,_atanf$4568+2
 16024  001F6C  C04D  F08F         	movff	?___fladd+3,_atanf$4568+3
 16025  001F70  C08C  F031         	movff	_atanf$4568,___flmul@b
 16026  001F74  C08D  F032         	movff	_atanf$4568+1,___flmul@b+1
 16027  001F78  C08E  F033         	movff	_atanf$4568+2,___flmul@b+2
 16028  001F7C  C08F  F034         	movff	_atanf$4568+3,___flmul@b+3
 16029  001F80  C094  F035         	movff	atanf@w,___flmul@a
 16030  001F84  C095  F036         	movff	atanf@w+1,___flmul@a+1
 16031  001F88  C096  F037         	movff	atanf@w+2,___flmul@a+2
 16032  001F8C  C097  F038         	movff	atanf@w+3,___flmul@a+3
 16033  001F90  ECCA  F019         	call	___flmul	;wreg free
 16034  001F94  C031  F084         	movff	?___flmul,atanf@s2
 16035  001F98  C032  F085         	movff	?___flmul+1,atanf@s2+1
 16036  001F9C  C033  F086         	movff	?___flmul+2,atanf@s2+2
 16037  001FA0  C034  F087         	movff	?___flmul+3,atanf@s2+3
 16038  001FA4  0100               	movlb	0	; () banked
 16039  001FA6  BF99               	btfsc	(atanf@id+1)& (0+255),7,b
 16040  001FA8  EFDA  F00F         	goto	u8180
 16041  001FAC  EFD8  F00F         	goto	u8181
 16042  001FB0                     u8181:
 16043  001FB0  EF22  F010         	goto	l8903
 16044  001FB4                     u8180:
 16045  001FB4                     
 16046                           ; BSR set to: 0
 16047  001FB4  C068  F035         	movff	atanf@x,___flmul@a
 16048  001FB8  C069  F036         	movff	atanf@x+1,___flmul@a+1
 16049  001FBC  C06A  F037         	movff	atanf@x+2,___flmul@a+2
 16050  001FC0  C06B  F038         	movff	atanf@x+3,___flmul@a+3
 16051  001FC4  C084  F04E         	movff	atanf@s2,___fladd@a
 16052  001FC8  C085  F04F         	movff	atanf@s2+1,___fladd@a+1
 16053  001FCC  C086  F050         	movff	atanf@s2+2,___fladd@a+2
 16054  001FD0  C087  F051         	movff	atanf@s2+3,___fladd@a+3
 16055  001FD4  C080  F04A         	movff	atanf@s1,___fladd@b
 16056  001FD8  C081  F04B         	movff	atanf@s1+1,___fladd@b+1
 16057  001FDC  C082  F04C         	movff	atanf@s1+2,___fladd@b+2
 16058  001FE0  C083  F04D         	movff	atanf@s1+3,___fladd@b+3
 16059  001FE4  EC6A  F017         	call	___fladd	;wreg free
 16060  001FE8  C04A  F031         	movff	?___fladd,___flmul@b
 16061  001FEC  C04B  F032         	movff	?___fladd+1,___flmul@b+1
 16062  001FF0  C04C  F033         	movff	?___fladd+2,___flmul@b+2
 16063  001FF4  C04D  F034         	movff	?___fladd+3,___flmul@b+3
 16064  001FF8  ECCA  F019         	call	___flmul	;wreg free
 16065  001FFC  C031  F090         	movff	?___flmul,_atanf$4570
 16066  002000  C032  F091         	movff	?___flmul+1,_atanf$4570+1
 16067  002004  C033  F092         	movff	?___flmul+2,_atanf$4570+2
 16068  002008  C034  F093         	movff	?___flmul+3,_atanf$4570+3
 16069  00200C  C068  F060         	movff	atanf@x,___flsub@b
 16070  002010  C069  F061         	movff	atanf@x+1,___flsub@b+1
 16071  002014  C06A  F062         	movff	atanf@x+2,___flsub@b+2
 16072  002018  C06B  F063         	movff	atanf@x+3,___flsub@b+3
 16073  00201C  C090  F064         	movff	_atanf$4570,___flsub@a
 16074  002020  C091  F065         	movff	_atanf$4570+1,___flsub@a+1
 16075  002024  C092  F066         	movff	_atanf$4570+2,___flsub@a+2
 16076  002028  C093  F067         	movff	_atanf$4570+3,___flsub@a+3
 16077  00202C  ECA9  F031         	call	___flsub	;wreg free
 16078  002030  C060  F068         	movff	?___flsub,?_atanf
 16079  002034  C061  F069         	movff	?___flsub+1,?_atanf+1
 16080  002038  C062  F06A         	movff	?___flsub+2,?_atanf+2
 16081  00203C  C063  F06B         	movff	?___flsub+3,?_atanf+3
 16082  002040  EFD4  F010         	goto	l2618
 16083  002044                     l8903:
 16084                           
 16085                           ; BSR set to: 0
 16086  002044  C068  F035         	movff	atanf@x,___flmul@a
 16087  002048  C069  F036         	movff	atanf@x+1,___flmul@a+1
 16088  00204C  C06A  F037         	movff	atanf@x+2,___flmul@a+2
 16089  002050  C06B  F038         	movff	atanf@x+3,___flmul@a+3
 16090  002054  C084  F04E         	movff	atanf@s2,___fladd@a
 16091  002058  C085  F04F         	movff	atanf@s2+1,___fladd@a+1
 16092  00205C  C086  F050         	movff	atanf@s2+2,___fladd@a+2
 16093  002060  C087  F051         	movff	atanf@s2+3,___fladd@a+3
 16094  002064  C080  F04A         	movff	atanf@s1,___fladd@b
 16095  002068  C081  F04B         	movff	atanf@s1+1,___fladd@b+1
 16096  00206C  C082  F04C         	movff	atanf@s1+2,___fladd@b+2
 16097  002070  C083  F04D         	movff	atanf@s1+3,___fladd@b+3
 16098  002074  EC6A  F017         	call	___fladd	;wreg free
 16099  002078  C04A  F031         	movff	?___fladd,___flmul@b
 16100  00207C  C04B  F032         	movff	?___fladd+1,___flmul@b+1
 16101  002080  C04C  F033         	movff	?___fladd+2,___flmul@b+2
 16102  002084  C04D  F034         	movff	?___fladd+3,___flmul@b+3
 16103  002088  ECCA  F019         	call	___flmul	;wreg free
 16104  00208C  C031  F090         	movff	?___flmul,_atanf$4570
 16105  002090  C032  F091         	movff	?___flmul+1,_atanf$4570+1
 16106  002094  C033  F092         	movff	?___flmul+2,_atanf$4570+2
 16107  002098  C034  F093         	movff	?___flmul+3,_atanf$4570+3
 16108  00209C  C098  F06C         	movff	atanf@id,??_atanf
 16109  0020A0  C099  F06D         	movff	atanf@id+1,??_atanf+1
 16110  0020A4  0100               	movlb	0	; () banked
 16111  0020A6  90D8               	bcf	status,0,c
 16112  0020A8  376C               	rlcf	??_atanf& (0+255),f,b
 16113  0020AA  376D               	rlcf	(??_atanf+1)& (0+255),f,b
 16114  0020AC  90D8               	bcf	status,0,c
 16115  0020AE  376C               	rlcf	??_atanf& (0+255),f,b
 16116  0020B0  376D               	rlcf	(??_atanf+1)& (0+255),f,b
 16117  0020B2  0EC1               	movlw	low _atanlo
 16118  0020B4  256C               	addwf	??_atanf& (0+255),w,b
 16119  0020B6  6EF6               	movwf	tblptrl,c
 16120  0020B8  0E72               	movlw	high _atanlo
 16121  0020BA  216D               	addwfc	(??_atanf+1)& (0+255),w,b
 16122  0020BC  6EF7               	movwf	tblptrh,c
 16123  0020BE                     	if	0	;There are less than 3 active tblptr bytes
 16124  0020BE                     	endif
 16125  0020BE  0009               	tblrd		*+
 16126  0020C0  CFF5 F064          	movff	tablat,___flsub@a
 16127  0020C4  0009               	tblrd		*+
 16128  0020C6  CFF5 F065          	movff	tablat,___flsub@a+1
 16129  0020CA  0009               	tblrd		*+
 16130  0020CC  CFF5 F066          	movff	tablat,___flsub@a+2
 16131  0020D0  000A               	tblrd		*-
 16132  0020D2  CFF5 F067          	movff	tablat,___flsub@a+3
 16133  0020D6  C090  F060         	movff	_atanf$4570,___flsub@b
 16134  0020DA  C091  F061         	movff	_atanf$4570+1,___flsub@b+1
 16135  0020DE  C092  F062         	movff	_atanf$4570+2,___flsub@b+2
 16136  0020E2  C093  F063         	movff	_atanf$4570+3,___flsub@b+3
 16137  0020E6  ECA9  F031         	call	___flsub	;wreg free
 16138  0020EA  C060  F078         	movff	?___flsub,_atanf$4571
 16139  0020EE  C061  F079         	movff	?___flsub+1,_atanf$4571+1
 16140  0020F2  C062  F07A         	movff	?___flsub+2,_atanf$4571+2
 16141  0020F6  C063  F07B         	movff	?___flsub+3,_atanf$4571+3
 16142  0020FA  C068  F064         	movff	atanf@x,___flsub@a
 16143  0020FE  C069  F065         	movff	atanf@x+1,___flsub@a+1
 16144  002102  C06A  F066         	movff	atanf@x+2,___flsub@a+2
 16145  002106  C06B  F067         	movff	atanf@x+3,___flsub@a+3
 16146  00210A  C078  F060         	movff	_atanf$4571,___flsub@b
 16147  00210E  C079  F061         	movff	_atanf$4571+1,___flsub@b+1
 16148  002112  C07A  F062         	movff	_atanf$4571+2,___flsub@b+2
 16149  002116  C07B  F063         	movff	_atanf$4571+3,___flsub@b+3
 16150  00211A  ECA9  F031         	call	___flsub	;wreg free
 16151  00211E  C060  F07C         	movff	?___flsub,_atanf$4572
 16152  002122  C061  F07D         	movff	?___flsub+1,_atanf$4572+1
 16153  002126  C062  F07E         	movff	?___flsub+2,_atanf$4572+2
 16154  00212A  C063  F07F         	movff	?___flsub+3,_atanf$4572+3
 16155  00212E  C098  F06C         	movff	atanf@id,??_atanf
 16156  002132  C099  F06D         	movff	atanf@id+1,??_atanf+1
 16157  002136  0100               	movlb	0	; () banked
 16158  002138  90D8               	bcf	status,0,c
 16159  00213A  376C               	rlcf	??_atanf& (0+255),f,b
 16160  00213C  376D               	rlcf	(??_atanf+1)& (0+255),f,b
 16161  00213E  90D8               	bcf	status,0,c
 16162  002140  376C               	rlcf	??_atanf& (0+255),f,b
 16163  002142  376D               	rlcf	(??_atanf+1)& (0+255),f,b
 16164  002144  0ED1               	movlw	low _atanhi
 16165  002146  256C               	addwf	??_atanf& (0+255),w,b
 16166  002148  6EF6               	movwf	tblptrl,c
 16167  00214A  0E72               	movlw	high _atanhi
 16168  00214C  216D               	addwfc	(??_atanf+1)& (0+255),w,b
 16169  00214E  6EF7               	movwf	tblptrh,c
 16170  002150                     	if	0	;There are less than 3 active tblptr bytes
 16171  002150                     	endif
 16172  002150  0009               	tblrd		*+
 16173  002152  CFF5 F060          	movff	tablat,___flsub@b
 16174  002156  0009               	tblrd		*+
 16175  002158  CFF5 F061          	movff	tablat,___flsub@b+1
 16176  00215C  0009               	tblrd		*+
 16177  00215E  CFF5 F062          	movff	tablat,___flsub@b+2
 16178  002162  000A               	tblrd		*-
 16179  002164  CFF5 F063          	movff	tablat,___flsub@b+3
 16180  002168  C07C  F064         	movff	_atanf$4572,___flsub@a
 16181  00216C  C07D  F065         	movff	_atanf$4572+1,___flsub@a+1
 16182  002170  C07E  F066         	movff	_atanf$4572+2,___flsub@a+2
 16183  002174  C07F  F067         	movff	_atanf$4572+3,___flsub@a+3
 16184  002178  ECA9  F031         	call	___flsub	;wreg free
 16185  00217C  C060  F09A         	movff	?___flsub,atanf@z
 16186  002180  C061  F09B         	movff	?___flsub+1,atanf@z+1
 16187  002184  C062  F09C         	movff	?___flsub+2,atanf@z+2
 16188  002188  C063  F09D         	movff	?___flsub+3,atanf@z+3
 16189  00218C  0100               	movlb	0	; () banked
 16190  00218E  5188               	movf	atanf@sign& (0+255),w,b
 16191  002190  1189               	iorwf	(atanf@sign+1)& (0+255),w,b
 16192  002192  118A               	iorwf	(atanf@sign+2)& (0+255),w,b
 16193  002194  118B               	iorwf	(atanf@sign+3)& (0+255),w,b
 16194  002196  A4D8               	btfss	status,2,c
 16195  002198  EFD0  F010         	goto	u8191
 16196  00219C  EFD2  F010         	goto	u8190
 16197  0021A0                     u8191:
 16198  0021A0  EF4C  F00D         	goto	l8847
 16199  0021A4                     u8190:
 16200  0021A4  EF42  F00D         	goto	l8845
 16201  0021A8                     l2618:
 16202  0021A8  0012               	return		;funcret
 16203  0021AA                     __end_of_atanf:
 16204                           	callstack 0
 16205                           
 16206 ;; *************** function _fabsf *****************
 16207 ;; Defined at:
 16208 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fabsf.c"
 16209 ;; Parameters:    Size  Location     Type
 16210 ;;  x               4   48[COMRAM] float 
 16211 ;; Auto vars:     Size  Location     Type
 16212 ;;  u               4   52[COMRAM] struct .
 16213 ;; Return value:  Size  Location     Type
 16214 ;;                  4   48[COMRAM] float 
 16215 ;; Registers used:
 16216 ;;		status,2, status,0
 16217 ;; Tracked objects:
 16218 ;;		On entry : 0/0
 16219 ;;		On exit  : 0/0
 16220 ;;		Unchanged: 0/0
 16221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16222 ;;      Params:         4       0       0       0       0       0       0       0       0
 16223 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16225 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16226 ;;Total ram usage:        8 bytes
 16227 ;; Hardware stack levels used:    1
 16228 ;; Hardware stack levels required when called:    2
 16229 ;; This function calls:
 16230 ;;		Nothing
 16231 ;; This function is called by:
 16232 ;;		_atan2f
 16233 ;;		_atanf
 16234 ;; This function uses a non-reentrant model
 16235 ;;
 16236                           
 16237                           	psect	text51
 16238  0064C0                     __ptext51:
 16239                           	callstack 0
 16240  0064C0                     _fabsf:
 16241                           	callstack 26
 16242  0064C0  C14C  F035         	movff	fabsf@F465,fabsf@u
 16243  0064C4  C14D  F036         	movff	fabsf@F465+1,fabsf@u+1
 16244  0064C8  C14E  F037         	movff	fabsf@F465+2,fabsf@u+2
 16245  0064CC  C14F  F038         	movff	fabsf@F465+3,fabsf@u+3
 16246  0064D0  C031  F035         	movff	fabsf@x,fabsf@u
 16247  0064D4  C032  F036         	movff	fabsf@x+1,fabsf@u+1
 16248  0064D8  C033  F037         	movff	fabsf@x+2,fabsf@u+2
 16249  0064DC  C034  F038         	movff	fabsf@x+3,fabsf@u+3
 16250  0064E0  9E38               	bcf	(fabsf@u+3)^0,7,c
 16251  0064E2  C035  F031         	movff	fabsf@u,?_fabsf
 16252  0064E6  C036  F032         	movff	fabsf@u+1,?_fabsf+1
 16253  0064EA  C037  F033         	movff	fabsf@u+2,?_fabsf+2
 16254  0064EE  C038  F034         	movff	fabsf@u+3,?_fabsf+3
 16255  0064F2  0012               	return		;funcret
 16256  0064F4                     __end_of_fabsf:
 16257                           	callstack 0
 16258                           
 16259 ;; *************** function ___fpclassifyf *****************
 16260 ;; Defined at:
 16261 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\__fpclassifyf.c"
 16262 ;; Parameters:    Size  Location     Type
 16263 ;;  x               4    3[COMRAM] float 
 16264 ;; Auto vars:     Size  Location     Type
 16265 ;;  u               4   13[COMRAM] struct .
 16266 ;;  e               2   11[COMRAM] int 
 16267 ;; Return value:  Size  Location     Type
 16268 ;;                  2    3[COMRAM] int 
 16269 ;; Registers used:
 16270 ;;		wreg, status,2, status,0
 16271 ;; Tracked objects:
 16272 ;;		On entry : 0/0
 16273 ;;		On exit  : 0/0
 16274 ;;		Unchanged: 0/0
 16275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16276 ;;      Params:         4       0       0       0       0       0       0       0       0
 16277 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16278 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16279 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16280 ;;Total ram usage:       14 bytes
 16281 ;; Hardware stack levels used:    1
 16282 ;; Hardware stack levels required when called:    2
 16283 ;; This function calls:
 16284 ;;		Nothing
 16285 ;; This function is called by:
 16286 ;;		_atan2f
 16287 ;;		_atanf
 16288 ;;		_efgtoa
 16289 ;; This function uses a non-reentrant model
 16290 ;;
 16291                           
 16292                           	psect	text52
 16293  005224                     __ptext52:
 16294                           	callstack 0
 16295  005224                     ___fpclassifyf:
 16296                           	callstack 24
 16297  005224  C150  F00E         	movff	___fpclassifyf@F465,___fpclassifyf@u
 16298  005228  C151  F00F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 16299  00522C  C152  F010         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 16300  005230  C153  F011         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 16301  005234  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
 16302  005238  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 16303  00523C  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 16304  005240  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 16305  005244  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 16306  005248  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 16307  00524C  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 16308  005250  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 16309  005254  0E18               	movlw	24
 16310  005256  EF32  F029         	goto	u6890
 16311  00525A                     u6895:
 16312  00525A  90D8               	bcf	status,0,c
 16313  00525C  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
 16314  00525E  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
 16315  005260  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
 16316  005262  3208               	rrcf	??___fpclassifyf^0,f,c
 16317  005264                     u6890:
 16318  005264  2EE8               	decfsz	wreg,f,c
 16319  005266  EF2D  F029         	goto	u6895
 16320  00526A  5008               	movf	??___fpclassifyf^0,w,c
 16321  00526C  6E0C               	movwf	___fpclassifyf@e^0,c
 16322  00526E  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
 16323  005270  500C               	movf	___fpclassifyf@e^0,w,c
 16324  005272  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 16325  005274  A4D8               	btfss	status,2,c
 16326  005276  EF3F  F029         	goto	u6901
 16327  00527A  EF41  F029         	goto	u6900
 16328  00527E                     u6901:
 16329  00527E  EF61  F029         	goto	l8233
 16330  005282                     u6900:
 16331  005282  90D8               	bcf	status,0,c
 16332  005284  340E               	rlcf	___fpclassifyf@u^0,w,c
 16333  005286  6E08               	movwf	??___fpclassifyf^0,c
 16334  005288  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
 16335  00528A  6E09               	movwf	(??___fpclassifyf+1)^0,c
 16336  00528C  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
 16337  00528E  6E0A               	movwf	(??___fpclassifyf+2)^0,c
 16338  005290  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
 16339  005292  6E0B               	movwf	(??___fpclassifyf+3)^0,c
 16340  005294  5008               	movf	??___fpclassifyf^0,w,c
 16341  005296  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 16342  005298  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 16343  00529A  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 16344  00529C  A4D8               	btfss	status,2,c
 16345  00529E  EF53  F029         	goto	u6911
 16346  0052A2  EF55  F029         	goto	u6910
 16347  0052A6                     u6911:
 16348  0052A6  EF5B  F029         	goto	l8229
 16349  0052AA                     u6910:
 16350  0052AA  0E00               	movlw	0
 16351  0052AC  6E05               	movwf	(?___fpclassifyf+1)^0,c
 16352  0052AE  0E02               	movlw	2
 16353  0052B0  6E04               	movwf	?___fpclassifyf^0,c
 16354  0052B2  EF90  F029         	goto	l2600
 16355  0052B6                     l8229:
 16356  0052B6  0E00               	movlw	0
 16357  0052B8  6E05               	movwf	(?___fpclassifyf+1)^0,c
 16358  0052BA  0E03               	movlw	3
 16359  0052BC  6E04               	movwf	?___fpclassifyf^0,c
 16360  0052BE  EF90  F029         	goto	l2600
 16361  0052C2                     l8233:
 16362  0052C2  280C               	incf	___fpclassifyf@e^0,w,c
 16363  0052C4  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 16364  0052C6  A4D8               	btfss	status,2,c
 16365  0052C8  EF68  F029         	goto	u6921
 16366  0052CC  EF6A  F029         	goto	u6920
 16367  0052D0                     u6921:
 16368  0052D0  EF8C  F029         	goto	l8239
 16369  0052D4                     u6920:
 16370  0052D4  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 16371  0052D8  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 16372  0052DC  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 16373  0052E0  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 16374  0052E4  0E09               	movlw	9
 16375  0052E6                     u6935:
 16376  0052E6  90D8               	bcf	status,0,c
 16377  0052E8  3608               	rlcf	??___fpclassifyf^0,f,c
 16378  0052EA  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
 16379  0052EC  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
 16380  0052EE  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
 16381  0052F0  2EE8               	decfsz	wreg,f,c
 16382  0052F2  EF73  F029         	goto	u6935
 16383  0052F6  5008               	movf	??___fpclassifyf^0,w,c
 16384  0052F8  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 16385  0052FA  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 16386  0052FC  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 16387  0052FE  B4D8               	btfsc	status,2,c
 16388  005300  EF84  F029         	goto	u6941
 16389  005304  EF87  F029         	goto	u6940
 16390  005308                     u6941:
 16391  005308  0E01               	movlw	1
 16392  00530A  EF88  F029         	goto	u6950
 16393  00530E                     u6940:
 16394  00530E  0E00               	movlw	0
 16395  005310                     u6950:
 16396  005310  6E04               	movwf	?___fpclassifyf^0,c
 16397  005312  6A05               	clrf	(?___fpclassifyf+1)^0,c
 16398  005314  EF90  F029         	goto	l2600
 16399  005318                     l8239:
 16400  005318  0E00               	movlw	0
 16401  00531A  6E05               	movwf	(?___fpclassifyf+1)^0,c
 16402  00531C  0E04               	movlw	4
 16403  00531E  6E04               	movwf	?___fpclassifyf^0,c
 16404  005320                     l2600:
 16405  005320  0012               	return		;funcret
 16406  005322                     __end_of___fpclassifyf:
 16407                           	callstack 0
 16408                           
 16409 ;; *************** function ___flneg *****************
 16410 ;; Defined at:
 16411 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flneg.c"
 16412 ;; Parameters:    Size  Location     Type
 16413 ;;  f1              4    3[COMRAM] int 
 16414 ;; Auto vars:     Size  Location     Type
 16415 ;;		None
 16416 ;; Return value:  Size  Location     Type
 16417 ;;                  4    3[COMRAM] int 
 16418 ;; Registers used:
 16419 ;;		wreg, status,2, status,0
 16420 ;; Tracked objects:
 16421 ;;		On entry : 0/0
 16422 ;;		On exit  : 0/0
 16423 ;;		Unchanged: 0/0
 16424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16425 ;;      Params:         4       0       0       0       0       0       0       0       0
 16426 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16427 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16428 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16429 ;;Total ram usage:        4 bytes
 16430 ;; Hardware stack levels used:    1
 16431 ;; Hardware stack levels required when called:    2
 16432 ;; This function calls:
 16433 ;;		Nothing
 16434 ;; This function is called by:
 16435 ;;		_atan2f
 16436 ;;		_atanf
 16437 ;;		_efgtoa
 16438 ;;		_MPU6050_PID
 16439 ;;		_getConjugateQ
 16440 ;;		_MPU6050_dmpGetEuler
 16441 ;;		_roundf
 16442 ;; This function uses a non-reentrant model
 16443 ;;
 16444                           
 16445                           	psect	text53
 16446  006452                     __ptext53:
 16447                           	callstack 0
 16448  006452                     ___flneg:
 16449                           	callstack 24
 16450  006452  5004               	movf	___flneg@f1^0,w,c
 16451  006454  1005               	iorwf	(___flneg@f1+1)^0,w,c
 16452  006456  1006               	iorwf	(___flneg@f1+2)^0,w,c
 16453  006458  1007               	iorwf	(___flneg@f1+3)^0,w,c
 16454  00645A  B4D8               	btfsc	status,2,c
 16455  00645C  EF32  F032         	goto	u6811
 16456  006460  EF34  F032         	goto	u6810
 16457  006464                     u6811:
 16458  006464  EF3C  F032         	goto	l8173
 16459  006468                     u6810:
 16460  006468  0E00               	movlw	0
 16461  00646A  1A04               	xorwf	___flneg@f1^0,f,c
 16462  00646C  0E00               	movlw	0
 16463  00646E  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 16464  006470  0E00               	movlw	0
 16465  006472  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 16466  006474  0E80               	movlw	128
 16467  006476  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 16468  006478                     l8173:
 16469  006478  C004  F004         	movff	___flneg@f1,?___flneg
 16470  00647C  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 16471  006480  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 16472  006484  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 16473  006488  0012               	return		;funcret
 16474  00648A                     __end_of___flneg:
 16475                           	callstack 0
 16476                           
 16477 ;; *************** function _MPU6050_dmpGetQuaternionQ *****************
 16478 ;; Defined at:
 16479 ;;		line 458 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 16480 ;; Parameters:    Size  Location     Type
 16481 ;;  q               2   48[COMRAM] PTR struct .
 16482 ;;		 -> q(16), 
 16483 ;;  packet          2   50[COMRAM] PTR const unsigned char 
 16484 ;;		 -> main@fifoBuffer(28), 
 16485 ;; Auto vars:     Size  Location     Type
 16486 ;;  qI              8   53[COMRAM] short [4]
 16487 ;;  status          1   52[COMRAM] unsigned char 
 16488 ;; Return value:  Size  Location     Type
 16489 ;;                  1    wreg      unsigned char 
 16490 ;; Registers used:
 16491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16492 ;; Tracked objects:
 16493 ;;		On entry : 0/0
 16494 ;;		On exit  : 0/0
 16495 ;;		Unchanged: 0/0
 16496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16497 ;;      Params:         4       0       0       0       0       0       0       0       0
 16498 ;;      Locals:         9       0       0       0       0       0       0       0       0
 16499 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16500 ;;      Totals:        13       0       0       0       0       0       0       0       0
 16501 ;;Total ram usage:       13 bytes
 16502 ;; Hardware stack levels used:    1
 16503 ;; Hardware stack levels required when called:    3
 16504 ;; This function calls:
 16505 ;;		_MPU6050_dmpGetQuaternionI16
 16506 ;;		___fldiv
 16507 ;;		___xxtofl
 16508 ;; This function is called by:
 16509 ;;		_main
 16510 ;; This function uses a non-reentrant model
 16511 ;;
 16512                           
 16513                           	psect	text54
 16514  004BE4                     __ptext54:
 16515                           	callstack 0
 16516  004BE4                     _MPU6050_dmpGetQuaternionQ:
 16517                           	callstack 27
 16518  004BE4                     
 16519                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 460:     int16_t qI[4];;./MPU6050_6Axis_MotionApps_
      +                          V6_12.h: 461:     uint8_t status = MPU6050_dmpGetQuaternionI16(qI, packet);
 16520  004BE4  0E36               	movlw	low MPU6050_dmpGetQuaternionQ@qI
 16521  004BE6  6E04               	movwf	MPU6050_dmpGetQuaternionI16@data^0,c
 16522  004BE8  0E00               	movlw	high MPU6050_dmpGetQuaternionQ@qI
 16523  004BEA  6E05               	movwf	(MPU6050_dmpGetQuaternionI16@data+1)^0,c
 16524  004BEC  C033  F006         	movff	MPU6050_dmpGetQuaternionQ@packet,MPU6050_dmpGetQuaternionI16@packet
 16525  004BF0  C034  F007         	movff	MPU6050_dmpGetQuaternionQ@packet+1,MPU6050_dmpGetQuaternionI16@packet+1
 16526  004BF4  EC7D  F027         	call	_MPU6050_dmpGetQuaternionI16	;wreg free
 16527  004BF8  6E35               	movwf	MPU6050_dmpGetQuaternionQ@status^0,c
 16528  004BFA                     
 16529                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 462:     if (status == 0) {
 16530  004BFA  5035               	movf	MPU6050_dmpGetQuaternionQ@status^0,w,c
 16531  004BFC  A4D8               	btfss	status,2,c
 16532  004BFE  EF03  F026         	goto	u9101
 16533  004C02  EF05  F026         	goto	u9100
 16534  004C06                     u9101:
 16535  004C06  EFB9  F026         	goto	l1521
 16536  004C0A                     u9100:
 16537  004C0A                     
 16538                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 463:         q -> w = (float)qI[0] / 16384.0f;
 16539  004C0A  C036  F00A         	movff	MPU6050_dmpGetQuaternionQ@qI,___xxtofl@val
 16540  004C0E  C037  F00B         	movff	MPU6050_dmpGetQuaternionQ@qI+1,___xxtofl@val+1
 16541  004C12  0E00               	movlw	0
 16542  004C14  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 16543  004C16  0EFF               	movlw	-1
 16544  004C18  6E0C               	movwf	(___xxtofl@val+2)^0,c
 16545  004C1A  6E0D               	movwf	(___xxtofl@val+3)^0,c
 16546  004C1C  0E01               	movlw	1
 16547  004C1E  EC18  F025         	call	___xxtofl
 16548  004C22  C00A  F018         	movff	?___xxtofl,___fldiv@b
 16549  004C26  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 16550  004C2A  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 16551  004C2E  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 16552  004C32  0E00               	movlw	0
 16553  004C34  6E1C               	movwf	___fldiv@a^0,c
 16554  004C36  0E00               	movlw	0
 16555  004C38  6E1D               	movwf	(___fldiv@a+1)^0,c
 16556  004C3A  0E80               	movlw	128
 16557  004C3C  6E1E               	movwf	(___fldiv@a+2)^0,c
 16558  004C3E  0E46               	movlw	70
 16559  004C40  6E1F               	movwf	(___fldiv@a+3)^0,c
 16560  004C42  ECDF  F01B         	call	___fldiv	;wreg free
 16561  004C46  C031  FFD9         	movff	MPU6050_dmpGetQuaternionQ@q,fsr2l
 16562  004C4A  C032  FFDA         	movff	MPU6050_dmpGetQuaternionQ@q+1,fsr2h
 16563  004C4E  C018  FFDE         	movff	?___fldiv,postinc2
 16564  004C52  C019  FFDE         	movff	?___fldiv+1,postinc2
 16565  004C56  C01A  FFDE         	movff	?___fldiv+2,postinc2
 16566  004C5A  C01B  FFDE         	movff	?___fldiv+3,postinc2
 16567                           
 16568                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 464:         q -> x = (float)qI[1] / 16384.0f;
 16569  004C5E  EE20  F038         	lfsr	2,MPU6050_dmpGetQuaternionQ@qI+2
 16570  004C62  CFDE F00A          	movff	postinc2,___xxtofl@val
 16571  004C66  CFDD F00B          	movff	postdec2,___xxtofl@val+1
 16572  004C6A  0E00               	movlw	0
 16573  004C6C  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 16574  004C6E  0EFF               	movlw	-1
 16575  004C70  6E0C               	movwf	(___xxtofl@val+2)^0,c
 16576  004C72  6E0D               	movwf	(___xxtofl@val+3)^0,c
 16577  004C74  0E01               	movlw	1
 16578  004C76  EC18  F025         	call	___xxtofl
 16579  004C7A  C00A  F018         	movff	?___xxtofl,___fldiv@b
 16580  004C7E  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 16581  004C82  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 16582  004C86  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 16583  004C8A  0E00               	movlw	0
 16584  004C8C  6E1C               	movwf	___fldiv@a^0,c
 16585  004C8E  0E00               	movlw	0
 16586  004C90  6E1D               	movwf	(___fldiv@a+1)^0,c
 16587  004C92  0E80               	movlw	128
 16588  004C94  6E1E               	movwf	(___fldiv@a+2)^0,c
 16589  004C96  0E46               	movlw	70
 16590  004C98  6E1F               	movwf	(___fldiv@a+3)^0,c
 16591  004C9A  ECDF  F01B         	call	___fldiv	;wreg free
 16592  004C9E  EE20 F004          	lfsr	2,4
 16593  004CA2  5031               	movf	MPU6050_dmpGetQuaternionQ@q^0,w,c
 16594  004CA4  26D9               	addwf	fsr2l,f,c
 16595  004CA6  5032               	movf	(MPU6050_dmpGetQuaternionQ@q+1)^0,w,c
 16596  004CA8  22DA               	addwfc	fsr2h,f,c
 16597  004CAA  C018  FFDE         	movff	?___fldiv,postinc2
 16598  004CAE  C019  FFDE         	movff	?___fldiv+1,postinc2
 16599  004CB2  C01A  FFDE         	movff	?___fldiv+2,postinc2
 16600  004CB6  C01B  FFDE         	movff	?___fldiv+3,postinc2
 16601                           
 16602                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 465:         q -> y = (float)qI[2] / 16384.0f;
 16603  004CBA  EE20  F03A         	lfsr	2,MPU6050_dmpGetQuaternionQ@qI+4
 16604  004CBE  CFDE F00A          	movff	postinc2,___xxtofl@val
 16605  004CC2  CFDD F00B          	movff	postdec2,___xxtofl@val+1
 16606  004CC6  0E00               	movlw	0
 16607  004CC8  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 16608  004CCA  0EFF               	movlw	-1
 16609  004CCC  6E0C               	movwf	(___xxtofl@val+2)^0,c
 16610  004CCE  6E0D               	movwf	(___xxtofl@val+3)^0,c
 16611  004CD0  0E01               	movlw	1
 16612  004CD2  EC18  F025         	call	___xxtofl
 16613  004CD6  C00A  F018         	movff	?___xxtofl,___fldiv@b
 16614  004CDA  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 16615  004CDE  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 16616  004CE2  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 16617  004CE6  0E00               	movlw	0
 16618  004CE8  6E1C               	movwf	___fldiv@a^0,c
 16619  004CEA  0E00               	movlw	0
 16620  004CEC  6E1D               	movwf	(___fldiv@a+1)^0,c
 16621  004CEE  0E80               	movlw	128
 16622  004CF0  6E1E               	movwf	(___fldiv@a+2)^0,c
 16623  004CF2  0E46               	movlw	70
 16624  004CF4  6E1F               	movwf	(___fldiv@a+3)^0,c
 16625  004CF6  ECDF  F01B         	call	___fldiv	;wreg free
 16626  004CFA  EE20 F008          	lfsr	2,8
 16627  004CFE  5031               	movf	MPU6050_dmpGetQuaternionQ@q^0,w,c
 16628  004D00  26D9               	addwf	fsr2l,f,c
 16629  004D02  5032               	movf	(MPU6050_dmpGetQuaternionQ@q+1)^0,w,c
 16630  004D04  22DA               	addwfc	fsr2h,f,c
 16631  004D06  C018  FFDE         	movff	?___fldiv,postinc2
 16632  004D0A  C019  FFDE         	movff	?___fldiv+1,postinc2
 16633  004D0E  C01A  FFDE         	movff	?___fldiv+2,postinc2
 16634  004D12  C01B  FFDE         	movff	?___fldiv+3,postinc2
 16635                           
 16636                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 466:         q -> z = (float)qI[3] / 16384.0f;
 16637  004D16  EE20  F03C         	lfsr	2,MPU6050_dmpGetQuaternionQ@qI+6
 16638  004D1A  CFDE F00A          	movff	postinc2,___xxtofl@val
 16639  004D1E  CFDD F00B          	movff	postdec2,___xxtofl@val+1
 16640  004D22  0E00               	movlw	0
 16641  004D24  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 16642  004D26  0EFF               	movlw	-1
 16643  004D28  6E0C               	movwf	(___xxtofl@val+2)^0,c
 16644  004D2A  6E0D               	movwf	(___xxtofl@val+3)^0,c
 16645  004D2C  0E01               	movlw	1
 16646  004D2E  EC18  F025         	call	___xxtofl
 16647  004D32  C00A  F018         	movff	?___xxtofl,___fldiv@b
 16648  004D36  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 16649  004D3A  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 16650  004D3E  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 16651  004D42  0E00               	movlw	0
 16652  004D44  6E1C               	movwf	___fldiv@a^0,c
 16653  004D46  0E00               	movlw	0
 16654  004D48  6E1D               	movwf	(___fldiv@a+1)^0,c
 16655  004D4A  0E80               	movlw	128
 16656  004D4C  6E1E               	movwf	(___fldiv@a+2)^0,c
 16657  004D4E  0E46               	movlw	70
 16658  004D50  6E1F               	movwf	(___fldiv@a+3)^0,c
 16659  004D52  ECDF  F01B         	call	___fldiv	;wreg free
 16660  004D56  EE20 F00C          	lfsr	2,12
 16661  004D5A  5031               	movf	MPU6050_dmpGetQuaternionQ@q^0,w,c
 16662  004D5C  26D9               	addwf	fsr2l,f,c
 16663  004D5E  5032               	movf	(MPU6050_dmpGetQuaternionQ@q+1)^0,w,c
 16664  004D60  22DA               	addwfc	fsr2h,f,c
 16665  004D62  C018  FFDE         	movff	?___fldiv,postinc2
 16666  004D66  C019  FFDE         	movff	?___fldiv+1,postinc2
 16667  004D6A  C01A  FFDE         	movff	?___fldiv+2,postinc2
 16668  004D6E  C01B  FFDE         	movff	?___fldiv+3,postinc2
 16669  004D72                     l1521:
 16670  004D72  0012               	return		;funcret
 16671  004D74                     __end_of_MPU6050_dmpGetQuaternionQ:
 16672                           	callstack 0
 16673                           
 16674 ;; *************** function ___fldiv *****************
 16675 ;; Defined at:
 16676 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
 16677 ;; Parameters:    Size  Location     Type
 16678 ;;  b               4   23[COMRAM] unsigned char 
 16679 ;;  a               4   27[COMRAM] unsigned char 
 16680 ;; Auto vars:     Size  Location     Type
 16681 ;;  grs             4   42[COMRAM] unsigned long 
 16682 ;;  rem             4   35[COMRAM] unsigned long 
 16683 ;;  new_exp         2   40[COMRAM] short 
 16684 ;;  aexp            1   47[COMRAM] unsigned char 
 16685 ;;  bexp            1   46[COMRAM] unsigned char 
 16686 ;;  sign            1   39[COMRAM] unsigned char 
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  4   23[COMRAM] unsigned char 
 16689 ;; Registers used:
 16690 ;;		wreg, status,2, status,0
 16691 ;; Tracked objects:
 16692 ;;		On entry : 0/0
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16696 ;;      Params:         8       0       0       0       0       0       0       0       0
 16697 ;;      Locals:        13       0       0       0       0       0       0       0       0
 16698 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16699 ;;      Totals:        25       0       0       0       0       0       0       0       0
 16700 ;;Total ram usage:       25 bytes
 16701 ;; Hardware stack levels used:    1
 16702 ;; Hardware stack levels required when called:    2
 16703 ;; This function calls:
 16704 ;;		Nothing
 16705 ;; This function is called by:
 16706 ;;		_MPU6050_dmpGetQuaternionQ
 16707 ;;		_controlReceive
 16708 ;;		_main
 16709 ;;		_atan2f
 16710 ;;		_atanf
 16711 ;;		_efgtoa
 16712 ;;		_MPU6050_PID
 16713 ;;		_normalizeQ
 16714 ;;		_normalizeVI
 16715 ;;		_normalizeVF
 16716 ;; This function uses a non-reentrant model
 16717 ;;
 16718                           
 16719                           	psect	text55
 16720  0037BE                     __ptext55:
 16721                           	callstack 0
 16722  0037BE                     ___fldiv:
 16723                           	callstack 24
 16724  0037BE  501B               	movf	(___fldiv@b+3)^0,w,c
 16725  0037C0  0B80               	andlw	128
 16726  0037C2  6E28               	movwf	___fldiv@sign^0,c
 16727  0037C4  501B               	movf	(___fldiv@b+3)^0,w,c
 16728  0037C6  241B               	addwf	(___fldiv@b+3)^0,w,c
 16729  0037C8  6E2F               	movwf	___fldiv@bexp^0,c
 16730  0037CA  AE1A               	btfss	(___fldiv@b+2)^0,7,c
 16731  0037CC  EFEA  F01B         	goto	u6191
 16732  0037D0  EFEC  F01B         	goto	u6190
 16733  0037D4                     u6191:
 16734  0037D4  EFED  F01B         	goto	l7783
 16735  0037D8                     u6190:
 16736  0037D8  802F               	bsf	___fldiv@bexp^0,0,c
 16737  0037DA                     l7783:
 16738  0037DA  502F               	movf	___fldiv@bexp^0,w,c
 16739  0037DC  B4D8               	btfsc	status,2,c
 16740  0037DE  EFF3  F01B         	goto	u6201
 16741  0037E2  EFF5  F01B         	goto	u6200
 16742  0037E6                     u6201:
 16743  0037E6  EF0A  F01C         	goto	l7793
 16744  0037EA                     u6200:
 16745  0037EA  282F               	incf	___fldiv@bexp^0,w,c
 16746  0037EC  A4D8               	btfss	status,2,c
 16747  0037EE  EFFB  F01B         	goto	u6211
 16748  0037F2  EFFD  F01B         	goto	u6210
 16749  0037F6                     u6211:
 16750  0037F6  EF05  F01C         	goto	l7789
 16751  0037FA                     u6210:
 16752  0037FA  0E00               	movlw	0
 16753  0037FC  6E18               	movwf	___fldiv@b^0,c
 16754  0037FE  0E00               	movlw	0
 16755  003800  6E19               	movwf	(___fldiv@b+1)^0,c
 16756  003802  0E00               	movlw	0
 16757  003804  6E1A               	movwf	(___fldiv@b+2)^0,c
 16758  003806  0E00               	movlw	0
 16759  003808  6E1B               	movwf	(___fldiv@b+3)^0,c
 16760  00380A                     l7789:
 16761  00380A  8E1A               	bsf	(___fldiv@b+2)^0,7,c
 16762  00380C  0E00               	movlw	0
 16763  00380E  6E1B               	movwf	(___fldiv@b+3)^0,c
 16764  003810  EF12  F01C         	goto	l7795
 16765  003814                     l7793:
 16766  003814  0E00               	movlw	0
 16767  003816  6E18               	movwf	___fldiv@b^0,c
 16768  003818  0E00               	movlw	0
 16769  00381A  6E19               	movwf	(___fldiv@b+1)^0,c
 16770  00381C  0E00               	movlw	0
 16771  00381E  6E1A               	movwf	(___fldiv@b+2)^0,c
 16772  003820  0E00               	movlw	0
 16773  003822  6E1B               	movwf	(___fldiv@b+3)^0,c
 16774  003824                     l7795:
 16775  003824  501F               	movf	(___fldiv@a+3)^0,w,c
 16776  003826  0B80               	andlw	128
 16777  003828  1A28               	xorwf	___fldiv@sign^0,f,c
 16778  00382A  501F               	movf	(___fldiv@a+3)^0,w,c
 16779  00382C  241F               	addwf	(___fldiv@a+3)^0,w,c
 16780  00382E  6E30               	movwf	___fldiv@aexp^0,c
 16781  003830  AE1E               	btfss	(___fldiv@a+2)^0,7,c
 16782  003832  EF1D  F01C         	goto	u6221
 16783  003836  EF1F  F01C         	goto	u6220
 16784  00383A                     u6221:
 16785  00383A  EF20  F01C         	goto	l7803
 16786  00383E                     u6220:
 16787  00383E  8030               	bsf	___fldiv@aexp^0,0,c
 16788  003840                     l7803:
 16789  003840  5030               	movf	___fldiv@aexp^0,w,c
 16790  003842  B4D8               	btfsc	status,2,c
 16791  003844  EF26  F01C         	goto	u6231
 16792  003848  EF28  F01C         	goto	u6230
 16793  00384C                     u6231:
 16794  00384C  EF3D  F01C         	goto	l7813
 16795  003850                     u6230:
 16796  003850  2830               	incf	___fldiv@aexp^0,w,c
 16797  003852  A4D8               	btfss	status,2,c
 16798  003854  EF2E  F01C         	goto	u6241
 16799  003858  EF30  F01C         	goto	u6240
 16800  00385C                     u6241:
 16801  00385C  EF38  F01C         	goto	l7809
 16802  003860                     u6240:
 16803  003860  0E00               	movlw	0
 16804  003862  6E1C               	movwf	___fldiv@a^0,c
 16805  003864  0E00               	movlw	0
 16806  003866  6E1D               	movwf	(___fldiv@a+1)^0,c
 16807  003868  0E00               	movlw	0
 16808  00386A  6E1E               	movwf	(___fldiv@a+2)^0,c
 16809  00386C  0E00               	movlw	0
 16810  00386E  6E1F               	movwf	(___fldiv@a+3)^0,c
 16811  003870                     l7809:
 16812  003870  8E1E               	bsf	(___fldiv@a+2)^0,7,c
 16813  003872  0E00               	movlw	0
 16814  003874  6E1F               	movwf	(___fldiv@a+3)^0,c
 16815  003876  EF45  F01C         	goto	l7815
 16816  00387A                     l7813:
 16817  00387A  0E00               	movlw	0
 16818  00387C  6E1C               	movwf	___fldiv@a^0,c
 16819  00387E  0E00               	movlw	0
 16820  003880  6E1D               	movwf	(___fldiv@a+1)^0,c
 16821  003882  0E00               	movlw	0
 16822  003884  6E1E               	movwf	(___fldiv@a+2)^0,c
 16823  003886  0E00               	movlw	0
 16824  003888  6E1F               	movwf	(___fldiv@a+3)^0,c
 16825  00388A                     l7815:
 16826  00388A  501C               	movf	___fldiv@a^0,w,c
 16827  00388C  101D               	iorwf	(___fldiv@a+1)^0,w,c
 16828  00388E  101E               	iorwf	(___fldiv@a+2)^0,w,c
 16829  003890  101F               	iorwf	(___fldiv@a+3)^0,w,c
 16830  003892  A4D8               	btfss	status,2,c
 16831  003894  EF4E  F01C         	goto	u6251
 16832  003898  EF50  F01C         	goto	u6250
 16833  00389C                     u6251:
 16834  00389C  EF68  F01C         	goto	l7827
 16835  0038A0                     u6250:
 16836  0038A0  0E00               	movlw	0
 16837  0038A2  6E18               	movwf	___fldiv@b^0,c
 16838  0038A4  0E00               	movlw	0
 16839  0038A6  6E19               	movwf	(___fldiv@b+1)^0,c
 16840  0038A8  0E00               	movlw	0
 16841  0038AA  6E1A               	movwf	(___fldiv@b+2)^0,c
 16842  0038AC  0E00               	movlw	0
 16843  0038AE  6E1B               	movwf	(___fldiv@b+3)^0,c
 16844  0038B0  0E80               	movlw	128
 16845  0038B2  121A               	iorwf	(___fldiv@b+2)^0,f,c
 16846  0038B4  0E7F               	movlw	127
 16847  0038B6  121B               	iorwf	(___fldiv@b+3)^0,f,c
 16848  0038B8                     l7821:
 16849  0038B8  5028               	movf	___fldiv@sign^0,w,c
 16850  0038BA  121B               	iorwf	(___fldiv@b+3)^0,f,c
 16851  0038BC  C018  F018         	movff	___fldiv@b,?___fldiv
 16852  0038C0  C019  F019         	movff	___fldiv@b+1,?___fldiv+1
 16853  0038C4  C01A  F01A         	movff	___fldiv@b+2,?___fldiv+2
 16854  0038C8  C01B  F01B         	movff	___fldiv@b+3,?___fldiv+3
 16855  0038CC  EFAB  F01D         	goto	l2404
 16856  0038D0                     l7827:
 16857  0038D0  502F               	movf	___fldiv@bexp^0,w,c
 16858  0038D2  A4D8               	btfss	status,2,c
 16859  0038D4  EF6E  F01C         	goto	u6261
 16860  0038D8  EF70  F01C         	goto	u6260
 16861  0038DC                     u6261:
 16862  0038DC  EF7A  F01C         	goto	l7835
 16863  0038E0                     u6260:
 16864  0038E0  0E00               	movlw	0
 16865  0038E2  6E18               	movwf	?___fldiv^0,c
 16866  0038E4  0E00               	movlw	0
 16867  0038E6  6E19               	movwf	(?___fldiv+1)^0,c
 16868  0038E8  0E00               	movlw	0
 16869  0038EA  6E1A               	movwf	(?___fldiv+2)^0,c
 16870  0038EC  0E00               	movlw	0
 16871  0038EE  6E1B               	movwf	(?___fldiv+3)^0,c
 16872  0038F0  EFAB  F01D         	goto	l2404
 16873  0038F4                     l7835:
 16874  0038F4  5030               	movf	___fldiv@aexp^0,w,c
 16875  0038F6  C02F  F020         	movff	___fldiv@bexp,??___fldiv
 16876  0038FA  6A21               	clrf	(??___fldiv+1)^0,c
 16877  0038FC  5E20               	subwf	??___fldiv^0,f,c
 16878  0038FE  0E00               	movlw	0
 16879  003900  5A21               	subwfb	(??___fldiv+1)^0,f,c
 16880  003902  0E7F               	movlw	127
 16881  003904  2420               	addwf	??___fldiv^0,w,c
 16882  003906  6E29               	movwf	___fldiv@new_exp^0,c
 16883  003908  0E00               	movlw	0
 16884  00390A  2021               	addwfc	(??___fldiv+1)^0,w,c
 16885  00390C  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 16886  00390E  C018  F024         	movff	___fldiv@b,___fldiv@rem
 16887  003912  C019  F025         	movff	___fldiv@b+1,___fldiv@rem+1
 16888  003916  C01A  F026         	movff	___fldiv@b+2,___fldiv@rem+2
 16889  00391A  C01B  F027         	movff	___fldiv@b+3,___fldiv@rem+3
 16890  00391E  0E00               	movlw	0
 16891  003920  6E18               	movwf	___fldiv@b^0,c
 16892  003922  0E00               	movlw	0
 16893  003924  6E19               	movwf	(___fldiv@b+1)^0,c
 16894  003926  0E00               	movlw	0
 16895  003928  6E1A               	movwf	(___fldiv@b+2)^0,c
 16896  00392A  0E00               	movlw	0
 16897  00392C  6E1B               	movwf	(___fldiv@b+3)^0,c
 16898  00392E  0E00               	movlw	0
 16899  003930  6E2B               	movwf	___fldiv@grs^0,c
 16900  003932  0E00               	movlw	0
 16901  003934  6E2C               	movwf	(___fldiv@grs+1)^0,c
 16902  003936  0E00               	movlw	0
 16903  003938  6E2D               	movwf	(___fldiv@grs+2)^0,c
 16904  00393A  0E00               	movlw	0
 16905  00393C  6E2E               	movwf	(___fldiv@grs+3)^0,c
 16906  00393E  0E00               	movlw	0
 16907  003940  6E30               	movwf	___fldiv@aexp^0,c
 16908  003942  EFDB  F01C         	goto	l2406
 16909  003946                     l7845:
 16910  003946  5030               	movf	___fldiv@aexp^0,w,c
 16911  003948  B4D8               	btfsc	status,2,c
 16912  00394A  EFA9  F01C         	goto	u6271
 16913  00394E  EFAB  F01C         	goto	u6270
 16914  003952                     u6271:
 16915  003952  EFC2  F01C         	goto	l7853
 16916  003956                     u6270:
 16917  003956  90D8               	bcf	status,0,c
 16918  003958  3624               	rlcf	___fldiv@rem^0,f,c
 16919  00395A  3625               	rlcf	(___fldiv@rem+1)^0,f,c
 16920  00395C  3626               	rlcf	(___fldiv@rem+2)^0,f,c
 16921  00395E  3627               	rlcf	(___fldiv@rem+3)^0,f,c
 16922  003960  90D8               	bcf	status,0,c
 16923  003962  3618               	rlcf	___fldiv@b^0,f,c
 16924  003964  3619               	rlcf	(___fldiv@b+1)^0,f,c
 16925  003966  361A               	rlcf	(___fldiv@b+2)^0,f,c
 16926  003968  361B               	rlcf	(___fldiv@b+3)^0,f,c
 16927  00396A  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 16928  00396C  EFBA  F01C         	goto	u6281
 16929  003970  EFBC  F01C         	goto	u6280
 16930  003974                     u6281:
 16931  003974  EFBD  F01C         	goto	l2409
 16932  003978                     u6280:
 16933  003978  8018               	bsf	___fldiv@b^0,0,c
 16934  00397A                     l2409:
 16935  00397A  90D8               	bcf	status,0,c
 16936  00397C  362B               	rlcf	___fldiv@grs^0,f,c
 16937  00397E  362C               	rlcf	(___fldiv@grs+1)^0,f,c
 16938  003980  362D               	rlcf	(___fldiv@grs+2)^0,f,c
 16939  003982  362E               	rlcf	(___fldiv@grs+3)^0,f,c
 16940  003984                     l7853:
 16941  003984  501C               	movf	___fldiv@a^0,w,c
 16942  003986  5C24               	subwf	___fldiv@rem^0,w,c
 16943  003988  501D               	movf	(___fldiv@a+1)^0,w,c
 16944  00398A  5825               	subwfb	(___fldiv@rem+1)^0,w,c
 16945  00398C  501E               	movf	(___fldiv@a+2)^0,w,c
 16946  00398E  5826               	subwfb	(___fldiv@rem+2)^0,w,c
 16947  003990  501F               	movf	(___fldiv@a+3)^0,w,c
 16948  003992  5827               	subwfb	(___fldiv@rem+3)^0,w,c
 16949  003994  A0D8               	btfss	status,0,c
 16950  003996  EFCF  F01C         	goto	u6291
 16951  00399A  EFD1  F01C         	goto	u6290
 16952  00399E                     u6291:
 16953  00399E  EFDA  F01C         	goto	l7859
 16954  0039A2                     u6290:
 16955  0039A2  8C2E               	bsf	(___fldiv@grs+3)^0,6,c
 16956  0039A4  501C               	movf	___fldiv@a^0,w,c
 16957  0039A6  5E24               	subwf	___fldiv@rem^0,f,c
 16958  0039A8  501D               	movf	(___fldiv@a+1)^0,w,c
 16959  0039AA  5A25               	subwfb	(___fldiv@rem+1)^0,f,c
 16960  0039AC  501E               	movf	(___fldiv@a+2)^0,w,c
 16961  0039AE  5A26               	subwfb	(___fldiv@rem+2)^0,f,c
 16962  0039B0  501F               	movf	(___fldiv@a+3)^0,w,c
 16963  0039B2  5A27               	subwfb	(___fldiv@rem+3)^0,f,c
 16964  0039B4                     l7859:
 16965  0039B4  2A30               	incf	___fldiv@aexp^0,f,c
 16966  0039B6                     l2406:
 16967  0039B6  0E19               	movlw	25
 16968  0039B8  6430               	cpfsgt	___fldiv@aexp^0,c
 16969  0039BA  EFE1  F01C         	goto	u6301
 16970  0039BE  EFE3  F01C         	goto	u6300
 16971  0039C2                     u6301:
 16972  0039C2  EFA3  F01C         	goto	l7845
 16973  0039C6                     u6300:
 16974  0039C6  5024               	movf	___fldiv@rem^0,w,c
 16975  0039C8  1025               	iorwf	(___fldiv@rem+1)^0,w,c
 16976  0039CA  1026               	iorwf	(___fldiv@rem+2)^0,w,c
 16977  0039CC  1027               	iorwf	(___fldiv@rem+3)^0,w,c
 16978  0039CE  B4D8               	btfsc	status,2,c
 16979  0039D0  EFEC  F01C         	goto	u6311
 16980  0039D4  EFEE  F01C         	goto	u6310
 16981  0039D8                     u6311:
 16982  0039D8  EF06  F01D         	goto	l7871
 16983  0039DC                     u6310:
 16984  0039DC  802B               	bsf	___fldiv@grs^0,0,c
 16985  0039DE  EF06  F01D         	goto	l7871
 16986  0039E2                     l7865:
 16987  0039E2  90D8               	bcf	status,0,c
 16988  0039E4  3618               	rlcf	___fldiv@b^0,f,c
 16989  0039E6  3619               	rlcf	(___fldiv@b+1)^0,f,c
 16990  0039E8  361A               	rlcf	(___fldiv@b+2)^0,f,c
 16991  0039EA  361B               	rlcf	(___fldiv@b+3)^0,f,c
 16992  0039EC  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 16993  0039EE  EFFB  F01C         	goto	u6321
 16994  0039F2  EFFD  F01C         	goto	u6320
 16995  0039F6                     u6321:
 16996  0039F6  EFFE  F01C         	goto	l2415
 16997  0039FA                     u6320:
 16998  0039FA  8018               	bsf	___fldiv@b^0,0,c
 16999  0039FC                     l2415:
 17000  0039FC  90D8               	bcf	status,0,c
 17001  0039FE  362B               	rlcf	___fldiv@grs^0,f,c
 17002  003A00  362C               	rlcf	(___fldiv@grs+1)^0,f,c
 17003  003A02  362D               	rlcf	(___fldiv@grs+2)^0,f,c
 17004  003A04  362E               	rlcf	(___fldiv@grs+3)^0,f,c
 17005  003A06  0629               	decf	___fldiv@new_exp^0,f,c
 17006  003A08  A0D8               	btfss	status,0,c
 17007  003A0A  062A               	decf	(___fldiv@new_exp+1)^0,f,c
 17008  003A0C                     l7871:
 17009  003A0C  AE1A               	btfss	(___fldiv@b+2)^0,7,c
 17010  003A0E  EF0B  F01D         	goto	u6331
 17011  003A12  EF0D  F01D         	goto	u6330
 17012  003A16                     u6331:
 17013  003A16  EFF1  F01C         	goto	l7865
 17014  003A1A                     u6330:
 17015  003A1A  0E00               	movlw	0
 17016  003A1C  6E30               	movwf	___fldiv@aexp^0,c
 17017  003A1E  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 17018  003A20  EF14  F01D         	goto	u6341
 17019  003A24  EF16  F01D         	goto	u6340
 17020  003A28                     u6341:
 17021  003A28  EF3A  F01D         	goto	l2417
 17022  003A2C                     u6340:
 17023  003A2C  0EFF               	movlw	255
 17024  003A2E  142B               	andwf	___fldiv@grs^0,w,c
 17025  003A30  6E20               	movwf	??___fldiv^0,c
 17026  003A32  0EFF               	movlw	255
 17027  003A34  142C               	andwf	(___fldiv@grs+1)^0,w,c
 17028  003A36  6E21               	movwf	(??___fldiv+1)^0,c
 17029  003A38  0EFF               	movlw	255
 17030  003A3A  142D               	andwf	(___fldiv@grs+2)^0,w,c
 17031  003A3C  6E22               	movwf	(??___fldiv+2)^0,c
 17032  003A3E  0E7F               	movlw	127
 17033  003A40  142E               	andwf	(___fldiv@grs+3)^0,w,c
 17034  003A42  6E23               	movwf	(??___fldiv+3)^0,c
 17035  003A44  5020               	movf	??___fldiv^0,w,c
 17036  003A46  1021               	iorwf	(??___fldiv+1)^0,w,c
 17037  003A48  1022               	iorwf	(??___fldiv+2)^0,w,c
 17038  003A4A  1023               	iorwf	(??___fldiv+3)^0,w,c
 17039  003A4C  B4D8               	btfsc	status,2,c
 17040  003A4E  EF2B  F01D         	goto	u6351
 17041  003A52  EF2D  F01D         	goto	u6350
 17042  003A56                     u6351:
 17043  003A56  EF31  F01D         	goto	l2418
 17044  003A5A                     u6350:
 17045  003A5A                     l7879:
 17046  003A5A  0E01               	movlw	1
 17047  003A5C  6E30               	movwf	___fldiv@aexp^0,c
 17048  003A5E  EF3A  F01D         	goto	l2417
 17049  003A62                     l2418:
 17050  003A62  A018               	btfss	___fldiv@b^0,0,c
 17051  003A64  EF36  F01D         	goto	u6361
 17052  003A68  EF38  F01D         	goto	u6360
 17053  003A6C                     u6361:
 17054  003A6C  EF3A  F01D         	goto	l2417
 17055  003A70                     u6360:
 17056  003A70  EF2D  F01D         	goto	l7879
 17057  003A74                     l2417:
 17058  003A74  5030               	movf	___fldiv@aexp^0,w,c
 17059  003A76  B4D8               	btfsc	status,2,c
 17060  003A78  EF40  F01D         	goto	u6371
 17061  003A7C  EF42  F01D         	goto	u6370
 17062  003A80                     u6371:
 17063  003A80  EF66  F01D         	goto	l7891
 17064  003A84                     u6370:
 17065  003A84  0E01               	movlw	1
 17066  003A86  2618               	addwf	___fldiv@b^0,f,c
 17067  003A88  0E00               	movlw	0
 17068  003A8A  2219               	addwfc	(___fldiv@b+1)^0,f,c
 17069  003A8C  221A               	addwfc	(___fldiv@b+2)^0,f,c
 17070  003A8E  221B               	addwfc	(___fldiv@b+3)^0,f,c
 17071  003A90  A01B               	btfss	(___fldiv@b+3)^0,0,c
 17072  003A92  EF4D  F01D         	goto	u6381
 17073  003A96  EF4F  F01D         	goto	u6380
 17074  003A9A                     u6381:
 17075  003A9A  EF66  F01D         	goto	l7891
 17076  003A9E                     u6380:
 17077  003A9E  C018  F020         	movff	___fldiv@b,??___fldiv
 17078  003AA2  C019  F021         	movff	___fldiv@b+1,??___fldiv+1
 17079  003AA6  C01A  F022         	movff	___fldiv@b+2,??___fldiv+2
 17080  003AAA  C01B  F023         	movff	___fldiv@b+3,??___fldiv+3
 17081  003AAE  3423               	rlcf	(??___fldiv+3)^0,w,c
 17082  003AB0  3223               	rrcf	(??___fldiv+3)^0,f,c
 17083  003AB2  3222               	rrcf	(??___fldiv+2)^0,f,c
 17084  003AB4  3221               	rrcf	(??___fldiv+1)^0,f,c
 17085  003AB6  3220               	rrcf	??___fldiv^0,f,c
 17086  003AB8  C020  F018         	movff	??___fldiv,___fldiv@b
 17087  003ABC  C021  F019         	movff	??___fldiv+1,___fldiv@b+1
 17088  003AC0  C022  F01A         	movff	??___fldiv+2,___fldiv@b+2
 17089  003AC4  C023  F01B         	movff	??___fldiv+3,___fldiv@b+3
 17090  003AC8  4A29               	infsnz	___fldiv@new_exp^0,f,c
 17091  003ACA  2A2A               	incf	(___fldiv@new_exp+1)^0,f,c
 17092  003ACC                     l7891:
 17093  003ACC  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 17094  003ACE  EF71  F01D         	goto	u6391
 17095  003AD2  502A               	movf	(___fldiv@new_exp+1)^0,w,c
 17096  003AD4  E108               	bnz	u6390
 17097  003AD6  2829               	incf	___fldiv@new_exp^0,w,c
 17098  003AD8  A0D8               	btfss	status,0,c
 17099  003ADA  EF71  F01D         	goto	u6391
 17100  003ADE  EF73  F01D         	goto	u6390
 17101  003AE2                     u6391:
 17102  003AE2  EF7E  F01D         	goto	l7895
 17103  003AE6                     u6390:
 17104  003AE6  0E00               	movlw	0
 17105  003AE8  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 17106  003AEA  6829               	setf	___fldiv@new_exp^0,c
 17107  003AEC  0E00               	movlw	0
 17108  003AEE  6E18               	movwf	___fldiv@b^0,c
 17109  003AF0  0E00               	movlw	0
 17110  003AF2  6E19               	movwf	(___fldiv@b+1)^0,c
 17111  003AF4  0E00               	movlw	0
 17112  003AF6  6E1A               	movwf	(___fldiv@b+2)^0,c
 17113  003AF8  0E00               	movlw	0
 17114  003AFA  6E1B               	movwf	(___fldiv@b+3)^0,c
 17115  003AFC                     l7895:
 17116  003AFC  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 17117  003AFE  EF8B  F01D         	goto	u6400
 17118  003B02  502A               	movf	(___fldiv@new_exp+1)^0,w,c
 17119  003B04  E106               	bnz	u6401
 17120  003B06  0429               	decf	___fldiv@new_exp^0,w,c
 17121  003B08  B0D8               	btfsc	status,0,c
 17122  003B0A  EF89  F01D         	goto	u6401
 17123  003B0E  EF8B  F01D         	goto	u6400
 17124  003B12                     u6401:
 17125  003B12  EF99  F01D         	goto	l7899
 17126  003B16                     u6400:
 17127  003B16  0E00               	movlw	0
 17128  003B18  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 17129  003B1A  0E00               	movlw	0
 17130  003B1C  6E29               	movwf	___fldiv@new_exp^0,c
 17131  003B1E  0E00               	movlw	0
 17132  003B20  6E18               	movwf	___fldiv@b^0,c
 17133  003B22  0E00               	movlw	0
 17134  003B24  6E19               	movwf	(___fldiv@b+1)^0,c
 17135  003B26  0E00               	movlw	0
 17136  003B28  6E1A               	movwf	(___fldiv@b+2)^0,c
 17137  003B2A  0E00               	movlw	0
 17138  003B2C  6E1B               	movwf	(___fldiv@b+3)^0,c
 17139  003B2E  0E00               	movlw	0
 17140  003B30  6E28               	movwf	___fldiv@sign^0,c
 17141  003B32                     l7899:
 17142  003B32  C029  F02F         	movff	___fldiv@new_exp,___fldiv@bexp
 17143  003B36  A02F               	btfss	___fldiv@bexp^0,0,c
 17144  003B38  EFA0  F01D         	goto	u6411
 17145  003B3C  EFA2  F01D         	goto	u6410
 17146  003B40                     u6411:
 17147  003B40  EFA5  F01D         	goto	l7905
 17148  003B44                     u6410:
 17149  003B44  8E1A               	bsf	(___fldiv@b+2)^0,7,c
 17150  003B46  EFA6  F01D         	goto	l7907
 17151  003B4A                     l7905:
 17152  003B4A  9E1A               	bcf	(___fldiv@b+2)^0,7,c
 17153  003B4C                     l7907:
 17154  003B4C  90D8               	bcf	status,0,c
 17155  003B4E  302F               	rrcf	___fldiv@bexp^0,w,c
 17156  003B50  6E1B               	movwf	(___fldiv@b+3)^0,c
 17157  003B52  EF5C  F01C         	goto	l7821
 17158  003B56                     l2404:
 17159  003B56  0012               	return		;funcret
 17160  003B58                     __end_of___fldiv:
 17161                           	callstack 0
 17162                           
 17163 ;; *************** function _MPU6050_dmpGetQuaternionI16 *****************
 17164 ;; Defined at:
 17165 ;;		line 449 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 17166 ;; Parameters:    Size  Location     Type
 17167 ;;  data            2    3[COMRAM] PTR short 
 17168 ;;		 -> MPU6050_dmpGetGravityVI@qI(8), MPU6050_dmpGetQuaternionQ@qI(8), 
 17169 ;;  packet          2    5[COMRAM] PTR const unsigned char 
 17170 ;;		 -> main@fifoBuffer(28), NULL(0), 
 17171 ;; Auto vars:     Size  Location     Type
 17172 ;;		None
 17173 ;; Return value:  Size  Location     Type
 17174 ;;                  1    wreg      unsigned char 
 17175 ;; Registers used:
 17176 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17177 ;; Tracked objects:
 17178 ;;		On entry : 0/0
 17179 ;;		On exit  : 0/0
 17180 ;;		Unchanged: 0/0
 17181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17182 ;;      Params:         4       0       0       0       0       0       0       0       0
 17183 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17184 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17185 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17186 ;;Total ram usage:        8 bytes
 17187 ;; Hardware stack levels used:    1
 17188 ;; Hardware stack levels required when called:    2
 17189 ;; This function calls:
 17190 ;;		Nothing
 17191 ;; This function is called by:
 17192 ;;		_MPU6050_dmpGetQuaternionQ
 17193 ;;		_MPU6050_dmpGetGravityVI
 17194 ;; This function uses a non-reentrant model
 17195 ;;
 17196                           
 17197                           	psect	text56
 17198  004EFA                     __ptext56:
 17199                           	callstack 0
 17200  004EFA                     _MPU6050_dmpGetQuaternionI16:
 17201                           	callstack 27
 17202  004EFA                     
 17203                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 451:     if (packet == 0) packet = dmpPacketBuffer;
 17204  004EFA  5006               	movf	MPU6050_dmpGetQuaternionI16@packet^0,w,c
 17205  004EFC  1007               	iorwf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,w,c
 17206  004EFE  A4D8               	btfss	status,2,c
 17207  004F00  EF84  F027         	goto	u8431
 17208  004F04  EF86  F027         	goto	u8430
 17209  004F08                     u8431:
 17210  004F08  EF8A  F027         	goto	l9125
 17211  004F0C                     u8430:
 17212  004F0C  0E00               	movlw	0
 17213  004F0E  6E06               	movwf	MPU6050_dmpGetQuaternionI16@packet^0,c
 17214  004F10  0E00               	movlw	0
 17215  004F12  6E07               	movwf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,c
 17216  004F14                     l9125:
 17217                           
 17218                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 452:     data[0] = ((packet[0] << 8) | packet[1]);
 17219  004F14  C006  FFD9         	movff	MPU6050_dmpGetQuaternionI16@packet,fsr2l
 17220  004F18  C007  FFDA         	movff	MPU6050_dmpGetQuaternionI16@packet+1,fsr2h
 17221  004F1C  50DF               	movf	indf2,w,c
 17222  004F1E  6E08               	movwf	??_MPU6050_dmpGetQuaternionI16^0,c
 17223  004F20  5008               	movf	??_MPU6050_dmpGetQuaternionI16^0,w,c
 17224  004F22  6E0A               	movwf	(??_MPU6050_dmpGetQuaternionI16+2)^0,c
 17225  004F24  6A09               	clrf	(??_MPU6050_dmpGetQuaternionI16+1)^0,c
 17226  004F26  EE20 F001          	lfsr	2,1
 17227  004F2A  5006               	movf	MPU6050_dmpGetQuaternionI16@packet^0,w,c
 17228  004F2C  26D9               	addwf	fsr2l,f,c
 17229  004F2E  5007               	movf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,w,c
 17230  004F30  22DA               	addwfc	fsr2h,f,c
 17231  004F32  50DF               	movf	indf2,w,c
 17232  004F34  6E0B               	movwf	(??_MPU6050_dmpGetQuaternionI16+3)^0,c
 17233  004F36  500B               	movf	(??_MPU6050_dmpGetQuaternionI16+3)^0,w,c
 17234  004F38  1209               	iorwf	(??_MPU6050_dmpGetQuaternionI16+1)^0,f,c
 17235  004F3A  0E00               	movlw	0
 17236  004F3C  120A               	iorwf	(??_MPU6050_dmpGetQuaternionI16+2)^0,f,c
 17237  004F3E  C004  FFD9         	movff	MPU6050_dmpGetQuaternionI16@data,fsr2l
 17238  004F42  C005  FFDA         	movff	MPU6050_dmpGetQuaternionI16@data+1,fsr2h
 17239  004F46  C009  FFDE         	movff	??_MPU6050_dmpGetQuaternionI16+1,postinc2
 17240  004F4A  C00A  FFDD         	movff	??_MPU6050_dmpGetQuaternionI16+2,postdec2
 17241  004F4E                     
 17242                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 453:     data[1] = ((packet[4] << 8) | packet[5]);
 17243  004F4E  EE20 F004          	lfsr	2,4
 17244  004F52  5006               	movf	MPU6050_dmpGetQuaternionI16@packet^0,w,c
 17245  004F54  26D9               	addwf	fsr2l,f,c
 17246  004F56  5007               	movf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,w,c
 17247  004F58  22DA               	addwfc	fsr2h,f,c
 17248  004F5A  50DF               	movf	indf2,w,c
 17249  004F5C  6E08               	movwf	??_MPU6050_dmpGetQuaternionI16^0,c
 17250  004F5E  5008               	movf	??_MPU6050_dmpGetQuaternionI16^0,w,c
 17251  004F60  6E0A               	movwf	(??_MPU6050_dmpGetQuaternionI16+2)^0,c
 17252  004F62  6A09               	clrf	(??_MPU6050_dmpGetQuaternionI16+1)^0,c
 17253  004F64  EE20 F005          	lfsr	2,5
 17254  004F68  5006               	movf	MPU6050_dmpGetQuaternionI16@packet^0,w,c
 17255  004F6A  26D9               	addwf	fsr2l,f,c
 17256  004F6C  5007               	movf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,w,c
 17257  004F6E  22DA               	addwfc	fsr2h,f,c
 17258  004F70  50DF               	movf	indf2,w,c
 17259  004F72  6E0B               	movwf	(??_MPU6050_dmpGetQuaternionI16+3)^0,c
 17260  004F74  500B               	movf	(??_MPU6050_dmpGetQuaternionI16+3)^0,w,c
 17261  004F76  1209               	iorwf	(??_MPU6050_dmpGetQuaternionI16+1)^0,f,c
 17262  004F78  0E00               	movlw	0
 17263  004F7A  120A               	iorwf	(??_MPU6050_dmpGetQuaternionI16+2)^0,f,c
 17264  004F7C  EE20 F002          	lfsr	2,2
 17265  004F80  5004               	movf	MPU6050_dmpGetQuaternionI16@data^0,w,c
 17266  004F82  26D9               	addwf	fsr2l,f,c
 17267  004F84  5005               	movf	(MPU6050_dmpGetQuaternionI16@data+1)^0,w,c
 17268  004F86  22DA               	addwfc	fsr2h,f,c
 17269  004F88  C009  FFDE         	movff	??_MPU6050_dmpGetQuaternionI16+1,postinc2
 17270  004F8C  C00A  FFDD         	movff	??_MPU6050_dmpGetQuaternionI16+2,postdec2
 17271  004F90                     
 17272                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 454:     data[2] = ((packet[8] << 8) | packet[9]);
 17273  004F90  EE20 F008          	lfsr	2,8
 17274  004F94  5006               	movf	MPU6050_dmpGetQuaternionI16@packet^0,w,c
 17275  004F96  26D9               	addwf	fsr2l,f,c
 17276  004F98  5007               	movf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,w,c
 17277  004F9A  22DA               	addwfc	fsr2h,f,c
 17278  004F9C  50DF               	movf	indf2,w,c
 17279  004F9E  6E08               	movwf	??_MPU6050_dmpGetQuaternionI16^0,c
 17280  004FA0  5008               	movf	??_MPU6050_dmpGetQuaternionI16^0,w,c
 17281  004FA2  6E0A               	movwf	(??_MPU6050_dmpGetQuaternionI16+2)^0,c
 17282  004FA4  6A09               	clrf	(??_MPU6050_dmpGetQuaternionI16+1)^0,c
 17283  004FA6  EE20 F009          	lfsr	2,9
 17284  004FAA  5006               	movf	MPU6050_dmpGetQuaternionI16@packet^0,w,c
 17285  004FAC  26D9               	addwf	fsr2l,f,c
 17286  004FAE  5007               	movf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,w,c
 17287  004FB0  22DA               	addwfc	fsr2h,f,c
 17288  004FB2  50DF               	movf	indf2,w,c
 17289  004FB4  6E0B               	movwf	(??_MPU6050_dmpGetQuaternionI16+3)^0,c
 17290  004FB6  500B               	movf	(??_MPU6050_dmpGetQuaternionI16+3)^0,w,c
 17291  004FB8  1209               	iorwf	(??_MPU6050_dmpGetQuaternionI16+1)^0,f,c
 17292  004FBA  0E00               	movlw	0
 17293  004FBC  120A               	iorwf	(??_MPU6050_dmpGetQuaternionI16+2)^0,f,c
 17294  004FBE  EE20 F004          	lfsr	2,4
 17295  004FC2  5004               	movf	MPU6050_dmpGetQuaternionI16@data^0,w,c
 17296  004FC4  26D9               	addwf	fsr2l,f,c
 17297  004FC6  5005               	movf	(MPU6050_dmpGetQuaternionI16@data+1)^0,w,c
 17298  004FC8  22DA               	addwfc	fsr2h,f,c
 17299  004FCA  C009  FFDE         	movff	??_MPU6050_dmpGetQuaternionI16+1,postinc2
 17300  004FCE  C00A  FFDD         	movff	??_MPU6050_dmpGetQuaternionI16+2,postdec2
 17301  004FD2                     
 17302                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 455:     data[3] = ((packet[12] << 8) | packet[13])
      +                          ;
 17303  004FD2  EE20 F00C          	lfsr	2,12
 17304  004FD6  5006               	movf	MPU6050_dmpGetQuaternionI16@packet^0,w,c
 17305  004FD8  26D9               	addwf	fsr2l,f,c
 17306  004FDA  5007               	movf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,w,c
 17307  004FDC  22DA               	addwfc	fsr2h,f,c
 17308  004FDE  50DF               	movf	indf2,w,c
 17309  004FE0  6E08               	movwf	??_MPU6050_dmpGetQuaternionI16^0,c
 17310  004FE2  5008               	movf	??_MPU6050_dmpGetQuaternionI16^0,w,c
 17311  004FE4  6E0A               	movwf	(??_MPU6050_dmpGetQuaternionI16+2)^0,c
 17312  004FE6  6A09               	clrf	(??_MPU6050_dmpGetQuaternionI16+1)^0,c
 17313  004FE8  EE20 F00D          	lfsr	2,13
 17314  004FEC  5006               	movf	MPU6050_dmpGetQuaternionI16@packet^0,w,c
 17315  004FEE  26D9               	addwf	fsr2l,f,c
 17316  004FF0  5007               	movf	(MPU6050_dmpGetQuaternionI16@packet+1)^0,w,c
 17317  004FF2  22DA               	addwfc	fsr2h,f,c
 17318  004FF4  50DF               	movf	indf2,w,c
 17319  004FF6  6E0B               	movwf	(??_MPU6050_dmpGetQuaternionI16+3)^0,c
 17320  004FF8  500B               	movf	(??_MPU6050_dmpGetQuaternionI16+3)^0,w,c
 17321  004FFA  1209               	iorwf	(??_MPU6050_dmpGetQuaternionI16+1)^0,f,c
 17322  004FFC  0E00               	movlw	0
 17323  004FFE  120A               	iorwf	(??_MPU6050_dmpGetQuaternionI16+2)^0,f,c
 17324  005000  EE20 F006          	lfsr	2,6
 17325  005004  5004               	movf	MPU6050_dmpGetQuaternionI16@data^0,w,c
 17326  005006  26D9               	addwf	fsr2l,f,c
 17327  005008  5005               	movf	(MPU6050_dmpGetQuaternionI16@data+1)^0,w,c
 17328  00500A  22DA               	addwfc	fsr2h,f,c
 17329  00500C  C009  FFDE         	movff	??_MPU6050_dmpGetQuaternionI16+1,postinc2
 17330  005010  C00A  FFDD         	movff	??_MPU6050_dmpGetQuaternionI16+2,postdec2
 17331  005014                     
 17332                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 456:     return 0;
 17333  005014  0E00               	movlw	0
 17334  005016  0012               	return		;funcret
 17335  005018                     __end_of_MPU6050_dmpGetQuaternionI16:
 17336                           	callstack 0
 17337                           
 17338 ;; *************** function _MPU6050_dmpGetLinearAccel *****************
 17339 ;; Defined at:
 17340 ;;		line 499 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 17341 ;; Parameters:    Size  Location     Type
 17342 ;;  v               2   18[BANK0 ] PTR struct .
 17343 ;;		 -> aaReal(6), 
 17344 ;;  vRaw            2   20[BANK0 ] PTR struct .
 17345 ;;		 -> aa(6), 
 17346 ;;  gravity         2   22[BANK0 ] PTR struct .
 17347 ;;		 -> gravity(12), 
 17348 ;; Auto vars:     Size  Location     Type
 17349 ;;		None
 17350 ;; Return value:  Size  Location     Type
 17351 ;;                  1    wreg      unsigned char 
 17352 ;; Registers used:
 17353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17354 ;; Tracked objects:
 17355 ;;		On entry : 0/0
 17356 ;;		On exit  : 0/0
 17357 ;;		Unchanged: 0/0
 17358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17359 ;;      Params:         0       6       0       0       0       0       0       0       0
 17360 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17361 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17362 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17363 ;;Total ram usage:        6 bytes
 17364 ;; Hardware stack levels used:    1
 17365 ;; Hardware stack levels required when called:    4
 17366 ;; This function calls:
 17367 ;;		___flmul
 17368 ;;		___flsub
 17369 ;;		___fltol
 17370 ;;		___xxtofl
 17371 ;; This function is called by:
 17372 ;;		_main
 17373 ;; This function uses a non-reentrant model
 17374 ;;
 17375                           
 17376                           	psect	text57
 17377  004678                     __ptext57:
 17378                           	callstack 0
 17379  004678                     _MPU6050_dmpGetLinearAccel:
 17380                           	callstack 26
 17381  004678                     
 17382                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 501:     v -> x = vRaw -> x - (gravity -> x*16384);
 17383  004678  0E00               	movlw	0
 17384  00467A  6E35               	movwf	___flmul@a^0,c
 17385  00467C  0E00               	movlw	0
 17386  00467E  6E36               	movwf	(___flmul@a+1)^0,c
 17387  004680  0E80               	movlw	128
 17388  004682  6E37               	movwf	(___flmul@a+2)^0,c
 17389  004684  0E46               	movlw	70
 17390  004686  6E38               	movwf	(___flmul@a+3)^0,c
 17391  004688  C076  FFD9         	movff	MPU6050_dmpGetLinearAccel@gravity,fsr2l
 17392  00468C  C077  FFDA         	movff	MPU6050_dmpGetLinearAccel@gravity+1,fsr2h
 17393  004690  CFDE F031          	movff	postinc2,___flmul@b
 17394  004694  CFDE F032          	movff	postinc2,___flmul@b+1
 17395  004698  CFDE F033          	movff	postinc2,___flmul@b+2
 17396  00469C  CFDE F034          	movff	postinc2,___flmul@b+3
 17397  0046A0  ECCA  F019         	call	___flmul	;wreg free
 17398  0046A4  C031  F064         	movff	?___flmul,___flsub@a
 17399  0046A8  C032  F065         	movff	?___flmul+1,___flsub@a+1
 17400  0046AC  C033  F066         	movff	?___flmul+2,___flsub@a+2
 17401  0046B0  C034  F067         	movff	?___flmul+3,___flsub@a+3
 17402  0046B4  C074  FFD9         	movff	MPU6050_dmpGetLinearAccel@vRaw,fsr2l
 17403  0046B8  C075  FFDA         	movff	MPU6050_dmpGetLinearAccel@vRaw+1,fsr2h
 17404  0046BC  CFDE F00A          	movff	postinc2,___xxtofl@val
 17405  0046C0  CFDD F00B          	movff	postdec2,___xxtofl@val+1
 17406  0046C4  0E00               	movlw	0
 17407  0046C6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 17408  0046C8  0EFF               	movlw	-1
 17409  0046CA  6E0C               	movwf	(___xxtofl@val+2)^0,c
 17410  0046CC  6E0D               	movwf	(___xxtofl@val+3)^0,c
 17411  0046CE  0E01               	movlw	1
 17412  0046D0  EC18  F025         	call	___xxtofl
 17413  0046D4  C00A  F060         	movff	?___xxtofl,___flsub@b
 17414  0046D8  C00B  F061         	movff	?___xxtofl+1,___flsub@b+1
 17415  0046DC  C00C  F062         	movff	?___xxtofl+2,___flsub@b+2
 17416  0046E0  C00D  F063         	movff	?___xxtofl+3,___flsub@b+3
 17417  0046E4  ECA9  F031         	call	___flsub	;wreg free
 17418  0046E8  C060  F068         	movff	?___flsub,___fltol@f1
 17419  0046EC  C061  F069         	movff	?___flsub+1,___fltol@f1+1
 17420  0046F0  C062  F06A         	movff	?___flsub+2,___fltol@f1+2
 17421  0046F4  C063  F06B         	movff	?___flsub+3,___fltol@f1+3
 17422  0046F8  EC0C  F028         	call	___fltol	;wreg free
 17423  0046FC  C072  FFD9         	movff	MPU6050_dmpGetLinearAccel@v,fsr2l
 17424  004700  C073  FFDA         	movff	MPU6050_dmpGetLinearAccel@v+1,fsr2h
 17425  004704  0100               	movlb	0	; () banked
 17426  004706  C068  FFDE         	movff	?___fltol,postinc2
 17427  00470A  C069  FFDD         	movff	?___fltol+1,postdec2
 17428                           
 17429                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 502:     v -> y = vRaw -> y - (gravity -> y*16384);
 17430  00470E  0E00               	movlw	0
 17431  004710  6E35               	movwf	___flmul@a^0,c
 17432  004712  0E00               	movlw	0
 17433  004714  6E36               	movwf	(___flmul@a+1)^0,c
 17434  004716  0E80               	movlw	128
 17435  004718  6E37               	movwf	(___flmul@a+2)^0,c
 17436  00471A  0E46               	movlw	70
 17437  00471C  6E38               	movwf	(___flmul@a+3)^0,c
 17438  00471E  EE20 F004          	lfsr	2,4
 17439  004722  5176               	movf	MPU6050_dmpGetLinearAccel@gravity& (0+255),w,b
 17440  004724  26D9               	addwf	fsr2l,f,c
 17441  004726  5177               	movf	(MPU6050_dmpGetLinearAccel@gravity+1)& (0+255),w,b
 17442  004728  22DA               	addwfc	fsr2h,f,c
 17443  00472A  CFDE F031          	movff	postinc2,___flmul@b
 17444  00472E  CFDE F032          	movff	postinc2,___flmul@b+1
 17445  004732  CFDE F033          	movff	postinc2,___flmul@b+2
 17446  004736  CFDE F034          	movff	postinc2,___flmul@b+3
 17447  00473A  ECCA  F019         	call	___flmul	;wreg free
 17448  00473E  C031  F064         	movff	?___flmul,___flsub@a
 17449  004742  C032  F065         	movff	?___flmul+1,___flsub@a+1
 17450  004746  C033  F066         	movff	?___flmul+2,___flsub@a+2
 17451  00474A  C034  F067         	movff	?___flmul+3,___flsub@a+3
 17452  00474E  0100               	movlb	0	; () banked
 17453  004750  EE20 F002          	lfsr	2,2
 17454  004754  5174               	movf	MPU6050_dmpGetLinearAccel@vRaw& (0+255),w,b
 17455  004756  26D9               	addwf	fsr2l,f,c
 17456  004758  5175               	movf	(MPU6050_dmpGetLinearAccel@vRaw+1)& (0+255),w,b
 17457  00475A  22DA               	addwfc	fsr2h,f,c
 17458  00475C  CFDE F00A          	movff	postinc2,___xxtofl@val
 17459  004760  CFDD F00B          	movff	postdec2,___xxtofl@val+1
 17460  004764  0E00               	movlw	0
 17461  004766  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 17462  004768  0EFF               	movlw	-1
 17463  00476A  6E0C               	movwf	(___xxtofl@val+2)^0,c
 17464  00476C  6E0D               	movwf	(___xxtofl@val+3)^0,c
 17465  00476E  0E01               	movlw	1
 17466  004770  EC18  F025         	call	___xxtofl
 17467  004774  C00A  F060         	movff	?___xxtofl,___flsub@b
 17468  004778  C00B  F061         	movff	?___xxtofl+1,___flsub@b+1
 17469  00477C  C00C  F062         	movff	?___xxtofl+2,___flsub@b+2
 17470  004780  C00D  F063         	movff	?___xxtofl+3,___flsub@b+3
 17471  004784  ECA9  F031         	call	___flsub	;wreg free
 17472  004788  C060  F068         	movff	?___flsub,___fltol@f1
 17473  00478C  C061  F069         	movff	?___flsub+1,___fltol@f1+1
 17474  004790  C062  F06A         	movff	?___flsub+2,___fltol@f1+2
 17475  004794  C063  F06B         	movff	?___flsub+3,___fltol@f1+3
 17476  004798  EC0C  F028         	call	___fltol	;wreg free
 17477  00479C  0100               	movlb	0	; () banked
 17478  00479E  EE20 F002          	lfsr	2,2
 17479  0047A2  5172               	movf	MPU6050_dmpGetLinearAccel@v& (0+255),w,b
 17480  0047A4  26D9               	addwf	fsr2l,f,c
 17481  0047A6  5173               	movf	(MPU6050_dmpGetLinearAccel@v+1)& (0+255),w,b
 17482  0047A8  22DA               	addwfc	fsr2h,f,c
 17483  0047AA  C068  FFDE         	movff	?___fltol,postinc2
 17484  0047AE  C069  FFDD         	movff	?___fltol+1,postdec2
 17485                           
 17486                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 503:     v -> z = vRaw -> z - (gravity -> z*16384);
 17487  0047B2  0E00               	movlw	0
 17488  0047B4  6E35               	movwf	___flmul@a^0,c
 17489  0047B6  0E00               	movlw	0
 17490  0047B8  6E36               	movwf	(___flmul@a+1)^0,c
 17491  0047BA  0E80               	movlw	128
 17492  0047BC  6E37               	movwf	(___flmul@a+2)^0,c
 17493  0047BE  0E46               	movlw	70
 17494  0047C0  6E38               	movwf	(___flmul@a+3)^0,c
 17495  0047C2  EE20 F008          	lfsr	2,8
 17496  0047C6  5176               	movf	MPU6050_dmpGetLinearAccel@gravity& (0+255),w,b
 17497  0047C8  26D9               	addwf	fsr2l,f,c
 17498  0047CA  5177               	movf	(MPU6050_dmpGetLinearAccel@gravity+1)& (0+255),w,b
 17499  0047CC  22DA               	addwfc	fsr2h,f,c
 17500  0047CE  CFDE F031          	movff	postinc2,___flmul@b
 17501  0047D2  CFDE F032          	movff	postinc2,___flmul@b+1
 17502  0047D6  CFDE F033          	movff	postinc2,___flmul@b+2
 17503  0047DA  CFDE F034          	movff	postinc2,___flmul@b+3
 17504  0047DE  ECCA  F019         	call	___flmul	;wreg free
 17505  0047E2  C031  F064         	movff	?___flmul,___flsub@a
 17506  0047E6  C032  F065         	movff	?___flmul+1,___flsub@a+1
 17507  0047EA  C033  F066         	movff	?___flmul+2,___flsub@a+2
 17508  0047EE  C034  F067         	movff	?___flmul+3,___flsub@a+3
 17509  0047F2  0100               	movlb	0	; () banked
 17510  0047F4  EE20 F004          	lfsr	2,4
 17511  0047F8  5174               	movf	MPU6050_dmpGetLinearAccel@vRaw& (0+255),w,b
 17512  0047FA  26D9               	addwf	fsr2l,f,c
 17513  0047FC  5175               	movf	(MPU6050_dmpGetLinearAccel@vRaw+1)& (0+255),w,b
 17514  0047FE  22DA               	addwfc	fsr2h,f,c
 17515  004800  CFDE F00A          	movff	postinc2,___xxtofl@val
 17516  004804  CFDD F00B          	movff	postdec2,___xxtofl@val+1
 17517  004808  0E00               	movlw	0
 17518  00480A  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
 17519  00480C  0EFF               	movlw	-1
 17520  00480E  6E0C               	movwf	(___xxtofl@val+2)^0,c
 17521  004810  6E0D               	movwf	(___xxtofl@val+3)^0,c
 17522  004812  0E01               	movlw	1
 17523  004814  EC18  F025         	call	___xxtofl
 17524  004818  C00A  F060         	movff	?___xxtofl,___flsub@b
 17525  00481C  C00B  F061         	movff	?___xxtofl+1,___flsub@b+1
 17526  004820  C00C  F062         	movff	?___xxtofl+2,___flsub@b+2
 17527  004824  C00D  F063         	movff	?___xxtofl+3,___flsub@b+3
 17528  004828  ECA9  F031         	call	___flsub	;wreg free
 17529  00482C  C060  F068         	movff	?___flsub,___fltol@f1
 17530  004830  C061  F069         	movff	?___flsub+1,___fltol@f1+1
 17531  004834  C062  F06A         	movff	?___flsub+2,___fltol@f1+2
 17532  004838  C063  F06B         	movff	?___flsub+3,___fltol@f1+3
 17533  00483C  EC0C  F028         	call	___fltol	;wreg free
 17534  004840  0100               	movlb	0	; () banked
 17535  004842  EE20 F004          	lfsr	2,4
 17536  004846  5172               	movf	MPU6050_dmpGetLinearAccel@v& (0+255),w,b
 17537  004848  26D9               	addwf	fsr2l,f,c
 17538  00484A  5173               	movf	(MPU6050_dmpGetLinearAccel@v+1)& (0+255),w,b
 17539  00484C  22DA               	addwfc	fsr2h,f,c
 17540  00484E  C068  FFDE         	movff	?___fltol,postinc2
 17541  004852  C069  FFDD         	movff	?___fltol+1,postdec2
 17542  004856                     
 17543                           ; BSR set to: 0
 17544  004856  0012               	return		;funcret
 17545  004858                     __end_of_MPU6050_dmpGetLinearAccel:
 17546                           	callstack 0
 17547                           
 17548 ;; *************** function ___xxtofl *****************
 17549 ;; Defined at:
 17550 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
 17551 ;; Parameters:    Size  Location     Type
 17552 ;;  sign            1    wreg     unsigned char 
 17553 ;;  val             4    9[COMRAM] long 
 17554 ;; Auto vars:     Size  Location     Type
 17555 ;;  sign            1   17[COMRAM] unsigned char 
 17556 ;;  arg             4   19[COMRAM] unsigned long 
 17557 ;;  exp             1   18[COMRAM] unsigned char 
 17558 ;; Return value:  Size  Location     Type
 17559 ;;                  4    9[COMRAM] unsigned char 
 17560 ;; Registers used:
 17561 ;;		wreg, status,2, status,0
 17562 ;; Tracked objects:
 17563 ;;		On entry : 0/0
 17564 ;;		On exit  : 0/0
 17565 ;;		Unchanged: 0/0
 17566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17567 ;;      Params:         4       0       0       0       0       0       0       0       0
 17568 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17569 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17570 ;;      Totals:        14       0       0       0       0       0       0       0       0
 17571 ;;Total ram usage:       14 bytes
 17572 ;; Hardware stack levels used:    1
 17573 ;; Hardware stack levels required when called:    2
 17574 ;; This function calls:
 17575 ;;		Nothing
 17576 ;; This function is called by:
 17577 ;;		_MPU6050_dmpGetQuaternionQ
 17578 ;;		_MPU6050_dmpGetLinearAccel
 17579 ;;		_controlReceive
 17580 ;;		_main
 17581 ;;		_MPU6050_CalibrateGyro
 17582 ;;		_MPU6050_CalibrateAccel
 17583 ;;		_MPU6050_PID
 17584 ;;		_getMagnitudeVI
 17585 ;;		_normalizeVI
 17586 ;;		_rotateVI
 17587 ;; This function uses a non-reentrant model
 17588 ;;
 17589                           
 17590                           	psect	text58
 17591  004A30                     __ptext58:
 17592                           	callstack 0
 17593  004A30                     ___xxtofl:
 17594                           	callstack 27
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;incstack = 0
 17598                           ;___xxtofl@sign stored from wreg
 17599  004A30  6E12               	movwf	___xxtofl@sign^0,c
 17600  004A32  5012               	movf	___xxtofl@sign^0,w,c
 17601  004A34  B4D8               	btfsc	status,2,c
 17602  004A36  EF1F  F025         	goto	u8641
 17603  004A3A  EF21  F025         	goto	u8640
 17604  004A3E                     u8641:
 17605  004A3E  EF43  F025         	goto	l2477
 17606  004A42                     u8640:
 17607  004A42  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
 17608  004A44  EF28  F025         	goto	u8650
 17609  004A48  EF26  F025         	goto	u8651
 17610  004A4C                     u8651:
 17611  004A4C  EF43  F025         	goto	l2477
 17612  004A50                     u8650:
 17613  004A50  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
 17614  004A54  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
 17615  004A58  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
 17616  004A5C  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
 17617  004A60  1E0E               	comf	??___xxtofl^0,f,c
 17618  004A62  1E0F               	comf	(??___xxtofl+1)^0,f,c
 17619  004A64  1E10               	comf	(??___xxtofl+2)^0,f,c
 17620  004A66  1E11               	comf	(??___xxtofl+3)^0,f,c
 17621  004A68  2A0E               	incf	??___xxtofl^0,f,c
 17622  004A6A  0E00               	movlw	0
 17623  004A6C  220F               	addwfc	(??___xxtofl+1)^0,f,c
 17624  004A6E  2210               	addwfc	(??___xxtofl+2)^0,f,c
 17625  004A70  2211               	addwfc	(??___xxtofl+3)^0,f,c
 17626  004A72  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
 17627  004A76  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
 17628  004A7A  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
 17629  004A7E  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
 17630  004A82  EF4B  F025         	goto	l9377
 17631  004A86                     l2477:
 17632  004A86  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
 17633  004A8A  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17634  004A8E  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17635  004A92  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17636  004A96                     l9377:
 17637  004A96  500A               	movf	___xxtofl@val^0,w,c
 17638  004A98  100B               	iorwf	(___xxtofl@val+1)^0,w,c
 17639  004A9A  100C               	iorwf	(___xxtofl@val+2)^0,w,c
 17640  004A9C  100D               	iorwf	(___xxtofl@val+3)^0,w,c
 17641  004A9E  A4D8               	btfss	status,2,c
 17642  004AA0  EF54  F025         	goto	u8661
 17643  004AA4  EF56  F025         	goto	u8660
 17644  004AA8                     u8661:
 17645  004AA8  EF60  F025         	goto	l9383
 17646  004AAC                     u8660:
 17647  004AAC  0E00               	movlw	0
 17648  004AAE  6E0A               	movwf	?___xxtofl^0,c
 17649  004AB0  0E00               	movlw	0
 17650  004AB2  6E0B               	movwf	(?___xxtofl+1)^0,c
 17651  004AB4  0E00               	movlw	0
 17652  004AB6  6E0C               	movwf	(?___xxtofl+2)^0,c
 17653  004AB8  0E00               	movlw	0
 17654  004ABA  6E0D               	movwf	(?___xxtofl+3)^0,c
 17655  004ABC  EFF1  F025         	goto	l2480
 17656  004AC0                     l9383:
 17657  004AC0  0E96               	movlw	150
 17658  004AC2  6E13               	movwf	___xxtofl@exp^0,c
 17659  004AC4  EF6A  F025         	goto	l9387
 17660  004AC8                     l9385:
 17661  004AC8  2A13               	incf	___xxtofl@exp^0,f,c
 17662  004ACA  90D8               	bcf	status,0,c
 17663  004ACC  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
 17664  004ACE  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
 17665  004AD0  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
 17666  004AD2  3214               	rrcf	___xxtofl@arg^0,f,c
 17667  004AD4                     l9387:
 17668  004AD4  0E00               	movlw	0
 17669  004AD6  1414               	andwf	___xxtofl@arg^0,w,c
 17670  004AD8  6E0E               	movwf	??___xxtofl^0,c
 17671  004ADA  0E00               	movlw	0
 17672  004ADC  1415               	andwf	(___xxtofl@arg+1)^0,w,c
 17673  004ADE  6E0F               	movwf	(??___xxtofl+1)^0,c
 17674  004AE0  0E00               	movlw	0
 17675  004AE2  1416               	andwf	(___xxtofl@arg+2)^0,w,c
 17676  004AE4  6E10               	movwf	(??___xxtofl+2)^0,c
 17677  004AE6  0EFE               	movlw	254
 17678  004AE8  1417               	andwf	(___xxtofl@arg+3)^0,w,c
 17679  004AEA  6E11               	movwf	(??___xxtofl+3)^0,c
 17680  004AEC  500E               	movf	??___xxtofl^0,w,c
 17681  004AEE  100F               	iorwf	(??___xxtofl+1)^0,w,c
 17682  004AF0  1010               	iorwf	(??___xxtofl+2)^0,w,c
 17683  004AF2  1011               	iorwf	(??___xxtofl+3)^0,w,c
 17684  004AF4  A4D8               	btfss	status,2,c
 17685  004AF6  EF7F  F025         	goto	u8671
 17686  004AFA  EF81  F025         	goto	u8670
 17687  004AFE                     u8671:
 17688  004AFE  EF64  F025         	goto	l9385
 17689  004B02                     u8670:
 17690  004B02  EF8F  F025         	goto	l2484
 17691  004B06                     l9389:
 17692  004B06  2A13               	incf	___xxtofl@exp^0,f,c
 17693  004B08  0E01               	movlw	1
 17694  004B0A  2614               	addwf	___xxtofl@arg^0,f,c
 17695  004B0C  0E00               	movlw	0
 17696  004B0E  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
 17697  004B10  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
 17698  004B12  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
 17699  004B14  90D8               	bcf	status,0,c
 17700  004B16  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
 17701  004B18  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
 17702  004B1A  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
 17703  004B1C  3214               	rrcf	___xxtofl@arg^0,f,c
 17704  004B1E                     l2484:
 17705  004B1E  0E00               	movlw	0
 17706  004B20  1414               	andwf	___xxtofl@arg^0,w,c
 17707  004B22  6E0E               	movwf	??___xxtofl^0,c
 17708  004B24  0E00               	movlw	0
 17709  004B26  1415               	andwf	(___xxtofl@arg+1)^0,w,c
 17710  004B28  6E0F               	movwf	(??___xxtofl+1)^0,c
 17711  004B2A  0E00               	movlw	0
 17712  004B2C  1416               	andwf	(___xxtofl@arg+2)^0,w,c
 17713  004B2E  6E10               	movwf	(??___xxtofl+2)^0,c
 17714  004B30  0EFF               	movlw	255
 17715  004B32  1417               	andwf	(___xxtofl@arg+3)^0,w,c
 17716  004B34  6E11               	movwf	(??___xxtofl+3)^0,c
 17717  004B36  500E               	movf	??___xxtofl^0,w,c
 17718  004B38  100F               	iorwf	(??___xxtofl+1)^0,w,c
 17719  004B3A  1010               	iorwf	(??___xxtofl+2)^0,w,c
 17720  004B3C  1011               	iorwf	(??___xxtofl+3)^0,w,c
 17721  004B3E  A4D8               	btfss	status,2,c
 17722  004B40  EFA4  F025         	goto	u8681
 17723  004B44  EFA6  F025         	goto	u8680
 17724  004B48                     u8681:
 17725  004B48  EF83  F025         	goto	l9389
 17726  004B4C                     u8680:
 17727  004B4C  EFAE  F025         	goto	l9397
 17728  004B50                     l9395:
 17729  004B50  0613               	decf	___xxtofl@exp^0,f,c
 17730  004B52  90D8               	bcf	status,0,c
 17731  004B54  3614               	rlcf	___xxtofl@arg^0,f,c
 17732  004B56  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
 17733  004B58  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
 17734  004B5A  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
 17735  004B5C                     l9397:
 17736  004B5C  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
 17737  004B5E  EFB3  F025         	goto	u8691
 17738  004B62  EFB5  F025         	goto	u8690
 17739  004B66                     u8691:
 17740  004B66  EFBD  F025         	goto	l2491
 17741  004B6A                     u8690:
 17742  004B6A  0E02               	movlw	2
 17743  004B6C  6013               	cpfslt	___xxtofl@exp^0,c
 17744  004B6E  EFBB  F025         	goto	u8701
 17745  004B72  EFBD  F025         	goto	u8700
 17746  004B76                     u8701:
 17747  004B76  EFA8  F025         	goto	l9395
 17748  004B7A                     u8700:
 17749  004B7A                     l2491:
 17750  004B7A  B013               	btfsc	___xxtofl@exp^0,0,c
 17751  004B7C  EFC2  F025         	goto	u8711
 17752  004B80  EFC4  F025         	goto	u8710
 17753  004B84                     u8711:
 17754  004B84  EFC5  F025         	goto	l9403
 17755  004B88                     u8710:
 17756  004B88  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
 17757  004B8A                     l9403:
 17758  004B8A  90D8               	bcf	status,0,c
 17759  004B8C  3213               	rrcf	___xxtofl@exp^0,f,c
 17760  004B8E  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
 17761  004B92  6A0F               	clrf	(??___xxtofl+1)^0,c
 17762  004B94  6A10               	clrf	(??___xxtofl+2)^0,c
 17763  004B96  6A11               	clrf	(??___xxtofl+3)^0,c
 17764  004B98  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
 17765  004B9C  6A10               	clrf	(??___xxtofl+2)^0,c
 17766  004B9E  6A0F               	clrf	(??___xxtofl+1)^0,c
 17767  004BA0  6A0E               	clrf	??___xxtofl^0,c
 17768  004BA2  500E               	movf	??___xxtofl^0,w,c
 17769  004BA4  1214               	iorwf	___xxtofl@arg^0,f,c
 17770  004BA6  500F               	movf	(??___xxtofl+1)^0,w,c
 17771  004BA8  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
 17772  004BAA  5010               	movf	(??___xxtofl+2)^0,w,c
 17773  004BAC  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
 17774  004BAE  5011               	movf	(??___xxtofl+3)^0,w,c
 17775  004BB0  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
 17776  004BB2  5012               	movf	___xxtofl@sign^0,w,c
 17777  004BB4  B4D8               	btfsc	status,2,c
 17778  004BB6  EFDF  F025         	goto	u8721
 17779  004BBA  EFE1  F025         	goto	u8720
 17780  004BBE                     u8721:
 17781  004BBE  EFE9  F025         	goto	l9413
 17782  004BC2                     u8720:
 17783  004BC2  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
 17784  004BC4  EFE8  F025         	goto	u8730
 17785  004BC8  EFE6  F025         	goto	u8731
 17786  004BCC                     u8731:
 17787  004BCC  EFE9  F025         	goto	l9413
 17788  004BD0                     u8730:
 17789  004BD0  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
 17790  004BD2                     l9413:
 17791  004BD2  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
 17792  004BD6  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
 17793  004BDA  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
 17794  004BDE  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
 17795  004BE2                     l2480:
 17796  004BE2  0012               	return		;funcret
 17797  004BE4                     __end_of___xxtofl:
 17798                           	callstack 0
 17799                           
 17800 ;; *************** function ___fltol *****************
 17801 ;; Defined at:
 17802 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;  f1              4    8[BANK0 ] unsigned char 
 17805 ;; Auto vars:     Size  Location     Type
 17806 ;;  exp1            1   17[BANK0 ] unsigned char 
 17807 ;;  sign1           1   16[BANK0 ] unsigned char 
 17808 ;; Return value:  Size  Location     Type
 17809 ;;                  4    8[BANK0 ] long 
 17810 ;; Registers used:
 17811 ;;		wreg, status,2, status,0
 17812 ;; Tracked objects:
 17813 ;;		On entry : 0/0
 17814 ;;		On exit  : 0/0
 17815 ;;		Unchanged: 0/0
 17816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17817 ;;      Params:         0       4       0       0       0       0       0       0       0
 17818 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17819 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17820 ;;      Totals:         0      10       0       0       0       0       0       0       0
 17821 ;;Total ram usage:       10 bytes
 17822 ;; Hardware stack levels used:    1
 17823 ;; Hardware stack levels required when called:    2
 17824 ;; This function calls:
 17825 ;;		Nothing
 17826 ;; This function is called by:
 17827 ;;		_MPU6050_dmpGetLinearAccel
 17828 ;;		_main
 17829 ;;		_efgtoa
 17830 ;;		_MPU6050_PID
 17831 ;;		_normalizeVI
 17832 ;;		_rotateVI
 17833 ;; This function uses a non-reentrant model
 17834 ;;
 17835                           
 17836                           	psect	text59
 17837  005018                     __ptext59:
 17838                           	callstack 0
 17839  005018                     ___fltol:
 17840                           	callstack 24
 17841  005018  0100               	movlb	0	; () banked
 17842  00501A  356A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 17843  00501C  356B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 17844  00501E  6F71               	movwf	___fltol@exp1& (0+255),b
 17845  005020  5171               	movf	___fltol@exp1& (0+255),w,b
 17846  005022  A4D8               	btfss	status,2,c
 17847  005024  EF16  F028         	goto	u10771
 17848  005028  EF18  F028         	goto	u10770
 17849  00502C                     u10771:
 17850  00502C  EF22  F028         	goto	l11957
 17851  005030                     u10770:
 17852  005030                     l11953:
 17853                           
 17854                           ; BSR set to: 0
 17855  005030  0E00               	movlw	0
 17856  005032  6F68               	movwf	?___fltol& (0+255),b
 17857  005034  0E00               	movlw	0
 17858  005036  6F69               	movwf	(?___fltol+1)& (0+255),b
 17859  005038  0E00               	movlw	0
 17860  00503A  6F6A               	movwf	(?___fltol+2)& (0+255),b
 17861  00503C  0E00               	movlw	0
 17862  00503E  6F6B               	movwf	(?___fltol+3)& (0+255),b
 17863  005040  EF8F  F028         	goto	l2119
 17864  005044                     l11957:
 17865                           
 17866                           ; BSR set to: 0
 17867  005044  C068  F06C         	movff	___fltol@f1,??___fltol
 17868  005048  C069  F06D         	movff	___fltol@f1+1,??___fltol+1
 17869  00504C  C06A  F06E         	movff	___fltol@f1+2,??___fltol+2
 17870  005050  C06B  F06F         	movff	___fltol@f1+3,??___fltol+3
 17871  005054  0E20               	movlw	32
 17872  005056  EF32  F028         	goto	u10780
 17873  00505A                     u10785:
 17874  00505A  90D8               	bcf	status,0,c
 17875  00505C  336F               	rrcf	(??___fltol+3)& (0+255),f,b
 17876  00505E  336E               	rrcf	(??___fltol+2)& (0+255),f,b
 17877  005060  336D               	rrcf	(??___fltol+1)& (0+255),f,b
 17878  005062  336C               	rrcf	??___fltol& (0+255),f,b
 17879  005064                     u10780:
 17880  005064  2EE8               	decfsz	wreg,f,c
 17881  005066  EF2D  F028         	goto	u10785
 17882  00506A  516C               	movf	??___fltol& (0+255),w,b
 17883  00506C  6F70               	movwf	___fltol@sign1& (0+255),b
 17884  00506E                     
 17885                           ; BSR set to: 0
 17886  00506E  8F6A               	bsf	(___fltol@f1+2)& (0+255),7,b
 17887  005070                     
 17888                           ; BSR set to: 0
 17889  005070  0EFF               	movlw	255
 17890  005072  1768               	andwf	___fltol@f1& (0+255),f,b
 17891  005074  0EFF               	movlw	255
 17892  005076  1769               	andwf	(___fltol@f1+1)& (0+255),f,b
 17893  005078  0EFF               	movlw	255
 17894  00507A  176A               	andwf	(___fltol@f1+2)& (0+255),f,b
 17895  00507C  0E00               	movlw	0
 17896  00507E  176B               	andwf	(___fltol@f1+3)& (0+255),f,b
 17897  005080                     
 17898                           ; BSR set to: 0
 17899  005080  0E96               	movlw	150
 17900  005082  5F71               	subwf	___fltol@exp1& (0+255),f,b
 17901  005084                     
 17902                           ; BSR set to: 0
 17903  005084  BF71               	btfsc	___fltol@exp1& (0+255),7,b
 17904  005086  EF49  F028         	goto	u10790
 17905  00508A  EF47  F028         	goto	u10791
 17906  00508E                     u10791:
 17907  00508E  EF5F  F028         	goto	l11977
 17908  005092                     u10790:
 17909  005092                     
 17910                           ; BSR set to: 0
 17911  005092  5171               	movf	___fltol@exp1& (0+255),w,b
 17912  005094  0A80               	xorlw	128
 17913  005096  0F97               	addlw	151
 17914  005098  B0D8               	btfsc	status,0,c
 17915  00509A  EF51  F028         	goto	u10801
 17916  00509E  EF53  F028         	goto	u10800
 17917  0050A2                     u10801:
 17918  0050A2  EF55  F028         	goto	l11973
 17919  0050A6                     u10800:
 17920  0050A6  EF18  F028         	goto	l11953
 17921  0050AA                     l11973:
 17922                           
 17923                           ; BSR set to: 0
 17924  0050AA  90D8               	bcf	status,0,c
 17925  0050AC  336B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 17926  0050AE  336A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 17927  0050B0  3369               	rrcf	(___fltol@f1+1)& (0+255),f,b
 17928  0050B2  3368               	rrcf	___fltol@f1& (0+255),f,b
 17929  0050B4                     
 17930                           ; BSR set to: 0
 17931  0050B4  3F71               	incfsz	___fltol@exp1& (0+255),f,b
 17932  0050B6  EF55  F028         	goto	l11973
 17933  0050BA  EF77  F028         	goto	l11987
 17934  0050BE                     l11977:
 17935                           
 17936                           ; BSR set to: 0
 17937  0050BE  0E1F               	movlw	31
 17938  0050C0  6571               	cpfsgt	___fltol@exp1& (0+255),b
 17939  0050C2  EF65  F028         	goto	u10811
 17940  0050C6  EF67  F028         	goto	u10810
 17941  0050CA                     u10811:
 17942  0050CA  EF6F  F028         	goto	l11985
 17943  0050CE                     u10810:
 17944  0050CE  EF18  F028         	goto	l11953
 17945  0050D2                     l11983:
 17946                           
 17947                           ; BSR set to: 0
 17948  0050D2  90D8               	bcf	status,0,c
 17949  0050D4  3768               	rlcf	___fltol@f1& (0+255),f,b
 17950  0050D6  3769               	rlcf	(___fltol@f1+1)& (0+255),f,b
 17951  0050D8  376A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 17952  0050DA  376B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 17953  0050DC  0771               	decf	___fltol@exp1& (0+255),f,b
 17954  0050DE                     l11985:
 17955                           
 17956                           ; BSR set to: 0
 17957  0050DE  5171               	movf	___fltol@exp1& (0+255),w,b
 17958  0050E0  A4D8               	btfss	status,2,c
 17959  0050E2  EF75  F028         	goto	u10821
 17960  0050E6  EF77  F028         	goto	u10820
 17961  0050EA                     u10821:
 17962  0050EA  EF69  F028         	goto	l11983
 17963  0050EE                     u10820:
 17964  0050EE                     l11987:
 17965                           
 17966                           ; BSR set to: 0
 17967  0050EE  5170               	movf	___fltol@sign1& (0+255),w,b
 17968  0050F0  B4D8               	btfsc	status,2,c
 17969  0050F2  EF7D  F028         	goto	u10831
 17970  0050F6  EF7F  F028         	goto	u10830
 17971  0050FA                     u10831:
 17972  0050FA  EF87  F028         	goto	l11991
 17973  0050FE                     u10830:
 17974  0050FE                     
 17975                           ; BSR set to: 0
 17976  0050FE  1F6B               	comf	(___fltol@f1+3)& (0+255),f,b
 17977  005100  1F6A               	comf	(___fltol@f1+2)& (0+255),f,b
 17978  005102  1F69               	comf	(___fltol@f1+1)& (0+255),f,b
 17979  005104  6D68               	negf	___fltol@f1& (0+255),b
 17980  005106  0E00               	movlw	0
 17981  005108  2369               	addwfc	(___fltol@f1+1)& (0+255),f,b
 17982  00510A  236A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 17983  00510C  236B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 17984  00510E                     l11991:
 17985                           
 17986                           ; BSR set to: 0
 17987  00510E  C068  F068         	movff	___fltol@f1,?___fltol
 17988  005112  C069  F069         	movff	___fltol@f1+1,?___fltol+1
 17989  005116  C06A  F06A         	movff	___fltol@f1+2,?___fltol+2
 17990  00511A  C06B  F06B         	movff	___fltol@f1+3,?___fltol+3
 17991  00511E                     l2119:
 17992                           
 17993                           ; BSR set to: 0
 17994  00511E  0012               	return		;funcret
 17995  005120                     __end_of___fltol:
 17996                           	callstack 0
 17997                           
 17998 ;; *************** function _MPU6050_dmpGetGravityVF *****************
 17999 ;; Defined at:
 18000 ;;		line 532 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 18001 ;; Parameters:    Size  Location     Type
 18002 ;;  v               2    8[BANK0 ] PTR struct .
 18003 ;;		 -> gravity(12), 
 18004 ;;  q               2   10[BANK0 ] PTR struct .
 18005 ;;		 -> q(16), 
 18006 ;; Auto vars:     Size  Location     Type
 18007 ;;		None
 18008 ;; Return value:  Size  Location     Type
 18009 ;;                  1    wreg      unsigned char 
 18010 ;; Registers used:
 18011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18012 ;; Tracked objects:
 18013 ;;		On entry : 0/0
 18014 ;;		On exit  : 0/0
 18015 ;;		Unchanged: 0/0
 18016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18017 ;;      Params:         0       4       0       0       0       0       0       0       0
 18018 ;;      Locals:         0      12       0       0       0       0       0       0       0
 18019 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18020 ;;      Totals:         0      16       0       0       0       0       0       0       0
 18021 ;;Total ram usage:       16 bytes
 18022 ;; Hardware stack levels used:    1
 18023 ;; Hardware stack levels required when called:    4
 18024 ;; This function calls:
 18025 ;;		___fladd
 18026 ;;		___flmul
 18027 ;;		___flsub
 18028 ;; This function is called by:
 18029 ;;		_main
 18030 ;; This function uses a non-reentrant model
 18031 ;;
 18032                           
 18033                           	psect	text60
 18034  003B58                     __ptext60:
 18035                           	callstack 0
 18036  003B58                     _MPU6050_dmpGetGravityVF:
 18037                           	callstack 26
 18038  003B58                     
 18039                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 533:     v -> x = 2 * (q -> x*q -> z - q -> w*q -> 
      +                          y);
 18040  003B58  0100               	movlb	0	; () banked
 18041  003B5A  EE20 F008          	lfsr	2,8
 18042  003B5E  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18043  003B60  26D9               	addwf	fsr2l,f,c
 18044  003B62  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18045  003B64  22DA               	addwfc	fsr2h,f,c
 18046  003B66  CFDE F035          	movff	postinc2,___flmul@a
 18047  003B6A  CFDE F036          	movff	postinc2,___flmul@a+1
 18048  003B6E  CFDE F037          	movff	postinc2,___flmul@a+2
 18049  003B72  CFDE F038          	movff	postinc2,___flmul@a+3
 18050  003B76  C06A  FFD9         	movff	MPU6050_dmpGetGravityVF@q,fsr2l
 18051  003B7A  C06B  FFDA         	movff	MPU6050_dmpGetGravityVF@q+1,fsr2h
 18052  003B7E  CFDE F031          	movff	postinc2,___flmul@b
 18053  003B82  CFDE F032          	movff	postinc2,___flmul@b+1
 18054  003B86  CFDE F033          	movff	postinc2,___flmul@b+2
 18055  003B8A  CFDE F034          	movff	postinc2,___flmul@b+3
 18056  003B8E  ECCA  F019         	call	___flmul	;wreg free
 18057  003B92  C031  F064         	movff	?___flmul,___flsub@a
 18058  003B96  C032  F065         	movff	?___flmul+1,___flsub@a+1
 18059  003B9A  C033  F066         	movff	?___flmul+2,___flsub@a+2
 18060  003B9E  C034  F067         	movff	?___flmul+3,___flsub@a+3
 18061  003BA2  0100               	movlb	0	; () banked
 18062  003BA4  EE20 F00C          	lfsr	2,12
 18063  003BA8  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18064  003BAA  26D9               	addwf	fsr2l,f,c
 18065  003BAC  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18066  003BAE  22DA               	addwfc	fsr2h,f,c
 18067  003BB0  CFDE F035          	movff	postinc2,___flmul@a
 18068  003BB4  CFDE F036          	movff	postinc2,___flmul@a+1
 18069  003BB8  CFDE F037          	movff	postinc2,___flmul@a+2
 18070  003BBC  CFDE F038          	movff	postinc2,___flmul@a+3
 18071  003BC0  EE20 F004          	lfsr	2,4
 18072  003BC4  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18073  003BC6  26D9               	addwf	fsr2l,f,c
 18074  003BC8  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18075  003BCA  22DA               	addwfc	fsr2h,f,c
 18076  003BCC  CFDE F031          	movff	postinc2,___flmul@b
 18077  003BD0  CFDE F032          	movff	postinc2,___flmul@b+1
 18078  003BD4  CFDE F033          	movff	postinc2,___flmul@b+2
 18079  003BD8  CFDE F034          	movff	postinc2,___flmul@b+3
 18080  003BDC  ECCA  F019         	call	___flmul	;wreg free
 18081  003BE0  C031  F060         	movff	?___flmul,___flsub@b
 18082  003BE4  C032  F061         	movff	?___flmul+1,___flsub@b+1
 18083  003BE8  C033  F062         	movff	?___flmul+2,___flsub@b+2
 18084  003BEC  C034  F063         	movff	?___flmul+3,___flsub@b+3
 18085  003BF0  ECA9  F031         	call	___flsub	;wreg free
 18086  003BF4  C060  F074         	movff	?___flsub,_MPU6050_dmpGetGravityVF$4534
 18087  003BF8  C061  F075         	movff	?___flsub+1,_MPU6050_dmpGetGravityVF$4534+1
 18088  003BFC  C062  F076         	movff	?___flsub+2,_MPU6050_dmpGetGravityVF$4534+2
 18089  003C00  C063  F077         	movff	?___flsub+3,_MPU6050_dmpGetGravityVF$4534+3
 18090                           
 18091                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 533:     v -> x = 2 * (q -> x*q -> z - q -> w*q -> 
      +                          y);
 18092  003C04  C074  F031         	movff	_MPU6050_dmpGetGravityVF$4534,___flmul@b
 18093  003C08  C075  F032         	movff	_MPU6050_dmpGetGravityVF$4534+1,___flmul@b+1
 18094  003C0C  C076  F033         	movff	_MPU6050_dmpGetGravityVF$4534+2,___flmul@b+2
 18095  003C10  C077  F034         	movff	_MPU6050_dmpGetGravityVF$4534+3,___flmul@b+3
 18096  003C14  0E00               	movlw	0
 18097  003C16  6E35               	movwf	___flmul@a^0,c
 18098  003C18  0E00               	movlw	0
 18099  003C1A  6E36               	movwf	(___flmul@a+1)^0,c
 18100  003C1C  0E00               	movlw	0
 18101  003C1E  6E37               	movwf	(___flmul@a+2)^0,c
 18102  003C20  0E40               	movlw	64
 18103  003C22  6E38               	movwf	(___flmul@a+3)^0,c
 18104  003C24  ECCA  F019         	call	___flmul	;wreg free
 18105  003C28  C068  FFD9         	movff	MPU6050_dmpGetGravityVF@v,fsr2l
 18106  003C2C  C069  FFDA         	movff	MPU6050_dmpGetGravityVF@v+1,fsr2h
 18107  003C30  C031  FFDE         	movff	?___flmul,postinc2
 18108  003C34  C032  FFDE         	movff	?___flmul+1,postinc2
 18109  003C38  C033  FFDE         	movff	?___flmul+2,postinc2
 18110  003C3C  C034  FFDE         	movff	?___flmul+3,postinc2
 18111                           
 18112                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 534:     v -> y = 2 * (q -> w*q -> x + q -> y*q -> 
      +                          z);
 18113  003C40  0100               	movlb	0	; () banked
 18114  003C42  EE20 F00C          	lfsr	2,12
 18115  003C46  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18116  003C48  26D9               	addwf	fsr2l,f,c
 18117  003C4A  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18118  003C4C  22DA               	addwfc	fsr2h,f,c
 18119  003C4E  CFDE F035          	movff	postinc2,___flmul@a
 18120  003C52  CFDE F036          	movff	postinc2,___flmul@a+1
 18121  003C56  CFDE F037          	movff	postinc2,___flmul@a+2
 18122  003C5A  CFDE F038          	movff	postinc2,___flmul@a+3
 18123  003C5E  EE20 F008          	lfsr	2,8
 18124  003C62  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18125  003C64  26D9               	addwf	fsr2l,f,c
 18126  003C66  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18127  003C68  22DA               	addwfc	fsr2h,f,c
 18128  003C6A  CFDE F031          	movff	postinc2,___flmul@b
 18129  003C6E  CFDE F032          	movff	postinc2,___flmul@b+1
 18130  003C72  CFDE F033          	movff	postinc2,___flmul@b+2
 18131  003C76  CFDE F034          	movff	postinc2,___flmul@b+3
 18132  003C7A  ECCA  F019         	call	___flmul	;wreg free
 18133  003C7E  C031  F04E         	movff	?___flmul,___fladd@a
 18134  003C82  C032  F04F         	movff	?___flmul+1,___fladd@a+1
 18135  003C86  C033  F050         	movff	?___flmul+2,___fladd@a+2
 18136  003C8A  C034  F051         	movff	?___flmul+3,___fladd@a+3
 18137  003C8E  0100               	movlb	0	; () banked
 18138  003C90  EE20 F004          	lfsr	2,4
 18139  003C94  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18140  003C96  26D9               	addwf	fsr2l,f,c
 18141  003C98  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18142  003C9A  22DA               	addwfc	fsr2h,f,c
 18143  003C9C  CFDE F035          	movff	postinc2,___flmul@a
 18144  003CA0  CFDE F036          	movff	postinc2,___flmul@a+1
 18145  003CA4  CFDE F037          	movff	postinc2,___flmul@a+2
 18146  003CA8  CFDE F038          	movff	postinc2,___flmul@a+3
 18147  003CAC  C06A  FFD9         	movff	MPU6050_dmpGetGravityVF@q,fsr2l
 18148  003CB0  C06B  FFDA         	movff	MPU6050_dmpGetGravityVF@q+1,fsr2h
 18149  003CB4  CFDE F031          	movff	postinc2,___flmul@b
 18150  003CB8  CFDE F032          	movff	postinc2,___flmul@b+1
 18151  003CBC  CFDE F033          	movff	postinc2,___flmul@b+2
 18152  003CC0  CFDE F034          	movff	postinc2,___flmul@b+3
 18153  003CC4  ECCA  F019         	call	___flmul	;wreg free
 18154  003CC8  C031  F04A         	movff	?___flmul,___fladd@b
 18155  003CCC  C032  F04B         	movff	?___flmul+1,___fladd@b+1
 18156  003CD0  C033  F04C         	movff	?___flmul+2,___fladd@b+2
 18157  003CD4  C034  F04D         	movff	?___flmul+3,___fladd@b+3
 18158  003CD8  EC6A  F017         	call	___fladd	;wreg free
 18159  003CDC  C04A  F074         	movff	?___fladd,_MPU6050_dmpGetGravityVF$4534
 18160  003CE0  C04B  F075         	movff	?___fladd+1,_MPU6050_dmpGetGravityVF$4534+1
 18161  003CE4  C04C  F076         	movff	?___fladd+2,_MPU6050_dmpGetGravityVF$4534+2
 18162  003CE8  C04D  F077         	movff	?___fladd+3,_MPU6050_dmpGetGravityVF$4534+3
 18163                           
 18164                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 534:     v -> y = 2 * (q -> w*q -> x + q -> y*q -> 
      +                          z);
 18165  003CEC  C074  F031         	movff	_MPU6050_dmpGetGravityVF$4534,___flmul@b
 18166  003CF0  C075  F032         	movff	_MPU6050_dmpGetGravityVF$4534+1,___flmul@b+1
 18167  003CF4  C076  F033         	movff	_MPU6050_dmpGetGravityVF$4534+2,___flmul@b+2
 18168  003CF8  C077  F034         	movff	_MPU6050_dmpGetGravityVF$4534+3,___flmul@b+3
 18169  003CFC  0E00               	movlw	0
 18170  003CFE  6E35               	movwf	___flmul@a^0,c
 18171  003D00  0E00               	movlw	0
 18172  003D02  6E36               	movwf	(___flmul@a+1)^0,c
 18173  003D04  0E00               	movlw	0
 18174  003D06  6E37               	movwf	(___flmul@a+2)^0,c
 18175  003D08  0E40               	movlw	64
 18176  003D0A  6E38               	movwf	(___flmul@a+3)^0,c
 18177  003D0C  ECCA  F019         	call	___flmul	;wreg free
 18178  003D10  0100               	movlb	0	; () banked
 18179  003D12  EE20 F004          	lfsr	2,4
 18180  003D16  5168               	movf	MPU6050_dmpGetGravityVF@v& (0+255),w,b
 18181  003D18  26D9               	addwf	fsr2l,f,c
 18182  003D1A  5169               	movf	(MPU6050_dmpGetGravityVF@v+1)& (0+255),w,b
 18183  003D1C  22DA               	addwfc	fsr2h,f,c
 18184  003D1E  C031  FFDE         	movff	?___flmul,postinc2
 18185  003D22  C032  FFDE         	movff	?___flmul+1,postinc2
 18186  003D26  C033  FFDE         	movff	?___flmul+2,postinc2
 18187  003D2A  C034  FFDE         	movff	?___flmul+3,postinc2
 18188                           
 18189                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 535:     v -> z = q -> w*q -> w - q -> x*q -> x - q
      +                           -> y*q -> y + q -> z*q -> z;
 18190  003D2E  EE20 F004          	lfsr	2,4
 18191  003D32  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18192  003D34  26D9               	addwf	fsr2l,f,c
 18193  003D36  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18194  003D38  22DA               	addwfc	fsr2h,f,c
 18195  003D3A  CFDE F035          	movff	postinc2,___flmul@a
 18196  003D3E  CFDE F036          	movff	postinc2,___flmul@a+1
 18197  003D42  CFDE F037          	movff	postinc2,___flmul@a+2
 18198  003D46  CFDE F038          	movff	postinc2,___flmul@a+3
 18199  003D4A  EE20 F004          	lfsr	2,4
 18200  003D4E  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18201  003D50  26D9               	addwf	fsr2l,f,c
 18202  003D52  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18203  003D54  22DA               	addwfc	fsr2h,f,c
 18204  003D56  CFDE F031          	movff	postinc2,___flmul@b
 18205  003D5A  CFDE F032          	movff	postinc2,___flmul@b+1
 18206  003D5E  CFDE F033          	movff	postinc2,___flmul@b+2
 18207  003D62  CFDE F034          	movff	postinc2,___flmul@b+3
 18208  003D66  ECCA  F019         	call	___flmul	;wreg free
 18209  003D6A  C031  F064         	movff	?___flmul,___flsub@a
 18210  003D6E  C032  F065         	movff	?___flmul+1,___flsub@a+1
 18211  003D72  C033  F066         	movff	?___flmul+2,___flsub@a+2
 18212  003D76  C034  F067         	movff	?___flmul+3,___flsub@a+3
 18213  003D7A  C06A  FFD9         	movff	MPU6050_dmpGetGravityVF@q,fsr2l
 18214  003D7E  C06B  FFDA         	movff	MPU6050_dmpGetGravityVF@q+1,fsr2h
 18215  003D82  CFDE F035          	movff	postinc2,___flmul@a
 18216  003D86  CFDE F036          	movff	postinc2,___flmul@a+1
 18217  003D8A  CFDE F037          	movff	postinc2,___flmul@a+2
 18218  003D8E  CFDE F038          	movff	postinc2,___flmul@a+3
 18219  003D92  C06A  FFD9         	movff	MPU6050_dmpGetGravityVF@q,fsr2l
 18220  003D96  C06B  FFDA         	movff	MPU6050_dmpGetGravityVF@q+1,fsr2h
 18221  003D9A  CFDE F031          	movff	postinc2,___flmul@b
 18222  003D9E  CFDE F032          	movff	postinc2,___flmul@b+1
 18223  003DA2  CFDE F033          	movff	postinc2,___flmul@b+2
 18224  003DA6  CFDE F034          	movff	postinc2,___flmul@b+3
 18225  003DAA  ECCA  F019         	call	___flmul	;wreg free
 18226  003DAE  C031  F060         	movff	?___flmul,___flsub@b
 18227  003DB2  C032  F061         	movff	?___flmul+1,___flsub@b+1
 18228  003DB6  C033  F062         	movff	?___flmul+2,___flsub@b+2
 18229  003DBA  C034  F063         	movff	?___flmul+3,___flsub@b+3
 18230  003DBE  ECA9  F031         	call	___flsub	;wreg free
 18231  003DC2  C060  F06C         	movff	?___flsub,_MPU6050_dmpGetGravityVF$4535
 18232  003DC6  C061  F06D         	movff	?___flsub+1,_MPU6050_dmpGetGravityVF$4535+1
 18233  003DCA  C062  F06E         	movff	?___flsub+2,_MPU6050_dmpGetGravityVF$4535+2
 18234  003DCE  C063  F06F         	movff	?___flsub+3,_MPU6050_dmpGetGravityVF$4535+3
 18235                           
 18236                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 535:     v -> z = q -> w*q -> w - q -> x*q -> x - q
      +                           -> y*q -> y + q -> z*q -> z;
 18237  003DD2  0100               	movlb	0	; () banked
 18238  003DD4  EE20 F008          	lfsr	2,8
 18239  003DD8  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18240  003DDA  26D9               	addwf	fsr2l,f,c
 18241  003DDC  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18242  003DDE  22DA               	addwfc	fsr2h,f,c
 18243  003DE0  CFDE F035          	movff	postinc2,___flmul@a
 18244  003DE4  CFDE F036          	movff	postinc2,___flmul@a+1
 18245  003DE8  CFDE F037          	movff	postinc2,___flmul@a+2
 18246  003DEC  CFDE F038          	movff	postinc2,___flmul@a+3
 18247  003DF0  EE20 F008          	lfsr	2,8
 18248  003DF4  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18249  003DF6  26D9               	addwf	fsr2l,f,c
 18250  003DF8  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18251  003DFA  22DA               	addwfc	fsr2h,f,c
 18252  003DFC  CFDE F031          	movff	postinc2,___flmul@b
 18253  003E00  CFDE F032          	movff	postinc2,___flmul@b+1
 18254  003E04  CFDE F033          	movff	postinc2,___flmul@b+2
 18255  003E08  CFDE F034          	movff	postinc2,___flmul@b+3
 18256  003E0C  ECCA  F019         	call	___flmul	;wreg free
 18257  003E10  C031  F064         	movff	?___flmul,___flsub@a
 18258  003E14  C032  F065         	movff	?___flmul+1,___flsub@a+1
 18259  003E18  C033  F066         	movff	?___flmul+2,___flsub@a+2
 18260  003E1C  C034  F067         	movff	?___flmul+3,___flsub@a+3
 18261  003E20  C06C  F060         	movff	_MPU6050_dmpGetGravityVF$4535,___flsub@b
 18262  003E24  C06D  F061         	movff	_MPU6050_dmpGetGravityVF$4535+1,___flsub@b+1
 18263  003E28  C06E  F062         	movff	_MPU6050_dmpGetGravityVF$4535+2,___flsub@b+2
 18264  003E2C  C06F  F063         	movff	_MPU6050_dmpGetGravityVF$4535+3,___flsub@b+3
 18265  003E30  ECA9  F031         	call	___flsub	;wreg free
 18266  003E34  C060  F070         	movff	?___flsub,_MPU6050_dmpGetGravityVF$4536
 18267  003E38  C061  F071         	movff	?___flsub+1,_MPU6050_dmpGetGravityVF$4536+1
 18268  003E3C  C062  F072         	movff	?___flsub+2,_MPU6050_dmpGetGravityVF$4536+2
 18269  003E40  C063  F073         	movff	?___flsub+3,_MPU6050_dmpGetGravityVF$4536+3
 18270                           
 18271                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 535:     v -> z = q -> w*q -> w - q -> x*q -> x - q
      +                           -> y*q -> y + q -> z*q -> z;
 18272  003E44  C070  F04A         	movff	_MPU6050_dmpGetGravityVF$4536,___fladd@b
 18273  003E48  C071  F04B         	movff	_MPU6050_dmpGetGravityVF$4536+1,___fladd@b+1
 18274  003E4C  C072  F04C         	movff	_MPU6050_dmpGetGravityVF$4536+2,___fladd@b+2
 18275  003E50  C073  F04D         	movff	_MPU6050_dmpGetGravityVF$4536+3,___fladd@b+3
 18276  003E54  0100               	movlb	0	; () banked
 18277  003E56  EE20 F00C          	lfsr	2,12
 18278  003E5A  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18279  003E5C  26D9               	addwf	fsr2l,f,c
 18280  003E5E  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18281  003E60  22DA               	addwfc	fsr2h,f,c
 18282  003E62  CFDE F035          	movff	postinc2,___flmul@a
 18283  003E66  CFDE F036          	movff	postinc2,___flmul@a+1
 18284  003E6A  CFDE F037          	movff	postinc2,___flmul@a+2
 18285  003E6E  CFDE F038          	movff	postinc2,___flmul@a+3
 18286  003E72  EE20 F00C          	lfsr	2,12
 18287  003E76  516A               	movf	MPU6050_dmpGetGravityVF@q& (0+255),w,b
 18288  003E78  26D9               	addwf	fsr2l,f,c
 18289  003E7A  516B               	movf	(MPU6050_dmpGetGravityVF@q+1)& (0+255),w,b
 18290  003E7C  22DA               	addwfc	fsr2h,f,c
 18291  003E7E  CFDE F031          	movff	postinc2,___flmul@b
 18292  003E82  CFDE F032          	movff	postinc2,___flmul@b+1
 18293  003E86  CFDE F033          	movff	postinc2,___flmul@b+2
 18294  003E8A  CFDE F034          	movff	postinc2,___flmul@b+3
 18295  003E8E  ECCA  F019         	call	___flmul	;wreg free
 18296  003E92  C031  F04E         	movff	?___flmul,___fladd@a
 18297  003E96  C032  F04F         	movff	?___flmul+1,___fladd@a+1
 18298  003E9A  C033  F050         	movff	?___flmul+2,___fladd@a+2
 18299  003E9E  C034  F051         	movff	?___flmul+3,___fladd@a+3
 18300  003EA2  EC6A  F017         	call	___fladd	;wreg free
 18301  003EA6  0100               	movlb	0	; () banked
 18302  003EA8  EE20 F008          	lfsr	2,8
 18303  003EAC  5168               	movf	MPU6050_dmpGetGravityVF@v& (0+255),w,b
 18304  003EAE  26D9               	addwf	fsr2l,f,c
 18305  003EB0  5169               	movf	(MPU6050_dmpGetGravityVF@v+1)& (0+255),w,b
 18306  003EB2  22DA               	addwfc	fsr2h,f,c
 18307  003EB4  C04A  FFDE         	movff	?___fladd,postinc2
 18308  003EB8  C04B  FFDE         	movff	?___fladd+1,postinc2
 18309  003EBC  C04C  FFDE         	movff	?___fladd+2,postinc2
 18310  003EC0  C04D  FFDE         	movff	?___fladd+3,postinc2
 18311  003EC4                     
 18312                           ; BSR set to: 0
 18313  003EC4  0012               	return		;funcret
 18314  003EC6                     __end_of_MPU6050_dmpGetGravityVF:
 18315                           	callstack 0
 18316                           
 18317 ;; *************** function ___flsub *****************
 18318 ;; Defined at:
 18319 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
 18320 ;; Parameters:    Size  Location     Type
 18321 ;;  b               4    0[BANK0 ] unsigned char 
 18322 ;;  a               4    4[BANK0 ] unsigned char 
 18323 ;; Auto vars:     Size  Location     Type
 18324 ;;		None
 18325 ;; Return value:  Size  Location     Type
 18326 ;;                  4    0[BANK0 ] unsigned char 
 18327 ;; Registers used:
 18328 ;;		wreg, status,2, status,0, cstack
 18329 ;; Tracked objects:
 18330 ;;		On entry : 0/0
 18331 ;;		On exit  : 0/0
 18332 ;;		Unchanged: 0/0
 18333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18334 ;;      Params:         0       8       0       0       0       0       0       0       0
 18335 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18336 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18337 ;;      Totals:         0       8       0       0       0       0       0       0       0
 18338 ;;Total ram usage:        8 bytes
 18339 ;; Hardware stack levels used:    1
 18340 ;; Hardware stack levels required when called:    3
 18341 ;; This function calls:
 18342 ;;		___fladd
 18343 ;; This function is called by:
 18344 ;;		_MPU6050_dmpGetLinearAccel
 18345 ;;		_MPU6050_dmpGetGravityVF
 18346 ;;		_main
 18347 ;;		_atan2f
 18348 ;;		_atanf
 18349 ;;		_efgtoa
 18350 ;;		_MPU6050_PID
 18351 ;;		_getProductQ
 18352 ;;		_MPU6050_dmpGetEuler
 18353 ;;		_MPU6050_dmpGetYawPitchRoll
 18354 ;;		_roundf
 18355 ;; This function uses a non-reentrant model
 18356 ;;
 18357                           
 18358                           	psect	text61
 18359  006352                     __ptext61:
 18360                           	callstack 0
 18361  006352                     ___flsub:
 18362                           	callstack 23
 18363  006352  0E00               	movlw	0
 18364  006354  0100               	movlb	0	; () banked
 18365  006356  1B64               	xorwf	___flsub@a& (0+255),f,b
 18366  006358  0E00               	movlw	0
 18367  00635A  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
 18368  00635C  0E00               	movlw	0
 18369  00635E  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
 18370  006360  0E80               	movlw	128
 18371  006362  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
 18372  006364                     
 18373                           ; BSR set to: 0
 18374  006364  C060  F04A         	movff	___flsub@b,___fladd@b
 18375  006368  C061  F04B         	movff	___flsub@b+1,___fladd@b+1
 18376  00636C  C062  F04C         	movff	___flsub@b+2,___fladd@b+2
 18377  006370  C063  F04D         	movff	___flsub@b+3,___fladd@b+3
 18378  006374  C064  F04E         	movff	___flsub@a,___fladd@a
 18379  006378  C065  F04F         	movff	___flsub@a+1,___fladd@a+1
 18380  00637C  C066  F050         	movff	___flsub@a+2,___fladd@a+2
 18381  006380  C067  F051         	movff	___flsub@a+3,___fladd@a+3
 18382  006384  EC6A  F017         	call	___fladd	;wreg free
 18383  006388  C04A  F060         	movff	?___fladd,?___flsub
 18384  00638C  C04B  F061         	movff	?___fladd+1,?___flsub+1
 18385  006390  C04C  F062         	movff	?___fladd+2,?___flsub+2
 18386  006394  C04D  F063         	movff	?___fladd+3,?___flsub+3
 18387  006398  0012               	return		;funcret
 18388  00639A                     __end_of___flsub:
 18389                           	callstack 0
 18390                           
 18391 ;; *************** function ___fladd *****************
 18392 ;; Defined at:
 18393 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
 18394 ;; Parameters:    Size  Location     Type
 18395 ;;  b               4   73[COMRAM] unsigned char 
 18396 ;;  a               4   77[COMRAM] unsigned char 
 18397 ;; Auto vars:     Size  Location     Type
 18398 ;;  grs             1   88[COMRAM] unsigned char 
 18399 ;;  bexp            1   87[COMRAM] unsigned char 
 18400 ;;  aexp            1   86[COMRAM] unsigned char 
 18401 ;;  signs           1   85[COMRAM] unsigned char 
 18402 ;; Return value:  Size  Location     Type
 18403 ;;                  4   73[COMRAM] unsigned char 
 18404 ;; Registers used:
 18405 ;;		wreg, status,2, status,0
 18406 ;; Tracked objects:
 18407 ;;		On entry : 0/0
 18408 ;;		On exit  : 0/0
 18409 ;;		Unchanged: 0/0
 18410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18411 ;;      Params:         8       0       0       0       0       0       0       0       0
 18412 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18413 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18414 ;;      Totals:        16       0       0       0       0       0       0       0       0
 18415 ;;Total ram usage:       16 bytes
 18416 ;; Hardware stack levels used:    1
 18417 ;; Hardware stack levels required when called:    2
 18418 ;; This function calls:
 18419 ;;		Nothing
 18420 ;; This function is called by:
 18421 ;;		_MPU6050_dmpGetGravityVF
 18422 ;;		_controlReceive
 18423 ;;		_main
 18424 ;;		___flsub
 18425 ;;		_atan2f
 18426 ;;		_atanf
 18427 ;;		_efgtoa
 18428 ;;		_MPU6050_PID
 18429 ;;		_getProductQ
 18430 ;;		_getMagnitudeQ
 18431 ;;		_getMagnitudeVF
 18432 ;;		_MPU6050_dmpGetEuler
 18433 ;;		_MPU6050_dmpGetYawPitchRoll
 18434 ;;		_roundf
 18435 ;;		_sqrtf
 18436 ;; This function uses a non-reentrant model
 18437 ;;
 18438                           
 18439                           	psect	text62
 18440  002ED4                     __ptext62:
 18441                           	callstack 0
 18442  002ED4                     ___fladd:
 18443                           	callstack 23
 18444  002ED4  504D               	movf	(___fladd@b+3)^0,w,c
 18445  002ED6  0B80               	andlw	128
 18446  002ED8  6E56               	movwf	___fladd@signs^0,c
 18447  002EDA  504D               	movf	(___fladd@b+3)^0,w,c
 18448  002EDC  244D               	addwf	(___fladd@b+3)^0,w,c
 18449  002EDE  6E58               	movwf	___fladd@bexp^0,c
 18450  002EE0  AE4C               	btfss	(___fladd@b+2)^0,7,c
 18451  002EE2  EF75  F017         	goto	u5761
 18452  002EE6  EF77  F017         	goto	u5760
 18453  002EEA                     u5761:
 18454  002EEA  EF78  F017         	goto	l7551
 18455  002EEE                     u5760:
 18456  002EEE  8058               	bsf	___fladd@bexp^0,0,c
 18457  002EF0                     l7551:
 18458  002EF0  5058               	movf	___fladd@bexp^0,w,c
 18459  002EF2  B4D8               	btfsc	status,2,c
 18460  002EF4  EF7E  F017         	goto	u5771
 18461  002EF8  EF80  F017         	goto	u5770
 18462  002EFC                     u5771:
 18463  002EFC  EF95  F017         	goto	l7561
 18464  002F00                     u5770:
 18465  002F00  2858               	incf	___fladd@bexp^0,w,c
 18466  002F02  A4D8               	btfss	status,2,c
 18467  002F04  EF86  F017         	goto	u5781
 18468  002F08  EF88  F017         	goto	u5780
 18469  002F0C                     u5781:
 18470  002F0C  EF90  F017         	goto	l7557
 18471  002F10                     u5780:
 18472  002F10  0E00               	movlw	0
 18473  002F12  6E4A               	movwf	___fladd@b^0,c
 18474  002F14  0E00               	movlw	0
 18475  002F16  6E4B               	movwf	(___fladd@b+1)^0,c
 18476  002F18  0E00               	movlw	0
 18477  002F1A  6E4C               	movwf	(___fladd@b+2)^0,c
 18478  002F1C  0E00               	movlw	0
 18479  002F1E  6E4D               	movwf	(___fladd@b+3)^0,c
 18480  002F20                     l7557:
 18481  002F20  8E4C               	bsf	(___fladd@b+2)^0,7,c
 18482  002F22  0E00               	movlw	0
 18483  002F24  6E4D               	movwf	(___fladd@b+3)^0,c
 18484  002F26  EF9D  F017         	goto	l7563
 18485  002F2A                     l7561:
 18486  002F2A  0E00               	movlw	0
 18487  002F2C  6E4A               	movwf	___fladd@b^0,c
 18488  002F2E  0E00               	movlw	0
 18489  002F30  6E4B               	movwf	(___fladd@b+1)^0,c
 18490  002F32  0E00               	movlw	0
 18491  002F34  6E4C               	movwf	(___fladd@b+2)^0,c
 18492  002F36  0E00               	movlw	0
 18493  002F38  6E4D               	movwf	(___fladd@b+3)^0,c
 18494  002F3A                     l7563:
 18495  002F3A  5051               	movf	(___fladd@a+3)^0,w,c
 18496  002F3C  0B80               	andlw	128
 18497  002F3E  6E57               	movwf	___fladd@aexp^0,c
 18498  002F40  5056               	movf	___fladd@signs^0,w,c
 18499  002F42  1857               	xorwf	___fladd@aexp^0,w,c
 18500  002F44  B4D8               	btfsc	status,2,c
 18501  002F46  EFA7  F017         	goto	u5791
 18502  002F4A  EFA9  F017         	goto	u5790
 18503  002F4E                     u5791:
 18504  002F4E  EFAA  F017         	goto	l7569
 18505  002F52                     u5790:
 18506  002F52  8C56               	bsf	___fladd@signs^0,6,c
 18507  002F54                     l7569:
 18508  002F54  5051               	movf	(___fladd@a+3)^0,w,c
 18509  002F56  2451               	addwf	(___fladd@a+3)^0,w,c
 18510  002F58  6E57               	movwf	___fladd@aexp^0,c
 18511  002F5A  AE50               	btfss	(___fladd@a+2)^0,7,c
 18512  002F5C  EFB2  F017         	goto	u5801
 18513  002F60  EFB4  F017         	goto	u5800
 18514  002F64                     u5801:
 18515  002F64  EFB5  F017         	goto	l7575
 18516  002F68                     u5800:
 18517  002F68  8057               	bsf	___fladd@aexp^0,0,c
 18518  002F6A                     l7575:
 18519  002F6A  5057               	movf	___fladd@aexp^0,w,c
 18520  002F6C  B4D8               	btfsc	status,2,c
 18521  002F6E  EFBB  F017         	goto	u5811
 18522  002F72  EFBD  F017         	goto	u5810
 18523  002F76                     u5811:
 18524  002F76  EFD2  F017         	goto	l7585
 18525  002F7A                     u5810:
 18526  002F7A  2857               	incf	___fladd@aexp^0,w,c
 18527  002F7C  A4D8               	btfss	status,2,c
 18528  002F7E  EFC3  F017         	goto	u5821
 18529  002F82  EFC5  F017         	goto	u5820
 18530  002F86                     u5821:
 18531  002F86  EFCD  F017         	goto	l7581
 18532  002F8A                     u5820:
 18533  002F8A  0E00               	movlw	0
 18534  002F8C  6E4E               	movwf	___fladd@a^0,c
 18535  002F8E  0E00               	movlw	0
 18536  002F90  6E4F               	movwf	(___fladd@a+1)^0,c
 18537  002F92  0E00               	movlw	0
 18538  002F94  6E50               	movwf	(___fladd@a+2)^0,c
 18539  002F96  0E00               	movlw	0
 18540  002F98  6E51               	movwf	(___fladd@a+3)^0,c
 18541  002F9A                     l7581:
 18542  002F9A  8E50               	bsf	(___fladd@a+2)^0,7,c
 18543  002F9C  0E00               	movlw	0
 18544  002F9E  6E51               	movwf	(___fladd@a+3)^0,c
 18545  002FA0  EFDA  F017         	goto	l7587
 18546  002FA4                     l7585:
 18547  002FA4  0E00               	movlw	0
 18548  002FA6  6E4E               	movwf	___fladd@a^0,c
 18549  002FA8  0E00               	movlw	0
 18550  002FAA  6E4F               	movwf	(___fladd@a+1)^0,c
 18551  002FAC  0E00               	movlw	0
 18552  002FAE  6E50               	movwf	(___fladd@a+2)^0,c
 18553  002FB0  0E00               	movlw	0
 18554  002FB2  6E51               	movwf	(___fladd@a+3)^0,c
 18555  002FB4                     l7587:
 18556  002FB4  5058               	movf	___fladd@bexp^0,w,c
 18557  002FB6  5C57               	subwf	___fladd@aexp^0,w,c
 18558  002FB8  B0D8               	btfsc	status,0,c
 18559  002FBA  EFE1  F017         	goto	u5831
 18560  002FBE  EFE3  F017         	goto	u5830
 18561  002FC2                     u5831:
 18562  002FC2  EF0A  F018         	goto	l7623
 18563  002FC6                     u5830:
 18564  002FC6  AC56               	btfss	___fladd@signs^0,6,c
 18565  002FC8  EFE8  F017         	goto	u5841
 18566  002FCC  EFEA  F017         	goto	u5840
 18567  002FD0                     u5841:
 18568  002FD0  EFEC  F017         	goto	l7593
 18569  002FD4                     u5840:
 18570  002FD4  0E80               	movlw	128
 18571  002FD6  1A56               	xorwf	___fladd@signs^0,f,c
 18572  002FD8                     l7593:
 18573  002FD8  C058  F059         	movff	___fladd@bexp,___fladd@grs
 18574  002FDC  C057  F058         	movff	___fladd@aexp,___fladd@bexp
 18575  002FE0  C059  F057         	movff	___fladd@grs,___fladd@aexp
 18576  002FE4  C04A  F059         	movff	___fladd@b,___fladd@grs
 18577  002FE8  C04E  F04A         	movff	___fladd@a,___fladd@b
 18578  002FEC  C059  F04E         	movff	___fladd@grs,___fladd@a
 18579  002FF0  C04B  F059         	movff	___fladd@b+1,___fladd@grs
 18580  002FF4  C04F  F04B         	movff	___fladd@a+1,___fladd@b+1
 18581  002FF8  C059  F04F         	movff	___fladd@grs,___fladd@a+1
 18582  002FFC  C04C  F059         	movff	___fladd@b+2,___fladd@grs
 18583  003000  C050  F04C         	movff	___fladd@a+2,___fladd@b+2
 18584  003004  C059  F050         	movff	___fladd@grs,___fladd@a+2
 18585  003008  C04D  F059         	movff	___fladd@b+3,___fladd@grs
 18586  00300C  C051  F04D         	movff	___fladd@a+3,___fladd@b+3
 18587  003010  C059  F051         	movff	___fladd@grs,___fladd@a+3
 18588  003014                     l7623:
 18589  003014  0E00               	movlw	0
 18590  003016  6E59               	movwf	___fladd@grs^0,c
 18591  003018  5058               	movf	___fladd@bexp^0,w,c
 18592  00301A  C057  F052         	movff	___fladd@aexp,??___fladd
 18593  00301E  6A53               	clrf	(??___fladd+1)^0,c
 18594  003020  5E52               	subwf	??___fladd^0,f,c
 18595  003022  0E00               	movlw	0
 18596  003024  5A53               	subwfb	(??___fladd+1)^0,f,c
 18597  003026  BE53               	btfsc	(??___fladd+1)^0,7,c
 18598  003028  EF1F  F018         	goto	u5851
 18599  00302C  5053               	movf	(??___fladd+1)^0,w,c
 18600  00302E  E109               	bnz	u5850
 18601  003030  0E1A               	movlw	26
 18602  003032  5C52               	subwf	??___fladd^0,w,c
 18603  003034  A0D8               	btfss	status,0,c
 18604  003036  EF1F  F018         	goto	u5851
 18605  00303A  EF21  F018         	goto	u5850
 18606  00303E                     u5851:
 18607  00303E  EF58  F018         	goto	l2351
 18608  003042                     u5850:
 18609  003042  504A               	movf	___fladd@b^0,w,c
 18610  003044  104B               	iorwf	(___fladd@b+1)^0,w,c
 18611  003046  104C               	iorwf	(___fladd@b+2)^0,w,c
 18612  003048  104D               	iorwf	(___fladd@b+3)^0,w,c
 18613  00304A  A4D8               	btfss	status,2,c
 18614  00304C  EF2A  F018         	goto	u5861
 18615  003050  EF2D  F018         	goto	u5860
 18616  003054                     u5861:
 18617  003054  0E01               	movlw	1
 18618  003056  EF2E  F018         	goto	u5870
 18619  00305A                     u5860:
 18620  00305A  0E00               	movlw	0
 18621  00305C                     u5870:
 18622  00305C  6E59               	movwf	___fladd@grs^0,c
 18623  00305E  0E00               	movlw	0
 18624  003060  6E4A               	movwf	___fladd@b^0,c
 18625  003062  0E00               	movlw	0
 18626  003064  6E4B               	movwf	(___fladd@b+1)^0,c
 18627  003066  0E00               	movlw	0
 18628  003068  6E4C               	movwf	(___fladd@b+2)^0,c
 18629  00306A  0E00               	movlw	0
 18630  00306C  6E4D               	movwf	(___fladd@b+3)^0,c
 18631  00306E  C057  F058         	movff	___fladd@aexp,___fladd@bexp
 18632  003072  EF61  F018         	goto	l2350
 18633  003076                     l2352:
 18634  003076  A059               	btfss	___fladd@grs^0,0,c
 18635  003078  EF40  F018         	goto	u5881
 18636  00307C  EF42  F018         	goto	u5880
 18637  003080                     u5881:
 18638  003080  EF48  F018         	goto	l7635
 18639  003084                     u5880:
 18640  003084  90D8               	bcf	status,0,c
 18641  003086  3059               	rrcf	___fladd@grs^0,w,c
 18642  003088  0901               	iorlw	1
 18643  00308A  6E59               	movwf	___fladd@grs^0,c
 18644  00308C  EF4A  F018         	goto	l7637
 18645  003090                     l7635:
 18646  003090  90D8               	bcf	status,0,c
 18647  003092  3259               	rrcf	___fladd@grs^0,f,c
 18648  003094                     l7637:
 18649  003094  A04A               	btfss	___fladd@b^0,0,c
 18650  003096  EF4F  F018         	goto	u5891
 18651  00309A  EF51  F018         	goto	u5890
 18652  00309E                     u5891:
 18653  00309E  EF52  F018         	goto	l7641
 18654  0030A2                     u5890:
 18655  0030A2  8E59               	bsf	___fladd@grs^0,7,c
 18656  0030A4                     l7641:
 18657  0030A4  344D               	rlcf	(___fladd@b+3)^0,w,c
 18658  0030A6  324D               	rrcf	(___fladd@b+3)^0,f,c
 18659  0030A8  324C               	rrcf	(___fladd@b+2)^0,f,c
 18660  0030AA  324B               	rrcf	(___fladd@b+1)^0,f,c
 18661  0030AC  324A               	rrcf	___fladd@b^0,f,c
 18662  0030AE  2A58               	incf	___fladd@bexp^0,f,c
 18663  0030B0                     l2351:
 18664  0030B0  5057               	movf	___fladd@aexp^0,w,c
 18665  0030B2  5C58               	subwf	___fladd@bexp^0,w,c
 18666  0030B4  A0D8               	btfss	status,0,c
 18667  0030B6  EF5F  F018         	goto	u5901
 18668  0030BA  EF61  F018         	goto	u5900
 18669  0030BE                     u5901:
 18670  0030BE  EF3B  F018         	goto	l2352
 18671  0030C2                     u5900:
 18672  0030C2                     l2350:
 18673  0030C2  BC56               	btfsc	___fladd@signs^0,6,c
 18674  0030C4  EF66  F018         	goto	u5911
 18675  0030C8  EF68  F018         	goto	u5910
 18676  0030CC                     u5911:
 18677  0030CC  EFA8  F018         	goto	l7669
 18678  0030D0                     u5910:
 18679  0030D0  5058               	movf	___fladd@bexp^0,w,c
 18680  0030D2  A4D8               	btfss	status,2,c
 18681  0030D4  EF6E  F018         	goto	u5921
 18682  0030D8  EF70  F018         	goto	u5920
 18683  0030DC                     u5921:
 18684  0030DC  EF7A  F018         	goto	l7651
 18685  0030E0                     u5920:
 18686  0030E0  0E00               	movlw	0
 18687  0030E2  6E4A               	movwf	?___fladd^0,c
 18688  0030E4  0E00               	movlw	0
 18689  0030E6  6E4B               	movwf	(?___fladd+1)^0,c
 18690  0030E8  0E00               	movlw	0
 18691  0030EA  6E4C               	movwf	(?___fladd+2)^0,c
 18692  0030EC  0E00               	movlw	0
 18693  0030EE  6E4D               	movwf	(?___fladd+3)^0,c
 18694  0030F0  EFC9  F019         	goto	l2359
 18695  0030F4                     l7651:
 18696  0030F4  504E               	movf	___fladd@a^0,w,c
 18697  0030F6  264A               	addwf	___fladd@b^0,f,c
 18698  0030F8  504F               	movf	(___fladd@a+1)^0,w,c
 18699  0030FA  224B               	addwfc	(___fladd@b+1)^0,f,c
 18700  0030FC  5050               	movf	(___fladd@a+2)^0,w,c
 18701  0030FE  224C               	addwfc	(___fladd@b+2)^0,f,c
 18702  003100  5051               	movf	(___fladd@a+3)^0,w,c
 18703  003102  224D               	addwfc	(___fladd@b+3)^0,f,c
 18704  003104  A04D               	btfss	(___fladd@b+3)^0,0,c
 18705  003106  EF87  F018         	goto	u5931
 18706  00310A  EF89  F018         	goto	u5930
 18707  00310E                     u5931:
 18708  00310E  EF35  F019         	goto	l7705
 18709  003112                     u5930:
 18710  003112  A059               	btfss	___fladd@grs^0,0,c
 18711  003114  EF8E  F018         	goto	u5941
 18712  003118  EF90  F018         	goto	u5940
 18713  00311C                     u5941:
 18714  00311C  EF96  F018         	goto	l7659
 18715  003120                     u5940:
 18716  003120  90D8               	bcf	status,0,c
 18717  003122  3059               	rrcf	___fladd@grs^0,w,c
 18718  003124  0901               	iorlw	1
 18719  003126  6E59               	movwf	___fladd@grs^0,c
 18720  003128  EF98  F018         	goto	l7661
 18721  00312C                     l7659:
 18722  00312C  90D8               	bcf	status,0,c
 18723  00312E  3259               	rrcf	___fladd@grs^0,f,c
 18724  003130                     l7661:
 18725  003130  A04A               	btfss	___fladd@b^0,0,c
 18726  003132  EF9D  F018         	goto	u5951
 18727  003136  EF9F  F018         	goto	u5950
 18728  00313A                     u5951:
 18729  00313A  EFA0  F018         	goto	l7665
 18730  00313E                     u5950:
 18731  00313E  8E59               	bsf	___fladd@grs^0,7,c
 18732  003140                     l7665:
 18733  003140  344D               	rlcf	(___fladd@b+3)^0,w,c
 18734  003142  324D               	rrcf	(___fladd@b+3)^0,f,c
 18735  003144  324C               	rrcf	(___fladd@b+2)^0,f,c
 18736  003146  324B               	rrcf	(___fladd@b+1)^0,f,c
 18737  003148  324A               	rrcf	___fladd@b^0,f,c
 18738  00314A  2A58               	incf	___fladd@bexp^0,f,c
 18739  00314C  EF35  F019         	goto	l7705
 18740  003150                     l7669:
 18741  003150  504E               	movf	___fladd@a^0,w,c
 18742  003152  5C4A               	subwf	___fladd@b^0,w,c
 18743  003154  504F               	movf	(___fladd@a+1)^0,w,c
 18744  003156  584B               	subwfb	(___fladd@b+1)^0,w,c
 18745  003158  5050               	movf	(___fladd@a+2)^0,w,c
 18746  00315A  584C               	subwfb	(___fladd@b+2)^0,w,c
 18747  00315C  504D               	movf	(___fladd@b+3)^0,w,c
 18748  00315E  0A80               	xorlw	128
 18749  003160  6E52               	movwf	??___fladd^0,c
 18750  003162  5051               	movf	(___fladd@a+3)^0,w,c
 18751  003164  0A80               	xorlw	128
 18752  003166  5852               	subwfb	??___fladd^0,w,c
 18753  003168  B0D8               	btfsc	status,0,c
 18754  00316A  EFB9  F018         	goto	u5961
 18755  00316E  EFBB  F018         	goto	u5960
 18756  003172                     u5961:
 18757  003172  EFE6  F018         	goto	l7679
 18758  003176                     u5960:
 18759  003176  504A               	movf	___fladd@b^0,w,c
 18760  003178  5C4E               	subwf	___fladd@a^0,w,c
 18761  00317A  6E52               	movwf	??___fladd^0,c
 18762  00317C  504B               	movf	(___fladd@b+1)^0,w,c
 18763  00317E  584F               	subwfb	(___fladd@a+1)^0,w,c
 18764  003180  6E53               	movwf	(??___fladd+1)^0,c
 18765  003182  504C               	movf	(___fladd@b+2)^0,w,c
 18766  003184  5850               	subwfb	(___fladd@a+2)^0,w,c
 18767  003186  6E54               	movwf	(??___fladd+2)^0,c
 18768  003188  504D               	movf	(___fladd@b+3)^0,w,c
 18769  00318A  5851               	subwfb	(___fladd@a+3)^0,w,c
 18770  00318C  6E55               	movwf	(??___fladd+3)^0,c
 18771  00318E  0EFF               	movlw	255
 18772  003190  2452               	addwf	??___fladd^0,w,c
 18773  003192  6E4A               	movwf	___fladd@b^0,c
 18774  003194  0EFF               	movlw	255
 18775  003196  2053               	addwfc	(??___fladd+1)^0,w,c
 18776  003198  6E4B               	movwf	(___fladd@b+1)^0,c
 18777  00319A  0EFF               	movlw	255
 18778  00319C  2054               	addwfc	(??___fladd+2)^0,w,c
 18779  00319E  6E4C               	movwf	(___fladd@b+2)^0,c
 18780  0031A0  0EFF               	movlw	255
 18781  0031A2  2055               	addwfc	(??___fladd+3)^0,w,c
 18782  0031A4  6E4D               	movwf	(___fladd@b+3)^0,c
 18783  0031A6  0E80               	movlw	128
 18784  0031A8  1A56               	xorwf	___fladd@signs^0,f,c
 18785  0031AA  6C59               	negf	___fladd@grs^0,c
 18786  0031AC  5059               	movf	___fladd@grs^0,w,c
 18787  0031AE  A4D8               	btfss	status,2,c
 18788  0031B0  EFDC  F018         	goto	u5971
 18789  0031B4  EFDE  F018         	goto	u5970
 18790  0031B8                     u5971:
 18791  0031B8  EFEE  F018         	goto	l2367
 18792  0031BC                     u5970:
 18793  0031BC  0E01               	movlw	1
 18794  0031BE  264A               	addwf	___fladd@b^0,f,c
 18795  0031C0  0E00               	movlw	0
 18796  0031C2  224B               	addwfc	(___fladd@b+1)^0,f,c
 18797  0031C4  224C               	addwfc	(___fladd@b+2)^0,f,c
 18798  0031C6  224D               	addwfc	(___fladd@b+3)^0,f,c
 18799  0031C8  EFEE  F018         	goto	l2367
 18800  0031CC                     l7679:
 18801  0031CC  504E               	movf	___fladd@a^0,w,c
 18802  0031CE  5E4A               	subwf	___fladd@b^0,f,c
 18803  0031D0  504F               	movf	(___fladd@a+1)^0,w,c
 18804  0031D2  5A4B               	subwfb	(___fladd@b+1)^0,f,c
 18805  0031D4  5050               	movf	(___fladd@a+2)^0,w,c
 18806  0031D6  5A4C               	subwfb	(___fladd@b+2)^0,f,c
 18807  0031D8  5051               	movf	(___fladd@a+3)^0,w,c
 18808  0031DA  5A4D               	subwfb	(___fladd@b+3)^0,f,c
 18809  0031DC                     l2367:
 18810  0031DC  504A               	movf	___fladd@b^0,w,c
 18811  0031DE  104B               	iorwf	(___fladd@b+1)^0,w,c
 18812  0031E0  104C               	iorwf	(___fladd@b+2)^0,w,c
 18813  0031E2  104D               	iorwf	(___fladd@b+3)^0,w,c
 18814  0031E4  A4D8               	btfss	status,2,c
 18815  0031E6  EFF7  F018         	goto	u5981
 18816  0031EA  EFF9  F018         	goto	u5980
 18817  0031EE                     u5981:
 18818  0031EE  EF2E  F019         	goto	l7703
 18819  0031F2                     u5980:
 18820  0031F2  5059               	movf	___fladd@grs^0,w,c
 18821  0031F4  A4D8               	btfss	status,2,c
 18822  0031F6  EFFF  F018         	goto	u5991
 18823  0031FA  EF01  F019         	goto	u5990
 18824  0031FE                     u5991:
 18825  0031FE  EF2E  F019         	goto	l7703
 18826  003202                     u5990:
 18827  003202  0E00               	movlw	0
 18828  003204  6E4A               	movwf	?___fladd^0,c
 18829  003206  0E00               	movlw	0
 18830  003208  6E4B               	movwf	(?___fladd+1)^0,c
 18831  00320A  0E00               	movlw	0
 18832  00320C  6E4C               	movwf	(?___fladd+2)^0,c
 18833  00320E  0E00               	movlw	0
 18834  003210  6E4D               	movwf	(?___fladd+3)^0,c
 18835  003212  EFC9  F019         	goto	l2359
 18836  003216                     l7687:
 18837  003216  90D8               	bcf	status,0,c
 18838  003218  364A               	rlcf	___fladd@b^0,f,c
 18839  00321A  364B               	rlcf	(___fladd@b+1)^0,f,c
 18840  00321C  364C               	rlcf	(___fladd@b+2)^0,f,c
 18841  00321E  364D               	rlcf	(___fladd@b+3)^0,f,c
 18842  003220  AE59               	btfss	___fladd@grs^0,7,c
 18843  003222  EF15  F019         	goto	u6001
 18844  003226  EF17  F019         	goto	u6000
 18845  00322A                     u6001:
 18846  00322A  EF18  F019         	goto	l7693
 18847  00322E                     u6000:
 18848  00322E  804A               	bsf	___fladd@b^0,0,c
 18849  003230                     l7693:
 18850  003230  A059               	btfss	___fladd@grs^0,0,c
 18851  003232  EF1D  F019         	goto	u6011
 18852  003236  EF1F  F019         	goto	u6010
 18853  00323A                     u6011:
 18854  00323A  EF23  F019         	goto	l7697
 18855  00323E                     u6010:
 18856  00323E  80D8               	bsf	status,0,c
 18857  003240  3659               	rlcf	___fladd@grs^0,f,c
 18858  003242  EF25  F019         	goto	l7699
 18859  003246                     l7697:
 18860  003246  90D8               	bcf	status,0,c
 18861  003248  3659               	rlcf	___fladd@grs^0,f,c
 18862  00324A                     l7699:
 18863  00324A  5058               	movf	___fladd@bexp^0,w,c
 18864  00324C  B4D8               	btfsc	status,2,c
 18865  00324E  EF2B  F019         	goto	u6021
 18866  003252  EF2D  F019         	goto	u6020
 18867  003256                     u6021:
 18868  003256  EF2E  F019         	goto	l7703
 18869  00325A                     u6020:
 18870  00325A  0658               	decf	___fladd@bexp^0,f,c
 18871  00325C                     l7703:
 18872  00325C  AE4C               	btfss	(___fladd@b+2)^0,7,c
 18873  00325E  EF33  F019         	goto	u6031
 18874  003262  EF35  F019         	goto	u6030
 18875  003266                     u6031:
 18876  003266  EF0B  F019         	goto	l7687
 18877  00326A                     u6030:
 18878  00326A                     l7705:
 18879  00326A  0E00               	movlw	0
 18880  00326C  6E57               	movwf	___fladd@aexp^0,c
 18881  00326E  AE59               	btfss	___fladd@grs^0,7,c
 18882  003270  EF3C  F019         	goto	u6041
 18883  003274  EF3E  F019         	goto	u6040
 18884  003278                     u6041:
 18885  003278  EF56  F019         	goto	l2376
 18886  00327C                     u6040:
 18887  00327C  C059  F052         	movff	___fladd@grs,??___fladd
 18888  003280  0E7F               	movlw	127
 18889  003282  1652               	andwf	??___fladd^0,f,c
 18890  003284  B4D8               	btfsc	status,2,c
 18891  003286  EF47  F019         	goto	u6051
 18892  00328A  EF49  F019         	goto	u6050
 18893  00328E                     u6051:
 18894  00328E  EF4D  F019         	goto	l2377
 18895  003292                     u6050:
 18896  003292                     l7711:
 18897  003292  0E01               	movlw	1
 18898  003294  6E57               	movwf	___fladd@aexp^0,c
 18899  003296  EF56  F019         	goto	l2376
 18900  00329A                     l2377:
 18901  00329A  A04A               	btfss	___fladd@b^0,0,c
 18902  00329C  EF52  F019         	goto	u6061
 18903  0032A0  EF54  F019         	goto	u6060
 18904  0032A4                     u6061:
 18905  0032A4  EF56  F019         	goto	l2376
 18906  0032A8                     u6060:
 18907  0032A8  EF49  F019         	goto	l7711
 18908  0032AC                     l2376:
 18909  0032AC  5057               	movf	___fladd@aexp^0,w,c
 18910  0032AE  B4D8               	btfsc	status,2,c
 18911  0032B0  EF5C  F019         	goto	u6071
 18912  0032B4  EF5E  F019         	goto	u6070
 18913  0032B8                     u6071:
 18914  0032B8  EF89  F019         	goto	l7723
 18915  0032BC                     u6070:
 18916  0032BC  0E01               	movlw	1
 18917  0032BE  264A               	addwf	___fladd@b^0,f,c
 18918  0032C0  0E00               	movlw	0
 18919  0032C2  224B               	addwfc	(___fladd@b+1)^0,f,c
 18920  0032C4  224C               	addwfc	(___fladd@b+2)^0,f,c
 18921  0032C6  224D               	addwfc	(___fladd@b+3)^0,f,c
 18922  0032C8  A04D               	btfss	(___fladd@b+3)^0,0,c
 18923  0032CA  EF69  F019         	goto	u6081
 18924  0032CE  EF6B  F019         	goto	u6080
 18925  0032D2                     u6081:
 18926  0032D2  EF89  F019         	goto	l7723
 18927  0032D6                     u6080:
 18928  0032D6  C04A  F052         	movff	___fladd@b,??___fladd
 18929  0032DA  C04B  F053         	movff	___fladd@b+1,??___fladd+1
 18930  0032DE  C04C  F054         	movff	___fladd@b+2,??___fladd+2
 18931  0032E2  C04D  F055         	movff	___fladd@b+3,??___fladd+3
 18932  0032E6  3455               	rlcf	(??___fladd+3)^0,w,c
 18933  0032E8  3255               	rrcf	(??___fladd+3)^0,f,c
 18934  0032EA  3254               	rrcf	(??___fladd+2)^0,f,c
 18935  0032EC  3253               	rrcf	(??___fladd+1)^0,f,c
 18936  0032EE  3252               	rrcf	??___fladd^0,f,c
 18937  0032F0  C052  F04A         	movff	??___fladd,___fladd@b
 18938  0032F4  C053  F04B         	movff	??___fladd+1,___fladd@b+1
 18939  0032F8  C054  F04C         	movff	??___fladd+2,___fladd@b+2
 18940  0032FC  C055  F04D         	movff	??___fladd+3,___fladd@b+3
 18941  003300  2858               	incf	___fladd@bexp^0,w,c
 18942  003302  B4D8               	btfsc	status,2,c
 18943  003304  EF86  F019         	goto	u6091
 18944  003308  EF88  F019         	goto	u6090
 18945  00330C                     u6091:
 18946  00330C  EF89  F019         	goto	l7723
 18947  003310                     u6090:
 18948  003310  2A58               	incf	___fladd@bexp^0,f,c
 18949  003312                     l7723:
 18950  003312  2858               	incf	___fladd@bexp^0,w,c
 18951  003314  B4D8               	btfsc	status,2,c
 18952  003316  EF8F  F019         	goto	u6101
 18953  00331A  EF91  F019         	goto	u6100
 18954  00331E                     u6101:
 18955  00331E  EF99  F019         	goto	l7727
 18956  003322                     u6100:
 18957  003322  5058               	movf	___fladd@bexp^0,w,c
 18958  003324  A4D8               	btfss	status,2,c
 18959  003326  EF97  F019         	goto	u6111
 18960  00332A  EF99  F019         	goto	u6110
 18961  00332E                     u6111:
 18962  00332E  EFAB  F019         	goto	l7731
 18963  003332                     u6110:
 18964  003332                     l7727:
 18965  003332  0E00               	movlw	0
 18966  003334  6E4A               	movwf	___fladd@b^0,c
 18967  003336  0E00               	movlw	0
 18968  003338  6E4B               	movwf	(___fladd@b+1)^0,c
 18969  00333A  0E00               	movlw	0
 18970  00333C  6E4C               	movwf	(___fladd@b+2)^0,c
 18971  00333E  0E00               	movlw	0
 18972  003340  6E4D               	movwf	(___fladd@b+3)^0,c
 18973  003342  5058               	movf	___fladd@bexp^0,w,c
 18974  003344  A4D8               	btfss	status,2,c
 18975  003346  EFA7  F019         	goto	u6121
 18976  00334A  EFA9  F019         	goto	u6120
 18977  00334E                     u6121:
 18978  00334E  EFAB  F019         	goto	l7731
 18979  003352                     u6120:
 18980  003352  0E00               	movlw	0
 18981  003354  6E56               	movwf	___fladd@signs^0,c
 18982  003356                     l7731:
 18983  003356  A058               	btfss	___fladd@bexp^0,0,c
 18984  003358  EFB0  F019         	goto	u6131
 18985  00335C  EFB2  F019         	goto	u6130
 18986  003360                     u6131:
 18987  003360  EFB5  F019         	goto	l7735
 18988  003364                     u6130:
 18989  003364  8E4C               	bsf	(___fladd@b+2)^0,7,c
 18990  003366  EFB6  F019         	goto	l7737
 18991  00336A                     l7735:
 18992  00336A  9E4C               	bcf	(___fladd@b+2)^0,7,c
 18993  00336C                     l7737:
 18994  00336C  90D8               	bcf	status,0,c
 18995  00336E  3058               	rrcf	___fladd@bexp^0,w,c
 18996  003370  6E4D               	movwf	(___fladd@b+3)^0,c
 18997  003372  AE56               	btfss	___fladd@signs^0,7,c
 18998  003374  EFBE  F019         	goto	u6141
 18999  003378  EFC0  F019         	goto	u6140
 19000  00337C                     u6141:
 19001  00337C  EFC1  F019         	goto	l7743
 19002  003380                     u6140:
 19003  003380  8E4D               	bsf	(___fladd@b+3)^0,7,c
 19004  003382                     l7743:
 19005  003382  C04A  F04A         	movff	___fladd@b,?___fladd
 19006  003386  C04B  F04B         	movff	___fladd@b+1,?___fladd+1
 19007  00338A  C04C  F04C         	movff	___fladd@b+2,?___fladd+2
 19008  00338E  C04D  F04D         	movff	___fladd@b+3,?___fladd+3
 19009  003392                     l2359:
 19010  003392  0012               	return		;funcret
 19011  003394                     __end_of___fladd:
 19012                           	callstack 0
 19013                           
 19014 ;; *************** function ___flmul *****************
 19015 ;; Defined at:
 19016 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
 19017 ;; Parameters:    Size  Location     Type
 19018 ;;  b               4   48[COMRAM] unsigned char 
 19019 ;;  a               4   52[COMRAM] unsigned char 
 19020 ;; Auto vars:     Size  Location     Type
 19021 ;;  prod            4   67[COMRAM] struct .
 19022 ;;  grs             4   61[COMRAM] unsigned long 
 19023 ;;  temp            2   71[COMRAM] struct .
 19024 ;;  bexp            1   66[COMRAM] unsigned char 
 19025 ;;  aexp            1   65[COMRAM] unsigned char 
 19026 ;;  sign            1   60[COMRAM] unsigned char 
 19027 ;; Return value:  Size  Location     Type
 19028 ;;                  4   48[COMRAM] unsigned char 
 19029 ;; Registers used:
 19030 ;;		wreg, status,2, status,0, prodl, prodh
 19031 ;; Tracked objects:
 19032 ;;		On entry : 0/0
 19033 ;;		On exit  : 0/0
 19034 ;;		Unchanged: 0/0
 19035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19036 ;;      Params:         8       0       0       0       0       0       0       0       0
 19037 ;;      Locals:        13       0       0       0       0       0       0       0       0
 19038 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19039 ;;      Totals:        25       0       0       0       0       0       0       0       0
 19040 ;;Total ram usage:       25 bytes
 19041 ;; Hardware stack levels used:    1
 19042 ;; Hardware stack levels required when called:    2
 19043 ;; This function calls:
 19044 ;;		Nothing
 19045 ;; This function is called by:
 19046 ;;		_MPU6050_dmpGetLinearAccel
 19047 ;;		_MPU6050_dmpGetGravityVF
 19048 ;;		_controlReceive
 19049 ;;		_main
 19050 ;;		_atanf
 19051 ;;		_efgtoa
 19052 ;;		_MPU6050_CalibrateGyro
 19053 ;;		_MPU6050_CalibrateAccel
 19054 ;;		_MPU6050_PID
 19055 ;;		_getProductQ
 19056 ;;		_getMagnitudeQ
 19057 ;;		_getMagnitudeVF
 19058 ;;		_MPU6050_dmpGetEuler
 19059 ;;		_MPU6050_dmpGetYawPitchRoll
 19060 ;;		_roundf
 19061 ;;		_sqrtf
 19062 ;; This function uses a non-reentrant model
 19063 ;;
 19064                           
 19065                           	psect	text63
 19066  003394                     __ptext63:
 19067                           	callstack 0
 19068  003394                     ___flmul:
 19069                           	callstack 24
 19070  003394  5034               	movf	(___flmul@b+3)^0,w,c
 19071  003396  0B80               	andlw	128
 19072  003398  6E3D               	movwf	___flmul@sign^0,c
 19073  00339A  5034               	movf	(___flmul@b+3)^0,w,c
 19074  00339C  2434               	addwf	(___flmul@b+3)^0,w,c
 19075  00339E  6E43               	movwf	___flmul@bexp^0,c
 19076  0033A0  AE33               	btfss	(___flmul@b+2)^0,7,c
 19077  0033A2  EFD5  F019         	goto	u6421
 19078  0033A6  EFD7  F019         	goto	u6420
 19079  0033AA                     u6421:
 19080  0033AA  EFD8  F019         	goto	l7921
 19081  0033AE                     u6420:
 19082  0033AE  8043               	bsf	___flmul@bexp^0,0,c
 19083  0033B0                     l7921:
 19084  0033B0  5043               	movf	___flmul@bexp^0,w,c
 19085  0033B2  B4D8               	btfsc	status,2,c
 19086  0033B4  EFDE  F019         	goto	u6431
 19087  0033B8  EFE0  F019         	goto	u6430
 19088  0033BC                     u6431:
 19089  0033BC  EFF3  F019         	goto	l7929
 19090  0033C0                     u6430:
 19091  0033C0  2843               	incf	___flmul@bexp^0,w,c
 19092  0033C2  A4D8               	btfss	status,2,c
 19093  0033C4  EFE6  F019         	goto	u6441
 19094  0033C8  EFE8  F019         	goto	u6440
 19095  0033CC                     u6441:
 19096  0033CC  EFF0  F019         	goto	l7927
 19097  0033D0                     u6440:
 19098  0033D0  0E00               	movlw	0
 19099  0033D2  6E31               	movwf	___flmul@b^0,c
 19100  0033D4  0E00               	movlw	0
 19101  0033D6  6E32               	movwf	(___flmul@b+1)^0,c
 19102  0033D8  0E00               	movlw	0
 19103  0033DA  6E33               	movwf	(___flmul@b+2)^0,c
 19104  0033DC  0E00               	movlw	0
 19105  0033DE  6E34               	movwf	(___flmul@b+3)^0,c
 19106  0033E0                     l7927:
 19107  0033E0  8E33               	bsf	(___flmul@b+2)^0,7,c
 19108  0033E2  EFFB  F019         	goto	l7931
 19109  0033E6                     l7929:
 19110  0033E6  0E00               	movlw	0
 19111  0033E8  6E31               	movwf	___flmul@b^0,c
 19112  0033EA  0E00               	movlw	0
 19113  0033EC  6E32               	movwf	(___flmul@b+1)^0,c
 19114  0033EE  0E00               	movlw	0
 19115  0033F0  6E33               	movwf	(___flmul@b+2)^0,c
 19116  0033F2  0E00               	movlw	0
 19117  0033F4  6E34               	movwf	(___flmul@b+3)^0,c
 19118  0033F6                     l7931:
 19119  0033F6  5038               	movf	(___flmul@a+3)^0,w,c
 19120  0033F8  0B80               	andlw	128
 19121  0033FA  1A3D               	xorwf	___flmul@sign^0,f,c
 19122  0033FC  5038               	movf	(___flmul@a+3)^0,w,c
 19123  0033FE  2438               	addwf	(___flmul@a+3)^0,w,c
 19124  003400  6E42               	movwf	___flmul@aexp^0,c
 19125  003402  AE37               	btfss	(___flmul@a+2)^0,7,c
 19126  003404  EF06  F01A         	goto	u6451
 19127  003408  EF08  F01A         	goto	u6450
 19128  00340C                     u6451:
 19129  00340C  EF09  F01A         	goto	l7939
 19130  003410                     u6450:
 19131  003410  8042               	bsf	___flmul@aexp^0,0,c
 19132  003412                     l7939:
 19133  003412  5042               	movf	___flmul@aexp^0,w,c
 19134  003414  B4D8               	btfsc	status,2,c
 19135  003416  EF0F  F01A         	goto	u6461
 19136  00341A  EF11  F01A         	goto	u6460
 19137  00341E                     u6461:
 19138  00341E  EF24  F01A         	goto	l7947
 19139  003422                     u6460:
 19140  003422  2842               	incf	___flmul@aexp^0,w,c
 19141  003424  A4D8               	btfss	status,2,c
 19142  003426  EF17  F01A         	goto	u6471
 19143  00342A  EF19  F01A         	goto	u6470
 19144  00342E                     u6471:
 19145  00342E  EF21  F01A         	goto	l7945
 19146  003432                     u6470:
 19147  003432  0E00               	movlw	0
 19148  003434  6E35               	movwf	___flmul@a^0,c
 19149  003436  0E00               	movlw	0
 19150  003438  6E36               	movwf	(___flmul@a+1)^0,c
 19151  00343A  0E00               	movlw	0
 19152  00343C  6E37               	movwf	(___flmul@a+2)^0,c
 19153  00343E  0E00               	movlw	0
 19154  003440  6E38               	movwf	(___flmul@a+3)^0,c
 19155  003442                     l7945:
 19156  003442  8E37               	bsf	(___flmul@a+2)^0,7,c
 19157  003444  EF2C  F01A         	goto	l2436
 19158  003448                     l7947:
 19159  003448  0E00               	movlw	0
 19160  00344A  6E35               	movwf	___flmul@a^0,c
 19161  00344C  0E00               	movlw	0
 19162  00344E  6E36               	movwf	(___flmul@a+1)^0,c
 19163  003450  0E00               	movlw	0
 19164  003452  6E37               	movwf	(___flmul@a+2)^0,c
 19165  003454  0E00               	movlw	0
 19166  003456  6E38               	movwf	(___flmul@a+3)^0,c
 19167  003458                     l2436:
 19168  003458  5042               	movf	___flmul@aexp^0,w,c
 19169  00345A  B4D8               	btfsc	status,2,c
 19170  00345C  EF32  F01A         	goto	u6481
 19171  003460  EF34  F01A         	goto	u6480
 19172  003464                     u6481:
 19173  003464  EF3C  F01A         	goto	l7951
 19174  003468                     u6480:
 19175  003468  5043               	movf	___flmul@bexp^0,w,c
 19176  00346A  A4D8               	btfss	status,2,c
 19177  00346C  EF3A  F01A         	goto	u6491
 19178  003470  EF3C  F01A         	goto	u6490
 19179  003474                     u6491:
 19180  003474  EF46  F01A         	goto	l7955
 19181  003478                     u6490:
 19182  003478                     l7951:
 19183  003478  0E00               	movlw	0
 19184  00347A  6E31               	movwf	?___flmul^0,c
 19185  00347C  0E00               	movlw	0
 19186  00347E  6E32               	movwf	(?___flmul+1)^0,c
 19187  003480  0E00               	movlw	0
 19188  003482  6E33               	movwf	(?___flmul+2)^0,c
 19189  003484  0E00               	movlw	0
 19190  003486  6E34               	movwf	(?___flmul+3)^0,c
 19191  003488  EFDE  F01B         	goto	l2440
 19192  00348C                     l7955:
 19193  00348C  5037               	movf	(___flmul@a+2)^0,w,c
 19194  00348E  0231               	mulwf	___flmul@b^0,c
 19195  003490  CFF3 F048          	movff	prodl,___flmul@temp
 19196  003494  CFF4 F049          	movff	prodh,___flmul@temp+1
 19197  003498  5048               	movf	___flmul@temp^0,w,c
 19198  00349A  6E3E               	movwf	___flmul@grs^0,c
 19199  00349C  6A3F               	clrf	(___flmul@grs+1)^0,c
 19200  00349E  6A40               	clrf	(___flmul@grs+2)^0,c
 19201  0034A0  6A41               	clrf	(___flmul@grs+3)^0,c
 19202  0034A2  5049               	movf	(___flmul@temp+1)^0,w,c
 19203  0034A4  6E44               	movwf	___flmul@prod^0,c
 19204  0034A6  6A45               	clrf	(___flmul@prod+1)^0,c
 19205  0034A8  6A46               	clrf	(___flmul@prod+2)^0,c
 19206  0034AA  6A47               	clrf	(___flmul@prod+3)^0,c
 19207  0034AC  5036               	movf	(___flmul@a+1)^0,w,c
 19208  0034AE  0232               	mulwf	(___flmul@b+1)^0,c
 19209  0034B0  CFF3 F048          	movff	prodl,___flmul@temp
 19210  0034B4  CFF4 F049          	movff	prodh,___flmul@temp+1
 19211  0034B8  5048               	movf	___flmul@temp^0,w,c
 19212  0034BA  263E               	addwf	___flmul@grs^0,f,c
 19213  0034BC  0E00               	movlw	0
 19214  0034BE  223F               	addwfc	(___flmul@grs+1)^0,f,c
 19215  0034C0  2240               	addwfc	(___flmul@grs+2)^0,f,c
 19216  0034C2  2241               	addwfc	(___flmul@grs+3)^0,f,c
 19217  0034C4  5049               	movf	(___flmul@temp+1)^0,w,c
 19218  0034C6  2644               	addwf	___flmul@prod^0,f,c
 19219  0034C8  0E00               	movlw	0
 19220  0034CA  2245               	addwfc	(___flmul@prod+1)^0,f,c
 19221  0034CC  2246               	addwfc	(___flmul@prod+2)^0,f,c
 19222  0034CE  2247               	addwfc	(___flmul@prod+3)^0,f,c
 19223  0034D0  5035               	movf	___flmul@a^0,w,c
 19224  0034D2  0233               	mulwf	(___flmul@b+2)^0,c
 19225  0034D4  CFF3 F048          	movff	prodl,___flmul@temp
 19226  0034D8  CFF4 F049          	movff	prodh,___flmul@temp+1
 19227  0034DC  5048               	movf	___flmul@temp^0,w,c
 19228  0034DE  263E               	addwf	___flmul@grs^0,f,c
 19229  0034E0  0E00               	movlw	0
 19230  0034E2  223F               	addwfc	(___flmul@grs+1)^0,f,c
 19231  0034E4  2240               	addwfc	(___flmul@grs+2)^0,f,c
 19232  0034E6  2241               	addwfc	(___flmul@grs+3)^0,f,c
 19233  0034E8  5049               	movf	(___flmul@temp+1)^0,w,c
 19234  0034EA  2644               	addwf	___flmul@prod^0,f,c
 19235  0034EC  0E00               	movlw	0
 19236  0034EE  2245               	addwfc	(___flmul@prod+1)^0,f,c
 19237  0034F0  2246               	addwfc	(___flmul@prod+2)^0,f,c
 19238  0034F2  2247               	addwfc	(___flmul@prod+3)^0,f,c
 19239  0034F4  C040  F041         	movff	___flmul@grs+2,___flmul@grs+3
 19240  0034F8  C03F  F040         	movff	___flmul@grs+1,___flmul@grs+2
 19241  0034FC  C03E  F03F         	movff	___flmul@grs,___flmul@grs+1
 19242  003500  6A3E               	clrf	___flmul@grs^0,c
 19243  003502  5035               	movf	___flmul@a^0,w,c
 19244  003504  0232               	mulwf	(___flmul@b+1)^0,c
 19245  003506  CFF3 F048          	movff	prodl,___flmul@temp
 19246  00350A  CFF4 F049          	movff	prodh,___flmul@temp+1
 19247  00350E  5048               	movf	___flmul@temp^0,w,c
 19248  003510  263E               	addwf	___flmul@grs^0,f,c
 19249  003512  5049               	movf	(___flmul@temp+1)^0,w,c
 19250  003514  223F               	addwfc	(___flmul@grs+1)^0,f,c
 19251  003516  0E00               	movlw	0
 19252  003518  2240               	addwfc	(___flmul@grs+2)^0,f,c
 19253  00351A  0E00               	movlw	0
 19254  00351C  2241               	addwfc	(___flmul@grs+3)^0,f,c
 19255  00351E  5036               	movf	(___flmul@a+1)^0,w,c
 19256  003520  0231               	mulwf	___flmul@b^0,c
 19257  003522  CFF3 F048          	movff	prodl,___flmul@temp
 19258  003526  CFF4 F049          	movff	prodh,___flmul@temp+1
 19259  00352A  5048               	movf	___flmul@temp^0,w,c
 19260  00352C  263E               	addwf	___flmul@grs^0,f,c
 19261  00352E  5049               	movf	(___flmul@temp+1)^0,w,c
 19262  003530  223F               	addwfc	(___flmul@grs+1)^0,f,c
 19263  003532  0E00               	movlw	0
 19264  003534  2240               	addwfc	(___flmul@grs+2)^0,f,c
 19265  003536  0E00               	movlw	0
 19266  003538  2241               	addwfc	(___flmul@grs+3)^0,f,c
 19267  00353A  C040  F041         	movff	___flmul@grs+2,___flmul@grs+3
 19268  00353E  C03F  F040         	movff	___flmul@grs+1,___flmul@grs+2
 19269  003542  C03E  F03F         	movff	___flmul@grs,___flmul@grs+1
 19270  003546  6A3E               	clrf	___flmul@grs^0,c
 19271  003548  5035               	movf	___flmul@a^0,w,c
 19272  00354A  0231               	mulwf	___flmul@b^0,c
 19273  00354C  CFF3 F048          	movff	prodl,___flmul@temp
 19274  003550  CFF4 F049          	movff	prodh,___flmul@temp+1
 19275  003554  5048               	movf	___flmul@temp^0,w,c
 19276  003556  263E               	addwf	___flmul@grs^0,f,c
 19277  003558  5049               	movf	(___flmul@temp+1)^0,w,c
 19278  00355A  223F               	addwfc	(___flmul@grs+1)^0,f,c
 19279  00355C  0E00               	movlw	0
 19280  00355E  2240               	addwfc	(___flmul@grs+2)^0,f,c
 19281  003560  0E00               	movlw	0
 19282  003562  2241               	addwfc	(___flmul@grs+3)^0,f,c
 19283  003564  5037               	movf	(___flmul@a+2)^0,w,c
 19284  003566  0232               	mulwf	(___flmul@b+1)^0,c
 19285  003568  CFF3 F048          	movff	prodl,___flmul@temp
 19286  00356C  CFF4 F049          	movff	prodh,___flmul@temp+1
 19287  003570  5048               	movf	___flmul@temp^0,w,c
 19288  003572  2644               	addwf	___flmul@prod^0,f,c
 19289  003574  5049               	movf	(___flmul@temp+1)^0,w,c
 19290  003576  2245               	addwfc	(___flmul@prod+1)^0,f,c
 19291  003578  0E00               	movlw	0
 19292  00357A  2246               	addwfc	(___flmul@prod+2)^0,f,c
 19293  00357C  0E00               	movlw	0
 19294  00357E  2247               	addwfc	(___flmul@prod+3)^0,f,c
 19295  003580  5036               	movf	(___flmul@a+1)^0,w,c
 19296  003582  0233               	mulwf	(___flmul@b+2)^0,c
 19297  003584  CFF3 F048          	movff	prodl,___flmul@temp
 19298  003588  CFF4 F049          	movff	prodh,___flmul@temp+1
 19299  00358C  5048               	movf	___flmul@temp^0,w,c
 19300  00358E  2644               	addwf	___flmul@prod^0,f,c
 19301  003590  5049               	movf	(___flmul@temp+1)^0,w,c
 19302  003592  2245               	addwfc	(___flmul@prod+1)^0,f,c
 19303  003594  0E00               	movlw	0
 19304  003596  2246               	addwfc	(___flmul@prod+2)^0,f,c
 19305  003598  0E00               	movlw	0
 19306  00359A  2247               	addwfc	(___flmul@prod+3)^0,f,c
 19307  00359C  5037               	movf	(___flmul@a+2)^0,w,c
 19308  00359E  0233               	mulwf	(___flmul@b+2)^0,c
 19309  0035A0  CFF3 F048          	movff	prodl,___flmul@temp
 19310  0035A4  CFF4 F049          	movff	prodh,___flmul@temp+1
 19311  0035A8  5048               	movf	___flmul@temp^0,w,c
 19312  0035AA  6E39               	movwf	??___flmul^0,c
 19313  0035AC  5049               	movf	(___flmul@temp+1)^0,w,c
 19314  0035AE  6E3A               	movwf	(??___flmul+1)^0,c
 19315  0035B0  6A3B               	clrf	(??___flmul+2)^0,c
 19316  0035B2  6A3C               	clrf	(??___flmul+3)^0,c
 19317  0035B4  C03B  F03C         	movff	??___flmul+2,??___flmul+3
 19318  0035B8  C03A  F03B         	movff	??___flmul+1,??___flmul+2
 19319  0035BC  C039  F03A         	movff	??___flmul,??___flmul+1
 19320  0035C0  6A39               	clrf	??___flmul^0,c
 19321  0035C2  5039               	movf	??___flmul^0,w,c
 19322  0035C4  2644               	addwf	___flmul@prod^0,f,c
 19323  0035C6  503A               	movf	(??___flmul+1)^0,w,c
 19324  0035C8  2245               	addwfc	(___flmul@prod+1)^0,f,c
 19325  0035CA  503B               	movf	(??___flmul+2)^0,w,c
 19326  0035CC  2246               	addwfc	(___flmul@prod+2)^0,f,c
 19327  0035CE  503C               	movf	(??___flmul+3)^0,w,c
 19328  0035D0  2247               	addwfc	(___flmul@prod+3)^0,f,c
 19329  0035D2  C03E  F039         	movff	___flmul@grs,??___flmul
 19330  0035D6  C03F  F03A         	movff	___flmul@grs+1,??___flmul+1
 19331  0035DA  C040  F03B         	movff	___flmul@grs+2,??___flmul+2
 19332  0035DE  C041  F03C         	movff	___flmul@grs+3,??___flmul+3
 19333  0035E2  0E19               	movlw	25
 19334  0035E4  EFF9  F01A         	goto	u6500
 19335  0035E8                     u6505:
 19336  0035E8  90D8               	bcf	status,0,c
 19337  0035EA  323C               	rrcf	(??___flmul+3)^0,f,c
 19338  0035EC  323B               	rrcf	(??___flmul+2)^0,f,c
 19339  0035EE  323A               	rrcf	(??___flmul+1)^0,f,c
 19340  0035F0  3239               	rrcf	??___flmul^0,f,c
 19341  0035F2                     u6500:
 19342  0035F2  2EE8               	decfsz	wreg,f,c
 19343  0035F4  EFF4  F01A         	goto	u6505
 19344  0035F8  5039               	movf	??___flmul^0,w,c
 19345  0035FA  2644               	addwf	___flmul@prod^0,f,c
 19346  0035FC  503A               	movf	(??___flmul+1)^0,w,c
 19347  0035FE  2245               	addwfc	(___flmul@prod+1)^0,f,c
 19348  003600  503B               	movf	(??___flmul+2)^0,w,c
 19349  003602  2246               	addwfc	(___flmul@prod+2)^0,f,c
 19350  003604  503C               	movf	(??___flmul+3)^0,w,c
 19351  003606  2247               	addwfc	(___flmul@prod+3)^0,f,c
 19352  003608  C040  F041         	movff	___flmul@grs+2,___flmul@grs+3
 19353  00360C  C03F  F040         	movff	___flmul@grs+1,___flmul@grs+2
 19354  003610  C03E  F03F         	movff	___flmul@grs,___flmul@grs+1
 19355  003614  6A3E               	clrf	___flmul@grs^0,c
 19356  003616  5042               	movf	___flmul@aexp^0,w,c
 19357  003618  C043  F039         	movff	___flmul@bexp,??___flmul
 19358  00361C  6A3A               	clrf	(??___flmul+1)^0,c
 19359  00361E  2639               	addwf	??___flmul^0,f,c
 19360  003620  0E00               	movlw	0
 19361  003622  223A               	addwfc	(??___flmul+1)^0,f,c
 19362  003624  0E82               	movlw	130
 19363  003626  2439               	addwf	??___flmul^0,w,c
 19364  003628  6E48               	movwf	___flmul@temp^0,c
 19365  00362A  0EFF               	movlw	255
 19366  00362C  203A               	addwfc	(??___flmul+1)^0,w,c
 19367  00362E  6E49               	movwf	(___flmul@temp+1)^0,c
 19368  003630  EF2F  F01B         	goto	l8003
 19369  003634                     l7997:
 19370  003634  90D8               	bcf	status,0,c
 19371  003636  3644               	rlcf	___flmul@prod^0,f,c
 19372  003638  3645               	rlcf	(___flmul@prod+1)^0,f,c
 19373  00363A  3646               	rlcf	(___flmul@prod+2)^0,f,c
 19374  00363C  3647               	rlcf	(___flmul@prod+3)^0,f,c
 19375  00363E  AE41               	btfss	(___flmul@grs+3)^0,7,c
 19376  003640  EF24  F01B         	goto	u6511
 19377  003644  EF26  F01B         	goto	u6510
 19378  003648                     u6511:
 19379  003648  EF27  F01B         	goto	l2443
 19380  00364C                     u6510:
 19381  00364C  8044               	bsf	___flmul@prod^0,0,c
 19382  00364E                     l2443:
 19383  00364E  90D8               	bcf	status,0,c
 19384  003650  363E               	rlcf	___flmul@grs^0,f,c
 19385  003652  363F               	rlcf	(___flmul@grs+1)^0,f,c
 19386  003654  3640               	rlcf	(___flmul@grs+2)^0,f,c
 19387  003656  3641               	rlcf	(___flmul@grs+3)^0,f,c
 19388  003658  0648               	decf	___flmul@temp^0,f,c
 19389  00365A  A0D8               	btfss	status,0,c
 19390  00365C  0649               	decf	(___flmul@temp+1)^0,f,c
 19391  00365E                     l8003:
 19392  00365E  AE46               	btfss	(___flmul@prod+2)^0,7,c
 19393  003660  EF34  F01B         	goto	u6521
 19394  003664  EF36  F01B         	goto	u6520
 19395  003668                     u6521:
 19396  003668  EF1A  F01B         	goto	l7997
 19397  00366C                     u6520:
 19398  00366C  0E00               	movlw	0
 19399  00366E  6E42               	movwf	___flmul@aexp^0,c
 19400  003670  AE41               	btfss	(___flmul@grs+3)^0,7,c
 19401  003672  EF3D  F01B         	goto	u6531
 19402  003676  EF3F  F01B         	goto	u6530
 19403  00367A                     u6531:
 19404  00367A  EF63  F01B         	goto	l2445
 19405  00367E                     u6530:
 19406  00367E  0EFF               	movlw	255
 19407  003680  143E               	andwf	___flmul@grs^0,w,c
 19408  003682  6E39               	movwf	??___flmul^0,c
 19409  003684  0EFF               	movlw	255
 19410  003686  143F               	andwf	(___flmul@grs+1)^0,w,c
 19411  003688  6E3A               	movwf	(??___flmul+1)^0,c
 19412  00368A  0EFF               	movlw	255
 19413  00368C  1440               	andwf	(___flmul@grs+2)^0,w,c
 19414  00368E  6E3B               	movwf	(??___flmul+2)^0,c
 19415  003690  0E7F               	movlw	127
 19416  003692  1441               	andwf	(___flmul@grs+3)^0,w,c
 19417  003694  6E3C               	movwf	(??___flmul+3)^0,c
 19418  003696  5039               	movf	??___flmul^0,w,c
 19419  003698  103A               	iorwf	(??___flmul+1)^0,w,c
 19420  00369A  103B               	iorwf	(??___flmul+2)^0,w,c
 19421  00369C  103C               	iorwf	(??___flmul+3)^0,w,c
 19422  00369E  B4D8               	btfsc	status,2,c
 19423  0036A0  EF54  F01B         	goto	u6541
 19424  0036A4  EF56  F01B         	goto	u6540
 19425  0036A8                     u6541:
 19426  0036A8  EF5A  F01B         	goto	l2446
 19427  0036AC                     u6540:
 19428  0036AC                     l8011:
 19429  0036AC  0E01               	movlw	1
 19430  0036AE  6E42               	movwf	___flmul@aexp^0,c
 19431  0036B0  EF63  F01B         	goto	l2445
 19432  0036B4                     l2446:
 19433  0036B4  A044               	btfss	___flmul@prod^0,0,c
 19434  0036B6  EF5F  F01B         	goto	u6551
 19435  0036BA  EF61  F01B         	goto	u6550
 19436  0036BE                     u6551:
 19437  0036BE  EF63  F01B         	goto	l2445
 19438  0036C2                     u6550:
 19439  0036C2  EF56  F01B         	goto	l8011
 19440  0036C6                     l2445:
 19441  0036C6  5042               	movf	___flmul@aexp^0,w,c
 19442  0036C8  B4D8               	btfsc	status,2,c
 19443  0036CA  EF69  F01B         	goto	u6561
 19444  0036CE  EF6B  F01B         	goto	u6560
 19445  0036D2                     u6561:
 19446  0036D2  EF8F  F01B         	goto	l8023
 19447  0036D6                     u6560:
 19448  0036D6  0E01               	movlw	1
 19449  0036D8  2644               	addwf	___flmul@prod^0,f,c
 19450  0036DA  0E00               	movlw	0
 19451  0036DC  2245               	addwfc	(___flmul@prod+1)^0,f,c
 19452  0036DE  2246               	addwfc	(___flmul@prod+2)^0,f,c
 19453  0036E0  2247               	addwfc	(___flmul@prod+3)^0,f,c
 19454  0036E2  A047               	btfss	(___flmul@prod+3)^0,0,c
 19455  0036E4  EF76  F01B         	goto	u6571
 19456  0036E8  EF78  F01B         	goto	u6570
 19457  0036EC                     u6571:
 19458  0036EC  EF8F  F01B         	goto	l8023
 19459  0036F0                     u6570:
 19460  0036F0  C044  F039         	movff	___flmul@prod,??___flmul
 19461  0036F4  C045  F03A         	movff	___flmul@prod+1,??___flmul+1
 19462  0036F8  C046  F03B         	movff	___flmul@prod+2,??___flmul+2
 19463  0036FC  C047  F03C         	movff	___flmul@prod+3,??___flmul+3
 19464  003700  343C               	rlcf	(??___flmul+3)^0,w,c
 19465  003702  323C               	rrcf	(??___flmul+3)^0,f,c
 19466  003704  323B               	rrcf	(??___flmul+2)^0,f,c
 19467  003706  323A               	rrcf	(??___flmul+1)^0,f,c
 19468  003708  3239               	rrcf	??___flmul^0,f,c
 19469  00370A  C039  F044         	movff	??___flmul,___flmul@prod
 19470  00370E  C03A  F045         	movff	??___flmul+1,___flmul@prod+1
 19471  003712  C03B  F046         	movff	??___flmul+2,___flmul@prod+2
 19472  003716  C03C  F047         	movff	??___flmul+3,___flmul@prod+3
 19473  00371A  4A48               	infsnz	___flmul@temp^0,f,c
 19474  00371C  2A49               	incf	(___flmul@temp+1)^0,f,c
 19475  00371E                     l8023:
 19476  00371E  BE49               	btfsc	(___flmul@temp+1)^0,7,c
 19477  003720  EF9A  F01B         	goto	u6581
 19478  003724  5049               	movf	(___flmul@temp+1)^0,w,c
 19479  003726  E108               	bnz	u6580
 19480  003728  2848               	incf	___flmul@temp^0,w,c
 19481  00372A  A0D8               	btfss	status,0,c
 19482  00372C  EF9A  F01B         	goto	u6581
 19483  003730  EF9C  F01B         	goto	u6580
 19484  003734                     u6581:
 19485  003734  EFA6  F01B         	goto	l8027
 19486  003738                     u6580:
 19487  003738  0E00               	movlw	0
 19488  00373A  6E44               	movwf	___flmul@prod^0,c
 19489  00373C  0E00               	movlw	0
 19490  00373E  6E45               	movwf	(___flmul@prod+1)^0,c
 19491  003740  0E80               	movlw	128
 19492  003742  6E46               	movwf	(___flmul@prod+2)^0,c
 19493  003744  0E7F               	movlw	127
 19494  003746  6E47               	movwf	(___flmul@prod+3)^0,c
 19495  003748  EFD4  F01B         	goto	l8039
 19496  00374C                     l8027:
 19497  00374C  BE49               	btfsc	(___flmul@temp+1)^0,7,c
 19498  00374E  EFB3  F01B         	goto	u6590
 19499  003752  5049               	movf	(___flmul@temp+1)^0,w,c
 19500  003754  E106               	bnz	u6591
 19501  003756  0448               	decf	___flmul@temp^0,w,c
 19502  003758  B0D8               	btfsc	status,0,c
 19503  00375A  EFB1  F01B         	goto	u6591
 19504  00375E  EFB3  F01B         	goto	u6590
 19505  003762                     u6591:
 19506  003762  EFBF  F01B         	goto	l2453
 19507  003766                     u6590:
 19508  003766  0E00               	movlw	0
 19509  003768  6E44               	movwf	___flmul@prod^0,c
 19510  00376A  0E00               	movlw	0
 19511  00376C  6E45               	movwf	(___flmul@prod+1)^0,c
 19512  00376E  0E00               	movlw	0
 19513  003770  6E46               	movwf	(___flmul@prod+2)^0,c
 19514  003772  0E00               	movlw	0
 19515  003774  6E47               	movwf	(___flmul@prod+3)^0,c
 19516  003776  0E00               	movlw	0
 19517  003778  6E3D               	movwf	___flmul@sign^0,c
 19518  00377A  EFD4  F01B         	goto	l8039
 19519  00377E                     l2453:
 19520  00377E  C048  F043         	movff	___flmul@temp,___flmul@bexp
 19521  003782  0EFF               	movlw	255
 19522  003784  1644               	andwf	___flmul@prod^0,f,c
 19523  003786  0EFF               	movlw	255
 19524  003788  1645               	andwf	(___flmul@prod+1)^0,f,c
 19525  00378A  0E7F               	movlw	127
 19526  00378C  1646               	andwf	(___flmul@prod+2)^0,f,c
 19527  00378E  0E00               	movlw	0
 19528  003790  1647               	andwf	(___flmul@prod+3)^0,f,c
 19529  003792  A043               	btfss	___flmul@bexp^0,0,c
 19530  003794  EFCE  F01B         	goto	u6601
 19531  003798  EFD0  F01B         	goto	u6600
 19532  00379C                     u6601:
 19533  00379C  EFD1  F01B         	goto	l8037
 19534  0037A0                     u6600:
 19535  0037A0  8E46               	bsf	(___flmul@prod+2)^0,7,c
 19536  0037A2                     l8037:
 19537  0037A2  90D8               	bcf	status,0,c
 19538  0037A4  3043               	rrcf	___flmul@bexp^0,w,c
 19539  0037A6  6E47               	movwf	(___flmul@prod+3)^0,c
 19540  0037A8                     l8039:
 19541  0037A8  503D               	movf	___flmul@sign^0,w,c
 19542  0037AA  1247               	iorwf	(___flmul@prod+3)^0,f,c
 19543  0037AC  C044  F031         	movff	___flmul@prod,?___flmul
 19544  0037B0  C045  F032         	movff	___flmul@prod+1,?___flmul+1
 19545  0037B4  C046  F033         	movff	___flmul@prod+2,?___flmul+2
 19546  0037B8  C047  F034         	movff	___flmul@prod+3,?___flmul+3
 19547  0037BC                     l2440:
 19548  0037BC  0012               	return		;funcret
 19549  0037BE                     __end_of___flmul:
 19550                           	callstack 0
 19551                           
 19552 ;; *************** function _MPU6050_dmpGetFIFOPacketSize *****************
 19553 ;; Defined at:
 19554 ;;		line 634 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 19555 ;; Parameters:    Size  Location     Type
 19556 ;;		None
 19557 ;; Auto vars:     Size  Location     Type
 19558 ;;		None
 19559 ;; Return value:  Size  Location     Type
 19560 ;;                  2    3[COMRAM] unsigned short 
 19561 ;; Registers used:
 19562 ;;		None
 19563 ;; Tracked objects:
 19564 ;;		On entry : 0/0
 19565 ;;		On exit  : 0/0
 19566 ;;		Unchanged: 0/0
 19567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19568 ;;      Params:         2       0       0       0       0       0       0       0       0
 19569 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19570 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19571 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19572 ;;Total ram usage:        2 bytes
 19573 ;; Hardware stack levels used:    1
 19574 ;; Hardware stack levels required when called:    2
 19575 ;; This function calls:
 19576 ;;		Nothing
 19577 ;; This function is called by:
 19578 ;;		_main
 19579 ;;		_MPU6050_dmpPacketAvailable
 19580 ;; This function uses a non-reentrant model
 19581 ;;
 19582                           
 19583                           	psect	text64
 19584  006878                     __ptext64:
 19585                           	callstack 0
 19586  006878                     _MPU6050_dmpGetFIFOPacketSize:
 19587                           	callstack 28
 19588  006878                     
 19589                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 635:     return dmpPacketSize;
 19590  006878  C0F6  F004         	movff	_dmpPacketSize,?_MPU6050_dmpGetFIFOPacketSize
 19591  00687C  C0F7  F005         	movff	_dmpPacketSize+1,?_MPU6050_dmpGetFIFOPacketSize+1
 19592  006880  0012               	return		;funcret
 19593  006882                     __end_of_MPU6050_dmpGetFIFOPacketSize:
 19594                           	callstack 0
 19595                           
 19596 ;; *************** function _MPU6050_dmpGetCurrentFIFOPacket *****************
 19597 ;; Defined at:
 19598 ;;		line 640 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 19599 ;; Parameters:    Size  Location     Type
 19600 ;;  data            2   79[COMRAM] PTR unsigned char 
 19601 ;;		 -> main@fifoBuffer(28), 
 19602 ;; Auto vars:     Size  Location     Type
 19603 ;;		None
 19604 ;; Return value:  Size  Location     Type
 19605 ;;                  1    wreg      unsigned char 
 19606 ;; Registers used:
 19607 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19608 ;; Tracked objects:
 19609 ;;		On entry : 0/0
 19610 ;;		On exit  : 0/0
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19613 ;;      Params:         2       0       0       0       0       0       0       0       0
 19614 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19615 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19616 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19617 ;;Total ram usage:        2 bytes
 19618 ;; Hardware stack levels used:    1
 19619 ;; Hardware stack levels required when called:    8
 19620 ;; This function calls:
 19621 ;;		_MPU6050_GetCurrentFIFOPacket
 19622 ;; This function is called by:
 19623 ;;		_main
 19624 ;; This function uses a non-reentrant model
 19625 ;;
 19626                           
 19627                           	psect	text65
 19628  006856                     __ptext65:
 19629                           	callstack 0
 19630  006856                     _MPU6050_dmpGetCurrentFIFOPacket:
 19631                           	callstack 22
 19632  006856                     
 19633                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 641:     return(MPU6050_GetCurrentFIFOPacket(data, 
      +                          dmpPacketSize));
 19634  006856  C050  F021         	movff	MPU6050_dmpGetCurrentFIFOPacket@data,MPU6050_GetCurrentFIFOPacket@data
 19635  00685A  C051  F022         	movff	MPU6050_dmpGetCurrentFIFOPacket@data+1,MPU6050_GetCurrentFIFOPacket@data+1
 19636  00685E  C0F6  F023         	movff	_dmpPacketSize,MPU6050_GetCurrentFIFOPacket@length
 19637  006862  EC2C  F024         	call	_MPU6050_GetCurrentFIFOPacket	;wreg free
 19638  006866  0012               	return		;funcret
 19639  006868                     __end_of_MPU6050_dmpGetCurrentFIFOPacket:
 19640                           	callstack 0
 19641                           
 19642 ;; *************** function _MPU6050_GetCurrentFIFOPacket *****************
 19643 ;; Defined at:
 19644 ;;		line 2692 in file "MPU6050.c"
 19645 ;; Parameters:    Size  Location     Type
 19646 ;;  data            2   32[COMRAM] PTR unsigned char 
 19647 ;;		 -> main@fifoBuffer(28), 
 19648 ;;  length          1   34[COMRAM] unsigned char 
 19649 ;; Auto vars:     Size  Location     Type
 19650 ;;  RemoveBytes     2   75[COMRAM] unsigned short 
 19651 ;;  Trash          32   39[COMRAM] unsigned char [32]
 19652 ;;  BreakTimer      4   71[COMRAM] unsigned long 
 19653 ;;  fifoC           2   77[COMRAM] short 
 19654 ;; Return value:  Size  Location     Type
 19655 ;;                  1    wreg      char 
 19656 ;; Registers used:
 19657 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19658 ;; Tracked objects:
 19659 ;;		On entry : 0/0
 19660 ;;		On exit  : 0/0
 19661 ;;		Unchanged: 0/0
 19662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19663 ;;      Params:         3       0       0       0       0       0       0       0       0
 19664 ;;      Locals:        40       0       0       0       0       0       0       0       0
 19665 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19666 ;;      Totals:        47       0       0       0       0       0       0       0       0
 19667 ;;Total ram usage:       47 bytes
 19668 ;; Hardware stack levels used:    1
 19669 ;; Hardware stack levels required when called:    7
 19670 ;; This function calls:
 19671 ;;		_MPU6050_getFIFOBytes
 19672 ;;		_MPU6050_getFIFOCount
 19673 ;;		_MPU6050_resetFIFO
 19674 ;; This function is called by:
 19675 ;;		_MPU6050_dmpGetCurrentFIFOPacket
 19676 ;; This function uses a non-reentrant model
 19677 ;;
 19678                           
 19679                           	psect	text66
 19680  004858                     __ptext66:
 19681                           	callstack 0
 19682  004858                     _MPU6050_GetCurrentFIFOPacket:
 19683                           	callstack 22
 19684  004858                     
 19685                           ;MPU6050.c: 2693:     int16_t fifoC;;MPU6050.c: 2695:     uint32_t BreakTimer = time_ms;
 19686  004858  C174  F048         	movff	_time_ms,MPU6050_GetCurrentFIFOPacket@BreakTimer
 19687  00485C  C175  F049         	movff	_time_ms+1,MPU6050_GetCurrentFIFOPacket@BreakTimer+1
 19688  004860  C176  F04A         	movff	_time_ms+2,MPU6050_GetCurrentFIFOPacket@BreakTimer+2
 19689  004864  C177  F04B         	movff	_time_ms+3,MPU6050_GetCurrentFIFOPacket@BreakTimer+3
 19690  004868                     l9009:
 19691                           
 19692                           ;MPU6050.c: 2697:     {;MPU6050.c: 2698:         if ((fifoC = MPU6050_getFIFOCount()) > 
      +                          length)
 19693  004868  ECA8  F032         	call	_MPU6050_getFIFOCount	;wreg free
 19694  00486C  C011  F04E         	movff	?_MPU6050_getFIFOCount,MPU6050_GetCurrentFIFOPacket@fifoC
 19695  004870  C012  F04F         	movff	?_MPU6050_getFIFOCount+1,MPU6050_GetCurrentFIFOPacket@fifoC+1
 19696  004874  5023               	movf	MPU6050_GetCurrentFIFOPacket@length^0,w,c
 19697  004876  6E24               	movwf	??_MPU6050_GetCurrentFIFOPacket^0,c
 19698  004878  6A25               	clrf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,c
 19699  00487A  504E               	movf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19700  00487C  5C24               	subwf	??_MPU6050_GetCurrentFIFOPacket^0,w,c
 19701  00487E  5025               	movf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,w,c
 19702  004880  0A80               	xorlw	128
 19703  004882  6E26               	movwf	(??_MPU6050_GetCurrentFIFOPacket+2)^0,c
 19704  004884  504F               	movf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19705  004886  0A80               	xorlw	128
 19706  004888  5826               	subwfb	(??_MPU6050_GetCurrentFIFOPacket+2)^0,w,c
 19707  00488A  B0D8               	btfsc	status,0,c
 19708  00488C  EF4A  F024         	goto	u8291
 19709  004890  EF4C  F024         	goto	u8290
 19710  004894                     u8291:
 19711  004894  EFD7  F024         	goto	l9035
 19712  004898                     u8290:
 19713  004898                     
 19714                           ;MPU6050.c: 2699:         {;MPU6050.c: 2700:             if (fifoC > 200) {
 19715  004898  BE4F               	btfsc	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,7,c
 19716  00489A  EF58  F024         	goto	u8301
 19717  00489E  504F               	movf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19718  0048A0  E109               	bnz	u8300
 19719  0048A2  0EC9               	movlw	201
 19720  0048A4  5C4E               	subwf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19721  0048A6  A0D8               	btfss	status,0,c
 19722  0048A8  EF58  F024         	goto	u8301
 19723  0048AC  EF5A  F024         	goto	u8300
 19724  0048B0                     u8301:
 19725  0048B0  EFBD  F024         	goto	l9033
 19726  0048B4                     u8300:
 19727  0048B4                     
 19728                           ;MPU6050.c: 2701:                 MPU6050_resetFIFO();
 19729  0048B4  EC00  F034         	call	_MPU6050_resetFIFO	;wreg free
 19730  0048B8                     l9017:
 19731  0048B8  ECA8  F032         	call	_MPU6050_getFIFOCount	;wreg free
 19732  0048BC  C011  F04E         	movff	?_MPU6050_getFIFOCount,MPU6050_GetCurrentFIFOPacket@fifoC
 19733  0048C0  C012  F04F         	movff	?_MPU6050_getFIFOCount+1,MPU6050_GetCurrentFIFOPacket@fifoC+1
 19734  0048C4  504E               	movf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19735  0048C6  104F               	iorwf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19736  0048C8  A4D8               	btfss	status,2,c
 19737  0048CA  EF69  F024         	goto	u8311
 19738  0048CE  EF6B  F024         	goto	u8310
 19739  0048D2                     u8311:
 19740  0048D2  EFD7  F024         	goto	l1009
 19741  0048D6                     u8310:
 19742  0048D6  5048               	movf	MPU6050_GetCurrentFIFOPacket@BreakTimer^0,w,c
 19743  0048D8  0101               	movlb	1	; () banked
 19744  0048DA  5D74               	subwf	_time_ms& (0+255),w,b
 19745  0048DC  6E24               	movwf	??_MPU6050_GetCurrentFIFOPacket^0,c
 19746  0048DE  5049               	movf	(MPU6050_GetCurrentFIFOPacket@BreakTimer+1)^0,w,c
 19747  0048E0  5975               	subwfb	(_time_ms+1)& (0+255),w,b
 19748  0048E2  6E25               	movwf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,c
 19749  0048E4  504A               	movf	(MPU6050_GetCurrentFIFOPacket@BreakTimer+2)^0,w,c
 19750  0048E6  5976               	subwfb	(_time_ms+2)& (0+255),w,b
 19751  0048E8  6E26               	movwf	(??_MPU6050_GetCurrentFIFOPacket+2)^0,c
 19752  0048EA  504B               	movf	(MPU6050_GetCurrentFIFOPacket@BreakTimer+3)^0,w,c
 19753  0048EC  5977               	subwfb	(_time_ms+3)& (0+255),w,b
 19754  0048EE  6E27               	movwf	(??_MPU6050_GetCurrentFIFOPacket+3)^0,c
 19755  0048F0  5027               	movf	(??_MPU6050_GetCurrentFIFOPacket+3)^0,w,c
 19756  0048F2  1026               	iorwf	(??_MPU6050_GetCurrentFIFOPacket+2)^0,w,c
 19757  0048F4  1025               	iorwf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,w,c
 19758  0048F6  E109               	bnz	u8320
 19759  0048F8  0E0C               	movlw	12
 19760  0048FA  5C24               	subwf	??_MPU6050_GetCurrentFIFOPacket^0,w,c
 19761  0048FC  A0D8               	btfss	status,0,c
 19762  0048FE  EF83  F024         	goto	u8321
 19763  004902  EF85  F024         	goto	u8320
 19764  004906                     u8321:
 19765  004906  EF5C  F024         	goto	l9017
 19766  00490A                     u8320:
 19767  00490A  EFD7  F024         	goto	l9035
 19768  00490E                     l9021:
 19769                           
 19770                           ;MPU6050.c: 2710:                     fifoC = fifoC - length;
 19771  00490E  5023               	movf	MPU6050_GetCurrentFIFOPacket@length^0,w,c
 19772  004910  5C4E               	subwf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19773  004912  6E4E               	movwf	MPU6050_GetCurrentFIFOPacket@fifoC^0,c
 19774  004914  504F               	movf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19775  004916  A0D8               	btfss	status,0,c
 19776  004918  044F               	decf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19777  00491A  6E4F               	movwf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,c
 19778                           
 19779                           ;MPU6050.c: 2711:                     uint16_t RemoveBytes;;MPU6050.c: 2712:            
      +                                   while (fifoC) {
 19780  00491C  EFB4  F024         	goto	l9031
 19781  004920                     l9023:
 19782                           
 19783                           ;MPU6050.c: 2713:                         RemoveBytes = (int)fifoC < 32 ? fifoC:32;
 19784  004920  BE4F               	btfsc	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,7,c
 19785  004922  EF9C  F024         	goto	u8331
 19786  004926  504F               	movf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19787  004928  E109               	bnz	u8330
 19788  00492A  0E20               	movlw	32
 19789  00492C  5C4E               	subwf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19790  00492E  A0D8               	btfss	status,0,c
 19791  004930  EF9C  F024         	goto	u8331
 19792  004934  EF9E  F024         	goto	u8330
 19793  004938                     u8331:
 19794  004938  EFA4  F024         	goto	l1015
 19795  00493C                     u8330:
 19796  00493C  0E00               	movlw	0
 19797  00493E  6E4D               	movwf	(MPU6050_GetCurrentFIFOPacket@RemoveBytes+1)^0,c
 19798  004940  0E20               	movlw	32
 19799  004942  6E4C               	movwf	MPU6050_GetCurrentFIFOPacket@RemoveBytes^0,c
 19800  004944  EFA8  F024         	goto	l9027
 19801  004948                     l1015:
 19802  004948  C04E  F04C         	movff	MPU6050_GetCurrentFIFOPacket@fifoC,MPU6050_GetCurrentFIFOPacket@RemoveBytes
 19803  00494C  C04F  F04D         	movff	MPU6050_GetCurrentFIFOPacket@fifoC+1,MPU6050_GetCurrentFIFOPacket@RemoveBytes+1
 19804  004950                     l9027:
 19805                           
 19806                           ;MPU6050.c: 2714:                         MPU6050_getFIFOBytes(Trash, (uint8_t)RemoveByt
      +                          es);
 19807  004950  0E28               	movlw	low MPU6050_GetCurrentFIFOPacket@Trash
 19808  004952  6E11               	movwf	MPU6050_getFIFOBytes@data^0,c
 19809  004954  0E00               	movlw	high MPU6050_GetCurrentFIFOPacket@Trash
 19810  004956  6E12               	movwf	(MPU6050_getFIFOBytes@data+1)^0,c
 19811  004958  C04C  F013         	movff	MPU6050_GetCurrentFIFOPacket@RemoveBytes,MPU6050_getFIFOBytes@length
 19812  00495C  ECC3  F033         	call	_MPU6050_getFIFOBytes	;wreg free
 19813  004960                     
 19814                           ;MPU6050.c: 2715:                         fifoC -= RemoveBytes;
 19815  004960  504C               	movf	MPU6050_GetCurrentFIFOPacket@RemoveBytes^0,w,c
 19816  004962  5E4E               	subwf	MPU6050_GetCurrentFIFOPacket@fifoC^0,f,c
 19817  004964  504D               	movf	(MPU6050_GetCurrentFIFOPacket@RemoveBytes+1)^0,w,c
 19818  004966  5A4F               	subwfb	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,f,c
 19819  004968                     l9031:
 19820                           
 19821                           ;MPU6050.c: 2712:                     while (fifoC) {
 19822  004968  504E               	movf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19823  00496A  104F               	iorwf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19824  00496C  A4D8               	btfss	status,2,c
 19825  00496E  EFBB  F024         	goto	u8341
 19826  004972  EFBD  F024         	goto	u8340
 19827  004976                     u8341:
 19828  004976  EF90  F024         	goto	l9023
 19829  00497A                     u8340:
 19830  00497A                     l9033:
 19831                           
 19832                           ;MPU6050.c: 2709:                 while ((fifoC = MPU6050_getFIFOCount()) > length) {
 19833  00497A  ECA8  F032         	call	_MPU6050_getFIFOCount	;wreg free
 19834  00497E  C011  F04E         	movff	?_MPU6050_getFIFOCount,MPU6050_GetCurrentFIFOPacket@fifoC
 19835  004982  C012  F04F         	movff	?_MPU6050_getFIFOCount+1,MPU6050_GetCurrentFIFOPacket@fifoC+1
 19836  004986  5023               	movf	MPU6050_GetCurrentFIFOPacket@length^0,w,c
 19837  004988  6E24               	movwf	??_MPU6050_GetCurrentFIFOPacket^0,c
 19838  00498A  6A25               	clrf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,c
 19839  00498C  504E               	movf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19840  00498E  5C24               	subwf	??_MPU6050_GetCurrentFIFOPacket^0,w,c
 19841  004990  5025               	movf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,w,c
 19842  004992  0A80               	xorlw	128
 19843  004994  6E26               	movwf	(??_MPU6050_GetCurrentFIFOPacket+2)^0,c
 19844  004996  504F               	movf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19845  004998  0A80               	xorlw	128
 19846  00499A  5826               	subwfb	(??_MPU6050_GetCurrentFIFOPacket+2)^0,w,c
 19847  00499C  A0D8               	btfss	status,0,c
 19848  00499E  EFD3  F024         	goto	u8351
 19849  0049A2  EFD5  F024         	goto	u8350
 19850  0049A6                     u8351:
 19851  0049A6  EF87  F024         	goto	l9021
 19852  0049AA                     u8350:
 19853  0049AA  EFD7  F024         	goto	l9035
 19854  0049AE                     l1009:
 19855  0049AE                     l9035:
 19856                           
 19857                           ;MPU6050.c: 2721:         if (!fifoC) return 0;
 19858  0049AE  504E               	movf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19859  0049B0  104F               	iorwf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19860  0049B2  A4D8               	btfss	status,2,c
 19861  0049B4  EFDE  F024         	goto	u8361
 19862  0049B8  EFE0  F024         	goto	u8360
 19863  0049BC                     u8361:
 19864  0049BC  EFE3  F024         	goto	l9041
 19865  0049C0                     u8360:
 19866  0049C0                     l9037:
 19867  0049C0  0E00               	movlw	0
 19868  0049C2  EF17  F025         	goto	l1021
 19869  0049C6                     l9041:
 19870                           
 19871                           ;MPU6050.c: 2723:         if ((time_ms - BreakTimer) > 11) return 0;
 19872  0049C6  5048               	movf	MPU6050_GetCurrentFIFOPacket@BreakTimer^0,w,c
 19873  0049C8  0101               	movlb	1	; () banked
 19874  0049CA  5D74               	subwf	_time_ms& (0+255),w,b
 19875  0049CC  6E24               	movwf	??_MPU6050_GetCurrentFIFOPacket^0,c
 19876  0049CE  5049               	movf	(MPU6050_GetCurrentFIFOPacket@BreakTimer+1)^0,w,c
 19877  0049D0  5975               	subwfb	(_time_ms+1)& (0+255),w,b
 19878  0049D2  6E25               	movwf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,c
 19879  0049D4  504A               	movf	(MPU6050_GetCurrentFIFOPacket@BreakTimer+2)^0,w,c
 19880  0049D6  5976               	subwfb	(_time_ms+2)& (0+255),w,b
 19881  0049D8  6E26               	movwf	(??_MPU6050_GetCurrentFIFOPacket+2)^0,c
 19882  0049DA  504B               	movf	(MPU6050_GetCurrentFIFOPacket@BreakTimer+3)^0,w,c
 19883  0049DC  5977               	subwfb	(_time_ms+3)& (0+255),w,b
 19884  0049DE  6E27               	movwf	(??_MPU6050_GetCurrentFIFOPacket+3)^0,c
 19885  0049E0  5027               	movf	(??_MPU6050_GetCurrentFIFOPacket+3)^0,w,c
 19886  0049E2  1026               	iorwf	(??_MPU6050_GetCurrentFIFOPacket+2)^0,w,c
 19887  0049E4  1025               	iorwf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,w,c
 19888  0049E6  E109               	bnz	u8370
 19889  0049E8  0E0C               	movlw	12
 19890  0049EA  5C24               	subwf	??_MPU6050_GetCurrentFIFOPacket^0,w,c
 19891  0049EC  A0D8               	btfss	status,0,c
 19892  0049EE  EFFB  F024         	goto	u8371
 19893  0049F2  EFFD  F024         	goto	u8370
 19894  0049F6                     u8371:
 19895  0049F6  EFFF  F024         	goto	l9047
 19896  0049FA                     u8370:
 19897  0049FA  EFE0  F024         	goto	l9037
 19898  0049FE                     l9047:
 19899                           
 19900                           ; BSR set to: 1
 19901                           ;MPU6050.c: 2725:     } while (fifoC != length);
 19902  0049FE  5023               	movf	MPU6050_GetCurrentFIFOPacket@length^0,w,c
 19903  004A00  6E24               	movwf	??_MPU6050_GetCurrentFIFOPacket^0,c
 19904  004A02  6A25               	clrf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,c
 19905  004A04  504E               	movf	MPU6050_GetCurrentFIFOPacket@fifoC^0,w,c
 19906  004A06  1824               	xorwf	??_MPU6050_GetCurrentFIFOPacket^0,w,c
 19907  004A08  E107               	bnz	u8381
 19908  004A0A  504F               	movf	(MPU6050_GetCurrentFIFOPacket@fifoC+1)^0,w,c
 19909  004A0C  1825               	xorwf	(??_MPU6050_GetCurrentFIFOPacket+1)^0,w,c
 19910  004A0E  A4D8               	btfss	status,2,c
 19911  004A10  EF0C  F025         	goto	u8381
 19912  004A14  EF0E  F025         	goto	u8380
 19913  004A18                     u8381:
 19914  004A18  EF34  F024         	goto	l9009
 19915  004A1C                     u8380:
 19916  004A1C                     
 19917                           ; BSR set to: 1
 19918                           ;MPU6050.c: 2726:      MPU6050_getFIFOBytes(data, length);
 19919  004A1C  C021  F011         	movff	MPU6050_GetCurrentFIFOPacket@data,MPU6050_getFIFOBytes@data
 19920  004A20  C022  F012         	movff	MPU6050_GetCurrentFIFOPacket@data+1,MPU6050_getFIFOBytes@data+1
 19921  004A24  C023  F013         	movff	MPU6050_GetCurrentFIFOPacket@length,MPU6050_getFIFOBytes@length
 19922  004A28  ECC3  F033         	call	_MPU6050_getFIFOBytes	;wreg free
 19923  004A2C                     
 19924                           ;MPU6050.c: 2727:      return 1;
 19925  004A2C  0E01               	movlw	1
 19926  004A2E                     l1021:
 19927  004A2E  0012               	return		;funcret
 19928  004A30                     __end_of_MPU6050_GetCurrentFIFOPacket:
 19929                           	callstack 0
 19930                           
 19931 ;; *************** function _MPU6050_resetFIFO *****************
 19932 ;; Defined at:
 19933 ;;		line 2329 in file "MPU6050.c"
 19934 ;; Parameters:    Size  Location     Type
 19935 ;;		None
 19936 ;; Auto vars:     Size  Location     Type
 19937 ;;		None
 19938 ;; Return value:  Size  Location     Type
 19939 ;;                  1    wreg      void 
 19940 ;; Registers used:
 19941 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19942 ;; Tracked objects:
 19943 ;;		On entry : 0/0
 19944 ;;		On exit  : 0/0
 19945 ;;		Unchanged: 0/0
 19946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19947 ;;      Params:         0       0       0       0       0       0       0       0       0
 19948 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19950 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19951 ;;Total ram usage:        0 bytes
 19952 ;; Hardware stack levels used:    1
 19953 ;; Hardware stack levels required when called:    6
 19954 ;; This function calls:
 19955 ;;		_I2Cdev_writeBit
 19956 ;; This function is called by:
 19957 ;;		_MPU6050_GetCurrentFIFOPacket
 19958 ;;		_MPU6050_PID
 19959 ;; This function uses a non-reentrant model
 19960 ;;
 19961                           
 19962                           	psect	text67
 19963  006800                     __ptext67:
 19964                           	callstack 0
 19965  006800                     _MPU6050_resetFIFO:
 19966                           	callstack 22
 19967  006800                     
 19968                           ;MPU6050.c: 2330:     I2Cdev_writeBit(mpu6050.devAddr, 0x6A, 2, 1);
 19969  006800  0E6A               	movlw	106
 19970  006802  6E15               	movwf	I2Cdev_writeBit@regAddr^0,c
 19971  006804  0E02               	movlw	2
 19972  006806  6E16               	movwf	I2Cdev_writeBit@bitNum^0,c
 19973  006808  0E01               	movlw	1
 19974  00680A  6E17               	movwf	I2Cdev_writeBit@data^0,c
 19975  00680C  0101               	movlb	1	; () banked
 19976  00680E  5197               	movf	_mpu6050& (0+255),w,b
 19977  006810  ECAE  F02E         	call	_I2Cdev_writeBit
 19978  006814  0012               	return		;funcret
 19979  006816                     __end_of_MPU6050_resetFIFO:
 19980                           	callstack 0
 19981                           
 19982 ;; *************** function _I2Cdev_writeBit *****************
 19983 ;; Defined at:
 19984 ;;		line 389 in file "I2Cdev.c"
 19985 ;; Parameters:    Size  Location     Type
 19986 ;;  devAddr         1    wreg     unsigned char 
 19987 ;;  regAddr         1   20[COMRAM] unsigned char 
 19988 ;;  bitNum          1   21[COMRAM] unsigned char 
 19989 ;;  data            1   22[COMRAM] unsigned char 
 19990 ;; Auto vars:     Size  Location     Type
 19991 ;;  devAddr         1   30[COMRAM] unsigned char 
 19992 ;;  b               1   31[COMRAM] unsigned char 
 19993 ;; Return value:  Size  Location     Type
 19994 ;;                  1    wreg      _Bool 
 19995 ;; Registers used:
 19996 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19997 ;; Tracked objects:
 19998 ;;		On entry : 0/0
 19999 ;;		On exit  : 0/0
 20000 ;;		Unchanged: 0/0
 20001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20002 ;;      Params:         3       0       0       0       0       0       0       0       0
 20003 ;;      Locals:         4       0       0       0       0       0       0       0       0
 20004 ;;      Temps:          5       0       0       0       0       0       0       0       0
 20005 ;;      Totals:        12       0       0       0       0       0       0       0       0
 20006 ;;Total ram usage:       12 bytes
 20007 ;; Hardware stack levels used:    1
 20008 ;; Hardware stack levels required when called:    5
 20009 ;; This function calls:
 20010 ;;		_I2Cdev_readByte
 20011 ;;		_I2Cdev_writeByte
 20012 ;; This function is called by:
 20013 ;;		_MPU6050_resetFIFO
 20014 ;;		_MPU6050_setSleepEnabled
 20015 ;;		_MPU6050_setDMPEnabled
 20016 ;;		_MPU6050_dmpInitialize
 20017 ;;		_MPU6050_setAuxVDDIOLevel
 20018 ;;		_MPU6050_setAccelXSelfTest
 20019 ;;		_MPU6050_setAccelYSelfTest
 20020 ;;		_MPU6050_setAccelZSelfTest
 20021 ;;		_MPU6050_setTempFIFOEnabled
 20022 ;;		_MPU6050_setXGyroFIFOEnabled
 20023 ;;		_MPU6050_setYGyroFIFOEnabled
 20024 ;;		_MPU6050_setZGyroFIFOEnabled
 20025 ;;		_MPU6050_setAccelFIFOEnabled
 20026 ;;		_MPU6050_setSlave2FIFOEnabled
 20027 ;;		_MPU6050_setSlave1FIFOEnabled
 20028 ;;		_MPU6050_setSlave0FIFOEnabled
 20029 ;;		_MPU6050_setMultiMasterEnabled
 20030 ;;		_MPU6050_setWaitForExternalSensorEnabled
 20031 ;;		_MPU6050_setSlave3FIFOEnabled
 20032 ;;		_MPU6050_setSlaveReadWriteTransitionEnabled
 20033 ;;		_MPU6050_setSlaveEnabled
 20034 ;;		_MPU6050_setSlaveWordByteSwap
 20035 ;;		_MPU6050_setSlaveWriteMode
 20036 ;;		_MPU6050_setSlaveWordGroupOffset
 20037 ;;		_MPU6050_setSlave4Enabled
 20038 ;;		_MPU6050_setSlave4InterruptEnabled
 20039 ;;		_MPU6050_setSlave4WriteMode
 20040 ;;		_MPU6050_setInterruptMode
 20041 ;;		_MPU6050_setInterruptDrive
 20042 ;;		_MPU6050_setInterruptLatch
 20043 ;;		_MPU6050_setInterruptLatchClear
 20044 ;;		_MPU6050_setFSyncInterruptLevel
 20045 ;;		_MPU6050_setFSyncInterruptEnabled
 20046 ;;		_MPU6050_setI2CBypassEnabled
 20047 ;;		_MPU6050_setClockOutputEnabled
 20048 ;;		_MPU6050_setIntFreefallEnabled
 20049 ;;		_MPU6050_setIntMotionEnabled
 20050 ;;		_MPU6050_setIntZeroMotionEnabled
 20051 ;;		_MPU6050_setIntFIFOBufferOverflowEnabled
 20052 ;;		_MPU6050_setIntI2CMasterEnabled
 20053 ;;		_MPU6050_setIntDataReadyEnabled
 20054 ;;		_MPU6050_setExternalShadowDelayEnabled
 20055 ;;		_MPU6050_setSlaveDelayEnabled
 20056 ;;		_MPU6050_resetGyroscopePath
 20057 ;;		_MPU6050_resetAccelerometerPath
 20058 ;;		_MPU6050_resetTemperaturePath
 20059 ;;		_MPU6050_setFIFOEnabled
 20060 ;;		_MPU6050_setI2CMasterModeEnabled
 20061 ;;		_MPU6050_switchSPIEnabled
 20062 ;;		_MPU6050_resetI2CMaster
 20063 ;;		_MPU6050_resetSensors
 20064 ;;		_MPU6050_reset
 20065 ;;		_MPU6050_setWakeCycleEnabled
 20066 ;;		_MPU6050_setTempSensorEnabled
 20067 ;;		_MPU6050_setStandbyXAccelEnabled
 20068 ;;		_MPU6050_setStandbyYAccelEnabled
 20069 ;;		_MPU6050_setStandbyZAccelEnabled
 20070 ;;		_MPU6050_setStandbyXGyroEnabled
 20071 ;;		_MPU6050_setStandbyYGyroEnabled
 20072 ;;		_MPU6050_setStandbyZGyroEnabled
 20073 ;;		_MPU6050_setOTPBankValid
 20074 ;;		_MPU6050_setIntPLLReadyEnabled
 20075 ;;		_MPU6050_setIntDMPEnabled
 20076 ;;		_MPU6050_resetDMP
 20077 ;; This function uses a non-reentrant model
 20078 ;;
 20079                           
 20080                           	psect	text68
 20081  005D5C                     __ptext68:
 20082                           	callstack 0
 20083  005D5C                     _I2Cdev_writeBit:
 20084                           	callstack 24
 20085                           
 20086                           ;incstack = 0
 20087                           ;I2Cdev_writeBit@devAddr stored from wreg
 20088  005D5C  6E1F               	movwf	I2Cdev_writeBit@devAddr^0,c
 20089  005D5E                     
 20090                           ;I2Cdev.c: 390:     uint8_t b;;I2Cdev.c: 391:     I2Cdev_readByte(devAddr, regAddr, &b);
 20091  005D5E  C015  F011         	movff	I2Cdev_writeBit@regAddr,I2Cdev_readByte@regAddr
 20092  005D62  0E20               	movlw	low I2Cdev_writeBit@b
 20093  005D64  6E12               	movwf	I2Cdev_readByte@data^0,c
 20094  005D66  0E00               	movlw	high I2Cdev_writeBit@b
 20095  005D68  6E13               	movwf	(I2Cdev_readByte@data+1)^0,c
 20096  005D6A  501F               	movf	I2Cdev_writeBit@devAddr^0,w,c
 20097  005D6C  ECB6  F033         	call	_I2Cdev_readByte
 20098  005D70                     
 20099                           ;I2Cdev.c: 392:     b = (data != 0) ? (b | (1 << bitNum)) : (b & ~(1 << bitNum));
 20100  005D70  5017               	movf	I2Cdev_writeBit@data^0,w,c
 20101  005D72  A4D8               	btfss	status,2,c
 20102  005D74  EFBE  F02E         	goto	u7151
 20103  005D78  EFC0  F02E         	goto	u7150
 20104  005D7C                     u7151:
 20105  005D7C  EFD5  F02E         	goto	l8313
 20106  005D80                     u7150:
 20107  005D80  C016  F018         	movff	I2Cdev_writeBit@bitNum,??_I2Cdev_writeBit
 20108  005D84  0E01               	movlw	1
 20109  005D86  6E19               	movwf	(??_I2Cdev_writeBit+1)^0,c
 20110  005D88  2A18               	incf	??_I2Cdev_writeBit^0,f,c
 20111  005D8A  EFC9  F02E         	goto	u7164
 20112  005D8E                     u7165:
 20113  005D8E  90D8               	bcf	status,0,c
 20114  005D90  3619               	rlcf	(??_I2Cdev_writeBit+1)^0,f,c
 20115  005D92                     u7164:
 20116  005D92  2E18               	decfsz	??_I2Cdev_writeBit^0,f,c
 20117  005D94  EFC7  F02E         	goto	u7165
 20118  005D98  5019               	movf	(??_I2Cdev_writeBit+1)^0,w,c
 20119  005D9A  0AFF               	xorlw	255
 20120  005D9C  1420               	andwf	I2Cdev_writeBit@b^0,w,c
 20121  005D9E  6E1A               	movwf	(??_I2Cdev_writeBit+2)^0,c
 20122  005DA0  501A               	movf	(??_I2Cdev_writeBit+2)^0,w,c
 20123  005DA2  6E1D               	movwf	_I2Cdev_writeBit$600^0,c
 20124  005DA4  6A1E               	clrf	(_I2Cdev_writeBit$600+1)^0,c
 20125  005DA6  EFED  F02E         	goto	l8315
 20126  005DAA                     l8313:
 20127  005DAA  C016  F018         	movff	I2Cdev_writeBit@bitNum,??_I2Cdev_writeBit
 20128  005DAE  0E01               	movlw	1
 20129  005DB0  6E19               	movwf	(??_I2Cdev_writeBit+1)^0,c
 20130  005DB2  0E00               	movlw	0
 20131  005DB4  6E1A               	movwf	(??_I2Cdev_writeBit+2)^0,c
 20132  005DB6  2A18               	incf	??_I2Cdev_writeBit^0,f,c
 20133  005DB8  EFE1  F02E         	goto	u7174
 20134  005DBC                     u7175:
 20135  005DBC  90D8               	bcf	status,0,c
 20136  005DBE  3619               	rlcf	(??_I2Cdev_writeBit+1)^0,f,c
 20137  005DC0  361A               	rlcf	(??_I2Cdev_writeBit+2)^0,f,c
 20138  005DC2                     u7174:
 20139  005DC2  2E18               	decfsz	??_I2Cdev_writeBit^0,f,c
 20140  005DC4  EFDE  F02E         	goto	u7175
 20141  005DC8  5020               	movf	I2Cdev_writeBit@b^0,w,c
 20142  005DCA  6E1B               	movwf	(??_I2Cdev_writeBit+3)^0,c
 20143  005DCC  6A1C               	clrf	(??_I2Cdev_writeBit+4)^0,c
 20144  005DCE  5019               	movf	(??_I2Cdev_writeBit+1)^0,w,c
 20145  005DD0  101B               	iorwf	(??_I2Cdev_writeBit+3)^0,w,c
 20146  005DD2  6E1D               	movwf	_I2Cdev_writeBit$600^0,c
 20147  005DD4  501A               	movf	(??_I2Cdev_writeBit+2)^0,w,c
 20148  005DD6  101C               	iorwf	(??_I2Cdev_writeBit+4)^0,w,c
 20149  005DD8  6E1E               	movwf	(_I2Cdev_writeBit$600+1)^0,c
 20150  005DDA                     l8315:
 20151  005DDA  C01D  F020         	movff	_I2Cdev_writeBit$600,I2Cdev_writeBit@b
 20152  005DDE                     
 20153                           ;I2Cdev.c: 393:     return I2Cdev_writeByte(devAddr, regAddr, b);;	Return value of _I2Cd
      +                          ev_writeBit is never used
 20154  005DDE  C015  F00D         	movff	I2Cdev_writeBit@regAddr,I2Cdev_writeByte@regAddr
 20155  005DE2  C020  F00E         	movff	I2Cdev_writeBit@b,I2Cdev_writeByte@data
 20156  005DE6  501F               	movf	I2Cdev_writeBit@devAddr^0,w,c
 20157  005DE8  ECA9  F033         	call	_I2Cdev_writeByte
 20158  005DEC  0012               	return		;funcret
 20159  005DEE                     __end_of_I2Cdev_writeBit:
 20160                           	callstack 0
 20161                           
 20162 ;; *************** function _I2Cdev_writeByte *****************
 20163 ;; Defined at:
 20164 ;;		line 331 in file "I2Cdev.c"
 20165 ;; Parameters:    Size  Location     Type
 20166 ;;  devAddr         1    wreg     unsigned char 
 20167 ;;  regAddr         1   12[COMRAM] unsigned char 
 20168 ;;  data            1   13[COMRAM] unsigned char 
 20169 ;; Auto vars:     Size  Location     Type
 20170 ;;  devAddr         1   14[COMRAM] unsigned char 
 20171 ;; Return value:  Size  Location     Type
 20172 ;;                  1    wreg      _Bool 
 20173 ;; Registers used:
 20174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20175 ;; Tracked objects:
 20176 ;;		On entry : 0/0
 20177 ;;		On exit  : 0/0
 20178 ;;		Unchanged: 0/0
 20179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20180 ;;      Params:         2       0       0       0       0       0       0       0       0
 20181 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20183 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20184 ;;Total ram usage:        3 bytes
 20185 ;; Hardware stack levels used:    1
 20186 ;; Hardware stack levels required when called:    4
 20187 ;; This function calls:
 20188 ;;		_I2Cdev_writeBytes
 20189 ;; This function is called by:
 20190 ;;		_I2Cdev_writeBit
 20191 ;;		_I2Cdev_writeBits
 20192 ;;		_MPU6050_setMemoryBank
 20193 ;;		_MPU6050_setMemoryStartAddress
 20194 ;;		_MPU6050_dmpInitialize
 20195 ;;		_MPU6050_setRate
 20196 ;;		_MPU6050_setFreefallDetectionThreshold
 20197 ;;		_MPU6050_setFreefallDetectionDuration
 20198 ;;		_MPU6050_setMotionDetectionThreshold
 20199 ;;		_MPU6050_setMotionDetectionDuration
 20200 ;;		_MPU6050_setZeroMotionDetectionThreshold
 20201 ;;		_MPU6050_setZeroMotionDetectionDuration
 20202 ;;		_MPU6050_setSlaveAddress
 20203 ;;		_MPU6050_setSlaveRegister
 20204 ;;		_MPU6050_setSlave4Address
 20205 ;;		_MPU6050_setSlave4Register
 20206 ;;		_MPU6050_setSlave4OutputByte
 20207 ;;		_MPU6050_setIntEnabled
 20208 ;;		_MPU6050_setSlaveOutputByte
 20209 ;;		_MPU6050_setFIFOByte
 20210 ;;		_MPU6050_setXFineGain
 20211 ;;		_MPU6050_setYFineGain
 20212 ;;		_MPU6050_setZFineGain
 20213 ;;		_MPU6050_writeMemoryByte
 20214 ;;		_MPU6050_writeDMPConfigurationSet
 20215 ;;		_MPU6050_setDMPConfig1
 20216 ;;		_MPU6050_setDMPConfig2
 20217 ;; This function uses a non-reentrant model
 20218 ;;
 20219                           
 20220                           	psect	text69
 20221  006752                     __ptext69:
 20222                           	callstack 0
 20223  006752                     _I2Cdev_writeByte:
 20224                           	callstack 24
 20225                           
 20226                           ;incstack = 0
 20227                           ;I2Cdev_writeByte@devAddr stored from wreg
 20228  006752  6E0F               	movwf	I2Cdev_writeByte@devAddr^0,c
 20229  006754                     
 20230                           ;I2Cdev.c: 332:     return I2Cdev_writeBytes(devAddr, regAddr, 1, &data);
 20231  006754  C00D  F005         	movff	I2Cdev_writeByte@regAddr,I2Cdev_writeBytes@regAddr
 20232  006758  0E01               	movlw	1
 20233  00675A  6E06               	movwf	I2Cdev_writeBytes@length^0,c
 20234  00675C  0E0E               	movlw	low I2Cdev_writeByte@data
 20235  00675E  6E07               	movwf	I2Cdev_writeBytes@data^0,c
 20236  006760  0E00               	movlw	high I2Cdev_writeByte@data
 20237  006762  6E08               	movwf	(I2Cdev_writeBytes@data+1)^0,c
 20238  006764  500F               	movf	I2Cdev_writeByte@devAddr^0,w,c
 20239  006766  EC7E  F02F         	call	_I2Cdev_writeBytes
 20240  00676A  0012               	return		;funcret
 20241  00676C                     __end_of_I2Cdev_writeByte:
 20242                           	callstack 0
 20243                           
 20244 ;; *************** function _I2Cdev_writeBytes *****************
 20245 ;; Defined at:
 20246 ;;		line 299 in file "I2Cdev.c"
 20247 ;; Parameters:    Size  Location     Type
 20248 ;;  devAddr         1    wreg     unsigned char 
 20249 ;;  regAddr         1    4[COMRAM] unsigned char 
 20250 ;;  length          1    5[COMRAM] unsigned char 
 20251 ;;  data            2    6[COMRAM] PTR unsigned char 
 20252 ;;		 -> dmpMemory(3062), MPU6050_writeDMPConfigurationSet@mlc(16), MPU6050_writeMemoryBlock@mlc2(16), I2Cdev_writeByte@d
      +ata(1), 
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  devAddr         1   10[COMRAM] unsigned char 
 20255 ;;  i               1   11[COMRAM] unsigned char 
 20256 ;; Return value:  Size  Location     Type
 20257 ;;                  1    wreg      _Bool 
 20258 ;; Registers used:
 20259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20260 ;; Tracked objects:
 20261 ;;		On entry : 0/0
 20262 ;;		On exit  : 0/0
 20263 ;;		Unchanged: 0/0
 20264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20265 ;;      Params:         4       0       0       0       0       0       0       0       0
 20266 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20267 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20268 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20269 ;;Total ram usage:        8 bytes
 20270 ;; Hardware stack levels used:    1
 20271 ;; Hardware stack levels required when called:    3
 20272 ;; This function calls:
 20273 ;;		_IdleI2C
 20274 ;;		_StartI2C
 20275 ;;		_StopI2C
 20276 ;;		_WriteI2C
 20277 ;; This function is called by:
 20278 ;;		_I2Cdev_writeByte
 20279 ;;		_MPU6050_writeMemoryBlock
 20280 ;; This function uses a non-reentrant model
 20281 ;;
 20282                           
 20283                           	psect	text70
 20284  005EFC                     __ptext70:
 20285                           	callstack 0
 20286  005EFC                     _I2Cdev_writeBytes:
 20287                           	callstack 24
 20288                           
 20289                           ;incstack = 0
 20290                           ;I2Cdev_writeBytes@devAddr stored from wreg
 20291  005EFC  6E0B               	movwf	I2Cdev_writeBytes@devAddr^0,c
 20292  005EFE                     
 20293                           ;I2Cdev.c: 301:     IdleI2C();
 20294  005EFE  ECF4  F033         	call	_IdleI2C	;wreg free
 20295  005F02                     
 20296                           ;I2Cdev.c: 302:     StartI2C();
 20297  005F02  EC29  F033         	call	_StartI2C	;wreg free
 20298  005F06                     
 20299                           ;I2Cdev.c: 305:     IdleI2C();
 20300  005F06  ECF4  F033         	call	_IdleI2C	;wreg free
 20301  005F0A                     
 20302                           ;I2Cdev.c: 306:     WriteI2C(devAddr << 1 | 0x00);
 20303  005F0A  500B               	movf	I2Cdev_writeBytes@devAddr^0,w,c
 20304  005F0C  240B               	addwf	I2Cdev_writeBytes@devAddr^0,w,c
 20305  005F0E  ECE2  F032         	call	_WriteI2C
 20306  005F12                     
 20307                           ;I2Cdev.c: 309:     IdleI2C();
 20308  005F12  ECF4  F033         	call	_IdleI2C	;wreg free
 20309  005F16                     
 20310                           ;I2Cdev.c: 310:     WriteI2C(regAddr);
 20311  005F16  5005               	movf	I2Cdev_writeBytes@regAddr^0,w,c
 20312  005F18  ECE2  F032         	call	_WriteI2C
 20313                           
 20314                           ;I2Cdev.c: 312:     for (uint8_t i = 0; i < length; i++) {
 20315  005F1C  0E00               	movlw	0
 20316  005F1E  6E0C               	movwf	I2Cdev_writeBytes@i^0,c
 20317  005F20  EFAD  F02F         	goto	l7535
 20318  005F24                     l7529:
 20319                           
 20320                           ;I2Cdev.c: 314:         IdleI2C();
 20321  005F24  ECF4  F033         	call	_IdleI2C	;wreg free
 20322  005F28                     
 20323                           ;I2Cdev.c: 315:         WriteI2C(data[i]);
 20324  005F28  500C               	movf	I2Cdev_writeBytes@i^0,w,c
 20325  005F2A  2407               	addwf	I2Cdev_writeBytes@data^0,w,c
 20326  005F2C  6E09               	movwf	??_I2Cdev_writeBytes^0,c
 20327  005F2E  0E00               	movlw	0
 20328  005F30  2008               	addwfc	(I2Cdev_writeBytes@data+1)^0,w,c
 20329  005F32  6E0A               	movwf	(??_I2Cdev_writeBytes+1)^0,c
 20330  005F34  C009  FFF6         	movff	??_I2Cdev_writeBytes,tblptrl
 20331  005F38  C00A  FFF7         	movff	??_I2Cdev_writeBytes+1,tblptrh
 20332  005F3C  6AF8               	clrf	tblptru,c
 20333  005F3E  0E07               	movlw	(high __ramtop+-1)
 20334  005F40  64F7               	cpfsgt	tblptrh,c
 20335  005F42  D003               	bra	u5747
 20336  005F44  0008               	tblrd		*
 20337  005F46  50F5               	movf	tablat,w,c
 20338  005F48  D005               	bra	u5740
 20339  005F4A                     u5747:
 20340  005F4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20341  005F4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20342  005F52  50EF               	movf	indf0,w,c
 20343  005F54                     u5740:
 20344  005F54  ECE2  F032         	call	_WriteI2C
 20345  005F58                     
 20346                           ;I2Cdev.c: 316:     }
 20347  005F58  2A0C               	incf	I2Cdev_writeBytes@i^0,f,c
 20348  005F5A                     l7535:
 20349  005F5A  5006               	movf	I2Cdev_writeBytes@length^0,w,c
 20350  005F5C  5C0C               	subwf	I2Cdev_writeBytes@i^0,w,c
 20351  005F5E  A0D8               	btfss	status,0,c
 20352  005F60  EFB4  F02F         	goto	u5751
 20353  005F64  EFB6  F02F         	goto	u5750
 20354  005F68                     u5751:
 20355  005F68  EF92  F02F         	goto	l7529
 20356  005F6C                     u5750:
 20357  005F6C                     
 20358                           ;I2Cdev.c: 319:     IdleI2C();
 20359  005F6C  ECF4  F033         	call	_IdleI2C	;wreg free
 20360  005F70                     
 20361                           ;I2Cdev.c: 320:     StopI2C();
 20362  005F70  EC18  F033         	call	_StopI2C	;wreg free
 20363  005F74                     
 20364                           ;I2Cdev.c: 322:     return 1;
 20365  005F74  0E01               	movlw	1
 20366  005F76  0012               	return		;funcret
 20367  005F78                     __end_of_I2Cdev_writeBytes:
 20368                           	callstack 0
 20369                           
 20370 ;; *************** function _I2Cdev_readByte *****************
 20371 ;; Defined at:
 20372 ;;		line 140 in file "I2Cdev.c"
 20373 ;; Parameters:    Size  Location     Type
 20374 ;;  devAddr         1    wreg     unsigned char 
 20375 ;;  regAddr         1   16[COMRAM] unsigned char 
 20376 ;;  data            2   17[COMRAM] PTR unsigned char 
 20377 ;;		 -> mpu6050(15), I2Cdev_writeBits@b(1), I2Cdev_writeBit@b(1), I2Cdev_readBits@b(1), 
 20378 ;;		 -> I2Cdev_readBit@b(1), 
 20379 ;; Auto vars:     Size  Location     Type
 20380 ;;  devAddr         1   19[COMRAM] unsigned char 
 20381 ;; Return value:  Size  Location     Type
 20382 ;;                  1    wreg      char 
 20383 ;; Registers used:
 20384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20385 ;; Tracked objects:
 20386 ;;		On entry : 0/0
 20387 ;;		On exit  : 0/0
 20388 ;;		Unchanged: 0/0
 20389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20390 ;;      Params:         3       0       0       0       0       0       0       0       0
 20391 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20392 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20393 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20394 ;;Total ram usage:        4 bytes
 20395 ;; Hardware stack levels used:    1
 20396 ;; Hardware stack levels required when called:    4
 20397 ;; This function calls:
 20398 ;;		_I2Cdev_readBytes
 20399 ;; This function is called by:
 20400 ;;		_I2Cdev_readBits
 20401 ;;		_I2Cdev_writeBit
 20402 ;;		_I2Cdev_writeBits
 20403 ;;		_MPU6050_getIntStatus
 20404 ;;		_I2Cdev_readBit
 20405 ;;		_MPU6050_getRate
 20406 ;;		_MPU6050_getFreefallDetectionThreshold
 20407 ;;		_MPU6050_getFreefallDetectionDuration
 20408 ;;		_MPU6050_getMotionDetectionThreshold
 20409 ;;		_MPU6050_getMotionDetectionDuration
 20410 ;;		_MPU6050_getZeroMotionDetectionThreshold
 20411 ;;		_MPU6050_getZeroMotionDetectionDuration
 20412 ;;		_MPU6050_getSlaveAddress
 20413 ;;		_MPU6050_getSlaveRegister
 20414 ;;		_MPU6050_getSlave4Address
 20415 ;;		_MPU6050_getSlave4Register
 20416 ;;		_MPU6050_getSlate4InputByte
 20417 ;;		_MPU6050_getIntEnabled
 20418 ;;		_MPU6050_getExternalSensorByte
 20419 ;;		_MPU6050_getFIFOByte
 20420 ;;		_MPU6050_getXFineGain
 20421 ;;		_MPU6050_getYFineGain
 20422 ;;		_MPU6050_getZFineGain
 20423 ;;		_MPU6050_readMemoryByte
 20424 ;;		_MPU6050_getDMPConfig1
 20425 ;;		_MPU6050_getDMPConfig2
 20426 ;; This function uses a non-reentrant model
 20427 ;;
 20428                           
 20429                           	psect	text71
 20430  00676C                     __ptext71:
 20431                           	callstack 0
 20432  00676C                     _I2Cdev_readByte:
 20433                           	callstack 23
 20434                           
 20435                           ;incstack = 0
 20436                           ;I2Cdev_readByte@devAddr stored from wreg
 20437  00676C  6E14               	movwf	I2Cdev_readByte@devAddr^0,c
 20438  00676E                     
 20439                           ;I2Cdev.c: 141:     return I2Cdev_readBytes(devAddr, regAddr, 1, data);
 20440  00676E  C011  F005         	movff	I2Cdev_readByte@regAddr,I2Cdev_readBytes@regAddr
 20441  006772  0E01               	movlw	1
 20442  006774  6E06               	movwf	I2Cdev_readBytes@length^0,c
 20443  006776  C012  F007         	movff	I2Cdev_readByte@data,I2Cdev_readBytes@data
 20444  00677A  C013  F008         	movff	I2Cdev_readByte@data+1,I2Cdev_readBytes@data+1
 20445  00677E  5014               	movf	I2Cdev_readByte@devAddr^0,w,c
 20446  006780  EC91  F029         	call	_I2Cdev_readBytes
 20447  006784  0012               	return		;funcret
 20448  006786                     __end_of_I2Cdev_readByte:
 20449                           	callstack 0
 20450                           
 20451 ;; *************** function _MPU6050_getFIFOCount *****************
 20452 ;; Defined at:
 20453 ;;		line 2646 in file "MPU6050.c"
 20454 ;; Parameters:    Size  Location     Type
 20455 ;;		None
 20456 ;; Auto vars:     Size  Location     Type
 20457 ;;		None
 20458 ;; Return value:  Size  Location     Type
 20459 ;;                  2   16[COMRAM] unsigned short 
 20460 ;; Registers used:
 20461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20462 ;; Tracked objects:
 20463 ;;		On entry : 0/0
 20464 ;;		On exit  : 0/0
 20465 ;;		Unchanged: 0/0
 20466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20467 ;;      Params:         2       0       0       0       0       0       0       0       0
 20468 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20469 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20470 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20471 ;;Total ram usage:        4 bytes
 20472 ;; Hardware stack levels used:    1
 20473 ;; Hardware stack levels required when called:    4
 20474 ;; This function calls:
 20475 ;;		_I2Cdev_readBytes
 20476 ;; This function is called by:
 20477 ;;		_MPU6050_GetCurrentFIFOPacket
 20478 ;;		_MPU6050_dmpPacketAvailable
 20479 ;; This function uses a non-reentrant model
 20480 ;;
 20481                           
 20482                           	psect	text72
 20483  006550                     __ptext72:
 20484                           	callstack 0
 20485  006550                     _MPU6050_getFIFOCount:
 20486                           	callstack 24
 20487  006550                     
 20488                           ;MPU6050.c: 2647:     I2Cdev_readBytes(mpu6050.devAddr, 0x72, 2, mpu6050.buffer);
 20489  006550  0E72               	movlw	114
 20490  006552  6E05               	movwf	I2Cdev_readBytes@regAddr^0,c
 20491  006554  0E02               	movlw	2
 20492  006556  6E06               	movwf	I2Cdev_readBytes@length^0,c
 20493  006558  0E98               	movlw	low (_mpu6050+1)
 20494  00655A  6E07               	movwf	I2Cdev_readBytes@data^0,c
 20495  00655C  0E01               	movlw	high (_mpu6050+1)
 20496  00655E  6E08               	movwf	(I2Cdev_readBytes@data+1)^0,c
 20497  006560  0101               	movlb	1	; () banked
 20498  006562  5197               	movf	_mpu6050& (0+255),w,b
 20499  006564  EC91  F029         	call	_I2Cdev_readBytes
 20500  006568                     
 20501                           ;MPU6050.c: 2648:     return (((uint16_t)mpu6050.buffer[0]) << 8) | mpu6050.buffer[1];
 20502  006568  0101               	movlb	1	; () banked
 20503  00656A  5198               	movf	(_mpu6050+1)& (0+255),w,b
 20504  00656C  6E13               	movwf	??_MPU6050_getFIFOCount^0,c
 20505  00656E  5199               	movf	(_mpu6050+2)& (0+255),w,b
 20506  006570  6E11               	movwf	?_MPU6050_getFIFOCount^0,c
 20507  006572  C013  F012         	movff	??_MPU6050_getFIFOCount,?_MPU6050_getFIFOCount+1
 20508  006576                     
 20509                           ; BSR set to: 1
 20510  006576  0012               	return		;funcret
 20511  006578                     __end_of_MPU6050_getFIFOCount:
 20512                           	callstack 0
 20513                           
 20514 ;; *************** function _MPU6050_getFIFOBytes *****************
 20515 ;; Defined at:
 20516 ;;		line 2682 in file "MPU6050.c"
 20517 ;; Parameters:    Size  Location     Type
 20518 ;;  data            2   16[COMRAM] PTR unsigned char 
 20519 ;;		 -> main@fifoBuffer(28), MPU6050_dmpReadAndProcessFIFOPacket@buf(28), MPU6050_GetCurrentFIFOPacket@Trash(32), 
 20520 ;;  length          1   18[COMRAM] unsigned char 
 20521 ;; Auto vars:     Size  Location     Type
 20522 ;;		None
 20523 ;; Return value:  Size  Location     Type
 20524 ;;                  1    wreg      void 
 20525 ;; Registers used:
 20526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20527 ;; Tracked objects:
 20528 ;;		On entry : 0/0
 20529 ;;		On exit  : 0/0
 20530 ;;		Unchanged: 0/0
 20531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20532 ;;      Params:         3       0       0       0       0       0       0       0       0
 20533 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20534 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20535 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20536 ;;Total ram usage:        3 bytes
 20537 ;; Hardware stack levels used:    1
 20538 ;; Hardware stack levels required when called:    4
 20539 ;; This function calls:
 20540 ;;		_I2Cdev_readBytes
 20541 ;; This function is called by:
 20542 ;;		_MPU6050_GetCurrentFIFOPacket
 20543 ;;		_MPU6050_dmpReadAndProcessFIFOPacket
 20544 ;; This function uses a non-reentrant model
 20545 ;;
 20546                           
 20547                           	psect	text73
 20548  006786                     __ptext73:
 20549                           	callstack 0
 20550  006786                     _MPU6050_getFIFOBytes:
 20551                           	callstack 24
 20552  006786                     
 20553                           ;MPU6050.c: 2683:     I2Cdev_readBytes(mpu6050.devAddr, 0x74, length, data);
 20554  006786  0E74               	movlw	116
 20555  006788  6E05               	movwf	I2Cdev_readBytes@regAddr^0,c
 20556  00678A  C013  F006         	movff	MPU6050_getFIFOBytes@length,I2Cdev_readBytes@length
 20557  00678E  C011  F007         	movff	MPU6050_getFIFOBytes@data,I2Cdev_readBytes@data
 20558  006792  C012  F008         	movff	MPU6050_getFIFOBytes@data+1,I2Cdev_readBytes@data+1
 20559  006796  0101               	movlb	1	; () banked
 20560  006798  5197               	movf	_mpu6050& (0+255),w,b
 20561  00679A  EC91  F029         	call	_I2Cdev_readBytes
 20562  00679E  0012               	return		;funcret
 20563  0067A0                     __end_of_MPU6050_getFIFOBytes:
 20564                           	callstack 0
 20565                           
 20566 ;; *************** function _I2Cdev_readBytes *****************
 20567 ;; Defined at:
 20568 ;;		line 93 in file "I2Cdev.c"
 20569 ;; Parameters:    Size  Location     Type
 20570 ;;  devAddr         1    wreg     unsigned char 
 20571 ;;  regAddr         1    4[COMRAM] unsigned char 
 20572 ;;  length          1    5[COMRAM] unsigned char 
 20573 ;;  data            2    6[COMRAM] PTR unsigned char 
 20574 ;;		 -> main@fifoBuffer(28), MPU6050_dmpReadAndProcessFIFOPacket@buf(28), MPU6050_writeMemoryBlock@mlc1(16), MPU6050_Get
      +CurrentFIFOPacket@Trash(32), 
 20575 ;;		 -> mpu6050(15), I2Cdev_writeBits@b(1), I2Cdev_writeBit@b(1), I2Cdev_readBits@b(1), 
 20576 ;;		 -> I2Cdev_readBit@b(1), 
 20577 ;; Auto vars:     Size  Location     Type
 20578 ;;  devAddr         1   14[COMRAM] unsigned char 
 20579 ;;  count           1   15[COMRAM] char 
 20580 ;; Return value:  Size  Location     Type
 20581 ;;                  1    wreg      char 
 20582 ;; Registers used:
 20583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20584 ;; Tracked objects:
 20585 ;;		On entry : 0/0
 20586 ;;		On exit  : 0/0
 20587 ;;		Unchanged: 0/0
 20588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20589 ;;      Params:         4       0       0       0       0       0       0       0       0
 20590 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20591 ;;      Temps:          6       0       0       0       0       0       0       0       0
 20592 ;;      Totals:        12       0       0       0       0       0       0       0       0
 20593 ;;Total ram usage:       12 bytes
 20594 ;; Hardware stack levels used:    1
 20595 ;; Hardware stack levels required when called:    3
 20596 ;; This function calls:
 20597 ;;		_AckI2C
 20598 ;;		_IdleI2C
 20599 ;;		_NotAckI2C
 20600 ;;		_ReadI2C
 20601 ;;		_RestartI2C
 20602 ;;		_StartI2C
 20603 ;;		_StopI2C
 20604 ;;		_WriteI2C
 20605 ;; This function is called by:
 20606 ;;		_I2Cdev_readByte
 20607 ;;		_MPU6050_getFIFOCount
 20608 ;;		_MPU6050_getFIFOBytes
 20609 ;;		_MPU6050_writeMemoryBlock
 20610 ;;		_MPU6050_getMotion6
 20611 ;;		_MPU6050_getAcceleration
 20612 ;;		_MPU6050_getAccelerationX
 20613 ;;		_MPU6050_getAccelerationY
 20614 ;;		_MPU6050_getAccelerationZ
 20615 ;;		_MPU6050_getTemperature
 20616 ;;		_MPU6050_getRotation
 20617 ;;		_MPU6050_getRotationX
 20618 ;;		_MPU6050_getRotationY
 20619 ;;		_MPU6050_getRotationZ
 20620 ;;		_MPU6050_getExternalSensorWord
 20621 ;;		_MPU6050_getExternalSensorDWord
 20622 ;;		_MPU6050_getXAccelOffset
 20623 ;;		_MPU6050_getYAccelOffset
 20624 ;;		_MPU6050_getZAccelOffset
 20625 ;;		_MPU6050_getXGyroOffset
 20626 ;;		_MPU6050_getYGyroOffset
 20627 ;;		_MPU6050_getZGyroOffset
 20628 ;;		_MPU6050_readMemoryBlock
 20629 ;; This function uses a non-reentrant model
 20630 ;;
 20631                           
 20632                           	psect	text74
 20633  005322                     __ptext74:
 20634                           	callstack 0
 20635  005322                     _I2Cdev_readBytes:
 20636                           	callstack 23
 20637                           
 20638                           ;incstack = 0
 20639                           ;I2Cdev_readBytes@devAddr stored from wreg
 20640  005322  6E0F               	movwf	I2Cdev_readBytes@devAddr^0,c
 20641  005324                     
 20642                           ;I2Cdev.c: 96:     IdleI2C();
 20643  005324  ECF4  F033         	call	_IdleI2C	;wreg free
 20644  005328                     
 20645                           ;I2Cdev.c: 97:     StartI2C();
 20646  005328  EC29  F033         	call	_StartI2C	;wreg free
 20647  00532C                     
 20648                           ;I2Cdev.c: 98:     IdleI2C();
 20649  00532C  ECF4  F033         	call	_IdleI2C	;wreg free
 20650  005330                     
 20651                           ;I2Cdev.c: 100:     WriteI2C(devAddr << 1 | 0x00);
 20652  005330  500F               	movf	I2Cdev_readBytes@devAddr^0,w,c
 20653  005332  240F               	addwf	I2Cdev_readBytes@devAddr^0,w,c
 20654  005334  ECE2  F032         	call	_WriteI2C
 20655  005338                     
 20656                           ;I2Cdev.c: 102:     IdleI2C();
 20657  005338  ECF4  F033         	call	_IdleI2C	;wreg free
 20658  00533C                     
 20659                           ;I2Cdev.c: 103:     WriteI2C(regAddr);
 20660  00533C  5005               	movf	I2Cdev_readBytes@regAddr^0,w,c
 20661  00533E  ECE2  F032         	call	_WriteI2C
 20662  005342                     
 20663                           ;I2Cdev.c: 105:     IdleI2C();
 20664  005342  ECF4  F033         	call	_IdleI2C	;wreg free
 20665  005346                     
 20666                           ;I2Cdev.c: 106:     RestartI2C();
 20667  005346  EC3A  F033         	call	_RestartI2C	;wreg free
 20668  00534A                     
 20669                           ;I2Cdev.c: 109:     IdleI2C();
 20670  00534A  ECF4  F033         	call	_IdleI2C	;wreg free
 20671  00534E                     
 20672                           ;I2Cdev.c: 110:     WriteI2C(devAddr << 1 | 0x01);
 20673  00534E  80D8               	bsf	status,0,c
 20674  005350  340F               	rlcf	I2Cdev_readBytes@devAddr^0,w,c
 20675  005352  ECE2  F032         	call	_WriteI2C
 20676  005356                     
 20677                           ;I2Cdev.c: 112:     for (count = 0; count < length; count++) {
 20678  005356  0E00               	movlw	0
 20679  005358  6E10               	movwf	I2Cdev_readBytes@count^0,c
 20680  00535A  EFE6  F029         	goto	l7507
 20681  00535E                     l7491:
 20682                           
 20683                           ;I2Cdev.c: 114:       IdleI2C();
 20684  00535E  ECF4  F033         	call	_IdleI2C	;wreg free
 20685  005362                     
 20686                           ;I2Cdev.c: 115:       data[count] = ReadI2C();
 20687  005362  C010  F009         	movff	I2Cdev_readBytes@count,??_I2Cdev_readBytes
 20688  005366  6A0A               	clrf	(??_I2Cdev_readBytes+1)^0,c
 20689  005368  BE09               	btfsc	??_I2Cdev_readBytes^0,7,c
 20690  00536A  060A               	decf	(??_I2Cdev_readBytes+1)^0,f,c
 20691  00536C  5009               	movf	??_I2Cdev_readBytes^0,w,c
 20692  00536E  2407               	addwf	I2Cdev_readBytes@data^0,w,c
 20693  005370  6ED9               	movwf	fsr2l,c
 20694  005372  500A               	movf	(??_I2Cdev_readBytes+1)^0,w,c
 20695  005374  2008               	addwfc	(I2Cdev_readBytes@data+1)^0,w,c
 20696  005376  6EDA               	movwf	fsr2h,c
 20697  005378  EC7A  F032         	call	_ReadI2C	;wreg free
 20698  00537C  6EDF               	movwf	indf2,c
 20699  00537E                     
 20700                           ;I2Cdev.c: 116:       if (count == length - 1) {
 20701  00537E  C010  F009         	movff	I2Cdev_readBytes@count,??_I2Cdev_readBytes
 20702  005382  6A0A               	clrf	(??_I2Cdev_readBytes+1)^0,c
 20703  005384  BE09               	btfsc	??_I2Cdev_readBytes^0,7,c
 20704  005386  060A               	decf	(??_I2Cdev_readBytes+1)^0,f,c
 20705  005388  0EFF               	movlw	255
 20706  00538A  6E0B               	movwf	(??_I2Cdev_readBytes+2)^0,c
 20707  00538C  0EFF               	movlw	255
 20708  00538E  6E0C               	movwf	(??_I2Cdev_readBytes+3)^0,c
 20709  005390  5006               	movf	I2Cdev_readBytes@length^0,w,c
 20710  005392  6E0D               	movwf	(??_I2Cdev_readBytes+4)^0,c
 20711  005394  6A0E               	clrf	(??_I2Cdev_readBytes+5)^0,c
 20712  005396  500B               	movf	(??_I2Cdev_readBytes+2)^0,w,c
 20713  005398  260D               	addwf	(??_I2Cdev_readBytes+4)^0,f,c
 20714  00539A  500C               	movf	(??_I2Cdev_readBytes+3)^0,w,c
 20715  00539C  220E               	addwfc	(??_I2Cdev_readBytes+5)^0,f,c
 20716  00539E  5009               	movf	??_I2Cdev_readBytes^0,w,c
 20717  0053A0  180D               	xorwf	(??_I2Cdev_readBytes+4)^0,w,c
 20718  0053A2  E107               	bnz	u5721
 20719  0053A4  500A               	movf	(??_I2Cdev_readBytes+1)^0,w,c
 20720  0053A6  180E               	xorwf	(??_I2Cdev_readBytes+5)^0,w,c
 20721  0053A8  A4D8               	btfss	status,2,c
 20722  0053AA  EFD9  F029         	goto	u5721
 20723  0053AE  EFDB  F029         	goto	u5720
 20724  0053B2                     u5721:
 20725  0053B2  EFE1  F029         	goto	l7501
 20726  0053B6                     u5720:
 20727  0053B6                     
 20728                           ;I2Cdev.c: 118:             IdleI2C();
 20729  0053B6  ECF4  F033         	call	_IdleI2C	;wreg free
 20730  0053BA                     
 20731                           ;I2Cdev.c: 119:             NotAckI2C();
 20732  0053BA  EC0B  F034         	call	_NotAckI2C	;wreg free
 20733                           
 20734                           ;I2Cdev.c: 120:       }
 20735  0053BE  EFE5  F029         	goto	l7505
 20736  0053C2                     l7501:
 20737                           
 20738                           ;I2Cdev.c: 123:             IdleI2C();
 20739  0053C2  ECF4  F033         	call	_IdleI2C	;wreg free
 20740  0053C6                     
 20741                           ;I2Cdev.c: 124:             AckI2C();
 20742  0053C6  EC16  F034         	call	_AckI2C	;wreg free
 20743  0053CA                     l7505:
 20744                           
 20745                           ;I2Cdev.c: 126:     }
 20746  0053CA  2A10               	incf	I2Cdev_readBytes@count^0,f,c
 20747  0053CC                     l7507:
 20748  0053CC  5006               	movf	I2Cdev_readBytes@length^0,w,c
 20749  0053CE  6E09               	movwf	??_I2Cdev_readBytes^0,c
 20750  0053D0  6A0A               	clrf	(??_I2Cdev_readBytes+1)^0,c
 20751  0053D2  C010  F00B         	movff	I2Cdev_readBytes@count,??_I2Cdev_readBytes+2
 20752  0053D6  6A0C               	clrf	(??_I2Cdev_readBytes+3)^0,c
 20753  0053D8  BE0B               	btfsc	(??_I2Cdev_readBytes+2)^0,7,c
 20754  0053DA  060C               	decf	(??_I2Cdev_readBytes+3)^0,f,c
 20755  0053DC  5009               	movf	??_I2Cdev_readBytes^0,w,c
 20756  0053DE  5C0B               	subwf	(??_I2Cdev_readBytes+2)^0,w,c
 20757  0053E0  500C               	movf	(??_I2Cdev_readBytes+3)^0,w,c
 20758  0053E2  0A80               	xorlw	128
 20759  0053E4  6E0D               	movwf	(??_I2Cdev_readBytes+4)^0,c
 20760  0053E6  500A               	movf	(??_I2Cdev_readBytes+1)^0,w,c
 20761  0053E8  0A80               	xorlw	128
 20762  0053EA  580D               	subwfb	(??_I2Cdev_readBytes+4)^0,w,c
 20763  0053EC  A0D8               	btfss	status,0,c
 20764  0053EE  EFFB  F029         	goto	u5731
 20765  0053F2  EFFD  F029         	goto	u5730
 20766  0053F6                     u5731:
 20767  0053F6  EFAF  F029         	goto	l7491
 20768  0053FA                     u5730:
 20769  0053FA                     
 20770                           ;I2Cdev.c: 128:     IdleI2C();
 20771  0053FA  ECF4  F033         	call	_IdleI2C	;wreg free
 20772  0053FE                     
 20773                           ;I2Cdev.c: 129:     StopI2C();
 20774  0053FE  EC18  F033         	call	_StopI2C	;wreg free
 20775  005402                     
 20776                           ;I2Cdev.c: 131:     return count;
 20777  005402  5010               	movf	I2Cdev_readBytes@count^0,w,c
 20778  005404  0012               	return		;funcret
 20779  005406                     __end_of_I2Cdev_readBytes:
 20780                           	callstack 0
 20781                           
 20782 ;; *************** function _WriteI2C *****************
 20783 ;; Defined at:
 20784 ;;		line 53 in file "I2Cdev.c"
 20785 ;; Parameters:    Size  Location     Type
 20786 ;;  data            1    wreg     unsigned char 
 20787 ;; Auto vars:     Size  Location     Type
 20788 ;;  data            1    3[COMRAM] unsigned char 
 20789 ;; Return value:  Size  Location     Type
 20790 ;;                  1    wreg      void 
 20791 ;; Registers used:
 20792 ;;		wreg
 20793 ;; Tracked objects:
 20794 ;;		On entry : 0/0
 20795 ;;		On exit  : 0/0
 20796 ;;		Unchanged: 0/0
 20797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20798 ;;      Params:         0       0       0       0       0       0       0       0       0
 20799 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20800 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20801 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20802 ;;Total ram usage:        1 bytes
 20803 ;; Hardware stack levels used:    1
 20804 ;; Hardware stack levels required when called:    2
 20805 ;; This function calls:
 20806 ;;		Nothing
 20807 ;; This function is called by:
 20808 ;;		_I2Cdev_readBytes
 20809 ;;		_I2Cdev_writeBytes
 20810 ;;		_I2Cdev_writeWords
 20811 ;;		_I2Cdev_readWords
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815                           	psect	text75
 20816  0065C4                     __ptext75:
 20817                           	callstack 0
 20818  0065C4                     _WriteI2C:
 20819                           	callstack 23
 20820                           
 20821                           ;incstack = 0
 20822                           ;WriteI2C@data stored from wreg
 20823  0065C4  6E04               	movwf	WriteI2C@data^0,c
 20824  0065C6                     
 20825                           ;I2Cdev.c: 53: void WriteI2C(uint8_t data);I2Cdev.c: 54: {;I2Cdev.c: 55:     SSPBUF = da
      +                          ta;
 20826  0065C6  C004  FFC9         	movff	WriteI2C@data,4041	;volatile
 20827  0065CA                     l197:
 20828  0065CA  BCC5               	btfsc	197,6,c	;volatile
 20829  0065CC  EFEA  F032         	goto	u5571
 20830  0065D0  EFEC  F032         	goto	u5570
 20831  0065D4                     u5571:
 20832  0065D4  EFE5  F032         	goto	l197
 20833  0065D8                     u5570:
 20834  0065D8                     l200:
 20835  0065D8  A69E               	btfss	158,3,c	;volatile
 20836  0065DA  EFF1  F032         	goto	u5581
 20837  0065DE  EFF3  F032         	goto	u5580
 20838  0065E2                     u5581:
 20839  0065E2  EFEC  F032         	goto	l200
 20840  0065E6                     u5580:
 20841  0065E6  969E               	bcf	158,3,c	;volatile
 20842  0065E8  0012               	return		;funcret
 20843  0065EA                     __end_of_WriteI2C:
 20844                           	callstack 0
 20845                           
 20846 ;; *************** function _StopI2C *****************
 20847 ;; Defined at:
 20848 ;;		line 76 in file "I2Cdev.c"
 20849 ;; Parameters:    Size  Location     Type
 20850 ;;		None
 20851 ;; Auto vars:     Size  Location     Type
 20852 ;;		None
 20853 ;; Return value:  Size  Location     Type
 20854 ;;                  1    wreg      void 
 20855 ;; Registers used:
 20856 ;;		None
 20857 ;; Tracked objects:
 20858 ;;		On entry : 0/0
 20859 ;;		On exit  : 0/0
 20860 ;;		Unchanged: 0/0
 20861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20862 ;;      Params:         0       0       0       0       0       0       0       0       0
 20863 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20865 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20866 ;;Total ram usage:        0 bytes
 20867 ;; Hardware stack levels used:    1
 20868 ;; Hardware stack levels required when called:    2
 20869 ;; This function calls:
 20870 ;;		Nothing
 20871 ;; This function is called by:
 20872 ;;		_I2Cdev_readBytes
 20873 ;;		_I2Cdev_writeBytes
 20874 ;;		_I2Cdev_writeWords
 20875 ;;		_I2Cdev_readWords
 20876 ;; This function uses a non-reentrant model
 20877 ;;
 20878                           
 20879                           	psect	text76
 20880  006630                     __ptext76:
 20881                           	callstack 0
 20882  006630                     _StopI2C:
 20883                           	callstack 23
 20884  006630                     
 20885                           ;I2Cdev.c: 77:     SSPCON2bits.PEN = 1;
 20886  006630  84C5               	bsf	197,2,c	;volatile
 20887  006632                     l227:
 20888  006632  B4C5               	btfsc	197,2,c	;volatile
 20889  006634  EF1E  F033         	goto	u5641
 20890  006638  EF20  F033         	goto	u5640
 20891  00663C                     u5641:
 20892  00663C  EF19  F033         	goto	l227
 20893  006640                     u5640:
 20894  006640                     l230:
 20895  006640  A69E               	btfss	158,3,c	;volatile
 20896  006642  EF25  F033         	goto	u5651
 20897  006646  EF27  F033         	goto	u5650
 20898  00664A                     u5651:
 20899  00664A  EF20  F033         	goto	l230
 20900  00664E                     u5650:
 20901  00664E  969E               	bcf	158,3,c	;volatile
 20902  006650  0012               	return		;funcret
 20903  006652                     __end_of_StopI2C:
 20904                           	callstack 0
 20905                           
 20906 ;; *************** function _StartI2C *****************
 20907 ;; Defined at:
 20908 ;;		line 47 in file "I2Cdev.c"
 20909 ;; Parameters:    Size  Location     Type
 20910 ;;		None
 20911 ;; Auto vars:     Size  Location     Type
 20912 ;;		None
 20913 ;; Return value:  Size  Location     Type
 20914 ;;                  1    wreg      void 
 20915 ;; Registers used:
 20916 ;;		None
 20917 ;; Tracked objects:
 20918 ;;		On entry : 0/0
 20919 ;;		On exit  : 0/0
 20920 ;;		Unchanged: 0/0
 20921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20922 ;;      Params:         0       0       0       0       0       0       0       0       0
 20923 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20924 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20925 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20926 ;;Total ram usage:        0 bytes
 20927 ;; Hardware stack levels used:    1
 20928 ;; Hardware stack levels required when called:    2
 20929 ;; This function calls:
 20930 ;;		Nothing
 20931 ;; This function is called by:
 20932 ;;		_I2Cdev_readBytes
 20933 ;;		_I2Cdev_writeBytes
 20934 ;;		_I2Cdev_writeWords
 20935 ;;		_I2Cdev_readWords
 20936 ;; This function uses a non-reentrant model
 20937 ;;
 20938                           
 20939                           	psect	text77
 20940  006652                     __ptext77:
 20941                           	callstack 0
 20942  006652                     _StartI2C:
 20943                           	callstack 23
 20944  006652                     
 20945                           ;I2Cdev.c: 48:     SSPCON2bits.SEN = 1;
 20946  006652  80C5               	bsf	197,0,c	;volatile
 20947  006654                     l188:
 20948  006654  B0C5               	btfsc	197,0,c	;volatile
 20949  006656  EF2F  F033         	goto	u5551
 20950  00665A  EF31  F033         	goto	u5550
 20951  00665E                     u5551:
 20952  00665E  EF2A  F033         	goto	l188
 20953  006662                     u5550:
 20954  006662                     l191:
 20955  006662  A69E               	btfss	158,3,c	;volatile
 20956  006664  EF36  F033         	goto	u5561
 20957  006668  EF38  F033         	goto	u5560
 20958  00666C                     u5561:
 20959  00666C  EF31  F033         	goto	l191
 20960  006670                     u5560:
 20961  006670  969E               	bcf	158,3,c	;volatile
 20962  006672  0012               	return		;funcret
 20963  006674                     __end_of_StartI2C:
 20964                           	callstack 0
 20965                           
 20966 ;; *************** function _RestartI2C *****************
 20967 ;; Defined at:
 20968 ;;		line 60 in file "I2Cdev.c"
 20969 ;; Parameters:    Size  Location     Type
 20970 ;;		None
 20971 ;; Auto vars:     Size  Location     Type
 20972 ;;		None
 20973 ;; Return value:  Size  Location     Type
 20974 ;;                  1    wreg      void 
 20975 ;; Registers used:
 20976 ;;		None
 20977 ;; Tracked objects:
 20978 ;;		On entry : 0/0
 20979 ;;		On exit  : 0/0
 20980 ;;		Unchanged: 0/0
 20981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20982 ;;      Params:         0       0       0       0       0       0       0       0       0
 20983 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20984 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20985 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20986 ;;Total ram usage:        0 bytes
 20987 ;; Hardware stack levels used:    1
 20988 ;; Hardware stack levels required when called:    2
 20989 ;; This function calls:
 20990 ;;		Nothing
 20991 ;; This function is called by:
 20992 ;;		_I2Cdev_readBytes
 20993 ;;		_I2Cdev_readWords
 20994 ;; This function uses a non-reentrant model
 20995 ;;
 20996                           
 20997                           	psect	text78
 20998  006674                     __ptext78:
 20999                           	callstack 0
 21000  006674                     _RestartI2C:
 21001                           	callstack 23
 21002  006674                     
 21003                           ;I2Cdev.c: 61:     SSPCON2bits.RSEN = 1;
 21004  006674  82C5               	bsf	197,1,c	;volatile
 21005  006676                     l206:
 21006  006676  B2C5               	btfsc	197,1,c	;volatile
 21007  006678  EF40  F033         	goto	u5591
 21008  00667C  EF42  F033         	goto	u5590
 21009  006680                     u5591:
 21010  006680  EF3B  F033         	goto	l206
 21011  006684                     u5590:
 21012  006684                     l209:
 21013  006684  A69E               	btfss	158,3,c	;volatile
 21014  006686  EF47  F033         	goto	u5601
 21015  00668A  EF49  F033         	goto	u5600
 21016  00668E                     u5601:
 21017  00668E  EF42  F033         	goto	l209
 21018  006692                     u5600:
 21019  006692  969E               	bcf	158,3,c	;volatile
 21020  006694  0012               	return		;funcret
 21021  006696                     __end_of_RestartI2C:
 21022                           	callstack 0
 21023                           
 21024 ;; *************** function _ReadI2C *****************
 21025 ;; Defined at:
 21026 ;;		line 66 in file "I2Cdev.c"
 21027 ;; Parameters:    Size  Location     Type
 21028 ;;		None
 21029 ;; Auto vars:     Size  Location     Type
 21030 ;;		None
 21031 ;; Return value:  Size  Location     Type
 21032 ;;                  1    wreg      unsigned char 
 21033 ;; Registers used:
 21034 ;;		wreg, status,2
 21035 ;; Tracked objects:
 21036 ;;		On entry : 0/0
 21037 ;;		On exit  : 0/0
 21038 ;;		Unchanged: 0/0
 21039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21040 ;;      Params:         0       0       0       0       0       0       0       0       0
 21041 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21042 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21043 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21044 ;;Total ram usage:        0 bytes
 21045 ;; Hardware stack levels used:    1
 21046 ;; Hardware stack levels required when called:    2
 21047 ;; This function calls:
 21048 ;;		Nothing
 21049 ;; This function is called by:
 21050 ;;		_I2Cdev_readBytes
 21051 ;;		_I2Cdev_readWords
 21052 ;; This function uses a non-reentrant model
 21053 ;;
 21054                           
 21055                           	psect	text79
 21056  0064F4                     __ptext79:
 21057                           	callstack 0
 21058  0064F4                     _ReadI2C:
 21059                           	callstack 23
 21060  0064F4                     
 21061                           ;I2Cdev.c: 68:     SSPCON2bits.RCEN = 1;
 21062  0064F4  86C5               	bsf	197,3,c	;volatile
 21063  0064F6                     l215:
 21064  0064F6  B6C5               	btfsc	197,3,c	;volatile
 21065  0064F8  EF80  F032         	goto	u5611
 21066  0064FC  EF82  F032         	goto	u5610
 21067  006500                     u5611:
 21068  006500  EF7B  F032         	goto	l215
 21069  006504                     u5610:
 21070  006504                     l218:
 21071  006504  A0C7               	btfss	199,0,c	;volatile
 21072  006506  EF87  F032         	goto	u5621
 21073  00650A  EF89  F032         	goto	u5620
 21074  00650E                     u5621:
 21075  00650E  EF82  F032         	goto	l218
 21076  006512                     u5620:
 21077  006512                     l221:
 21078  006512  A69E               	btfss	158,3,c	;volatile
 21079  006514  EF8E  F032         	goto	u5631
 21080  006518  EF90  F032         	goto	u5630
 21081  00651C                     u5631:
 21082  00651C  EF89  F032         	goto	l221
 21083  006520                     u5630:
 21084  006520  969E               	bcf	158,3,c	;volatile
 21085  006522                     
 21086                           ;I2Cdev.c: 73:     return SSPBUF;
 21087  006522  50C9               	movf	201,w,c	;volatile
 21088  006524  0012               	return		;funcret
 21089  006526                     __end_of_ReadI2C:
 21090                           	callstack 0
 21091                           
 21092 ;; *************** function _NotAckI2C *****************
 21093 ;; Defined at:
 21094 ;;		line 82 in file "I2Cdev.c"
 21095 ;; Parameters:    Size  Location     Type
 21096 ;;		None
 21097 ;; Auto vars:     Size  Location     Type
 21098 ;;		None
 21099 ;; Return value:  Size  Location     Type
 21100 ;;                  1    wreg      void 
 21101 ;; Registers used:
 21102 ;;		None
 21103 ;; Tracked objects:
 21104 ;;		On entry : 0/0
 21105 ;;		On exit  : 0/0
 21106 ;;		Unchanged: 0/0
 21107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21108 ;;      Params:         0       0       0       0       0       0       0       0       0
 21109 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21110 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21111 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21112 ;;Total ram usage:        0 bytes
 21113 ;; Hardware stack levels used:    1
 21114 ;; Hardware stack levels required when called:    2
 21115 ;; This function calls:
 21116 ;;		Nothing
 21117 ;; This function is called by:
 21118 ;;		_I2Cdev_readBytes
 21119 ;;		_I2Cdev_readWords
 21120 ;; This function uses a non-reentrant model
 21121 ;;
 21122                           
 21123                           	psect	text80
 21124  006816                     __ptext80:
 21125                           	callstack 0
 21126  006816                     _NotAckI2C:
 21127                           	callstack 23
 21128  006816                     
 21129                           ;I2Cdev.c: 83:     SSPCON2bits.ACKDT = 1;
 21130  006816  8AC5               	bsf	197,5,c	;volatile
 21131                           
 21132                           ;I2Cdev.c: 84:     SSPCON2bits.ACKEN = 1;
 21133  006818  88C5               	bsf	197,4,c	;volatile
 21134  00681A                     l236:
 21135  00681A  A69E               	btfss	158,3,c	;volatile
 21136  00681C  EF12  F034         	goto	u5661
 21137  006820  EF14  F034         	goto	u5660
 21138  006824                     u5661:
 21139  006824  EF0D  F034         	goto	l236
 21140  006828                     u5660:
 21141  006828  969E               	bcf	158,3,c	;volatile
 21142  00682A  0012               	return		;funcret
 21143  00682C                     __end_of_NotAckI2C:
 21144                           	callstack 0
 21145                           
 21146 ;; *************** function _IdleI2C *****************
 21147 ;; Defined at:
 21148 ;;		line 45 in file "I2Cdev.c"
 21149 ;; Parameters:    Size  Location     Type
 21150 ;;		None
 21151 ;; Auto vars:     Size  Location     Type
 21152 ;;		None
 21153 ;; Return value:  Size  Location     Type
 21154 ;;                  1    wreg      void 
 21155 ;; Registers used:
 21156 ;;		wreg, status,2, status,0
 21157 ;; Tracked objects:
 21158 ;;		On entry : 0/0
 21159 ;;		On exit  : 0/0
 21160 ;;		Unchanged: 0/0
 21161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21162 ;;      Params:         0       0       0       0       0       0       0       0       0
 21163 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21164 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21165 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21166 ;;Total ram usage:        1 bytes
 21167 ;; Hardware stack levels used:    1
 21168 ;; Hardware stack levels required when called:    2
 21169 ;; This function calls:
 21170 ;;		Nothing
 21171 ;; This function is called by:
 21172 ;;		_I2Cdev_readBytes
 21173 ;;		_I2Cdev_writeBytes
 21174 ;;		_I2Cdev_writeWords
 21175 ;;		_I2Cdev_readWords
 21176 ;; This function uses a non-reentrant model
 21177 ;;
 21178                           
 21179                           	psect	text81
 21180  0067E8                     __ptext81:
 21181                           	callstack 0
 21182  0067E8                     _IdleI2C:
 21183                           	callstack 23
 21184  0067E8                     l7433:
 21185  0067E8  CFC5 F004          	movff	4037,??_IdleI2C	;volatile
 21186  0067EC  0E1F               	movlw	31
 21187  0067EE  1604               	andwf	??_IdleI2C^0,f,c
 21188  0067F0  A4D8               	btfss	status,2,c
 21189  0067F2  EFFD  F033         	goto	u5541
 21190  0067F6  EFFF  F033         	goto	u5540
 21191  0067FA                     u5541:
 21192  0067FA  EFF4  F033         	goto	l7433
 21193  0067FE                     u5540:
 21194  0067FE  0012               	return		;funcret
 21195  006800                     __end_of_IdleI2C:
 21196                           	callstack 0
 21197                           
 21198 ;; *************** function _AckI2C *****************
 21199 ;; Defined at:
 21200 ;;		line 87 in file "I2Cdev.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;		None
 21203 ;; Auto vars:     Size  Location     Type
 21204 ;;		None
 21205 ;; Return value:  Size  Location     Type
 21206 ;;                  1    wreg      void 
 21207 ;; Registers used:
 21208 ;;		None
 21209 ;; Tracked objects:
 21210 ;;		On entry : 0/0
 21211 ;;		On exit  : 0/0
 21212 ;;		Unchanged: 0/0
 21213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21214 ;;      Params:         0       0       0       0       0       0       0       0       0
 21215 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21216 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21217 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21218 ;;Total ram usage:        0 bytes
 21219 ;; Hardware stack levels used:    1
 21220 ;; Hardware stack levels required when called:    2
 21221 ;; This function calls:
 21222 ;;		Nothing
 21223 ;; This function is called by:
 21224 ;;		_I2Cdev_readBytes
 21225 ;;		_I2Cdev_readWords
 21226 ;; This function uses a non-reentrant model
 21227 ;;
 21228                           
 21229                           	psect	text82
 21230  00682C                     __ptext82:
 21231                           	callstack 0
 21232  00682C                     _AckI2C:
 21233                           	callstack 23
 21234  00682C                     
 21235                           ;I2Cdev.c: 88:     SSPCON2bits.ACKDT = 0;
 21236  00682C  9AC5               	bcf	197,5,c	;volatile
 21237                           
 21238                           ;I2Cdev.c: 89:     SSPCON2bits.ACKEN = 1;
 21239  00682E  88C5               	bsf	197,4,c	;volatile
 21240  006830                     l242:
 21241  006830  A69E               	btfss	158,3,c	;volatile
 21242  006832  EF1D  F034         	goto	u5671
 21243  006836  EF1F  F034         	goto	u5670
 21244  00683A                     u5671:
 21245  00683A  EF18  F034         	goto	l242
 21246  00683E                     u5670:
 21247  00683E  969E               	bcf	158,3,c	;volatile
 21248  006840  0012               	return		;funcret
 21249  006842                     __end_of_AckI2C:
 21250                           	callstack 0
 21251                           
 21252 ;; *************** function _MPU6050_dmpGetAccelI16 *****************
 21253 ;; Defined at:
 21254 ;;		line 424 in file "./MPU6050_6Axis_MotionApps_V6_12.h"
 21255 ;; Parameters:    Size  Location     Type
 21256 ;;  data            2    3[COMRAM] PTR short 
 21257 ;;		 -> aa(6), 
 21258 ;;  packet          2    5[COMRAM] PTR const unsigned char 
 21259 ;;		 -> main@fifoBuffer(28), NULL(0), 
 21260 ;; Auto vars:     Size  Location     Type
 21261 ;;		None
 21262 ;; Return value:  Size  Location     Type
 21263 ;;                  1    wreg      unsigned char 
 21264 ;; Registers used:
 21265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21266 ;; Tracked objects:
 21267 ;;		On entry : 0/0
 21268 ;;		On exit  : 0/0
 21269 ;;		Unchanged: 0/0
 21270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21271 ;;      Params:         4       0       0       0       0       0       0       0       0
 21272 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21273 ;;      Temps:          4       0       0       0       0       0       0       0       0
 21274 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21275 ;;Total ram usage:        8 bytes
 21276 ;; Hardware stack levels used:    1
 21277 ;; Hardware stack levels required when called:    2
 21278 ;; This function calls:
 21279 ;;		Nothing
 21280 ;; This function is called by:
 21281 ;;		_main
 21282 ;; This function uses a non-reentrant model
 21283 ;;
 21284                           
 21285                           	psect	text83
 21286  005406                     __ptext83:
 21287                           	callstack 0
 21288  005406                     _MPU6050_dmpGetAccelI16:
 21289                           	callstack 28
 21290  005406                     
 21291                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 426:     if (packet == 0) packet = dmpPacketBuffer;
 21292  005406  5006               	movf	MPU6050_dmpGetAccelI16@packet^0,w,c
 21293  005408  1007               	iorwf	(MPU6050_dmpGetAccelI16@packet+1)^0,w,c
 21294  00540A  A4D8               	btfss	status,2,c
 21295  00540C  EF0A  F02A         	goto	u9091
 21296  005410  EF0C  F02A         	goto	u9090
 21297  005414                     u9091:
 21298  005414  EF10  F02A         	goto	l9719
 21299  005418                     u9090:
 21300  005418  0E00               	movlw	0
 21301  00541A  6E06               	movwf	MPU6050_dmpGetAccelI16@packet^0,c
 21302  00541C  0E00               	movlw	0
 21303  00541E  6E07               	movwf	(MPU6050_dmpGetAccelI16@packet+1)^0,c
 21304  005420                     l9719:
 21305                           
 21306                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 427:     data[0] = (packet[16] << 8) | packet[17];
 21307  005420  EE20 F010          	lfsr	2,16
 21308  005424  5006               	movf	MPU6050_dmpGetAccelI16@packet^0,w,c
 21309  005426  26D9               	addwf	fsr2l,f,c
 21310  005428  5007               	movf	(MPU6050_dmpGetAccelI16@packet+1)^0,w,c
 21311  00542A  22DA               	addwfc	fsr2h,f,c
 21312  00542C  50DF               	movf	indf2,w,c
 21313  00542E  6E08               	movwf	??_MPU6050_dmpGetAccelI16^0,c
 21314  005430  5008               	movf	??_MPU6050_dmpGetAccelI16^0,w,c
 21315  005432  6E0A               	movwf	(??_MPU6050_dmpGetAccelI16+2)^0,c
 21316  005434  6A09               	clrf	(??_MPU6050_dmpGetAccelI16+1)^0,c
 21317  005436  EE20 F011          	lfsr	2,17
 21318  00543A  5006               	movf	MPU6050_dmpGetAccelI16@packet^0,w,c
 21319  00543C  26D9               	addwf	fsr2l,f,c
 21320  00543E  5007               	movf	(MPU6050_dmpGetAccelI16@packet+1)^0,w,c
 21321  005440  22DA               	addwfc	fsr2h,f,c
 21322  005442  50DF               	movf	indf2,w,c
 21323  005444  6E0B               	movwf	(??_MPU6050_dmpGetAccelI16+3)^0,c
 21324  005446  500B               	movf	(??_MPU6050_dmpGetAccelI16+3)^0,w,c
 21325  005448  1209               	iorwf	(??_MPU6050_dmpGetAccelI16+1)^0,f,c
 21326  00544A  0E00               	movlw	0
 21327  00544C  120A               	iorwf	(??_MPU6050_dmpGetAccelI16+2)^0,f,c
 21328  00544E  C004  FFD9         	movff	MPU6050_dmpGetAccelI16@data,fsr2l
 21329  005452  C005  FFDA         	movff	MPU6050_dmpGetAccelI16@data+1,fsr2h
 21330  005456  C009  FFDE         	movff	??_MPU6050_dmpGetAccelI16+1,postinc2
 21331  00545A  C00A  FFDD         	movff	??_MPU6050_dmpGetAccelI16+2,postdec2
 21332  00545E                     
 21333                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 428:     data[1] = (packet[18] << 8) | packet[19];
 21334  00545E  EE20 F012          	lfsr	2,18
 21335  005462  5006               	movf	MPU6050_dmpGetAccelI16@packet^0,w,c
 21336  005464  26D9               	addwf	fsr2l,f,c
 21337  005466  5007               	movf	(MPU6050_dmpGetAccelI16@packet+1)^0,w,c
 21338  005468  22DA               	addwfc	fsr2h,f,c
 21339  00546A  50DF               	movf	indf2,w,c
 21340  00546C  6E08               	movwf	??_MPU6050_dmpGetAccelI16^0,c
 21341  00546E  5008               	movf	??_MPU6050_dmpGetAccelI16^0,w,c
 21342  005470  6E0A               	movwf	(??_MPU6050_dmpGetAccelI16+2)^0,c
 21343  005472  6A09               	clrf	(??_MPU6050_dmpGetAccelI16+1)^0,c
 21344  005474  EE20 F013          	lfsr	2,19
 21345  005478  5006               	movf	MPU6050_dmpGetAccelI16@packet^0,w,c
 21346  00547A  26D9               	addwf	fsr2l,f,c
 21347  00547C  5007               	movf	(MPU6050_dmpGetAccelI16@packet+1)^0,w,c
 21348  00547E  22DA               	addwfc	fsr2h,f,c
 21349  005480  50DF               	movf	indf2,w,c
 21350  005482  6E0B               	movwf	(??_MPU6050_dmpGetAccelI16+3)^0,c
 21351  005484  500B               	movf	(??_MPU6050_dmpGetAccelI16+3)^0,w,c
 21352  005486  1209               	iorwf	(??_MPU6050_dmpGetAccelI16+1)^0,f,c
 21353  005488  0E00               	movlw	0
 21354  00548A  120A               	iorwf	(??_MPU6050_dmpGetAccelI16+2)^0,f,c
 21355  00548C  EE20 F002          	lfsr	2,2
 21356  005490  5004               	movf	MPU6050_dmpGetAccelI16@data^0,w,c
 21357  005492  26D9               	addwf	fsr2l,f,c
 21358  005494  5005               	movf	(MPU6050_dmpGetAccelI16@data+1)^0,w,c
 21359  005496  22DA               	addwfc	fsr2h,f,c
 21360  005498  C009  FFDE         	movff	??_MPU6050_dmpGetAccelI16+1,postinc2
 21361  00549C  C00A  FFDD         	movff	??_MPU6050_dmpGetAccelI16+2,postdec2
 21362  0054A0                     
 21363                           ;./MPU6050_6Axis_MotionApps_V6_12.h: 429:     data[2] = (packet[20] << 8) | packet[21];
 21364  0054A0  EE20 F014          	lfsr	2,20
 21365  0054A4  5006               	movf	MPU6050_dmpGetAccelI16@packet^0,w,c
 21366  0054A6  26D9               	addwf	fsr2l,f,c
 21367  0054A8  5007               	movf	(MPU6050_dmpGetAccelI16@packet+1)^0,w,c
 21368  0054AA  22DA               	addwfc	fsr2h,f,c
 21369  0054AC  50DF               	movf	indf2,w,c
 21370  0054AE  6E08               	movwf	??_MPU6050_dmpGetAccelI16^0,c
 21371  0054B0  5008               	movf	??_MPU6050_dmpGetAccelI16^0,w,c
 21372  0054B2  6E0A               	movwf	(??_MPU6050_dmpGetAccelI16+2)^0,c
 21373  0054B4  6A09               	clrf	(??_MPU6050_dmpGetAccelI16+1)^0,c
 21374  0054B6  EE20 F015          	lfsr	2,21
 21375  0054BA  5006               	movf	MPU6050_dmpGetAccelI16@packet^0,w,c
 21376  0054BC  26D9               	addwf	fsr2l,f,c
 21377  0054BE  5007               	movf	(MPU6050_dmpGetAccelI16@packet+1)^0,w,c
 21378  0054C0  22DA               	addwfc	fsr2h,f,c
 21379  0054C2  50DF               	movf	indf2,w,c
 21380  0054C4  6E0B               	movwf	(??_MPU6050_dmpGetAccelI16+3)^0,c
 21381  0054C6  500B               	movf	(??_MPU6050_dmpGetAccelI16+3)^0,w,c
 21382  0054C8  1209               	iorwf	(??_MPU6050_dmpGetAccelI16+1)^0,f,c
 21383  0054CA  0E00               	movlw	0
 21384  0054CC  120A               	iorwf	(??_MPU6050_dmpGetAccelI16+2)^0,f,c
 21385  0054CE  EE20 F004          	lfsr	2,4
 21386  0054D2  5004               	movf	MPU6050_dmpGetAccelI16@data^0,w,c
 21387  0054D4  26D9               	addwf	fsr2l,f,c
 21388  0054D6  5005               	movf	(MPU6050_dmpGetAccelI16@data+1)^0,w,c
 21389  0054D8  22DA               	addwfc	fsr2h,f,c
 21390  0054DA  C009  FFDE         	movff	??_MPU6050_dmpGetAccelI16+1,postinc2
 21391  0054DE  C00A  FFDD         	movff	??_MPU6050_dmpGetAccelI16+2,postdec2
 21392  0054E2  0012               	return		;funcret
 21393  0054E4                     __end_of_MPU6050_dmpGetAccelI16:
 21394                           	callstack 0
 21395                           
 21396 ;; *************** function _MPU6050 *****************
 21397 ;; Defined at:
 21398 ;;		line 57 in file "MPU6050.c"
 21399 ;; Parameters:    Size  Location     Type
 21400 ;;  address         1    wreg     unsigned char 
 21401 ;; Auto vars:     Size  Location     Type
 21402 ;;  address         1    3[COMRAM] unsigned char 
 21403 ;; Return value:  Size  Location     Type
 21404 ;;                  1    wreg      void 
 21405 ;; Registers used:
 21406 ;;		wreg
 21407 ;; Tracked objects:
 21408 ;;		On entry : 0/0
 21409 ;;		On exit  : 0/0
 21410 ;;		Unchanged: 0/0
 21411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21412 ;;      Params:         0       0       0       0       0       0       0       0       0
 21413 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21414 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21415 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21416 ;;Total ram usage:        1 bytes
 21417 ;; Hardware stack levels used:    1
 21418 ;; Hardware stack levels required when called:    2
 21419 ;; This function calls:
 21420 ;;		Nothing
 21421 ;; This function is called by:
 21422 ;;		_main
 21423 ;; This function uses a non-reentrant model
 21424 ;;
 21425                           
 21426                           	psect	text84
 21427  006882                     __ptext84:
 21428                           	callstack 0
 21429  006882                     _MPU6050:
 21430                           	callstack 28
 21431                           
 21432                           ;incstack = 0
 21433                           ;MPU6050@address stored from wreg
 21434  006882  6E04               	movwf	MPU6050@address^0,c
 21435  006884                     
 21436                           ;MPU6050.c: 58:     mpu6050.devAddr = address;
 21437  006884  C004  F197         	movff	MPU6050@address,_mpu6050
 21438  006888  0012               	return		;funcret
 21439  00688A                     __end_of_MPU6050:
 21440                           	callstack 0
 21441                           
 21442 ;; *************** function __int_timing *****************
 21443 ;; Defined at:
 21444 ;;		line 66 in file "main.c"
 21445 ;; Parameters:    Size  Location     Type
 21446 ;;		None
 21447 ;; Auto vars:     Size  Location     Type
 21448 ;;		None
 21449 ;; Return value:  Size  Location     Type
 21450 ;;                  1    wreg      void 
 21451 ;; Registers used:
 21452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21453 ;; Tracked objects:
 21454 ;;		On entry : 0/0
 21455 ;;		On exit  : 0/0
 21456 ;;		Unchanged: 0/0
 21457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21458 ;;      Params:         0       0       0       0       0       0       0       0       0
 21459 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21460 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21461 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21462 ;;Total ram usage:        2 bytes
 21463 ;; Hardware stack levels used:    1
 21464 ;; Hardware stack levels required when called:    1
 21465 ;; This function calls:
 21466 ;;		_USART_UART_doBuff
 21467 ;; This function is called by:
 21468 ;;		Interrupt level 2
 21469 ;; This function uses a non-reentrant model
 21470 ;;
 21471                           
 21472                           	psect	intcode
 21473  000008                     __pintcode:
 21474                           	callstack 0
 21475  000008                     __int_timing:
 21476                           	callstack 21
 21477                           
 21478                           ;incstack = 0
 21479  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 21480  00000A  ED23  F031         	call	int_func,f	;refresh shadow registers
 21481                           
 21482                           	psect	intcode_body
 21483  006246                     __pintcode_body:
 21484                           	callstack 21
 21485  006246                     int_func:
 21486                           	callstack 21
 21487  006246  0006               	pop		; remove dummy address from shadow register refresh
 21488  006248  CFD9 F002          	movff	fsr2l,??__int_timing
 21489  00624C  CFDA F003          	movff	fsr2h,??__int_timing+1
 21490  006250                     
 21491                           ;main.c: 68:     if(PIR1bits.TMR2IF)
 21492  006250  A29E               	btfss	158,1,c	;volatile
 21493  006252  EF2D  F031         	goto	i2u1040_41
 21494  006256  EF2F  F031         	goto	i2u1040_40
 21495  00625A                     i2u1040_41:
 21496  00625A  EF37  F031         	goto	i2l11275
 21497  00625E                     i2u1040_40:
 21498  00625E                     
 21499                           ;main.c: 69:     {;main.c: 70:         time_ms++;
 21500  00625E  0E01               	movlw	1
 21501  006260  0101               	movlb	1	; () banked
 21502  006262  2774               	addwf	_time_ms& (0+255),f,b
 21503  006264  0E00               	movlw	0
 21504  006266  2375               	addwfc	(_time_ms+1)& (0+255),f,b
 21505  006268  2376               	addwfc	(_time_ms+2)& (0+255),f,b
 21506  00626A  2377               	addwfc	(_time_ms+3)& (0+255),f,b
 21507  00626C                     
 21508                           ; BSR set to: 1
 21509                           ;main.c: 71:         PIR1bits.TMR2IF = 0;
 21510  00626C  929E               	bcf	158,1,c	;volatile
 21511  00626E                     i2l11275:
 21512                           
 21513                           ;main.c: 73:     if(INTCON3bits.INT2IF)
 21514  00626E  A2F0               	btfss	240,1,c	;volatile
 21515  006270  EF3C  F031         	goto	i2u1041_41
 21516  006274  EF3E  F031         	goto	i2u1041_40
 21517  006278                     i2u1041_41:
 21518  006278  EF42  F031         	goto	i2l11281
 21519  00627C                     i2u1041_40:
 21520  00627C                     
 21521                           ;main.c: 74:     {;main.c: 75:         mpuInterrupt = 1;
 21522  00627C  0E01               	movlw	1
 21523  00627E  0101               	movlb	1	; () banked
 21524  006280  6F7D               	movwf	_mpuInterrupt& (0+255),b
 21525  006282                     
 21526                           ; BSR set to: 1
 21527                           ;main.c: 76:         INTCON3bits.INT2IF = 0;
 21528  006282  92F0               	bcf	240,1,c	;volatile
 21529  006284                     i2l11281:
 21530                           
 21531                           ;main.c: 78:     if(RCIF)
 21532  006284  AA9E               	btfss	3998,5,c	;volatile
 21533  006286  EF47  F031         	goto	i2u1042_41
 21534  00628A  EF49  F031         	goto	i2u1042_40
 21535  00628E                     i2u1042_41:
 21536  00628E  EF4C  F031         	goto	i2l1714
 21537  006292                     i2u1042_40:
 21538  006292                     
 21539                           ;main.c: 79:     {;main.c: 80:         USART_UART_doBuff();
 21540  006292  EC3E  F02F         	call	_USART_UART_doBuff	;wreg free
 21541  006296                     
 21542                           ;main.c: 81:         RCIF = 0;
 21543  006296  9A9E               	bcf	3998,5,c	;volatile
 21544  006298                     i2l1714:
 21545  006298  C003  FFDA         	movff	??__int_timing+1,fsr2h
 21546  00629C  C002  FFD9         	movff	??__int_timing,fsr2l
 21547  0062A0  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 21548  0062A2  0011               	retfie		f
 21549  0062A4                     __end_of__int_timing:
 21550                           	callstack 0
 21551                           
 21552 ;; *************** function _USART_UART_doBuff *****************
 21553 ;; Defined at:
 21554 ;;		line 57 in file "./USART.h"
 21555 ;; Parameters:    Size  Location     Type
 21556 ;;		None
 21557 ;; Auto vars:     Size  Location     Type
 21558 ;;		None
 21559 ;; Return value:  Size  Location     Type
 21560 ;;                  1    wreg      void 
 21561 ;; Registers used:
 21562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21563 ;; Tracked objects:
 21564 ;;		On entry : 0/0
 21565 ;;		On exit  : 0/0
 21566 ;;		Unchanged: 0/0
 21567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21568 ;;      Params:         0       0       0       0       0       0       0       0       0
 21569 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21570 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21571 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21572 ;;Total ram usage:        1 bytes
 21573 ;; Hardware stack levels used:    1
 21574 ;; This function calls:
 21575 ;;		Nothing
 21576 ;; This function is called by:
 21577 ;;		__int_timing
 21578 ;; This function uses a non-reentrant model
 21579 ;;
 21580                           
 21581                           	psect	text86
 21582  005E7C                     __ptext86:
 21583                           	callstack 0
 21584  005E7C                     _USART_UART_doBuff:
 21585                           	callstack 21
 21586  005E7C                     
 21587                           ;./USART.h: 59:     if(!RCIF) return;
 21588  005E7C  BA9E               	btfsc	3998,5,c	;volatile
 21589  005E7E  EF43  F02F         	goto	i2u915_41
 21590  005E82  EF45  F02F         	goto	i2u915_40
 21591  005E86                     i2u915_41:
 21592  005E86  EF47  F02F         	goto	i2l9775
 21593  005E8A                     i2u915_40:
 21594  005E8A  EF7D  F02F         	goto	i2l1606
 21595  005E8E                     i2l9775:
 21596                           
 21597                           ;./USART.h: 60:     if(Ubuff.index < sizeof(Ubuff.buff))
 21598  005E8E  0E18               	movlw	24
 21599  005E90  0102               	movlb	2	; () banked
 21600  005E92  6118               	cpfslt	(_Ubuff+24)& (0+255),b
 21601  005E94  EF4E  F02F         	goto	i2u916_41
 21602  005E98  EF50  F02F         	goto	i2u916_40
 21603  005E9C                     i2u916_41:
 21604  005E9C  EF6E  F02F         	goto	i2l9785
 21605  005EA0                     i2u916_40:
 21606  005EA0                     
 21607                           ; BSR set to: 2
 21608                           ;./USART.h: 61:     {;./USART.h: 62:         Ubuff.buff[Ubuff.index++] = RCREG;
 21609  005EA0  0E00               	movlw	low _Ubuff
 21610  005EA2  2518               	addwf	(_Ubuff+24)& (0+255),w,b
 21611  005EA4  6ED9               	movwf	fsr2l,c
 21612  005EA6  6ADA               	clrf	fsr2h,c
 21613  005EA8  0E02               	movlw	high _Ubuff
 21614  005EAA  22DA               	addwfc	fsr2h,f,c
 21615  005EAC  CFAE FFDF          	movff	4014,indf2	;volatile
 21616  005EB0                     
 21617                           ; BSR set to: 2
 21618  005EB0  2B18               	incf	(_Ubuff+24)& (0+255),f,b
 21619  005EB2                     
 21620                           ; BSR set to: 2
 21621                           ;./USART.h: 63:         if(Ubuff.buff[Ubuff.index-1] == 0x0A)
 21622  005EB2  0EFF               	movlw	low (_Ubuff+65535)
 21623  005EB4  2518               	addwf	(_Ubuff+24)& (0+255),w,b
 21624  005EB6  6ED9               	movwf	fsr2l,c
 21625  005EB8  6ADA               	clrf	fsr2h,c
 21626  005EBA  0E01               	movlw	high (_Ubuff+65535)
 21627  005EBC  22DA               	addwfc	fsr2h,f,c
 21628  005EBE  0E0A               	movlw	10
 21629  005EC0  18DE               	xorwf	postinc2,w,c
 21630  005EC2  A4D8               	btfss	status,2,c
 21631  005EC4  EF66  F02F         	goto	i2u917_41
 21632  005EC8  EF68  F02F         	goto	i2u917_40
 21633  005ECC                     i2u917_41:
 21634  005ECC  EF7D  F02F         	goto	i2l1606
 21635  005ED0                     i2u917_40:
 21636  005ED0                     
 21637                           ; BSR set to: 2
 21638                           ;./USART.h: 64:         {;./USART.h: 65:             Ubuff.index = 0;
 21639  005ED0  0E00               	movlw	0
 21640  005ED2  6F18               	movwf	(_Ubuff+24)& (0+255),b
 21641                           
 21642                           ;./USART.h: 66:             Ubuff.avaliable = 1;
 21643  005ED4  0E01               	movlw	1
 21644  005ED6  6F19               	movwf	(_Ubuff+25)& (0+255),b
 21645  005ED8  EF7D  F02F         	goto	i2l1606
 21646  005EDC                     i2l9785:
 21647                           
 21648                           ; BSR set to: 2
 21649                           ;./USART.h: 70:         if(RCREG != 0x0A) return;
 21650  005EDC  0E0A               	movlw	10
 21651  005EDE  18AE               	xorwf	174,w,c	;volatile
 21652  005EE0  B4D8               	btfsc	status,2,c
 21653  005EE2  EF75  F02F         	goto	i2u918_41
 21654  005EE6  EF77  F02F         	goto	i2u918_40
 21655  005EEA                     i2u918_41:
 21656  005EEA  EF79  F02F         	goto	i2l9789
 21657  005EEE                     i2u918_40:
 21658  005EEE  EF7D  F02F         	goto	i2l1606
 21659  005EF2                     i2l9789:
 21660                           
 21661                           ; BSR set to: 2
 21662                           ;./USART.h: 71:         Ubuff.index = 0;
 21663  005EF2  0E00               	movlw	0
 21664  005EF4  6F18               	movwf	(_Ubuff+24)& (0+255),b
 21665                           
 21666                           ;./USART.h: 72:         Ubuff.avaliable = 0;
 21667  005EF6  0E00               	movlw	0
 21668  005EF8  6F19               	movwf	(_Ubuff+25)& (0+255),b
 21669  005EFA                     i2l1606:
 21670  005EFA  0012               	return		;funcret
 21671  005EFC                     __end_of_USART_UART_doBuff:
 21672                           	callstack 0
 21673                           
 21674                           	psect	rparam
 21675  0000                     
 21676                           	psect	temp
 21677  00005C                     btemp:
 21678                           	callstack 0
 21679  00005C                     	ds	1
 21680  0000                     int$flags	set	btemp
 21681  0000                     wtemp8	set	btemp+1
 21682  0000                     ttemp5	set	btemp+1
 21683  0000                     ttemp6	set	btemp+4
 21684  0000                     ttemp7	set	btemp+8
 21685                           
 21686                           	psect	idloc
 21687                           
 21688                           ;Config register IDLOC0 @ 0x200000
 21689                           ;	unspecified, using default values
 21690  200000                     	org	2097152
 21691  200000  FF                 	db	255
 21692                           
 21693                           ;Config register IDLOC1 @ 0x200001
 21694                           ;	unspecified, using default values
 21695  200001                     	org	2097153
 21696  200001  FF                 	db	255
 21697                           
 21698                           ;Config register IDLOC2 @ 0x200002
 21699                           ;	unspecified, using default values
 21700  200002                     	org	2097154
 21701  200002  FF                 	db	255
 21702                           
 21703                           ;Config register IDLOC3 @ 0x200003
 21704                           ;	unspecified, using default values
 21705  200003                     	org	2097155
 21706  200003  FF                 	db	255
 21707                           
 21708                           ;Config register IDLOC4 @ 0x200004
 21709                           ;	unspecified, using default values
 21710  200004                     	org	2097156
 21711  200004  FF                 	db	255
 21712                           
 21713                           ;Config register IDLOC5 @ 0x200005
 21714                           ;	unspecified, using default values
 21715  200005                     	org	2097157
 21716  200005  FF                 	db	255
 21717                           
 21718                           ;Config register IDLOC6 @ 0x200006
 21719                           ;	unspecified, using default values
 21720  200006                     	org	2097158
 21721  200006  FF                 	db	255
 21722                           
 21723                           ;Config register IDLOC7 @ 0x200007
 21724                           ;	unspecified, using default values
 21725  200007                     	org	2097159
 21726  200007  FF                 	db	255
 21727                           
 21728                           	psect	config
 21729                           
 21730                           ;Config register CONFIG1L @ 0x300000
 21731                           ;	PLL Prescaler Selection bits
 21732                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
 21733                           ;	System Clock Postscaler Selection bits
 21734                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 21735                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 21736                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 21737  300000                     	org	3145728
 21738  300000  03                 	db	3
 21739                           
 21740                           ;Config register CONFIG1H @ 0x300001
 21741                           ;	Oscillator Selection bits
 21742                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
 21743                           ;	Fail-Safe Clock Monitor Enable bit
 21744                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 21745                           ;	Internal/External Oscillator Switchover bit
 21746                           ;	IESO = OFF, Oscillator Switchover mode disabled
 21747  300001                     	org	3145729
 21748  300001  0E                 	db	14
 21749                           
 21750                           ;Config register CONFIG2L @ 0x300002
 21751                           ;	Power-up Timer Enable bit
 21752                           ;	PWRT = OFF, PWRT disabled
 21753                           ;	Brown-out Reset Enable bits
 21754                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 21755                           ;	Brown-out Reset Voltage bits
 21756                           ;	BORV = 3, Minimum setting 2.05V
 21757                           ;	USB Voltage Regulator Enable bit
 21758                           ;	VREGEN = OFF, USB voltage regulator disabled
 21759  300002                     	org	3145730
 21760  300002  19                 	db	25
 21761                           
 21762                           ;Config register CONFIG2H @ 0x300003
 21763                           ;	Watchdog Timer Enable bit
 21764                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 21765                           ;	Watchdog Timer Postscale Select bits
 21766                           ;	WDTPS = 32768, 1:32768
 21767  300003                     	org	3145731
 21768  300003  1E                 	db	30
 21769                           
 21770                           ; Padding undefined space
 21771  300004                     	org	3145732
 21772  300004  FF                 	db	255
 21773                           
 21774                           ;Config register CONFIG3H @ 0x300005
 21775                           ;	CCP2 MUX bit
 21776                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 21777                           ;	PORTB A/D Enable bit
 21778                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 21779                           ;	Low-Power Timer 1 Oscillator Enable bit
 21780                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 21781                           ;	MCLR Pin Enable bit
 21782                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 21783  300005                     	org	3145733
 21784  300005  83                 	db	131
 21785                           
 21786                           ;Config register CONFIG4L @ 0x300006
 21787                           ;	Stack Full/Underflow Reset Enable bit
 21788                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 21789                           ;	Single-Supply ICSP Enable bit
 21790                           ;	LVP = OFF, Single-Supply ICSP disabled
 21791                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 21792                           ;	ICPRT = OFF, ICPORT disabled
 21793                           ;	Extended Instruction Set Enable bit
 21794                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 21795                           ;	Background Debugger Enable bit
 21796                           ;	DEBUG = 0x1, unprogrammed default
 21797  300006                     	org	3145734
 21798  300006  80                 	db	128
 21799                           
 21800                           ; Padding undefined space
 21801  300007                     	org	3145735
 21802  300007  FF                 	db	255
 21803                           
 21804                           ;Config register CONFIG5L @ 0x300008
 21805                           ;	Code Protection bit
 21806                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 21807                           ;	Code Protection bit
 21808                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 21809                           ;	Code Protection bit
 21810                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 21811                           ;	Code Protection bit
 21812                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 21813  300008                     	org	3145736
 21814  300008  0F                 	db	15
 21815                           
 21816                           ;Config register CONFIG5H @ 0x300009
 21817                           ;	Boot Block Code Protection bit
 21818                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 21819                           ;	Data EEPROM Code Protection bit
 21820                           ;	CPD = OFF, Data EEPROM is not code-protected
 21821  300009                     	org	3145737
 21822  300009  C0                 	db	192
 21823                           
 21824                           ;Config register CONFIG6L @ 0x30000A
 21825                           ;	Write Protection bit
 21826                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 21827                           ;	Write Protection bit
 21828                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 21829                           ;	Write Protection bit
 21830                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 21831                           ;	Write Protection bit
 21832                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 21833  30000A                     	org	3145738
 21834  30000A  0F                 	db	15
 21835                           
 21836                           ;Config register CONFIG6H @ 0x30000B
 21837                           ;	Configuration Register Write Protection bit
 21838                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 21839                           ;	Boot Block Write Protection bit
 21840                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 21841                           ;	Data EEPROM Write Protection bit
 21842                           ;	WRTD = OFF, Data EEPROM is not write-protected
 21843  30000B                     	org	3145739
 21844  30000B  E0                 	db	224
 21845                           
 21846                           ;Config register CONFIG7L @ 0x30000C
 21847                           ;	Table Read Protection bit
 21848                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 21849                           ;	Table Read Protection bit
 21850                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 21851                           ;	Table Read Protection bit
 21852                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 21853                           ;	Table Read Protection bit
 21854                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 21855  30000C                     	org	3145740
 21856  30000C  0F                 	db	15
 21857                           
 21858                           ;Config register CONFIG7H @ 0x30000D
 21859                           ;	Boot Block Table Read Protection bit
 21860                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 21861  30000D                     	org	3145741
 21862  30000D  40                 	db	64
 21863                           tosu	equ	0xFFF
 21864                           tosh	equ	0xFFE
 21865                           tosl	equ	0xFFD
 21866                           stkptr	equ	0xFFC
 21867                           pclatu	equ	0xFFB
 21868                           pclath	equ	0xFFA
 21869                           pcl	equ	0xFF9
 21870                           tblptru	equ	0xFF8
 21871                           tblptrh	equ	0xFF7
 21872                           tblptrl	equ	0xFF6
 21873                           tablat	equ	0xFF5
 21874                           prodh	equ	0xFF4
 21875                           prodl	equ	0xFF3
 21876                           indf0	equ	0xFEF
 21877                           postinc0	equ	0xFEE
 21878                           postdec0	equ	0xFED
 21879                           preinc0	equ	0xFEC
 21880                           plusw0	equ	0xFEB
 21881                           fsr0h	equ	0xFEA
 21882                           fsr0l	equ	0xFE9
 21883                           wreg	equ	0xFE8
 21884                           indf1	equ	0xFE7
 21885                           postinc1	equ	0xFE6
 21886                           postdec1	equ	0xFE5
 21887                           preinc1	equ	0xFE4
 21888                           plusw1	equ	0xFE3
 21889                           fsr1h	equ	0xFE2
 21890                           fsr1l	equ	0xFE1
 21891                           bsr	equ	0xFE0
 21892                           indf2	equ	0xFDF
 21893                           postinc2	equ	0xFDE
 21894                           postdec2	equ	0xFDD
 21895                           preinc2	equ	0xFDC
 21896                           plusw2	equ	0xFDB
 21897                           fsr2h	equ	0xFDA
 21898                           fsr2l	equ	0xFD9
 21899                           status	equ	0xFD8

Data Sizes:
    Strings     247
    Constant    3162
    Data        53
    BSS         571
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    144     157
    BANK1           256     66     254
    BANK2           256      0     245
    BANK3           256      0     176
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MPU6050_dmpGetRoll@q	PTR struct . size(2) Largest target is 16
		 -> q(BANK2[16]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> text(BANK3[64]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_9(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_9(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_9(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 64
		 -> text(BANK3[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S3062_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> text(BANK3[64]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> text(BANK3[64]), 

    memcmp@vr	PTR const void  size(2) Largest target is 16
		 -> MPU6050_writeMemoryBlock@mlc1(COMRAM[16]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 16
		 -> MPU6050_writeMemoryBlock@mlc1(COMRAM[16]), 

    memcmp@vl	PTR const void  size(2) Largest target is 3062
		 -> dmpMemory(CODE[3062]), MPU6050_writeDMPConfigurationSet@mlc(COMRAM[16]), MPU6050_writeMemoryBlock@mlc2(COMRAM[16]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 3062
		 -> dmpMemory(CODE[3062]), MPU6050_writeDMPConfigurationSet@mlc(COMRAM[16]), MPU6050_writeMemoryBlock@mlc2(COMRAM[16]), 

    main$2480	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_4(CODE[27]), STR_3(CODE[31]), 

    USART_UART_readBuffer@buffer	PTR unsigned char  size(2) Largest target is 24
		 -> btRX(BANK1[24]), 

    USART_UART_transmitString@data	PTR unsigned char  size(2) Largest target is 64
		 -> text(BANK3[64]), STR_8(CODE[17]), STR_7(CODE[23]), STR_6(CODE[27]), 
		 -> STR_5(CODE[21]), STR_4(CODE[27]), STR_3(CODE[31]), STR_2(CODE[31]), 
		 -> STR_1(CODE[29]), 

    MPU6050_dmpGetCurrentFIFOPacket@data	PTR unsigned char  size(2) Largest target is 28
		 -> main@fifoBuffer(BANK1[28]), 

    MPU6050_dmpGetRoll@gravity	PTR struct . size(2) Largest target is 12
		 -> gravity(BANK2[12]), 

    MPU6050_dmpGetRoll@data	PTR float  size(2) Largest target is 12
		 -> ypr(BANK2[12]), 

    MPU6050_dmpGetGravityVF@q	PTR struct . size(2) Largest target is 16
		 -> q(BANK2[16]), 

    MPU6050_dmpGetGravityVF@v	PTR struct . size(2) Largest target is 12
		 -> gravity(BANK2[12]), 

    MPU6050_dmpGetLinearAccel@gravity	PTR struct . size(2) Largest target is 12
		 -> gravity(BANK2[12]), 

    MPU6050_dmpGetLinearAccel@vRaw	PTR struct . size(2) Largest target is 6
		 -> aa(BANK2[6]), 

    MPU6050_dmpGetLinearAccel@v	PTR struct . size(2) Largest target is 6
		 -> aaReal(BANK1[6]), 

    MPU6050_dmpGetQuaternionQ@q	PTR struct . size(2) Largest target is 16
		 -> q(BANK2[16]), 

    MPU6050_dmpGetQuaternionQ@packet	PTR const unsigned char  size(2) Largest target is 28
		 -> main@fifoBuffer(BANK1[28]), 

    MPU6050_dmpGetQuaternionI16@data	PTR short  size(2) Largest target is 8
		 -> MPU6050_dmpGetGravityVI@qI(COMRAM[8]), MPU6050_dmpGetQuaternionQ@qI(COMRAM[8]), 

    MPU6050_dmpGetQuaternionI16@packet	PTR const unsigned char  size(2) Largest target is 28
		 -> main@fifoBuffer(BANK1[28]), NULL(NULL[0]), 

    MPU6050_dmpGetAccelI16@data	PTR short  size(2) Largest target is 6
		 -> aa(BANK2[6]), 

    MPU6050_dmpGetAccelI16@packet	PTR const unsigned char  size(2) Largest target is 28
		 -> main@fifoBuffer(BANK1[28]), NULL(NULL[0]), 

    dmpPacketBuffer	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MPU6050_writeProgMemoryBlock@data	PTR const unsigned char  size(2) Largest target is 3062
		 -> dmpMemory(CODE[3062]), MPU6050_writeDMPConfigurationSet@mlc(COMRAM[16]), 

    MPU6050_writeMemoryBlock@data	PTR const unsigned char  size(2) Largest target is 3062
		 -> dmpMemory(CODE[3062]), MPU6050_writeDMPConfigurationSet@mlc(COMRAM[16]), 

    MPU6050_writeMemoryBlock@progBuffer	PTR unsigned char  size(2) Largest target is 3062
		 -> dmpMemory(CODE[3062]), MPU6050_writeDMPConfigurationSet@mlc(COMRAM[16]), MPU6050_writeMemoryBlock@mlc2(COMRAM[16]), 

    MPU6050_writeMemoryBlock@verifyBuffer	PTR unsigned char  size(2) Largest target is 16
		 -> MPU6050_writeMemoryBlock@mlc1(COMRAM[16]), 

    MPU6050_GetCurrentFIFOPacket@data	PTR unsigned char  size(2) Largest target is 28
		 -> main@fifoBuffer(BANK1[28]), 

    MPU6050_getFIFOBytes@data	PTR unsigned char  size(2) Largest target is 32
		 -> main@fifoBuffer(BANK1[28]), MPU6050_dmpReadAndProcessFIFOPacket@buf(COMRAM[28]), MPU6050_GetCurrentFIFOPacket@Trash(COMRAM[32]), 

    I2Cdev_writeWords@data	PTR unsigned short  size(2) Largest target is 2
		 -> MPU6050_PID@Data(COMRAM[2]), I2Cdev_writeWord@data(COMRAM[2]), 

    I2Cdev_writeBytes@data	PTR unsigned char  size(2) Largest target is 3062
		 -> dmpMemory(CODE[3062]), MPU6050_writeDMPConfigurationSet@mlc(COMRAM[16]), MPU6050_writeMemoryBlock@mlc2(COMRAM[16]), I2Cdev_writeByte@data(COMRAM[1]), 

    I2Cdev_readBits@data	PTR unsigned char  size(2) Largest target is 15
		 -> mpu6050(BANK1[15]), 

    I2Cdev_readByte@data	PTR unsigned char  size(2) Largest target is 15
		 -> mpu6050(BANK1[15]), I2Cdev_writeBits@b(COMRAM[1]), I2Cdev_writeBit@b(COMRAM[1]), I2Cdev_readBits@b(COMRAM[1]), 
		 -> I2Cdev_readBit@b(COMRAM[1]), 

    I2Cdev_readBytes@data	PTR unsigned char  size(2) Largest target is 32
		 -> main@fifoBuffer(BANK1[28]), MPU6050_dmpReadAndProcessFIFOPacket@buf(COMRAM[28]), MPU6050_writeMemoryBlock@mlc1(COMRAM[16]), MPU6050_GetCurrentFIFOPacket@Trash(COMRAM[32]), 
		 -> mpu6050(BANK1[15]), I2Cdev_writeBits@b(COMRAM[1]), I2Cdev_writeBit@b(COMRAM[1]), I2Cdev_readBits@b(COMRAM[1]), 
		 -> I2Cdev_readBit@b(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->___fladd
    _efgtoa->___fladd
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flge->___flmul
    _i2c_init->___lldiv
    _controlReceive->___fladd
    _USART_UART_transmitString->_USART_UART_transmitByte
    _USART_UART_init->_USART_setBaudRate
    _USART_setBaudRate->___lldiv
    _MPU6050_getDeviceID->_I2Cdev_readBits
    _I2Cdev_readBits->_I2Cdev_readByte
    _MPU6050_initialize->_MPU6050_setSleepEnabled
    _MPU6050_setSleepEnabled->_I2Cdev_writeBit
    _MPU6050_setFullScaleGyroRange->_I2Cdev_writeBits
    _MPU6050_setFullScaleAccelRange->_I2Cdev_writeBits
    _MPU6050_setClockSource->_I2Cdev_writeBits
    _MPU6050_getIntStatus->_I2Cdev_readByte
    _MPU6050_dmpInitialize->_MPU6050_writeProgMemoryBlock
    _MPU6050_writeProgMemoryBlock->_MPU6050_writeMemoryBlock
    _MPU6050_writeMemoryBlock->_MPU6050_setMemoryBank
    _MPU6050_setMemoryStartAddress->_I2Cdev_writeByte
    _MPU6050_setMemoryBank->_I2Cdev_writeByte
    _MPU6050_setDMPEnabled->_I2Cdev_writeBit
    _I2Cdev_writeWord->_I2Cdev_writeWords
    _I2Cdev_writeWords->_IdleI2C
    _I2Cdev_writeWords->_WriteI2C
    _I2Cdev_writeBits->_I2Cdev_readByte
    _atan2f->___fladd
    _atanf->___fladd
    _fabsf->___fldiv
    _MPU6050_dmpGetQuaternionQ->___fldiv
    ___fldiv->___xxtofl
    ___xxtofl->___wmul
    _MPU6050_dmpGetGravityVF->___fladd
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___fldiv
    _MPU6050_dmpGetCurrentFIFOPacket->_MPU6050_GetCurrentFIFOPacket
    _MPU6050_resetFIFO->_I2Cdev_writeBit
    _I2Cdev_writeBit->_I2Cdev_readByte
    _I2Cdev_writeByte->_I2Cdev_writeBytes
    _I2Cdev_writeBytes->_IdleI2C
    _I2Cdev_writeBytes->_WriteI2C
    _I2Cdev_readByte->_I2Cdev_readBytes
    _MPU6050_getFIFOCount->_I2Cdev_readBytes
    _MPU6050_getFIFOBytes->_I2Cdev_readBytes
    _I2Cdev_readBytes->_IdleI2C
    _I2Cdev_readBytes->_WriteI2C

Critical Paths under __int_timing in COMRAM

    __int_timing->_USART_UART_doBuff

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _MPU6050_dmpGetRoll->_atan2f
    _atan2f->_atanf
    _atanf->___flsub
    _MPU6050_dmpGetLinearAccel->___fltol
    ___fltol->___flsub
    _MPU6050_dmpGetGravityVF->___flsub

Critical Paths under __int_timing in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under __int_timing in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under __int_timing in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under __int_timing in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under __int_timing in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under __int_timing in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under __int_timing in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under __int_timing in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                72    72      0  712393
                                            140 BANK0      4     4      0
                                              0 BANK1     66    66      0
                            _MPU6050
             _MPU6050_dmpGetAccelI16
    _MPU6050_dmpGetCurrentFIFOPacket
       _MPU6050_dmpGetFIFOPacketSize
            _MPU6050_dmpGetGravityVF
          _MPU6050_dmpGetLinearAccel
          _MPU6050_dmpGetQuaternionQ
                 _MPU6050_dmpGetRoll
              _MPU6050_dmpInitialize
               _MPU6050_getIntStatus
                 _MPU6050_initialize
              _MPU6050_setDMPEnabled
             _MPU6050_testConnection
                    _USART_UART_init
          _USART_UART_transmitString
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                     _controlReceive
                           _i2c_init
                  _resetDisplacement
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    10     16   81701
                                            114 BANK0     26    10     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   81203
                                            106 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   80709
                                             86 BANK0     20    14      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   76641
                                             18 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             48 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4038
                                             73 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     756
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             6     4      2     891
                                             16 COMRAM     6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _controlReceive                                      12    12      0   44263
                                              0 BANK0     12    12      0
              _USART_UART_readBuffer
                            ___fladd
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                  _resetDisplacement
 ---------------------------------------------------------------------------------
 (1) _resetDisplacement                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1725
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_UART_readBuffer                                5     2      3     460
                                              3 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _USART_UART_transmitString                            2     0      2     675
                                              4 COMRAM     2     0      2
            _USART_UART_transmitByte
 ---------------------------------------------------------------------------------
 (2) _USART_UART_transmitByte                              1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_UART_init                                      5     0      5    1086
                                             20 COMRAM     5     0      5
                  _USART_setBaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_setBaudRate                                    4     0      4     890
                                             16 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     770
                                              3 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _MPU6050_testConnection                               0     0      0   14929
                _MPU6050_getDeviceID
 ---------------------------------------------------------------------------------
 (2) _MPU6050_getDeviceID                                  0     0      0   14929
                    _I2Cdev_readBits
 ---------------------------------------------------------------------------------
 (3) _I2Cdev_readBits                                     12     7      5   14929
                                             20 COMRAM    12     7      5
                    _I2Cdev_readByte
 ---------------------------------------------------------------------------------
 (1) _MPU6050_initialize                                   0     0      0   95778
             _MPU6050_setClockSource
     _MPU6050_setFullScaleAccelRange
      _MPU6050_setFullScaleGyroRange
            _MPU6050_setSleepEnabled
 ---------------------------------------------------------------------------------
 (2) _MPU6050_setSleepEnabled                              1     1      0   30921
                                             32 COMRAM     1     1      0
                    _I2Cdev_writeBit
 ---------------------------------------------------------------------------------
 (2) _MPU6050_setFullScaleGyroRange                        1     1      0   21619
                                             30 COMRAM     1     1      0
                   _I2Cdev_writeBits
 ---------------------------------------------------------------------------------
 (2) _MPU6050_setFullScaleAccelRange                       1     1      0   21619
                                             30 COMRAM     1     1      0
                   _I2Cdev_writeBits
 ---------------------------------------------------------------------------------
 (2) _MPU6050_setClockSource                               1     1      0   21619
                                             30 COMRAM     1     1      0
                   _I2Cdev_writeBits
 ---------------------------------------------------------------------------------
 (1) _MPU6050_getIntStatus                                 0     0      0    9507
                    _I2Cdev_readByte
 ---------------------------------------------------------------------------------
 (1) _MPU6050_dmpInitialize                                5     5      0  114324
                                             78 COMRAM     3     3      0
                    _I2Cdev_writeBit
                   _I2Cdev_writeBits
                   _I2Cdev_writeByte
                   _I2Cdev_writeWord
              _MPU6050_setDMPEnabled
       _MPU6050_writeProgMemoryBlock
 ---------------------------------------------------------------------------------
 (2) _MPU6050_writeProgMemoryBlock                         7     0      7   22282
                                             71 COMRAM     7     0      7
           _MPU6050_writeMemoryBlock
 ---------------------------------------------------------------------------------
 (3) _MPU6050_writeMemoryBlock                            53    45      8   21412
                                             18 COMRAM    53    45      8
                   _I2Cdev_readBytes
                  _I2Cdev_writeBytes
              _MPU6050_setMemoryBank
      _MPU6050_setMemoryStartAddress
                             _memcmp
 ---------------------------------------------------------------------------------
 (4) _memcmp                                              12     6      6     409
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (4) _MPU6050_setMemoryStartAddress                        1     1      0    6325
                                             15 COMRAM     1     1      0
                   _I2Cdev_writeByte
 ---------------------------------------------------------------------------------
 (4) _MPU6050_setMemoryBank                                3     1      2    7132
                                             15 COMRAM     3     1      2
                   _I2Cdev_writeByte
 ---------------------------------------------------------------------------------
 (1) _MPU6050_setDMPEnabled                                1     1      0   30921
                                             32 COMRAM     1     1      0
                    _I2Cdev_writeBit
 ---------------------------------------------------------------------------------
 (2) _I2Cdev_writeWord                                     4     1      3    2320
                                             14 COMRAM     4     1      3
                  _I2Cdev_writeWords
 ---------------------------------------------------------------------------------
 (3) _I2Cdev_writeWords                                   10     6      4     884
                                              4 COMRAM    10     6      4
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _I2Cdev_writeBits                                    10     6      4   21597
                                             20 COMRAM    10     6      4
                    _I2Cdev_readByte
                   _I2Cdev_writeByte
 ---------------------------------------------------------------------------------
 (1) _MPU6050_dmpGetRoll                                   6     0      6  100569
                                            122 BANK0      6     0      6
                             _atan2f
 ---------------------------------------------------------------------------------
 (2) _atan2f                                              56    48      8  100275
                                             66 BANK0     56    48      8
                            ___fladd
                            ___fldiv
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _atanf
                              _fabsf
 ---------------------------------------------------------------------------------
 (3) _atanf                                               58    54      4   60112
                                              8 BANK0     58    54      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _fabsf
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4     262
                                             48 COMRAM     8     4      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     515
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     920
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _MPU6050_dmpGetQuaternionQ                           13     9      4   10118
                                             48 COMRAM    13     9      4
        _MPU6050_dmpGetQuaternionI16
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    6293
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _MPU6050_dmpGetQuaternionI16                          8     4      4     591
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _MPU6050_dmpGetLinearAccel                            6     0      6   43500
                                             18 BANK0      6     0      6
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2822
                                              9 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1972
                                              8 BANK0     10     6      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _MPU6050_dmpGetGravityVF                             16    12      4   51417
                                              8 BANK0     16    12      4
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8   17815
                                              0 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8   12598
                                             73 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   20342
                                             48 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _MPU6050_dmpGetFIFOPacketSize                         2     0      2       0
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MPU6050_dmpGetCurrentFIFOPacket                      2     0      2   43034
                                             79 COMRAM     2     0      2
       _MPU6050_GetCurrentFIFOPacket
 ---------------------------------------------------------------------------------
 (2) _MPU6050_GetCurrentFIFOPacket                        47    44      3   42936
                                             32 COMRAM    47    44      3
               _MPU6050_getFIFOBytes
               _MPU6050_getFIFOCount
                  _MPU6050_resetFIFO
 ---------------------------------------------------------------------------------
 (3) _MPU6050_resetFIFO                                    0     0      0   30899
                    _I2Cdev_writeBit
 ---------------------------------------------------------------------------------
 (2) _I2Cdev_writeBit                                     12     9      3   30899
                                             20 COMRAM    12     9      3
                    _I2Cdev_readByte
                   _I2Cdev_writeByte
 ---------------------------------------------------------------------------------
 (3) _I2Cdev_writeByte                                     3     1      2    6303
                                             12 COMRAM     3     1      2
                  _I2Cdev_writeBytes
 ---------------------------------------------------------------------------------
 (4) _I2Cdev_writeBytes                                    8     4      4     612
                                              4 COMRAM     8     4      4
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _I2Cdev_readByte                                      4     1      3    9507
                                             16 COMRAM     4     1      3
                   _I2Cdev_readBytes
 ---------------------------------------------------------------------------------
 (3) _MPU6050_getFIFOCount                                 4     2      2    5489
                                             16 COMRAM     4     2      2
                   _I2Cdev_readBytes
 ---------------------------------------------------------------------------------
 (3) _MPU6050_getFIFOBytes                                 3     0      3    5989
                                             16 COMRAM     3     0      3
                   _I2Cdev_readBytes
 ---------------------------------------------------------------------------------
 (5) _I2Cdev_readBytes                                    12     8      4    5489
                                              4 COMRAM    12     8      4
                             _AckI2C
                            _IdleI2C
                          _NotAckI2C
                            _ReadI2C
                         _RestartI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (6) _WriteI2C                                             1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RestartI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _NotAckI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IdleI2C                                              1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _AckI2C                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_dmpGetAccelI16                               8     4      4     373
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _MPU6050                                              1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) __int_timing                                          2     2      0       0
                                              1 COMRAM     2     2      0
                  _USART_UART_doBuff
 ---------------------------------------------------------------------------------
 (10) _USART_UART_doBuff                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050
   _MPU6050_dmpGetAccelI16
   _MPU6050_dmpGetCurrentFIFOPacket
     _MPU6050_GetCurrentFIFOPacket
       _MPU6050_getFIFOBytes
         _I2Cdev_readBytes
           _AckI2C
           _IdleI2C
           _NotAckI2C
           _ReadI2C
           _RestartI2C
           _StartI2C
           _StopI2C
           _WriteI2C
       _MPU6050_getFIFOCount
         _I2Cdev_readBytes
           _AckI2C
           _IdleI2C
           _NotAckI2C
           _ReadI2C
           _RestartI2C
           _StartI2C
           _StopI2C
           _WriteI2C
       _MPU6050_resetFIFO
         _I2Cdev_writeBit
           _I2Cdev_readByte
             _I2Cdev_readBytes
               _AckI2C
               _IdleI2C
               _NotAckI2C
               _ReadI2C
               _RestartI2C
               _StartI2C
               _StopI2C
               _WriteI2C
           _I2Cdev_writeByte
             _I2Cdev_writeBytes
               _IdleI2C
               _StartI2C
               _StopI2C
               _WriteI2C
   _MPU6050_dmpGetFIFOPacketSize
   _MPU6050_dmpGetGravityVF
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
   _MPU6050_dmpGetLinearAccel
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl
       ___wmul (ARG)
   _MPU6050_dmpGetQuaternionQ
     _MPU6050_dmpGetQuaternionI16
     ___fldiv
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl
       ___wmul (ARG)
   _MPU6050_dmpGetRoll
     _atan2f
       ___fladd
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fldiv
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fpclassifyf
       _atanf
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___fpclassifyf
         _fabsf
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
       _fabsf
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
   _MPU6050_dmpInitialize
     _I2Cdev_writeBit
       _I2Cdev_readByte
         _I2Cdev_readBytes
           _AckI2C
           _IdleI2C
           _NotAckI2C
           _ReadI2C
           _RestartI2C
           _StartI2C
           _StopI2C
           _WriteI2C
       _I2Cdev_writeByte
         _I2Cdev_writeBytes
           _IdleI2C
           _StartI2C
           _StopI2C
           _WriteI2C
     _I2Cdev_writeBits
       _I2Cdev_readByte
         _I2Cdev_readBytes
           _AckI2C
           _IdleI2C
           _NotAckI2C
           _ReadI2C
           _RestartI2C
           _StartI2C
           _StopI2C
           _WriteI2C
       _I2Cdev_writeByte
         _I2Cdev_writeBytes
           _IdleI2C
           _StartI2C
           _StopI2C
           _WriteI2C
     _I2Cdev_writeByte
       _I2Cdev_writeBytes
         _IdleI2C
         _StartI2C
         _StopI2C
         _WriteI2C
     _I2Cdev_writeWord
       _I2Cdev_writeWords
         _IdleI2C
         _StartI2C
         _StopI2C
         _WriteI2C
     _MPU6050_setDMPEnabled
       _I2Cdev_writeBit
         _I2Cdev_readByte
           _I2Cdev_readBytes
             _AckI2C
             _IdleI2C
             _NotAckI2C
             _ReadI2C
             _RestartI2C
             _StartI2C
             _StopI2C
             _WriteI2C
         _I2Cdev_writeByte
           _I2Cdev_writeBytes
             _IdleI2C
             _StartI2C
             _StopI2C
             _WriteI2C
     _MPU6050_writeProgMemoryBlock
       _MPU6050_writeMemoryBlock
         _I2Cdev_readBytes
           _AckI2C
           _IdleI2C
           _NotAckI2C
           _ReadI2C
           _RestartI2C
           _StartI2C
           _StopI2C
           _WriteI2C
         _I2Cdev_writeBytes
           _IdleI2C
           _StartI2C
           _StopI2C
           _WriteI2C
         _MPU6050_setMemoryBank
           _I2Cdev_writeByte
             _I2Cdev_writeBytes
               _IdleI2C
               _StartI2C
               _StopI2C
               _WriteI2C
         _MPU6050_setMemoryStartAddress
           _I2Cdev_writeByte
             _I2Cdev_writeBytes
               _IdleI2C
               _StartI2C
               _StopI2C
               _WriteI2C
         _memcmp
   _MPU6050_getIntStatus
     _I2Cdev_readByte
       _I2Cdev_readBytes
         _AckI2C
         _IdleI2C
         _NotAckI2C
         _ReadI2C
         _RestartI2C
         _StartI2C
         _StopI2C
         _WriteI2C
   _MPU6050_initialize
     _MPU6050_setClockSource
       _I2Cdev_writeBits
         _I2Cdev_readByte
           _I2Cdev_readBytes
             _AckI2C
             _IdleI2C
             _NotAckI2C
             _ReadI2C
             _RestartI2C
             _StartI2C
             _StopI2C
             _WriteI2C
         _I2Cdev_writeByte
           _I2Cdev_writeBytes
             _IdleI2C
             _StartI2C
             _StopI2C
             _WriteI2C
     _MPU6050_setFullScaleAccelRange
       _I2Cdev_writeBits
         _I2Cdev_readByte
           _I2Cdev_readBytes
             _AckI2C
             _IdleI2C
             _NotAckI2C
             _ReadI2C
             _RestartI2C
             _StartI2C
             _StopI2C
             _WriteI2C
         _I2Cdev_writeByte
           _I2Cdev_writeBytes
             _IdleI2C
             _StartI2C
             _StopI2C
             _WriteI2C
     _MPU6050_setFullScaleGyroRange
       _I2Cdev_writeBits
         _I2Cdev_readByte
           _I2Cdev_readBytes
             _AckI2C
             _IdleI2C
             _NotAckI2C
             _ReadI2C
             _RestartI2C
             _StartI2C
             _StopI2C
             _WriteI2C
         _I2Cdev_writeByte
           _I2Cdev_writeBytes
             _IdleI2C
             _StartI2C
             _StopI2C
             _WriteI2C
     _MPU6050_setSleepEnabled
       _I2Cdev_writeBit
         _I2Cdev_readByte
           _I2Cdev_readBytes
             _AckI2C
             _IdleI2C
             _NotAckI2C
             _ReadI2C
             _RestartI2C
             _StartI2C
             _StopI2C
             _WriteI2C
         _I2Cdev_writeByte
           _I2Cdev_writeBytes
             _IdleI2C
             _StartI2C
             _StopI2C
             _WriteI2C
   _MPU6050_setDMPEnabled
     _I2Cdev_writeBit
       _I2Cdev_readByte
         _I2Cdev_readBytes
           _AckI2C
           _IdleI2C
           _NotAckI2C
           _ReadI2C
           _RestartI2C
           _StartI2C
           _StopI2C
           _WriteI2C
       _I2Cdev_writeByte
         _I2Cdev_writeBytes
           _IdleI2C
           _StartI2C
           _StopI2C
           _WriteI2C
   _MPU6050_testConnection
     _MPU6050_getDeviceID
       _I2Cdev_readBits
         _I2Cdev_readByte
           _I2Cdev_readBytes
             _AckI2C
             _IdleI2C
             _NotAckI2C
             _ReadI2C
             _RestartI2C
             _StartI2C
             _StopI2C
             _WriteI2C
   _USART_UART_init
     _USART_setBaudRate
       ___lldiv
   _USART_UART_transmitString
     _USART_UART_transmitByte
   ___fladd
     ___fldiv (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___fldiv
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flge
     ___flmul (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flmul
     ___fldiv (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flsub
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___fltol
     ___flmul (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flsub (ARG)
       ___fladd
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   ___xxtofl
     ___wmul (ARG)
   _controlReceive
     _USART_UART_readBuffer
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fldiv
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _resetDisplacement
   _i2c_init
     ___lldiv
   _resetDisplacement
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fldiv
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flmul
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fltol
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___flsub (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isupper
         _strncmp
         _tolower
           _isupper

 __int_timing (ROOT)
   _USART_UART_doBuff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B0      11       68.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     42      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39B      20        0.0%
DATA                 0      0     39B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Jun 22 13:39:43 2022

                            ___fldiv@aexp 0030                              ___fldiv@bexp 002F  
                                       _q 02A3                              ___fldiv@sign 0028  
         __size_of_MPU6050_setClockSource 001C                               _SSPSTATbits 000FC7  
                                      l27 6062                              ___awdiv@sign 0009  
                                      _aT 72AD                                        _kD 01EE  
                                      _kI 01F2                                        _aa 02CB  
                                      _kP 01F6                                        _dt 0168  
                                      _pi 72ED                       ___wmul@multiplicand 0006  
                           _i2c_init$4518 0013                                       l200 65D8  
                                     l202 65E6                                       l211 6692  
                                     l203 65E8                                       l212 6694  
                                     l221 6512                                       l206 6676  
                                     l230 6640                                       l223 6520  
                                     l215 64F6                                       l224 6524  
                                     l232 664E                                       l209 6684  
                                     l233 6650                                       l242 6830  
                                     l218 6504                                       l306 5DEC  
                                     l227 6632                                       l244 683E  
                                     l236 681A                                       l412 66B0  
                                     l245 6840                                       l253 5404  
                                     l317 5CC6                                       l238 6828  
                                     l239 682A                                       l191 6662  
                                     l256 6784                                       l185 67FE  
                                     l193 6670                                       l194 6672  
                                     l290 676A                                       l188 6654  
                                     l436 66CC                                       l197 65CA  
                                     l277 5E7A                                       l382 6702  
                                     l287 5F76                                       l376 6888  
                                     l296 5C2E                                       l299 6750  
                                     l379 671C                                       l914 6814  
                                     l771 6736                                       l929 67CE  
                                     l947 66E8                                       l992 6576  
                                     l998 679E                                       _PR2 000FCB  
                                     _pS0 72FD                                       _pS1 72F9  
                                     _pS2 72F5                                       _qS1 72F1  
                   I2Cdev_readBits@length 0017                                       _pad 58D6  
                                     _ypr 02B3                              ___awmod@sign 0009  
                                     wreg 000FE8                           quaternion@F4036 02E5  
           __size_of_MPU6050_getFIFOCount 0028             __size_of_MPU6050_getFIFOBytes 001A  
      __size_of_USART_UART_transmitString 005E                              ___flmul@aexp 0042  
                            ___flmul@bexp 0043                      ??_MPU6050_initialize 0022  
                            ___flmul@sign 003D                              ___flmul@temp 0048  
                            ___flmul@prod 0044                          _I2Cdev_writeBits 5C30  
                        _I2Cdev_writeByte 6752                          _I2Cdev_writeWord 6738  
                  I2Cdev_readBits@devAddr 001E            __end_of_MPU6050_testConnection 6704  
                            ___fltol@exp1 0071                           __end_of_MPU6050 688A  
                                    l1021 4A2E                                      l1015 4948  
                                    l1009 49AE                                      l1201 65C2  
                                    l1029 662E                                      l1152 67E6  
                                    l1160 6418                                      l1163 6854  
                                    l2053 5810                                      l2119 511E  
                                    l1505 54E2                                      l1521 4D72  
                                    l2081 5AF0                                      l1186 4290  
                                    l2066 5A46                                      l1195 4464  
                                    l2404 3B56                                      l2092 5222  
                                    l1517 5016                                      l2350 30C2  
                                    l2406 39B6                                      l1614 5FEE  
                                    l2351 30B0                                      l2415 39FC  
                                    l2087 51DC                                      l2440 37BC  
                                    l2352 3076                                      l1536 4856  
                                    l2096 6488                                      l2600 5320  
                                    l1545 3EC4                                      l2417 3A74  
                                    l2409 397A                                      l2418 3A62  
                                    l1571 6880                                      l2443 364E  
                                    l2436 3458                                      l2453 377E  
                                    l2445 36C6                                      l1557 6244  
                                    l1581 60C6                                      l1717 58D4  
                                    l1725 2B6E                                      l2701 595C  
                                    l1813 0C38                                      l1574 6866  
                                    l2446 36B4                                      l2614 197E  
                                    l1494 4EF8                                      l1590 67B6  
                                    l1822 659C                                      l2367 31DC  
                                    l2359 3392                                      l2543 28AA  
                                    l2703 5996                                      l1815 0C9C  
                                    l2376 32AC                                      l2392 6398  
                                    l2480 4BE2                                      l2624 1AF0  
                                    l2552 2366                                      l2544 222E  
                                    l1584 654E                                      l1752 2ED2  
                                    l2377 329A                                      l2721 197C  
                                    l2642 64F2                                      l2618 21A8  
                                    l2546 224E                                      l2810 4158  
                                    l2491 4B7A                                      l1587 67A4  
                                    l2803 4212                                      l1763 0130  
                                    l2484 4B1E                                      l1596 61E6  
                                    l1764 0130                                      l2477 4A86  
                                    l2661 6350                                      l2654 574C  
                                    l2823 4676                                      l2576 2672  
                                    l1856 5B94                                      l2816 6120  
                                    l1849 5B84                                      l2921 64BE  
                                    l2833 6450                                      l2817 6128  
                                    l2586 273A                                      l2578 263C  
                                    l2826 45BA                                      l1786 0412  
                                    l2915 62FE                                      l2739 1110  
                                    l2940 6188                                      l1796 09A6  
                                    l2925 55B8                                      ?_pad 0014  
                                    l2935 6180                                      l2767 1550  
                                    l2848 5682                                      l2856 63DC  
                                    l8001 364C                                      l2698 591A  
                                    l8011 36AC                                      l8003 365E  
                                    l2859 688A                                      l8021 371A  
                                    l8005 366C                                      l8101 59B2  
                                    l8031 3782                                      l8015 36D6  
                                    l8023 371E                                      l8007 3670  
                                    l8111 59E6                                      l8103 59B6  
                                    l8041 37AC                                      l8033 3792  
                                    l8025 3738                                      l8017 36E2  
                                    l8009 367E                                      l9001 660E  
                                    l8121 5A20                                      l8113 59EE  
                                    l8105 59C4                                      l9011 4898  
                                    l8035 37A0                                      l8027 374C  
                                    l8019 36F0                                      l9003 662A  
                                    l8051 574E                                      l8115 59FC  
                                    l8123 5A26                                      l8107 59CC  
                                    l8131 5A48                                      l7501 53C2  
                                    l9021 490E                                      l9013 48B4  
                                    l8037 37A2                                      l8029 3766  
                                    l8045 6352                                      l8221 5224  
                                    l8061 577A                                      l8053 5752  
                                    l8125 5A36                                      l8117 5A12  
                                    l8109 59DE                                      l8141 5AE8  
                                    l8133 5A76                                      l8301 4656  
                                    l7431 67E8                                      l7511 53FE  
                                    l7503 53C6                                      l8311 5D80  
                                    l9023 4920                                      l9031 4968  
                                    l9015 48B8                                      l9007 4858  
                                    l8039 37A8                                      l8047 6364  
                                    l8223 5244                                      l8071 57A8  
                                    l8063 5782                                      l8055 5760  
                                    l8127 5A3E                                      l8119 5A1A  
                                    l8143 5AEE                                      l8135 5A86  
                                    l8151 515E                                      l8303 4666  
                                    l7433 67E8                                      l7441 64F4  
                                    l7513 5402                                      l7505 53CA  
                                    l7521 5F06                                      l8313 5DAA  
                                    l9041 49C6                                      l9025 493C  
                                    l9017 48B8                                      l9033 497A  
                                    l9009 4868                                      l7601 2FE8  
                                    l9121 4EFA                                      l8225 5282  
                                    l8233 52C2                                      l8321 63E0  
                                    l8081 57E2                                      l8073 57B0  
                                    l8065 5786                                      l8057 5768  
                                    l8137 5AB4                                      l8161 51CA  
                                    l8153 518C                                      l7451 682C  
                                    l7443 6522                                      l7435 6652  
                                    l7507 53CC                                      l7531 5F28  
                                    l7523 5F0A                                      l8315 5DDA  
                                    l8307 5D5E                                      l9051 4A2C  
                                    l9027 4950                                      l9019 48D6  
                                    l9035 49AE                                      l7611 2FFC  
                                    l7603 2FEC                                      l9131 4FD2  
                                    l9123 4F0C                                      l8171 6468  
                                    l8235 52D4                                      l8227 52AA  
                                    l9211 254E                                      l8331 6408  
                                    l8323 63E4                                      l8091 5808  
                                    l8083 57E4                                      l8075 57BE  
                                    l8067 578E                                      l8059 576C  
                                    l8139 5AC4                                      l8163 521A  
                                    l8155 519C                                      l8147 5120  
                                    l8251 5912                                      l8243 58D6  
                                    l7437 65C6                                      l7509 53FA  
                                    l7541 5F74                                      l7533 5F58  
                                    l7525 5F12                                      l7517 5EFE  
                                    l8317 5DDE                                      l8309 5D70  
                                    l9037 49C0                                      l9029 4960  
                                    l7701 325A                                      l7621 3010  
                                    l7613 3000                                      l7605 2FF0  
                                    l9133 5014                                      l9125 4F14  
                                    l8173 6478                                      l8229 52B6  
                                    l9205 24DA                                      l9141 21F6  
                                    l8325 63F4                                      l8333 6844  
                                    l8341 56B8                                      l8085 57EA  
                                    l8077 57C4                                      l8069 57A0  
                                    l8165 5220                                      l8157 51AA  
                                    l8149 514E                                      l7461 5606  
                                    l7453 55BA                                      l8261 597E  
                                    l8253 5926                                      l8245 58E4  
                                    l7439 6674                                      l7447 6630  
                                    l7471 5328                                      l7535 5F5A  
                                    l7527 5F16                                      l7519 5F02  
                                    l9047 49FE                                      l7711 3292  
                                    l7703 325C                                      l7631 306E  
                                    l7615 3004                                      l7607 2FF4  
                                    l7623 3014                                      l7551 2EF0  
                                    l9127 4F4E                                      l8239 5318  
                                    l8351 64C0                                      l9231 264A  
                                    l9215 2562                                      l9207 253A  
                                    l9151 22B4                                      l9055 67D2  
                                    l8327 63F6                                      l8343 56F4  
                                    l8335 5684                                      l8079 57DA  
                                    l8087 57F0                                      l8095 5998  
                                    l8159 51BC                                      l7463 563C  
                                    l7455 55CC                                      l8255 593A  
                                    l8247 58F8                                      l7449 6816  
                                    l7481 5342                                      l7473 532C  
                                    l7537 5F6C                                      l7529 5F24  
                                    l9049 4A1C                                      l7721 3310  
                                    l7705 326A                                      l7641 30A4  
                                    l7633 3084                                      l7625 3018  
                                    l7617 3008                                      l7609 2FF8  
                                    l7553 2F00                                      l7561 2F2A  
                                    l7545 2ED4                                      l9401 4B88  
                                    l9129 4F90                                      l7801 383E  
                                    l8169 6452                                      l8353 64E0  
                                    l9241 26CA                                      l9233 265E  
                                    l9225 258A                                      l9153 2348  
                                    l9145 226E                                      l9137 21AA  
                                    l8329 6406                                      l8345 5706  
                                    l8337 5698                                      l9057 659E  
                                    l8089 5800                                      l8097 599C  
                                    l8281 4486                                      l7457 55DE  
                                    l8257 593E                                      l8249 5906  
                                    l8265 62A4                                      l8273 6160  
                                    l7491 535E                                      l7483 5346  
                                    l7475 5330                                      l7467 5324  
                                    l7539 5F70                                      l7731 3356  
                                    l7715 32BC                                      l7723 3312  
                                    l7707 326E                                      l7651 30F4  
                                    l7643 30AE                                      l7635 3090  
                                    l7627 3042                                      l7619 300C  
                                    l7571 2F5A                                      l7563 2F3A  
                                    l7555 2F10                                      l7547 2EE0  
                                    l9411 4BD0                                      l9403 4B8A  
                                    l7811 3872                                      l7803 3840  
                                    l8355 64E2                                      l9243 2712  
                                    l9219 2576                                      l9227 25EA  
                                    l9163 238E                                      l9171 2402  
                                    l9155 234A                                      l9147 228C  
                                    l9139 21D0                                      l8347 5712  
                                    l8339 56A6                                      l8099 59AA  
                                    l8291 456E                                      l8283 44DC  
                                    l7459 55E8                                      l8259 596A  
                                    l8267 62B4                                      l8275 6172  
                                    l7493 5362                                      l7485 534A  
                                    l7477 5338                                      l7469 5324  
                                    l7741 3380                                      l7733 3364  
                                    l7725 3322                                      l7717 32C8  
                                    l7709 327C                                      l7661 3130  
                                    l7653 3104                                      l7645 30D0  
                                    l7637 3094                                      l7629 305E  
                                    l7581 2F9A                                      l7573 2F68  
                                    l7565 2F40                                      l7557 2F20  
                                    l7549 2EEE                                      l9413 4BD2  
                                    l9405 4B8E                                      l7901 3B36  
                                    l7821 38B8                                      l7805 3850  
                                    l7813 387A                                      l9253 27E4  
                                    l9245 274E                                      l9237 2680  
                                    l9229 2620                                      l9173 2418  
                                    l9181 244E                                      l8701 5BA4  
                                    l9333 6064                                      l9341 67B2  
                                    l8293 45AA                                      l8285 44F0  
                                    l8269 612A                                      l9511 6884  
                                    l7495 537E                                      l7487 534E  
                                    l7479 533C                                      l7743 3382  
                                    l7735 336A                                      l7727 3332  
                                    l7719 32D6                                      l7671 3176  
                                    l7663 313E                                      l7655 3112  
                                    l7647 30E0                                      l7639 30A2  
                                    l7591 2FD4                                      l7583 2F9C  
                                    l7575 2F6A                                      l7567 2F52  
                                    l7559 2F22                                      l9407 4BB2  
                                    l7903 3B44                                      l7831 38E0  
                                    l7823 38BC                                      l7815 388A  
                                    l7807 3860                                      l9239 26B6  
                                    l9191 249E                                      l9183 246A  
                                    l9175 2426                                      l9159 237A  
                                    l8711 5BEE                                      l8703 5BAC  
                                    l9335 6072                                      l9351 5F98  
                                    l9343 5F78                                      l9431 6050  
                                    l8287 44FE                                      l8295 45DE  
                                    l8279 4466                                      l7751 63B8  
                                    l7497 53B6                                      l7489 5356  
                                    l7921 33B0                                      l7737 336C  
                                    l7729 3352                                      l7681 31F2  
                                    l7673 31AA                                      l7665 3140  
                                    l7657 3120                                      l7593 2FD8  
                                    l7577 2F7A                                      l7585 2FA4  
                                    l7569 2F54                                      l9409 4BC2  
                                    l7905 3B4A                                      l7841 392E  
                                    l7817 38A0                                      l7809 3870  
                                    l9249 2776                                      l9177 243A  
                                    l9169 23A2                                      l8721 5C2C  
                                    l8713 5C10                                      l8705 5BB0  
                                    l8801 4446                                      l9521 6732  
                                    l9513 6704                                      l9337 609E  
                                    l9353 5FB4                                      l9345 5F8A  
                                    l9441 605E                                      l9433 6054  
                                    l9425 5FF0                                      l8297 461A  
                                    l7753 63BC                                      l7761 64B2  
                                    l7499 53BA                                      l7931 33F6  
                                    l7923 33C0                                      l7915 3394  
                                    l7739 3372                                      l7691 322E  
                                    l7683 3202                                      l7675 31AC  
                                    l7667 314A                                      l7659 312C  
                                    l7595 2FDC                                      l7587 2FB4  
                                    l7579 2F8A                                      l9371 4A32  
                                    l7907 3B4C                                      l7851 3978  
                                    l7843 393E                                      l7835 38F4  
                                    l7819 38B0                                      l7827 38D0  
                                    l9259 2850                                      l9195 24B2  
                                    l9187 248A                                      l8707 5BBE  
                                    l8715 5C12                                      l8803 444C  
                                    l9515 66EA                                      l8811 5B02  
                                    l9339 67A2                                      l9355 5FB6  
                                    l9363 5812                                      l9443 6060  
                                    l9435 6058                                      l9427 5FF4  
                                    l8299 462E                                      l7747 639A  
                                    l7755 648A                                      l7773 6754  
                                    l7941 3422                                      l7933 33FC  
                                    l7925 33D0                                      l7917 33A0  
                                    l7693 3230                                      l7677 31BC  
                                    l7669 3150                                      l7597 2FE0  
                                    l7589 2FC6                                      l9373 4A42  
                                    l7861 39C6                                      l7853 3984  
                                    l7845 3946                                      l7837 390E  
                                    l7829 38E0                                      l7781 37D8  
                                    l8725 5C32                                      l8717 5C24  
                                    l8709 5BC2                                      l8805 4462  
                                    l9701 4EC2                                      l8821 5B44  
                                    l8813 5B18                                      l9357 5FD4  
                                    l9349 5F90                                      l9365 6578  
                                    l9437 605A                                      l9429 604C  
                                    l7749 63A6                                      l7757 6496  
                                    l7765 641A                                      l8743 6786  
                                    l8735 6800                                      l7951 3478  
                                    l7943 3432                                      l7935 3402  
                                    l7927 33E0                                      l7919 33AE  
                                    l7695 323E                                      l7687 3216  
                                    l7679 31CC                                      l7599 2FE4  
                                    l9391 4B08                                      l9383 4AC0  
                                    l9375 4A50                                      l7863 39DC  
                                    l7871 3A0C                                      l7855 39A2  
                                    l7847 3956                                      l7839 391E  
                                    l7791 380C                                      l7783 37DA  
                                    l8911 218C                                      l8903 2044  
                                    l8831 199E                                      l9199 24C6  
                                    l8727 5C54                                      l8719 5C28  
                                    l8751 4240                                      l9703 4ED2  
                                    l9519 671E                                      l8823 5B62  
                                    l8815 5B20                                      l9359 5FE6  
                                    l9367 6594                                      l9439 605C  
                                    l7759 649A                                      l9721 545E  
                                    l8737 6550                                      l7769 676E  
                                    l9713 6878                                      l7961 34B8  
                                    l7945 3442                                      l7937 3410  
                                    l7929 33E6                                      l7697 3246  
                                    l7689 3220                                      l9393 4B14  
                                    l9385 4AC8                                      l9377 4A96  
                                    l7873 3A1A                                      l7865 39E2  
                                    l7857 39A4                                      l7849 396A  
                                    l7785 37EA                                      l7793 3814  
                                    l7777 37BE                                      l8905 209C  
                                    l8841 1A28                                      l8833 19D6  
                                    l8729 5CB8                                      l8761 428A  
                                    l8753 4250                                      l8745 4214  
                                    l9705 4EE6                                      l8825 5B72  
                                    l8817 5B2C                                      l8809 5AF2  
                                    l9801 296A                                      l8681 556E  
                                    l8673 551A                                      l9723 54A0  
                                    l9715 5406                                      l8739 6568  
                                    l7971 3502                                      l7963 34C4  
                                    l7955 348C                                      l7947 3448  
                                    l7939 3412                                      l7699 324A  
                                    l9395 4B50                                      l9387 4AD4  
                                    l9379 4AAC                                      l7883 3A84  
                                    l7891 3ACC                                      l7875 3A1E  
                                    l7867 39EC                                      l7859 39B4  
                                    l7795 3824                                      l7787 37FA  
                                    l7779 37CA                                      l9731 4C0A  
                                    l8907 20FA                                      l8843 1A6C  
                                    l8851 1AC0                                      l8835 19D8  
                                    l8771 4348                                      l8763 42C4  
                                    l8755 4258                                      l8747 4228  
                                    l9707 4EEC                                      l8691 5E6E  
                                    l8827 5B74                                      l8819 5B3A  
                                    l9811 2B96                                      l9803 29E8  
                                    l8683 5596                                      l8675 5528  
                                    l8667 54E4                                      l9717 5418  
                                    l7981 3554                                      l7973 350E  
                                    l7965 34DC                                      l7957 3498  
                                    l7949 3468                                      l9397 4B5C  
                                    l9389 4B06                                      l7893 3AE6  
                                    l7885 3A90                                      l7877 3A2C  
                                    l7869 39FA                                      l7797 382A  
                                    l7789 380A                                      l8909 212E  
                                    l8861 1B34                                      l8853 1AD6  
                                    l8845 1A84                                      l8837 19EE  
                                    l8781 4394                                      l8773 434A  
                                    l8765 42CA                                      l8757 4264  
                                    l8749 4238                                      l9709 4EF6  
                                    l8829 5B7E                                      l9821 2C2A  
                                    l9813 2BCE                                      l9805 29FA  
                                    l8677 5540                                      l8669 550E  
                                    l9719 5420                                      l7991 35D2  
                                    l7983 3564                                      l7975 351E  
                                    l7967 34E8                                      l7959 34A2  
                                    l9399 4B6A                                      l7895 3AFC  
                                    l7887 3A9E                                      l7879 3A5A  
                                    l7799 3830                                      l9727 4BE4  
                                    l8863 1B4A                                      l8871 1C7E  
                                    l8847 1A98                                      l8839 1A14  
                                    l9743 61E8                                      l8695 5B98  
                                    l8783 43A6                                      l8767 42DA  
                                    l8775 4360                                      l8759 4268  
                                    l9671 4DA4                                      l8687 5DF0  
                                    l9831 2C90                                      l9823 2C3C  
                                    l9815 2BE0                                      l9807 2B72  
                                    l8679 555C                                      l7993 3608  
                                    l7985 3580                                      l7977 352A  
                                    l7969 34F4                                      l7897 3B16  
                                    l7889 3AC8                                      l9729 4BFA  
                                    l8873 1C94                                      l8865 1B52  
                                    l8881 1D7C                                      l8857 1AF8  
                                    l8697 5B9C                                      l8785 43BA  
                                    l8793 4404                                      l8777 436C  
                                    l8769 42E2                                      l9681 4E18  
                                    l9673 4DD8                                      l8689 5E14  
                                    l9761 654C                                      l9753 6526  
                                    l9833 2CA8                                      l9825 2C54  
                                    l9817 2C00                                      l9809 2B84  
                                    l9841 2CEA                                      l7995 3616  
                                    l7987 358C                                      l7979 353A  
                                    l9739 3B58                                      l7899 3B32  
                                    l8891 1EF8                                      l8883 1DB0  
                                    l8875 1C9C                                      l8867 1BF6  
                                    l8859 1B1C                                      l8699 5BA0  
                                    l8795 4426                                      l8787 43D2  
                                    l8779 4384                                      l9691 4E88  
                                    l9683 4E28                                      l9675 4DE8  
                                    l9667 4D74                                      l9755 6534  
                                    l9763 618A                                      l9843 2CFC  
                                    l9851 2DD6                                      l9835 2CBA  
                                    l9827 2C66                                      l9819 2C12  
                                    l9749 6856                                      l7997 3634  
                                    l7989 35A8                                      l8893 1F70  
                                    l8885 1DE4                                      l8877 1D40  
                                    l8869 1BFE                                      l8797 4436  
                                    l8789 43FE                                      l9685 4E38  
                                    l9677 4DF8                                      l9669 4D8C  
                                    l9757 6548                                      l9765 618E  
                                    l9861 2E3A                                      l9853 2DE8  
                                    l9845 2D0E                                      l9837 2CD2  
                                    l9829 2C7E                                      l7999 363E  
                                    l8895 1FA4                                      l8887 1E5C  
                                    l8879 1D48                                      l8799 4438  
                                    l9695 4E8E                                      l9687 4E48  
                                    l9679 4E08                                      l9759 654A  
                                    l9767 61B2                                      l9863 2E76  
                                    l9855 2DFA                                      l9847 2D60  
                                    l9839 2CE2                                      l9791 28AC  
                                    STR_1 7F45                                      STR_2 7F07  
                                    l8897 1FB4                                      l8889 1EC4  
                                    l9697 4EA2                                      l9689 4E58  
                                    l8993 66D0                                      l9769 61B6  
                                    l9865 2E88                                      l9857 2E16  
                                    l9849 2D74                                      l9793 28CC  
                                    STR_3 7F26                                      STR_4 7F62  
                                    l8899 200C                                      l9699 4EB2  
                                    l8995 6698                                      l9867 2E9A  
                                    l9859 2E28                                      l9795 28E0  
                                    STR_5 7FC5                                      STR_6 7F7D  
                                    l8989 673A                                      l8997 66B4  
                                    l9797 28F2                                      STR_7 7F98  
                                    STR_8 7FDA                                      l8999 67BA  
                                    l9799 2958                                      STR_9 7FAF  
                                    _CREN 007D5C                                      u6000 322E  
                MPU6050_dmpInitialize@val 0051                                      u6001 322A  
                                    u6010 323E                                      u6011 323A  
                                    u6100 3322                                      u6020 325A  
                                    u6101 331E                                      u6021 3256  
                                    u6110 3332                                      u6030 326A  
                                    u6111 332E                                      u6031 3266  
                                    u6120 3352                                      u6040 327C  
                                    u6200 37EA                                      u7000 62EC  
                                    u6121 334E                                      u6041 3278  
                                    u6201 37E6                                      u6130 3364  
                                    u6050 3292                                      u6210 37FA  
                                    u7010 62FE                                      u6131 3360  
                                    u6051 328E                                      u6211 37F6  
                                    u7011 62FA                                      u6140 3380  
                                    u6060 32A8                                      u6300 39C6  
                                    u6220 383E                                      u7100 458E  
                                    u7020 615A                                      u6141 337C  
                                    u6061 32A4                                      u6301 39C2  
                                    u6221 383A                                      u7021 6154  
                                    u6070 32BC                                      u6310 39DC  
                                    u6230 3850                                      u7110 45AA  
                                    u6150 63DC                                      u7030 615C  
                                    u6071 32B8                                      u6311 39D8  
                                    u6231 384C                                      u7111 45A6  
                                    u6151 63D8                                      u7007 62E2  
                                    u5600 6692                                      u6080 32D6  
                                    u6400 3B16                                      u6320 39FA  
                                    u6240 3860                                      u7200 56B8  
                                    u8000 4394                                      u7120 45FE  
                                    u6160 64B2                                      u7040 6172  
                                    u5601 668E                                      u6081 32D2  
                                    u6401 3B12                                      u6321 39F6  
                                    u6241 385C                                      u7201 56B4  
                                    u8001 4390                                      u7105 4584  
                                    u6161 64AE                                      u7041 616E  
                                    u5610 6504                                      u6090 3310  
                                    u6410 3B44                                      u6330 3A1A  
                                    u6250 38A0                                      u7210 56F4  
                                    u8010 43A6                                      u7130 461A  
                                    u7050 44AE                                      u6170 644A  
                                    u5611 6500                                      u6091 330C  
                                    u6411 3B40                                      u6331 3A16  
                                    u6251 389C                                      u7211 56F0  
                                    u8011 43A2                                      u7131 4616  
                                    u6171 6444                                      u5540 67FE  
                                    u5620 6512                                      u6500 35F2  
                                    u6420 33AE                                      u6340 3A2C  
                                    u6260 38E0                                      u8100 19EE  
                                    u7220 5706                                      u8020 43FE  
                                    u7140 4656                                      u7060 44DC  
                                    u5700 5606                                      u6180 644C  
                                    _RCIF 007CF5                                      u5541 67FA  
                                    u5621 650E                                      u6421 33AA  
                                    u6341 3A28                                      u6261 38DC  
                                    u8101 19EA                                      u7221 5702  
                                    u8021 43FA                                      u7141 4652  
                                    u7125 45F4                                      u7061 44D8  
                                    u5701 5602                                      u5630 6520  
                                    u5550 6662                                      u7150 5D80  
                                    u6510 364C                                      u6430 33C0  
                                    u6350 3A5A                                      u6270 3956  
                                    u6190 37D8                                      u8110 1A14  
                                    u7230 5732                                      u8030 4426  
                                    u7070 44FE                                      u5710 563C  
                                    u5631 651C                                      u5551 665E  
                                    u7151 5D7C                                      u6511 3648  
                                    u6431 33BC                                      u6351 3A56  
                                    u6271 3952                                      u6191 37D4  
                                    u8111 1A10                                      u7215 56E4  
                                    u8031 4422                                      u7071 44FA  
                                    u7055 44A4                                      u5711 5638  
                                    u5560 6670                                      u5640 6640  
                                    u5720 53B6                                      u6600 37A0  
                                    u6520 366C                                      u6440 33D0  
                                    u5800 2F68                                      u6360 3A70  
                                    u6280 3978                                      u8120 1A84  
                                    u8040 4436                                      u5561 666C  
                                    u5641 663C                                      u5721 53B2  
                                    u6601 379C                                      u6521 3668  
                                    u6505 35E8                                      u6441 33CC  
                                    u5801 2F64                                      u6361 3A6C  
                                    u6281 3974                                      u8121 1A80  
                                    u7217 56DA                                      u8041 4432  
                                    u5650 664E                                      u5570 65D8  
                                    u5730 53FA                                      u6530 367E  
                                    u6450 3410                                      u5810 2F7A  
                                    u6370 3A84                                      u6290 39A2  
                                    u8130 1AD6                                      u8050 4462  
                                    u6610 5760                                      u7090 456A  
                                    u5651 664A                                      u5571 65D4  
                                    u5731 53F6                                      u6531 367A  
                                    u6451 340C                                      u5811 2F76  
                                    u6371 3A80                                      u6291 399E  
                                    u8131 1AD2                                      u8051 445E  
                                    u6611 575C                                      u7091 4566  
                                    u5660 6828                                      u5580 65E6  
                                    u5740 5F54                                      u7164 5D92  
                                    u8300 48B4                                      u6540 36AC  
                                    u6460 3422                                      u5900 30C2  
                                    u5820 2F8A                                      u6380 3A9E  
                                    u9100 4C0A                                      u8140 1AEC  
                                    u7180 63F4                                      u8060 5B18  
                                    u6620 577A                                      u6700 59FC  
                                    u5661 6824                                      u5581 65E2  
                                    u7165 5D8E                                      u8301 48B0  
                                    u6541 36A8                                      u6461 341E  
                                    u5901 30BE                                      u5821 2F86  
                                    u6381 3A9A                                      u9101 4C06  
                                    u8141 1AE8                                      u7181 63F0  
                                    u7237 5728                                      u8061 5B14  
                                    u6621 5776                                      u6701 59F8  
                                    u7085 4512                                      u5670 683E  
                                    u5590 6684                                      u5750 5F6C  
                                    u7174 5DC2                                      u8310 48D6  
                                    u6550 36C2                                      u6470 3432  
                                    u5910 30D0                                      u5830 2FC6  
                                    u6390 3AE6                                      u8150 1B34  
                                    u7190 6406                                      u8070 5B3A  
                                    u6630 57A0                                      u6710 5A12  
                                    u7086 451C                                      u5671 683A  
                                    u5591 6680                                      u5751 5F68  
                                    u7175 5DBC                                      u8311 48D2  
                                    u6551 36BE                                      u6471 342E  
                                    u5911 30CC                                      u5831 2FC2  
                                    u6391 3AE2                                      u8151 1B30  
                                    u7191 6402                                      u8071 5B36  
                                    u6631 579C                                      u6711 5A0E  
                                    u7087 452C                                      u8320 490A  
                                    u6560 36D6                                      u6480 3468  
                                    u5920 30E0                                      u5840 2FD4  
                                    u5760 2EEE                                      u8160 1B4A  
                                    u8080 5B62                                      u9120 61AE  
                                    u9200 28E0                                      u6640 57BE  
                                    u6720 5A36                                      u6800 521A  
                                    u5680 55CC                                      u8321 4906  
                                    u6561 36D2                                      u6481 3464  
                                    u5921 30DC                                      u5841 2FD0  
                                    u5761 2EEA                                      u8161 1B46  
                                    u8081 5B5E                                      u9201 28DC  
                                    u6641 57BA                                      u6721 5A32  
                                    u6801 5216                                      u5681 55C8  
                                    u8330 493C                                      u6570 36F0  
                                    u6490 3478                                      u5930 3112  
                                    u5850 3042                                      u5770 2F00  
                                    u6810 6468                                      u8170 1C94  
                                    u8090 19C0                                      u9130 61D6  
                                    u9210 28F2                                      u6650 57DA  
                                    u6730 5A76                                      u5690 55DE  
                                    _OERR 007D59                                      u5747 5F4A  
                                    u8331 4938                                      u6571 36EC  
                                    u6491 3474                                      u5931 310E  
                                    u5851 303E                                      u5771 2EFC  
                                    u6811 6464                                      u8171 1C90  
                                    u9115 6532                                      u9211 28EE  
                                    u6651 57D6                                      u6731 5A72  
                                    u5691 55DA                                      u8340 497A  
                                    u6580 3738                                      u5940 3120  
                                    u5860 305A                                      u5780 2F10  
                                    u6900 5282                                      u8180 1FB4  
                                    u8500 2418                                      u9116 6534  
                                    u9140 61E6                                      u9300 2C90  
                                    u9220 296A                                      u6660 5800  
                                    u6740 5AB4                                      u8341 4976  
                                    u6581 3734                                      u5941 311C  
                                    u5861 3054                                      u5781 2F0C  
                                    u6901 527E                                      u8181 1FB0  
                                    u8501 2414                                      u9141 61E2  
                                    u9301 2C8C                                      u9221 2966  
                                    u6661 57FC                                      u6741 5AB0  
                                    u8350 49AA                                      u6590 3766  
                                    u5950 313E                                      u5870 305C  
                                    u5790 2F52                                      u8430 4F0C  
                                    u6910 52AA                                      u8190 21A4  
                                    u8510 2426                                      u9310 2CBA  
                                    u9230 29FA                                      u6670 59AA  
                                    u6750 5AE8                                      u8351 49A6  
                                    u6591 3762                                      u5951 313A  
                                    u5791 2F4E                                      u8431 4F08  
                                    u6911 52A6                                      u8191 21A0  
                                    u8095 19B4                                      u8511 2422  
                                    u9127 61A4                                      u9311 2CB6  
                                    u9231 29F6                                      u6671 59A6  
                                    u6751 5AE4                                      u8360 49C0  
                                    u5960 3176                                      u5880 3084  
                                    u6920 52D4                                      u8520 246A  
                                    u8440 21D0                                      u9080 4E88  
                                    u8600 67B2                                      u9400 2E0E  
                                    u9320 2CCE                                      u9240 2B84  
                                    u6680 59C4                                      u6760 514E  
                                    u7800 555C                                      u8361 49BC  
                                    u5961 3172                                      u5881 3080  
                                    u6921 52D0                                      u8521 2466  
                                    u8441 21CC                                      u9081 4E84  
                                    u8601 67AE                                      u9137 61CC  
                                    u9401 2E08                                      u9321 2CC8  
                                    u9241 2B80                                      u6681 59C0  
                                    u6761 514A                                      u7801 5558  
                                    u9090 5418                                      u8370 49FA  
                                    u8290 4898                                      u5970 31BC  
                                    u5890 30A2                                      u8530 2486  
                                    u8450 21F6                                      u8610 5F8A  
                                    u9410 2E10                                      u9330 2CD0  
                                    u9250 2B96                                      u6690 59DE  
                                    u6770 518C                                      u7810 556E  
                                    u9091 5414                                      u8371 49F6  
                                    u8291 4894                                      u5971 31B8  
                                    u5891 309E                                      u8531 2482  
                                    u8451 21F2                                      u8611 5F86  
                                    u9251 2B92                                      u6691 59DA  
                                    u6771 5188                                      u7811 556A  
                                    u8380 4A1C                                      u5980 31F2  
                                    u8700 4B7A                                      u6940 530E  
                                    u8540 2620                                      u8460 228C  
                                    u8620 5FD4                                      u9420 2E28  
                                    u9340 2CE2                                      u9260 2BE0  
                                    u6780 51AA                                      u7820 5596  
                                    u8381 4A18                                      u5981 31EE  
                                    u8701 4B76                                      u6941 5308  
                                    u8541 261C                                      u8461 2288  
                                    u8621 5FD0                                      u9421 2E24  
                                    u9341 2CDE                                      u9261 2BDC  
                                    u6781 51A6                                      u7821 5592  
                                    u5990 3202                                      u8710 4B88  
                                    u6950 5310                                      u8550 263C  
                                    u8470 22D4                                      u7910 5CA4  
                                    u7830 5E14                                      u8630 5FE6  
                                    u9430 2E3A                                      u9350 2CFC  
                                    u9270 2C12                                      u9190 28CC  
                                    u6790 51CA                                      u5991 31FE  
                                    u8711 4B84                                      u6935 52E6  
                                    u8551 2638                                      u7831 5E10  
                                    u8631 5FE2                                      u9431 2E36  
                                    u9351 2CF8                                      u9271 2C0E  
                                    u9191 28C8                                      u6791 51C6  
                                    u8720 4BC2                                      u8640 4A42  
                                    u8560 264A                                      u8480 2312  
                                    u7904 5C84                                      u7920 4238  
                                    u9440 2E88                                      u9360 2D0E  
                                    u9280 2C3C                                      u6960 58E4  
                                    u8721 4BBE                                      u8641 4A3E  
                                    u8561 2646                                      u7905 5C80  
                                    u7921 4234                                      u9441 2E84  
                                    u9361 2D0A                                      u9281 2C38  
                                    u6961 58E0                                      u8730 4BD0  
                                    u8650 4A50                                      u6890 5264  
                                    u8570 2680                                      u8490 2362  
                                    u7930 4250                                      u9450 2E9A  
                                    u9370 2D74                                      u9290 2C66  
                                    u6970 5906                                      u8731 4BCC  
                                    u8651 4A4C                                      u8571 267C  
                                    u8491 235E                                      u8475 22CA  
                                    u7915 5CA0                                      u7931 424C  
                                    u9451 2E96                                      u9371 2D70  
                                    u9291 2C62                                      u6971 5902  
                                    u8660 4AAC                                      u8580 26B6  
                                    u7940 428A                                      u7860 5E68  
                                    u7844 5E30                                      u9380 2DE8  
                                    u6980 595C                                      u7780 550E  
                                    u8661 4AA8                                      u8581 26B2  
                                    u8485 2308                                      u7941 4286  
                                    u7845 5E2C                                      u9381 2DE4  
                                    u6981 5958                                      u7781 550A  
                                    u8670 4B02                                      u7870 5C24  
                                    u7950 42C4                                      u7854 5E44  
                                    u8590 6072                                      u9390 2DFA  
                                    u6990 596A                                      u7790 5540  
                                    u8671 4AFE                                      u6895 525A  
                                    u7871 5C20                                      u7951 42C0  
                                    u7855 5E40                                      u8591 606E  
                                    u9391 2DF6                                      u6991 5966  
                                    u7791 553C                                      u8680 4B4C  
                                    u7880 5C54                                      u7960 42DA  
                                    u8681 4B48                                      u7881 5C50  
                                    u7961 42D6                                      u7865 5E64  
                                    u8690 4B6A                                      u7970 4316  
                                    u8691 4B66                                      u7980 4348  
                                    u8780 6700                                      u8781 66FA  
                                    u7894 5C70                                      u7990 435C  
                                    u8790 6702                                      u7895 5C6C  
                                    u7991 4358                                      u7977 430C  
                                    u7987 433C                                      _TXEN 007D65  
                                    _TXIF 007CF4                    I2Cdev_readBits@regAddr 0015  
       __end_of_MPU6050_dmpGetLinearAccel 4858                                      _btRX 017F  
                                    _mInv 00FC                                      _dbuf 0320  
                                    _main 0012                                      _pio2 7301  
                                    _prec 00F4                                      _nout 00F0  
                                    pad@i 001B                                      pad@p 0018  
                                    _text 0370                                      fsr0h 000FEA  
                                    _tiny 72E1                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001D                                      fsr2l 000FD9  
                                    btemp 005C                             ___fpclassifyf 5224  
                        ?_USART_UART_init 0015                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
               ??_MPU6050_dmpGetGravityVF 005A                           ___fldiv@new_exp 0029  
                         __end_of_IdleI2C 6800                              _tolower$3336 0010  
        __end_of_MPU6050_writeMemoryBlock 4466                              ___param_bank 000000  
                         __end_of_ReadI2C 6526                           __end_of__X_FREQ 7F07  
                       _I2Cdev_writeBytes 5EFC            ?_MPU6050_setMemoryStartAddress 0001  
                                   ??_pad 001A                       USART_UART_init@rate 0015  
                       _I2Cdev_writeWords 5B96                            MPU6050@address 0004  
                      ?_I2Cdev_writeBytes 0005                           __end_of_StopI2C 6652  
                                   l12001 0D4C                                     l12011 0D9C  
                                   l12003 0D54                                     l12101 1140  
                                   l12021 0DD4                                     l12013 0DAA  
                                   l12005 0D78                                     l12111 11A6  
                                   l12103 115C                                     l12031 0E3A  
                                   l12023 0DD8                                     l12015 0DBC  
                                   l12007 0D82                                     l12201 1662  
                                   l12121 11EE                                     l12113 11B8  
                                   l12105 1192                                     l12033 0E4C  
                                   l12017 0DC8                                     l12025 0DDE  
                                   l12009 0D8A                                     l12211 1694  
                                   l12203 1672                                     l12131 1236  
                                   l12123 11FC                                     l12115 11CA  
                                   l12107 119A                                     l12051 0F20  
                                   l12035 0E68                                     l12027 0E04  
                                   l12043 0EB2                                     l12019 0DD0  
                                   l12221 173C                                     l12213 16A6  
                                   l12205 1676                                     l12141 134A  
                                   l12133 1246                                     l12125 1214  
                                   l12117 11D8                                     l12109 119E  
                                   l12053 0F3C                                     l12045 0ED8  
                                   l12061 0F58                                     l12037 0E80  
                                   l12231 1794                                     l12223 1744  
                                   l12215 16AA                                     l12207 167C  
                                   l12151 13EA                                     l12135 125A  
                                   l12143 1350                                     l12127 1226  
                                   l12119 11DC                                     l12071 0FE2  
                                   l12063 0F72                                     l12039 0E8A  
                                   l12311 3F0E                                     l12303 3EC6  
                                   l12241 17D8                                     l12233 17A2  
                                   l12209 1682                                     l12217 16B0  
                                   l12225 1748                                     l12161 14C6  
                                   l12153 141C                                     l12145 136E  
                                   l12137 12BE                                     l12129 122E  
                                   l12081 10BA                                     l12073 103C  
                                   l12049 0F0E                                     l12321 3FB4  
                                   l12313 3F30                                     l12305 3EEA  
                                   l12251 180E                                     l12243 17E0  
                                   l12235 17B2                                     l12227 1766  
                                   l12219 1708                                     l12171 1528  
                                   l12163 14CC                                     l12155 142C  
                                   l12147 13A2                                     l12139 1316  
                                   l12091 1104                                     l12083 10BE  
                                   l12075 1070                                     l12067 0FA8  
                                   l12323 3FC6                                     l12315 3F40  
                                   l12307 3EF8                                     l12261 186A  
                                   l12253 1816                                     l12245 17F0  
                                   l12237 17B6                                     l12229 1782  
                                   l12181 15DE                                     l12173 153C  
                                   l12165 1500                                     l12157 143C  
                                   l12149 13D4                                     l12085 10D0  
                                   l12093 111C                                     l12077 1078  
                                   l12069 0FDC                                     l12341 40F4  
                                   l12325 3FDC                                     l12333 4046  
                                   l12317 3F72                                     l12309 3F0A  
                                   l12421 633E                                     l12413 6300  
                                   l12271 18AA                                     l12263 1872  
                                   l12255 1822                                     l12247 17F8  
                                   l12239 17C6                                     l12191 162E  
                                   l12183 15F2                                     l12175 1548  
                                   l12167 1514                                     l12159 1470  
                                   l12087 10E2                                     l12079 10AA  
                                   l12351 4190                                     l12343 4128  
                                   l12335 4074                                     l12327 3FEA  
                                   l12319 3F82                                     l12415 6312  
                                   l12409 4678                                     l12281 18E6  
                                   l12273 18BC                                     l12257 1828  
                                   l12265 1878                                     l12249 1806  
                                   l12193 163C                                     l12185 1604  
                                   l12177 156C                                     l12169 1518  
                                   l12089 10EA                                     l12361 41CE  
                                   l12353 419E                                     l12329 401A  
                                   l12417 631A                                     l12291 193E  
                                   l12283 18EC                                     l12275 18C8  
                                   l12267 188A                                     l12259 184E  
                                   l12195 164C                                     l12187 1612  
                                   l12179 15D0                                     l12099 112E  
                                   l12355 41B2                                     l12339 40E2  
                                   l12419 6322                                     l12611 0012  
                                   l12293 1946                                     l12277 18D0  
                                   l12269 18A4                                     l12197 1650  
                                   l12189 161A                                     l12349 416C  
                                   l12365 41DC                                     l12373 60C8  
                                   l12701 016C                                     l12621 0038  
                                   l12613 002C                                     l13271 23F4  
                                   l12295 1956                                     l12287 1920  
                                   l12279 18E0                                     l12199 1656  
                                   l12367 4200                                     l12359 41C0  
                                   l12375 60D0                                     l12711 01B4  
                                   l12703 017E                                     l12631 0050  
                                   l12623 003A                                     l12615 0030  
                                   l13281 25A8                                     l13273 23CE  
                                   l12297 195C                                     l12289 1932  
                                   l12377 60DE                                     l12801 0396  
                                   l12713 01DC                                     l12705 0182  
                                   l12641 0060                                     l12633 0054  
                                   l12625 003C                                     l12617 0034  
                                   l13291 287E                                     l13283 25DC  
                                   l13275 24F8                                     l12379 6104  
                                   l12811 0456                                     l12803 03A8  
                                   l12715 01F2                                     l12707 0194  
                                   l12651 006A                                     l12643 0062  
                                   l12635 0058                                     l12627 0044  
                                   l12619 0036                                     l13285 25B6  
                                   l13277 252C                                     l13269 23C0  
                                   l12901 0CC2                                     l12821 05BE  
                                   l12813 0488                                     l12805 03DA  
                                   l12717 0210                                     l12709 0198  
                                   l12661 0098                                     l12653 0076  
                                   l12645 0064                                     l12637 005C  
                                   l12629 004C                                     l11951 5018  
                                   l13287 2870                                     l13279 2506  
                                   l12903 0CDC                                     l12831 07AE  
                                   l12823 061A                                     l12815 04F0  
                                   l12807 040C                                     l12671 00BC  
                                   l12663 009A                                     l12655 007A  
                                   l12647 0066                                     l12639 005E  
                                   l11961 5070                                     l11953 5030  
                                   l13289 289C                                     l12905 0CF0  
                                   l12841 08F0                                     l12833 080A  
                                   l12825 0654                                     l12817 0548  
                                   l12809 0424                                     l12681 0100  
                                   l12673 00D0                                     l12665 00A0  
                                   l12657 007E                                     l12649 0068  
                                   l11963 5080                                     l12907 0D08  
                                   l12851 0972                                     l12843 0934  
                                   l12835 0844                                     l12827 06AC  
                                   l12819 0592                                     l12691 0146  
                                   l12683 0114                                     l12675 00DE  
                                   l12667 00AC                                     l12659 0096  
                                   l11973 50AA                                     l11965 5084  
                                   l11957 5044                                     l12861 0A1C  
                                   l12853 0982                                     l12845 0940  
                                   l12829 0782                                     l12837 0874  
                                   l12781 023A                                     l12693 014A  
                                   l12685 0124                                     l12677 00E8  
                                   l12669 00B0                                     l11991 510E  
                                   l11983 50D2                                     l11975 50B4  
                                   l11967 5092                                     l11959 506E  
                                   l12871 0AF4                                     l12863 0A20  
                                   l12855 0996                                     l12847 0950  
                                   l12839 08AE                                     l12791 024E  
                                   l12783 023E                                     l12775 022E  
                                   l12695 014E                                     l12687 0134  
                                   l12679 00F4                                     l11985 50DE  
                                   l11977 50BE                                     l12881 0B82  
                                   l12865 0A52                                     l12857 09B8  
                                   l12873 0B06                                     l12849 0960  
                                   l12793 0298                                     l12785 0242  
                                   l12777 0232                                     l12697 014E  
                                   l12689 0140                                     l11987 50EE  
                                   l11995 0D24                                     l12891 0C0E  
                                   l12883 0BA8                                     l12875 0B2C  
                                   l12867 0A8A                                     l12859 09EA  
                                   l12795 02D8                                     l12787 0246  
                                   l12779 0236                                     l12699 015E  
                                   l11989 50FE                                     l11997 0D2E  
                                   l12893 0C44                                     l12885 0BB4  
                                   l12877 0B38                                     l12869 0ABC  
                                   l12797 0322                                     l12789 024A  
                                   l11999 0D3E                                     l12895 0C5E  
                                   l12887 0BE6                                     l12879 0B6A  
                                   l12799 0362                                     l12897 0C6E  
                                   l12889 0BFE                                     l12899 0CA8  
                           ___fltol@sign1 0070                   I2Cdev_readBits@bitStart 0016  
                        _lastDisplacement 0118                           __end_of___fladd 3394  
                                   ?_main 0001                           __end_of___fldiv 3B58  
                         __end_of___awdiv 5812                           __end_of___flneg 648A  
                                   STR_10 7FEB                                     STR_11 7FF3  
                      ?_I2Cdev_writeWords 0005                                     STR_20 7FFB  
                                   STR_14 7FEF                                     STR_15 7FF7  
                                   STR_18 7FFB                           __end_of___awmod 5A48  
                         __end_of___flmul 37BE                           __end_of___flsub 639A  
                         __end_of___fltol 5120                           __end_of___lldiv 5B96  
                                   u11000 10E2                                     u11001 10DE  
                                   u11010 1104                                     u11011 1100  
                                   u11100 11FC                                     u11020 112A  
                                   u11101 11F8                                     u11021 1126  
                                   u11110 1226                                     u11030 1140  
                                   u11111 1222                                     u11031 113C  
                                   u11200 15F2                                     u11120 136E  
                                   u11040 115C                                     u12000 0ABC  
                                   u11201 15EE                                     u11121 136A  
                                   u11041 1158                                     u12001 0AB8  
                                   u11210 1604                                     u11130 13D4  
                                   u11050 1192                                     u12010 0B2C  
                                   u11211 1600                                     u11131 13D0  
                                   u11051 118E                                     u12011 0B28  
                                   u11300 17D8                                     u11220 1612  
                                   u11140 141C                                     u11060 11B8  
                                   u12100 0C84                                     u12020 0B6A  
                                   u11301 17D4                                     u11221 160E  
                                   u11141 1418                                     u11061 11B4  
                                   u12101 0C7C                                     u12021 0B66  
                                   u11310 1806                                     u11230 162E  
                                   u11150 142C                                     u11070 11CA  
                                   u12030 0BA8                                     u11311 1802  
                                   u11231 162A                                     u11151 1428  
                                   u11071 11C6                                     u12031 0BA4  
                                   u11320 188A                                     u11240 163C  
                                   u11160 14C6                                     u11080 11D8  
                                   u11400 3F82                                     u12040 0BE6  
                                   u11321 1886                                     u11241 1638  
                                   u11161 14C2                                     u11081 11D4  
                                   u11401 3F7E                                     u12041 0BE2  
                                   u11330 18A4                                     u11250 1694  
                                   u11170 1514                                     u11090 11EE  
                                   u11410 3FC6                                     u12050 0C0E  
                                   u11331 18A0                                     u11251 1690  
                                   u11171 1510                                     u11091 11EA  
                                   u11411 3FC2                                     u12051 0C0A  
                                   u11340 18BC                                     u11260 1766  
                                   u11180 153C                                     u11420 4074  
                                   u12060 0C24                           ___awdiv@divisor 0006  
                                   u11341 18B8                                     u11261 1762  
                                   u11181 1538                                     u11421 4070  
                                   u12125 0CA6                                     u12061 0C1C  
                                   u11350 191A                                     u11270 1782  
                                   u11190 15DE                                     u11430 40DC  
                                   u12126 0CA8                                     u12118 0C88  
                                   u11351 1914                                     u11271 177E  
                                   u11191 15DA                                     u11431 40D6  
                                   u10800 50A6                                     u11360 191C  
                                   u11280 1794                                     u11440 40DE  
                                   u10801 50A2                                     u11281 1790  
                                   u12137 001E                                     u10810 50CE  
                __size_of_I2Cdev_readBits 008E                                     u11370 1932  
                                   u11290 17A2                                     u11450 40F4  
                                   u12090 0C6E                                     u10811 50CA  
                                   u12147 4D96                                     u11371 192E  
                                   u11291 179E                                     u11451 40F0  
                                   u12091 0C6A                                     u10820 50EE  
                                   u10900 0E36                                     u11460 4190  
                                   u11380 3EEA                                     u10821 50EA  
                                   u12157 4DCA                                     u11461 418C  
                                   u11381 3EE6                                     u12085 0C42  
                                   u10830 50FE                                     u10910 0E4C  
                                   u11390 3F40                                     u11470 6120  
                                   u12086 0C44                                     u12078 0C28  
                                   u10831 50FA                                     u10911 0E48  
                                   u11391 3F3C                                     u11471 611C  
                                   u10920 0ED8                                     u10840 0D4C  
                                   u11800 0114                                     _T2CON 000FCA  
                                   u10921 0ED4                                     u10841 0D48  
                                   u11801 0110                                     u10770 5030  
                                   u10930 0F08                                     u10850 0D9C  
                                   u11810 0194                                     u10771 502C  
                                   u10931 0F02                                     u10851 0D98  
                                   u11811 0190                                     u10780 5064  
                                   u10940 0F0A                                     u10860 0DAA  
                                   u11900 061A                                     u11820 01B4  
                                   u10861 0DA6                                     u11901 0616  
                                   u11821 01B0                                     u10790 5092  
                                   u10950 0F20                                     u10870 0DBC  
                                   u11910 0782                                     u11830 03A8  
                                   u10791 508E                                     u10951 0F1C  
                                   u10871 0DB8                                     u11911 077E  
                                   u11831 03A4                                     u10960 0FA4  
                                   u10880 0E04                                     u11920 080A  
                                   u11840 03DA                                     u10785 505A  
                                   u10961 0FA0                                     u10881 0E00  
                                   u11921 0806                                     u11841 03D6  
                                   u10970 1038                                     u10890 0E34  
                                   u11930 08F0                                     u11850 040C  
                                   u10971 1034                                     u10891 0E2E  
                                   u11931 08EC                                     u11851 0408  
                                   u10980 10AA                                     u11940 0972  
                                   u11860 0424                                     u10981 10A6  
                                   u11941 096E                                     u11861 0420  
                                   u10990 10D0                                     u11950 0982  
                                   u11870 0456                                     u11790 00D0  
                                   u10991 10CC                                     u11951 097E  
                                   u11871 0452                                     u11791 00CC  
                                   u11960 09B8                                     u11880 0488  
                                   u11961 09B4                                     u11881 0484  
                                   u11970 09EA                                     u11890 0592  
                                   u11971 09E6                                     u11891 058E  
                                   u11980 0A1C                                     u11981 0A18  
                                   u11990 0A52                                     u11991 0A4E  
                __size_of_I2Cdev_readByte 001A                           ___awdiv@counter 0008  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 00B8  
                                   _SPBRG 000FAF                                     _TRISC 000F94  
                 I2Cdev_writeByte@devAddr 000F                          I2Cdev_readBits@b 0020  
                                   _TXREG 000FAD                  MPU6050_getFIFOBytes@data 0011  
                     ??_I2Cdev_writeBytes 0009                                     _Ubuff 0200  
      MPU6050_setFullScaleGyroRange@range 001F                       ??_I2Cdev_writeWords 0009  
                                   _fabsf 64C0                                     _brake 00FA  
                                   _atanf 197E                   I2Cdev_writeByte@regAddr 000D  
                                   _flags 005A                                     _errno 0178  
                                   _error 015C                                     _fputc 55BA  
                                   _pi_lo 72E9                                     _fputs 639A  
            MPU6050_setClockSource@source 001F      __end_of_MPU6050_GetCurrentFIFOPacket 4A30  
   __size_of_MPU6050_GetCurrentFIFOPacket 01D8              _MPU6050_GetCurrentFIFOPacket 4858  
                  _MPU6050_setClockSource 66CE                              main@motorPID 01D9  
                                   _speed 013C                                     pad@fp 0014  
                                   _width 00F2                                     _putch 688A  
                                   _start 017C                                     _toint 72E5  
                         __end_of_isupper 6452                                     tablat 000FF5  
    __end_of_MPU6050_dmpGetFIFOPacketSize 6882     __size_of_MPU6050_dmpGetFIFOPacketSize 000A  
            _MPU6050_dmpGetFIFOPacketSize 6878                      __size_of__int_timing 629C  
                                   ttemp5 005D                                     ttemp6 0060  
                                   ttemp7 0064                                     status 000FD8  
      MPU6050_GetCurrentFIFOPacket@length 0023                                     wtemp8 005D  
                         __end_of_sprintf 6352                            ?___fpclassifyf 0004  
                         __end_of_tolower 618A                           __end_of_strncmp 55BA  
                __size_of_I2Cdev_writeBit 0092                     _MPU6050_setMemoryBank 63DE  
               __end_of_I2Cdev_writeBytes 5F78                           __initialization 5CC8  
               __end_of_I2Cdev_writeWords 5C30                              __end_of_main 0D24  
                            __end_of_pio2 7305                              __end_of_tiny 72E5  
                        __end_of_i2c_init 6064           MPU6050_dmpGetQuaternionI16@data 0004  
                       _USART_setBaudRate 6064                                    ??_main 00EC  
                      ?_USART_setBaudRate 0011                             __activetblptr 000002  
         ??_MPU6050_setFullScaleGyroRange 001F        __size_of_MPU6050_dmpGetQuaternionQ 0190  
              ?_MPU6050_dmpGetQuaternionQ 0031                    atan2f@__xc8_float_word 00C6  
            MPU6050_writeMemoryBlock@bank 0017                                 ??_MPU6050 0004  
            MPU6050_writeMemoryBlock@data 0013              MPU6050_writeMemoryBlock@mlc1 0020  
            MPU6050_writeMemoryBlock@mlc2 0030                     I2Cdev_readBytes@count 0010  
    __end_of_MPU6050_writeProgMemoryBlock 65C4     __size_of_MPU6050_writeProgMemoryBlock 0026  
            _MPU6050_writeProgMemoryBlock 659E                          __end_of_StartI2C 6674  
                 I2Cdev_writeBytes@length 0006                       ??_USART_setBaudRate 0015  
                                  ?_fabsf 0031                                    ?_atanf 0068  
                                  _ADCON1 000FC1                                    ?_fputc 0004  
                                  ?_fputs 000D                                    _CCPR1L 000FBE  
                                  _CCPR2L 000FBB                          ___awdiv@dividend 0004  
                        __end_of_WriteI2C 65EA                                    ?_putch 0001  
                           main@countZero 01DB                                    i2l1606 5EFA  
                                  i2l1714 6298                  ?_MPU6050_setSleepEnabled 0001  
                                  i2l9771 5E7C                                    i2l9781 5EB2  
           ?_MPU6050_GetCurrentFIFOPacket 0021                                    i2l9783 5ED0  
                                  i2l9775 5E8E                                    i2l9777 5EA0  
                                  i2l9785 5EDC                                    i2l9779 5EB0  
                                  i2l9789 5EF2                                 ??_IdleI2C 0004  
                                  _AckI2C 682C             __size_of_MPU6050_getIntStatus 001A  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
           ?_MPU6050_dmpGetFIFOPacketSize 0004                          __end_of___xxtofl 4BE4  
                               ??_ReadI2C 0004                        __size_of_NotAckI2C 0016  
                          _controlReceive 28AC                  ??_MPU6050_dmpGetAccelI16 0008  
                            vfprintf@cfmt 00D0                                    _aaReal 01A6  
                              _RestartI2C 6674                                    ___flge 5120  
                                  ___fleq 5A48                                 ??_StopI2C 0004  
                __end_of_I2Cdev_readBytes 5406                 __end_of_USART_setBaudRate 60C8  
                                  _calcAA 0100                                 ??___fladd 0052  
                                  ___wmul 6578                                 ??___fldiv 0020  
                               ??___awdiv 0008                                 ??___flneg 0008  
        MPU6050_writeProgMemoryBlock@bank 004C                                 ??___awmod 0008  
        MPU6050_writeProgMemoryBlock@data 0048                                 ??___flmul 0039  
                                  _atan2f 21AA                                 ??___flsub 005A  
                               ??___fltol 006C                                 ??___lldiv 000C  
                                  _efgtoa 0D24                                    _atanhi 72D1  
                                  _atanlo 72C1                                    _lastAA 010C  
                                  _floorf 4466                                    fabsf@u 0035  
                                  fabsf@x 0031                                    _memcmp 5684  
                _MPU6050_writeMemoryBlock 4214                                    clear_0 5D20  
                                  clear_1 5D2C                                    clear_2 5D38  
                                  clear_3 5D44                          ___awdiv@quotient 000A  
         MPU6050_dmpGetQuaternionQ@packet 0033                           ___awmod@divisor 0006  
                                  atanf@w 0094                                    atanf@x 0068  
                                  atanf@z 009A                         _USART_UART_doBuff 5E7C  
                         ___awmod@counter 0008                                    pad@buf 0016  
                 ??_MPU6050_setDMPEnabled 0021                          __end_of_rem_bias 7309  
                                  _strcpy 62A4                                    _strlen 648A  
             __end_of_MPU6050_getDeviceID 6630           MPU6050_dmpGetQuaternionQ@status 0035  
                            WriteI2C@data 0004                                    fputc@c 0004  
                      ?_USART_UART_doBuff 0001                                    fputs@c 0011  
                                  fputs@i 0012                                    fputs@s 000D  
                         ___fpclassifyf@e 000C                           ___fpclassifyf@u 000E  
                         ___fpclassifyf@x 0004                              __mediumconst 72AC  
       __end_of_MPU6050_dmpGetQuaternionQ 4D74              ?_MPU6050_dmpGetQuaternionI16 0004  
                        I2Cdev_writeBit@b 0020                                    tblptrh 000FF7  
                               ??_isupper 0006                                    tblptrl 000FF6  
                                  tblptru 000FF8                                    putch@c 0001  
           ?_MPU6050_writeProgMemoryBlock 0048                          __end_of_vfprintf 612A  
                       ??_I2Cdev_readBits 001A                                 ??_sprintf 005A  
                               ??_tolower 000C                         ??_I2Cdev_readByte 0014  
                     ??_USART_UART_doBuff 0001                                 ??_strncmp 000A  
                 USART_UART_init@fastMode 0019                                ___flge@ff1 004A  
                              ___flge@ff2 004E                           ??___fpclassifyf 0008  
                            ___xxtofl@arg 0014                              ___xxtofl@exp 0013  
                            ___xxtofl@val 000A                                ___fleq@ff1 0004  
                              ___fleq@ff2 0008               ??_MPU6050_dmpGetLinearAccel 005A  
          __size_of_USART_UART_readBuffer 0078                                __accesstop 0060  
                 __end_of__initialization 5D4E                    I2Cdev_readByte@devAddr 0014  
                  ?_MPU6050_setMemoryBank 0010             __end_of_USART_UART_readBuffer 5FF0  
                  MPU6050_dmpGetRoll@data 00DA                                ___flneg@f1 0004  
          MPU6050_setSleepEnabled@enabled 0021                             rotateVF@F4121 0300  
                  __end_of_controlReceive 2ED4                             ___rparam_used 000001  
                           rotateVI@F4088 0310                                ___fltol@f1 0068  
       MPU6050_GetCurrentFIFOPacket@Trash 0028                    I2Cdev_readByte@regAddr 0011  
       MPU6050_GetCurrentFIFOPacket@fifoC 004E                __size_of_I2Cdev_writeBytes 007C  
                          __pcstackCOMRAM 0001                  __end_of_I2Cdev_writeBits 5CC8  
              __size_of_I2Cdev_writeWords 009A                  __end_of_I2Cdev_writeByte 676C  
                            __pidataBANK0 688C                              __pidataBANK1 6868  
                            __pidataBANK2 65EA                  __end_of_I2Cdev_writeWord 6752  
                           __end_of_fabsf 64F4                         ??_I2Cdev_writeBit 0018  
                           __end_of_atanf 21AA                 __end_of_USART_UART_doBuff 5EFC  
                           __end_of_fputc 5684                             __end_of_pi_lo 72ED  
                           __end_of_fputs 63DE                       _I2Cdev_writeBit$600 001D  
                     _controlReceive$4554 0068                             __end_of_putch 688C  
                           __end_of_toint 72E9                                __end_of_aT 72C1  
                              __end_of_pi 72F1               __size_of_MPU6050_dmpGetRoll 005E  
                       __end_of_NotAckI2C 682C       MPU6050_dmpGetCurrentFIFOPacket@data 0050  
         __end_of_MPU6050_setSleepEnabled 67D0                                   ??_fabsf 0035  
                                 ??_atanf 006C     __end_of_MPU6050_setFullScaleGyroRange 66B2  
  __size_of_MPU6050_setFullScaleGyroRange 001C             _MPU6050_setFullScaleGyroRange 6696  
           ??_MPU6050_dmpGetQuaternionI16 0008                                   ??_fputc 0008  
                                 ??_fputs 0011                     _MPU6050_dmpInitialize 4D74  
                          main@fifoBuffer 01AE                                   ??_putch 0004  
        MPU6050_writeMemoryBlock@dataSize 0015                                __pbssBANK0 00F0  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300      MPU6050_writeProgMemoryBlock@dataSize 004A  
                ?_USART_UART_transmitByte 0001                                 ?_i2c_init 0011  
                                 ?_AckI2C 0001                                _atanf$4570 0090  
                              _atanf$4571 0078                                _atanf$4572 007C  
                              _atanf$4568 008C                                _atanf$4569 0074  
                         ?_controlReceive 0001                  I2Cdev_writeBytes@devAddr 000B  
                  I2Cdev_readBytes@length 0006              __end_of_MPU6050_getFIFOCount 6578  
            __end_of_MPU6050_getFIFOBytes 67A0            ??_MPU6050_GetCurrentFIFOPacket 0024  
                        vectorInt16@F4068 0292                                _mOutLimite 01FC  
         __size_of_MPU6050_dmpGetAccelI16 00DE                               ?_RestartI2C 0001  
          ??_MPU6050_dmpGetFIFOPacketSize 0006                                   ?___flge 004A  
                                 ?___fleq 0004                __size_of_USART_setBaudRate 0064  
                I2Cdev_writeBytes@regAddr 0005                                   ?___wmul 0004  
                               ?_StartI2C 0001                                   ?_atan2f 00A2  
                                 ?_efgtoa 0072                                   ?_floorf 0031  
                                 ?_memcmp 0004                 _MPU6050_dmpGetLinearAccel 4678  
       MPU6050_dmpGetQuaternionI16@packet 0006                                 ?_WriteI2C 0001  
                      __end_of_RAD_TO_DEG 730D                             i2c_init@freqK 0011  
                                 ?_strcpy 0004                                   ?_strlen 0004  
                                 i2l11271 625E                                   i2l11281 6284  
                                 i2l11273 626C                                   i2l11283 6292  
                                 i2l11275 626E                                   i2l11285 6296  
                                 i2l11277 627C                                   i2l11269 6250  
                                 i2l11279 6282                                 ?___xxtofl 000A  
                                 _MPU6050 6882                   ?_MPU6050_setClockSource 0001  
                      __size_of_vfpfcnvrt 034E                  I2Cdev_writeWords@devAddr 000D  
             __size_of_MPU6050_initialize 001A                         getRotatedVF@F4126 024A  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                       getRotatedVI@F4093 0280                                   _SSPSTAT 000FC7  
                I2Cdev_writeWords@regAddr 0005              MPU6050_setDMPEnabled@enabled 0021  
                                 _IdleI2C 67E8                                ??_i2c_init 0013  
          ??_MPU6050_writeProgMemoryBlock 004F                           __size_of_AckI2C 0016  
                                 _ReadI2C 64F4                                   __X_FREQ 7F03  
                       __end_of_dmpMemory 7F03                                   __Hparam 0000  
                                 __Lparam 0000      __size_of_MPU6050_dmpGetQuaternionI16 011E  
                                 _StopI2C 6630                           __size_of___flge 0104  
                         __size_of___fleq 00AA                                   ___fladd 2ED4  
                              ??_StartI2C 0004        MPU6050_writeMemoryBlock@progBuffer 0042  
                                 ___fldiv 37BE                                   ___awdiv 574E  
                                 ___flneg 6452                                   _aaWorld 027A  
                                 ___awmod 5998                                   ___flmul 3394  
                        vectorFloat@F4101 026E                                   ___flsub 6352  
                                 ___fltol 5018                                   ___lldiv 5AF2  
                         __size_of___wmul 0026                __size_of_USART_UART_doBuff 0080  
                         __size_of_atan2f 0702                                 ?_vfprintf 00CA  
                         __size_of_efgtoa 0C5A                  __size_of_USART_UART_init 002A  
                                 _mOffset 017A                           __size_of_floorf 0212  
                                 __pcinit 5CC8                                ??_WriteI2C 0004  
                         __size_of_memcmp 00CA                                   __ramtop 0800  
                                 __ptext0 0012                                   __ptext1 6300  
                                 __ptext2 60C8                                   __ptext3 3EC6  
                                 __ptext4 54E4                                   __ptext5 0D24  
                                 __ptext6 612A                                   __ptext7 641A  
                                 __ptext8 62A4                                   __ptext9 58D6  
                                 _mpu6050 0197                           __size_of_strcpy 005C  
                         __size_of_strlen 0036            __end_of_MPU6050_setClockSource 66EA  
                               _T1CONbits 000FCD                                 _T2CONbits 000FCA  
                                 _gravity 02BF                              __size_of_pad 00C2  
                                 atan2f@m 00D6                                   atan2f@x 00A6  
                                 atan2f@y 00A2                                   atan2f@z 00CA  
                              ??___xxtofl 000E                MPU6050_dmpGetQuaternionQ@q 0031  
                        ___awmod@dividend 0004        MPU6050_writeMemoryBlock@useProgMem 001A  
             ??_MPU6050_dmpGetQuaternionQ 0035                    _MPU6050_dmpGetAccelI16 5406  
                                 atanf@s1 0080                                   atanf@s2 0084  
                                 atanf@id 0098                                   _isupper 641A  
  __end_of_MPU6050_setFullScaleAccelRange 66CE   __size_of_MPU6050_setFullScaleAccelRange 001C  
          _MPU6050_setFullScaleAccelRange 66B2                                   atanf@ix 009E  
                                 efgtoa@c 0078                                   efgtoa@d 0096  
                                 efgtoa@e 00AE                                   efgtoa@f 0074  
                                 efgtoa@g 00AA                                   efgtoa@h 00A0  
                                 efgtoa@i 00A8                                   efgtoa@l 00A4  
                                 efgtoa@m 0090                                   efgtoa@n 00B0  
                                 efgtoa@p 009A                                   efgtoa@t 008A  
                                 efgtoa@u 00B2                                   efgtoa@w 009C  
                                 _rollPID 0164           __end_of_USART_UART_transmitByte 67B8  
                                 _time_ms 0174                    ?_MPU6050_dmpInitialize 0001  
                           _turning_speed 01FA                     I2Cdev_writeBit@bitNum 0016  
                           ??__int_timing 0002                       __size_of_RestartI2C 0022  
                                 _sprintf 6300                                   _tolower 612A  
                                 _strncmp 54E4                            __pintcode_body 6246  
     MPU6050_setFullScaleAccelRange@range 001F                      end_of_initialization 5D4E  
                                 floorf@e 003F                ?_USART_UART_transmitString 0005  
                                 floorf@m 003B                                   floorf@u 0041  
                                 floorf@x 0031                  ?_MPU6050_dmpGetGravityVF 0068  
                                 memcmp@l 000C                                   memcmp@n 0008  
                                 memcmp@r 000E                                   fputc@fp 0006  
                           __Lmediumconst 72AC            ?_MPU6050_setFullScaleGyroRange 0001  
                                 int_func 6246                                   fputs@fp 000F  
                               i2u1040_40 625E                                 i2u1040_41 625A  
                               i2u1041_40 627C                                 i2u1041_41 6278  
                               i2u1042_40 6292                                 i2u1042_41 628E  
              ??_MPU6050_writeMemoryBlock 001B                           ___lldiv@divisor 0008  
                         ___lldiv@counter 0010                         I2Cdev_writeBits@b 001E  
                       __end_of_vfpfcnvrt 4214                                efgtoa@mode 009F  
                              efgtoa@sign 0098                                 _RCSTAbits 000FAB  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                         ?_I2Cdev_readBytes 0005  
        __size_of_MPU6050_setSleepEnabled 0018                                ??_vfprintf 005A  
            __end_of_MPU6050_getIntStatus 6738                                   strcpy@d 000C  
                                 strlen@a 0006                                   strcpy@s 000A  
                                 strlen@s 0004                              _displacement 0124  
                      ??_I2Cdev_readBytes 0009                MPU6050_dmpGetAccelI16@data 0004  
                         _I2Cdev_readBits 5DEE                           _I2Cdev_readByte 676C  
                ??_MPU6050_testConnection 0021            __size_of_MPU6050_setDMPEnabled 0018  
                             ___fladd@grs 0059             __end_of_MPU6050_setDMPEnabled 67E8  
                           ___xxtofl@sign 0012                      _MPU6050_getFIFOCount 6550  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                    _MPU6050_getFIFOBytes 6786                               ___fldiv@grs 002B  
                             ___fldiv@rem 0024                   ??_MPU6050_setMemoryBank 0012  
                       _MPU6050_resetFIFO 6800                      I2Cdev_readBits@count 001D  
       __end_of_USART_UART_transmitString 61E8                               ___flmul@grs 003E  
                      ?_MPU6050_resetFIFO 0001                           _I2Cdev_writeBit 5D5C  
                             _CCP1CONbits 000FBD                               _CCP2CONbits 000FBA  
                               _TXSTAbits 000FAC                       __end_of__int_timing 62A4  
                        getProductQ@F4047 023A                            __end_of_AckI2C 6842  
               _MPU6050_dmpGetQuaternionQ 4BE4              MPU6050_dmpGetAccelI16@packet 0006  
                     ??_MPU6050_resetFIFO 0021                         ?_I2Cdev_writeBits 0015  
                   I2Cdev_writeBytes@data 0007                         ?_I2Cdev_writeByte 000D  
                          __end_of___flge 5224                            __end_of___fleq 5AF2  
                       ?_I2Cdev_writeWord 000F                               vfpfcnvrt@ap 00BA  
                             vfpfcnvrt@ct 00C2                               vfpfcnvrt@fp 00B6  
                          __end_of___wmul 659E                            __end_of_atan2f 28AC  
                      ??_I2Cdev_writeBits 0019                            __end_of_efgtoa 197E  
                      ??_I2Cdev_writeByte 000F                            __end_of_atanhi 72E1  
                          __end_of_atanlo 72D1                        ??_I2Cdev_writeWord 0012  
                          __end_of_floorf 4678                            __end_of_memcmp 574E  
                              floorf@F527 0148                            __end_of_strcpy 6300  
                          __end_of_strlen 64C0                         ??_USART_UART_init 001A  
                   ?_MPU6050_getFIFOCount 0011                       start_initialization 5CC8  
                   ?_MPU6050_getFIFOBytes 0011                               __end_of_pS0 7301  
                             __end_of_pS1 72FD                               __end_of_pS2 72F9  
                             __end_of_qS1 72F5                 __end_of_MPU6050_resetFIFO 6816  
         __end_of_MPU6050_dmpGetGravityVF 3EC6                               __end_of_pad 5998  
              MPU6050_getFIFOBytes@length 0013              __size_of_MPU6050_getDeviceID 0022  
                        ??_controlReceive 0060                                 _NotAckI2C 6816  
                    I2Cdev_readBytes@data 0007                                  ??_AckI2C 0004  
                   __end_of___fpclassifyf 5322                         __size_of_i2c_init 0074  
                   _USART_UART_readBuffer 5F78                              ??_RestartI2C 0004  
                 __end_of_I2Cdev_readBits 5E7C                               vfprintf@fmt 00CC  
                 __end_of_I2Cdev_readByte 6786                                  ??___flge 0052  
                                ??___fleq 000C                                  ??___wmul 0008  
                                ??_atan2f 00AA          __size_of_USART_UART_transmitByte 0018  
                                ??_efgtoa 0079                               __pdataBANK0 00FC  
                             __pdataBANK1 01EE                               __pdataBANK2 02D1  
                                ??_floorf 0035                __end_of_MPU6050_dmpGetRoll 6246  
                                ??_memcmp 000A                               _atan2f$4565 00BA  
                             _atan2f$4566 00BE                               _atan2f$4567 00C2  
                 I2Cdev_writeWord@devAddr 0012                         __size_of_StartI2C 0022  
               MPU6050_dmpGetRoll@gravity 00DE                                  ??_strcpy 0008  
                                ??_strlen 0006                                 ___fladd@a 004E  
                               ___fladd@b 004A                         __size_of_WriteI2C 0026  
                 I2Cdev_writeWord@regAddr 000F                                 ___fldiv@a 001C  
                               ___fldiv@b 0018                             _self_setPoint 016C  
                   atanf@__xc8_float_word 0070                      getNormalizedVF@F4116 0256  
         __size_of_MPU6050_testConnection 001A                                  ?_MPU6050 0001  
                               ___flmul@a 0035                                 ___flmul@b 0031  
                             __pbssCOMRAM 005A                                 ___flsub@a 0064  
                               ___flsub@b 0060                      getNormalizedVI@F4083 0286  
                           __pcstackBANK0 0060                             __pcstackBANK1 01AC  
                 __end_of_I2Cdev_writeBit 5DEE                         __size_of___xxtofl 01B4  
                 I2Cdev_readBytes@devAddr 000F                               __int_timing 0008  
                              ?_NotAckI2C 0001                        __end_of_RestartI2C 6696  
       MPU6050_writeMemoryBlock@chunkSize 0047                                  ?_IdleI2C 0001  
             USART_UART_transmitByte@data 0004                      _MPU6050_getIntStatus 671E  
                 I2Cdev_readBytes@regAddr 0005           MPU6050_writeMemoryBlock@address 0018  
     MPU6050_writeProgMemoryBlock@address 004D                                  ?_ReadI2C 0001  
                  USART_UART_readBuffer@i 0008                               _efgtoa$3173 007E  
                             _efgtoa$3174 0080                               _efgtoa$3183 0084  
                             _efgtoa$3184 0086                               _efgtoa$3185 0088  
                             _efgtoa$3179 0082                                 _main$2480 01D7  
                               _main$4556 01E2                                 _main$4558 01CF  
                       vectorInt16F@F4074 028C                        getConjugateQ@F4051 022A  
                 _MPU6050_setSleepEnabled 67B8                                 __pintcode 0008  
                                ?_StopI2C 0001                     I2Cdev_writeWords@data 0007  
                           __pmediumconst 72AC                                  ?___fladd 004A  
                               _dmpMemory 730D                                  ?___fldiv 0018  
                                ?___awdiv 0004                                  ?___flneg 0004  
                                ?___awmod 0004                                  ?___flmul 0031  
                                ?___flsub 0060                                  ?___fltol 0068  
                                ?___lldiv 0004                                 _direction 017E  
                       __size_of_vfprintf 0062                   ?_MPU6050_dmpGetAccelI16 0004  
                 I2Cdev_writeWords@length 0006                    ??_MPU6050_getFIFOCount 0013  
                               fabsf@F465 014C                   ??_MPU6050_dmpInitialize 004F  
                  ??_MPU6050_getFIFOBytes 0014                __end_of_MPU6050_initialize 671E  
                               _lastAngle 0160       __end_of_MPU6050_dmpGetQuaternionI16 5018  
             _MPU6050_dmpGetQuaternionI16 4EFA                 MPU6050_writeMemoryBlock@i 0045  
               MPU6050_writeMemoryBlock@j 0044                         _resetDisplacement 5812  
                               _lastSpeed 0130                                  ?_isupper 0004  
              __size_of_MPU6050_resetFIFO 0016   __end_of_MPU6050_dmpGetCurrentFIFOPacket 6868  
__size_of_MPU6050_dmpGetCurrentFIFOPacket 0012         ??_MPU6050_dmpGetCurrentFIFOPacket 0052  
        ?_MPU6050_dmpGetCurrentFIFOPacket 0050           _MPU6050_dmpGetCurrentFIFOPacket 6856  
                          __size_of_fabsf 0034                        ?_resetDisplacement 0001  
                          __size_of_atanf 082C      MPU6050_writeMemoryBlock@verifyBuffer 0040  
              MPU6050_dmpGetLinearAccel@v 0072                                  ?_sprintf 00D2  
                                ?_tolower 000A                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                                  ?_strncmp 0004  
                          __size_of_putch 0002   MPU6050_GetCurrentFIFOPacket@RemoveBytes 004C  
             ??_USART_UART_transmitString 0007                     ?_MPU6050_getIntStatus 0001  
                          ___wmul@product 0008                                  _LATBbits 000F8A  
                     ??_resetDisplacement 0004                    ?_USART_UART_readBuffer 0004  
                  _MPU6050_testConnection 66EA                                  _PIE1bits 000F9D  
        ??_MPU6050_setFullScaleAccelRange 001F           ?_MPU6050_setFullScaleAccelRange 0001  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                               atanf@sign 0088                                  i2u915_40 5E8A  
                                i2u915_41 5E86                                  i2u916_40 5EA0  
                                i2u916_41 5E9C                                  i2u917_40 5ED0  
                                i2u917_41 5ECC                                  i2u918_40 5EEE  
                                i2u918_41 5EEA                      I2Cdev_writeBits@data 0018  
                        ?_I2Cdev_readBits 0015                                  _RCONbits 000FD0  
                        ?_I2Cdev_readByte 0011                      I2Cdev_writeBits@mask 001D  
                               main@F4773 02A0                             _dmpPacketSize 00F6  
        __size_of_MPU6050_dmpGetGravityVF 036E            __end_of_MPU6050_dmpGetAccelI16 54E4  
                               _vfpfcnvrt 3EC6                         ___wmul@multiplier 0004  
                     I2Cdev_readBits@data 0018                 __end_of_resetDisplacement 58D6  
                     I2Cdev_readBits@mask 001F                                 main@angle 01E6  
                    I2Cdev_writeByte@data 000E                          __size_of_MPU6050 0008  
               __size_of_I2Cdev_readBytes 00E4                          ?_I2Cdev_writeBit 0015  
                I2Cdev_writeBits@bitStart 0016                          main@time_elapsed 01D3  
                              vfpfcnvrt@c 00C9                                vfpfcnvrt@f 00C5  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                             ??_NotAckI2C 0004                                 copy_data0 5CDC  
                               copy_data1 5CFC      MPU6050_setMemoryStartAddress@address 0010  
          __size_of_MPU6050_setMemoryBank 003C           ??_MPU6050_setMemoryStartAddress 0010  
                     I2Cdev_readByte@data 0012             __end_of_MPU6050_setMemoryBank 641A  
                                _i2c_init 5FF0                              _mpuInterrupt 017D  
                        __size_of_IdleI2C 0018                                roundf@F528 0298  
                   USART_setBaudRate@rate 0011                 ??_MPU6050_setSleepEnabled 0021  
                        __size_of_ReadI2C 0032                                  __Hrparam 0000  
               MPU6050_setMemoryBank@bank 0012                                vfprintf@ap 00CE  
                                __Lrparam 0000                                vfprintf@fp 00CA  
                 _USART_UART_transmitByte 67A0                       getNormalizedQ@F4060 021A  
                         _USART_UART_init 6526                                  _StartI2C 6652  
    MPU6050_setMemoryBank@prefetchEnabled 0010                          __size_of_StopI2C 0022  
                     _MPU6050_getDeviceID 660E                          __size_of___fladd 04C0  
               _USART_UART_transmitString 618A                          __size_of___fldiv 039A  
                        __size_of___awdiv 00C4                          __size_of___flneg 0038  
                        __size_of___awmod 00B0                          __size_of___flmul 042A  
                        __size_of___flsub 0048                          __size_of___fltol 0108  
                        __size_of___lldiv 00A4                                ?_vfpfcnvrt 00B6  
        MPU6050_dmpGetLinearAccel@gravity 0076                                  _WriteI2C 65C4  
                            _teapotPacket 02D1                        ___fpclassifyf@F465 0150  
                       vectorFloatF@F4107 0262         __size_of_MPU6050_writeMemoryBlock 0252  
               ?_MPU6050_writeMemoryBlock 0013                                sprintf@fmt 00D4  
                    I2Cdev_writeWord@data 0010                                  ___xxtofl 4A30  
           MPU6050_dmpGetLinearAccel@vRaw 0074          MPU6050_GetCurrentFIFOPacket@data 0021  
                   _MPU6050_setDMPEnabled 67D0                                  _derivada 0154  
                                __ptext10 648A                                  __ptext11 639A  
                                __ptext20 28AC                                  __ptext12 55BA  
                                __ptext21 5812                                  __ptext13 688A  
                                __ptext30 660E                                  __ptext22 6578  
                                __ptext14 4466                                  __ptext31 5DEE  
                                __ptext23 5F78                                  __ptext15 5120  
                                __ptext40 4214                                  __ptext32 6704  
                                __ptext24 618A                                  __ptext16 5A48  
                                __ptext41 5684                                  __ptext33 67B8  
                                __ptext25 67A0                                  __ptext17 5998  
                                __ptext50 197E                                  __ptext42 6842  
                                __ptext34 6696                                  __ptext26 6526  
                                __ptext18 574E                                  __ptext51 64C0  
                                __ptext43 63DE                                  __ptext35 66B2  
                                __ptext27 6064                                  __ptext19 5FF0  
                                __ptext60 3B58                                  __ptext52 5224  
                                __ptext44 67D0                                  __ptext36 66CE  
                                __ptext28 5AF2                                  __ptext61 6352  
                                __ptext53 6452                 __size_of_I2Cdev_writeBits 0098  
                                __ptext45 6738                                  __ptext37 671E  
                                __ptext29 66EA                                  __ptext70 5EFC  
                                __ptext62 2ED4                                  __ptext54 4BE4  
                                __ptext46 5B96                                  __ptext38 4D74  
                                __ptext71 676C                                  __ptext63 3394  
                                __ptext55 37BE                                  __ptext47 5C30  
                                __ptext39 659E                                  __ptext80 6816  
                                __ptext72 6550                                  __ptext64 6878  
                                __ptext56 4EFA                                  __ptext48 61E8  
                                __ptext81 67E8                                  __ptext73 6786  
                                __ptext65 6856                                  __ptext57 4678  
                                __ptext49 21AA                                  __ptext82 682C  
                                __ptext74 5322                                  __ptext66 4858  
                                __ptext58 4A30                                  __ptext83 5406  
                                __ptext75 65C4                                  __ptext67 6800  
                                __ptext59 5018                                  __ptext84 6882  
                                __ptext76 6630                                  __ptext68 5D5C  
                                __ptext77 6652                                  __ptext69 6752  
                                __ptext86 5E7C                                  __ptext78 6674  
                                __ptext79 64F4                          __size_of_isupper 0038  
               __size_of_I2Cdev_writeByte 001A            MPU6050_writeMemoryBlock@verify 0019  
      MPU6050_writeProgMemoryBlock@verify 004E                      ?_MPU6050_getDeviceID 0001  
               __size_of_I2Cdev_writeWord 001A                    ??_MPU6050_getIntStatus 0015  
               USART_UART_readBuffer@size 0006                          __size_of_sprintf 0052  
                        __size_of_tolower 0060                                strcpy@dest 0004  
                        __size_of_strncmp 00D6                                  _hold_pos 00FB  
                           __size_of_main 0D12                                  atan2f@ix 00CE  
                                atan2f@iy 00D2                                  _integral 0158  
             MPU6050_dmpGetQuaternionQ@qI 0036                       I2Cdev_writeBit@data 0017  
                                _rem_bias 7305                                  _setPoint 0170  
                                efgtoa@fp 0072                                  efgtoa@ne 008E  
                                efgtoa@pp 008C                                  efgtoa@ou 0092  
            _MPU6050_dmpGetGravityVF$4534 0074              _MPU6050_dmpGetGravityVF$4535 006C  
            _MPU6050_dmpGetGravityVF$4536 0070                                  _prevTime 029C  
                  I2Cdev_writeBit@devAddr 001F                                  int$flags 005C  
                MPU6050_dmpGetGravityVF@q 006A                  MPU6050_dmpGetGravityVF@v 0068  
                ??_MPU6050_setClockSource 001F                                  _vfprintf 60C8  
                                main@mot1 01EA                                  main@mot2 01EC  
                 I2Cdev_writeBits@devAddr 001C                    I2Cdev_writeBit@regAddr 0015  
           USART_UART_transmitString@data 0005                __size_of_resetDisplacement 00C4  
                          _vfpfcnvrt$3202 00C0                   I2Cdev_writeBits@regAddr 0015  
                              _INTCONbits 000FF2                                  memcmp@vl 0004  
                                memcmp@vr 0006                     ??_MPU6050_getDeviceID 0021  
                      _MPU6050_dmpGetRoll 61E8                       MPU6050_dmpGetRoll@q 00DC  
                            ?__int_timing 0001                                _RAD_TO_DEG 7309  
                                intlevel2 0000                                 sprintf@ap 00E4  
                        ___lldiv@dividend 0004                       ?_MPU6050_dmpGetRoll 00DA  
                 __end_of_USART_UART_init 6550                                 strcpy@src 0006  
               ??_USART_UART_transmitByte 0004                                  isupper@c 0004  
                               strncmp@_l 0004                                 strncmp@_r 0006  
   __end_of_MPU6050_setMemoryStartAddress 6856    __size_of_MPU6050_setMemoryStartAddress 0014  
           _MPU6050_setMemoryStartAddress 6842                   _MPU6050_dmpGetGravityVF 3B58  
                             efgtoa@nmode 009E    MPU6050_GetCurrentFIFOPacket@BreakTimer 0048  
                      I2Cdev_writeBytes@i 000C                               ??_vfpfcnvrt 00BC  
                  I2Cdev_writeBits@length 0017                      ??_MPU6050_dmpGetRoll 005A  
                                sprintf@f 00E6                                  tolower@c 000A  
                                sprintf@s 00D2                    __size_of___fpclassifyf 00FE  
                         _dmpPacketBuffer 00F8                        I2Cdev_writeWords@i 000E  
                        ___lldiv@quotient 000C               USART_UART_readBuffer@buffer 0004  
          __size_of_MPU6050_dmpInitialize 0186                    ?_MPU6050_setDMPEnabled 0001  
                                strncmp@l 000B                                  strncmp@n 0008  
                                strncmp@r 000D             __end_of_MPU6050_dmpInitialize 4EFA  
                             _SSPCON1bits 000FC6                          _I2Cdev_readBytes 5322  
                             _SSPCON2bits 000FC5                             ___fladd@signs 0056  
           MPU6050_setMemoryBank@userBank 0011                   ??_USART_UART_readBuffer 0007  
      __size_of_MPU6050_dmpGetLinearAccel 01E0                   ?_MPU6050_testConnection 0001  
              ?_MPU6050_dmpGetLinearAccel 0072                              ___fladd@aexp 0057  
                            ___fladd@bexp 0058                        _MPU6050_initialize 6704  
                 __size_of_controlReceive 0628                       ?_MPU6050_initialize 0001  
